#!/bin/bash

source ./config

cd $mathpath

if [ -z $1 ]; then
    echo "usage: "
    echo "  translate_deep <file> [memcheck]"
    echo "where: "
    echo "  <file>     is a mm source without .mm extension"
    echo "  [memcheck] is an option for memory leaks tests (slows down the script)"
    echo
    exit 0
fi


file=$1

if [ ! -f ${file}.mm ]; then
    echo "source file desn't exist"
    exit 1
fi

if [ -d tmp-deep ]; then
    rm -fr tmp-deep
fi

mkdir tmp-deep

cp ${file}.mm ./tmp-deep/${file}.mm
cd tmp-deep

VALGRIND="valgrind --tool=memcheck --leak-check=full --show-leak-kinds=all "
if [ "$2" == "memcheck" ]; then
    MEMCHECK="yes"
fi

function check() {
    #echo $1
    if [ "$MEMCHECK" == "yes" ]; then
	$VALGRIND $1
    else
	$1
    fi
}

#distrib=debug
distrib=release

echo "----------------------"
echo "MM <-> SMM TRANSLATION"
echo "----------------------"

echo "cut: mm -> mm"
check "${binpath}${distrib}/mm -d -c -v -i ${file}.mm  -o mm"
echo -e 'done\n\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;

echo "mm -> smm"
check "${binpath}${distrib}/mm -t -d -v -r mm -i ${file}.mm  -o smm"
echo -e 'done\n\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "smm -> mm"
check "${binpath}${distrib}/smm -tm -d -v -r smm -i ${file}.smm -o mm-0"
echo -e 'done\n\n'

if [ $? != 0 ]; then
    echo "TEST FAILED."; exit
fi;

echo "merge: mm -> mm"
check "${binpath}${distrib}/mm -m -v -r mm-0 -i ${file}.mm -o ${file}-0.mm"
echo -e 'done\n\n'

if [ $? != 0 ]; then
    echo "TEST FAILED."; exit
fi;

echo "verify mm"
${binpath}/metamath "read ${file}-0.mm" 'verify proof *' exit
echo -e 'done\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo
echo

echo "----------------------"
echo "MM <-> RUS TRANSLATION"
echo "----------------------"

echo "smm -> rus"
check "${binpath}${distrib}/smm -tr -d -v -r smm -i ${file}.smm -o rus"
echo -e 'done\n\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "rus -> smm"
check "${binpath}${distrib}/mdl -t -d --info -v -r rus -i ${file}.rus -o smm-1"
echo -e 'done\n\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "verify smm"
check "${binpath}${distrib}/smm -v -r smm-1 -i ${file}.smm"
echo -e 'done\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "smm -> mm"
check "${binpath}${distrib}/smm -d -tm -v -r smm-1 -i ${file}.smm -o mm-1"
echo -e 'done\n\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "mm -> smm"
check "${binpath}${distrib}/mm -d -t -v -r mm-1 -i ${file}.mm -o smm-2"
echo -e 'done\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "verify smm"
check "${binpath}${distrib}/smm -v -r smm-2 -i ${file}.smm"
echo -e 'done\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo "merge: mm -> mm"
check "${binpath}${distrib}/mm -d -m -v -r mm-1 -i ${file}.mm -o ${file}-1.mm"
echo -e 'done\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;

echo "verify mm"
${binpath}/metamath "read ${file}-1.mm" 'verify proof *' exit
echo -e 'done\n'

if [ $? != 0 ]; then 
    echo "TEST FAILED."; exit
fi;


echo -e 'translation tests passed =)\n'


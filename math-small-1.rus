constant {
	symbol ( ;
}

constant {
	symbol ) ;
}

constant {
	symbol -> ;
}

constant {
	symbol -. ;
}

type wff;

rule wn (ph : wff) {
	term : wff = # -. ph ;
}

rule wi (ph : wff, ps : wff) {
	term : wff = # ( ph -> ps ) ;
}

axiom ax-1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> ph ) ) ;
}

axiom ax-2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
}

axiom ax-3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) ;
}

axiom ax-mp (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

theorem a1i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ps -> ph ) ;
}

proof of a1i {
	step 1 : wff = axm ax-1 () |- ( ph -> ( ps -> ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem a1i12 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of a1i12 {
	step 1 : wff = thm a1i (hyp 1) |- ( ps -> ch ) ;
	step 2 : wff = thm a1i (step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem a2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
}

proof of a2i {
	step 1 : wff = axm ax-2 () |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of syl {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
	step 3 : wff = axm ax-mp (hyp 1, step 2) |- ( ph -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem com12 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph -> ch ) ) ;
}

proof of com12 {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm a2i (hyp 1) |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ps -> ( ph -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem a1d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> ps ) ) ;
}

proof of a1d {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ch -> ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ch -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem a2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) ;
}

proof of a2d {
	step 1 : wff = axm ax-2 () |- ( ( ps -> ( ch -> th ) ) -> ( ( ps -> ch ) -> ( ps -> th ) ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) ;
}

proof of imim2 {
	step 1 : wff = axm ax-1 () |- ( ( ph -> ps ) -> ( ch -> ( ph -> ps ) ) ) ;
	step 2 : wff = thm a2d (step 1) |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
}

proof of imim1 {
	step 1 : wff = thm imim2 () |- ( ( ps -> ch ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ph -> ch ) ) ;
}

proof of imim1i {
	step 1 : wff = thm imim1 () |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ( ps -> ch ) -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch -> ph ) -> ( ch -> ps ) ) ;
}

proof of imim2i {
	step 1 : wff = thm a1i (hyp 1) |- ( ch -> ( ph -> ps ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( ch -> ph ) -> ( ch -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ph -> th ) ) ;
}

proof of imim12i {
	step 1 : wff = thm imim2i (hyp 2) |- ( ( ps -> ch ) -> ( ps -> th ) ) ;
	step 2 : wff = thm imim1i (hyp 1) |- ( ( ps -> th ) -> ( ph -> th ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ( ps -> ch ) -> ( ph -> th ) ) ;
	qed prop 1 = step 3 ;
}

theorem imim3i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th -> ph ) -> ( ( th -> ps ) -> ( th -> ch ) ) ) ;
}

proof of imim3i {
	step 1 : wff = thm imim2i (hyp 1) |- ( ( th -> ph ) -> ( th -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm a2d (step 1) |- ( ( th -> ph ) -> ( ( th -> ps ) -> ( th -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3syl (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	hyp 3 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of 3syl {
	step 1 : wff = thm syl (hyp 1, hyp 2) |- ( ph -> ch ) ;
	step 2 : wff = thm syl (step 1, hyp 3) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl5 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ch ) ) ;
}

proof of syl5 {
	step 1 : wff = thm imim1i (hyp 2) |- ( ( ps -> ch ) -> ( th -> ch ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( th -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of syl6 {
	step 1 : wff = thm imim2i (hyp 2) |- ( ( ps -> ch ) -> ( ps -> th ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl7 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( ta -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
}

proof of syl7 {
	step 1 : wff = thm imim1i (hyp 2) |- ( ( ch -> th ) -> ( ta -> th ) ) ;
	step 2 : wff = thm syl6 (hyp 1, step 1) |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl8 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( th -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
}

proof of syl8 {
	step 1 : wff = thm imim2i (hyp 2) |- ( ( ch -> th ) -> ( ch -> ta ) ) ;
	step 2 : wff = thm syl6 (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th -> ps ) -> ( th -> ch ) ) ) ;
}

proof of imim2d {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( th -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm a2d (step 1) |- ( ph -> ( ( th -> ps ) -> ( th -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mpd {
	step 1 : wff = thm a2i (hyp 2) |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem syld (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of syld {
	step 1 : wff = thm imim2d (hyp 2) |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3syld (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( th -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ta ) ) ;
}

proof of 3syld {
	step 1 : wff = thm syld (hyp 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	step 2 : wff = thm syld (step 1, hyp 3) |- ( ph -> ( ps -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) ;
}

proof of imim1d {
	step 1 : wff = thm imim1 () |- ( ( ps -> ch ) -> ( ( ch -> th ) -> ( ps -> th ) ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imim12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ch -> th ) -> ( ps -> ta ) ) ) ;
}

proof of imim12d {
	step 1 : wff = thm imim1d (hyp 1) |- ( ph -> ( ( ch -> th ) -> ( ps -> th ) ) ) ;
	step 2 : wff = thm imim2d (hyp 2) |- ( ph -> ( ( ps -> th ) -> ( ps -> ta ) ) ) ;
	step 3 : wff = thm syld (step 1, step 2) |- ( ph -> ( ( ch -> th ) -> ( ps -> ta ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_04 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
}

proof of pm2_04 {
	step 1 : wff = axm ax-2 () |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_83 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ( ch -> th ) ) -> ( ph -> ( ps -> th ) ) ) ) ;
}

proof of pm2_83 {
	step 1 : wff = thm imim1 () |- ( ( ps -> ch ) -> ( ( ch -> th ) -> ( ps -> th ) ) ) ;
	step 2 : wff = thm imim3i (step 1) |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ( ch -> th ) ) -> ( ph -> ( ps -> th ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com23 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> ( ps -> th ) ) ) ;
}

proof of com23 {
	step 1 : wff = thm pm2_04 () |- ( ( ps -> ( ch -> th ) ) -> ( ch -> ( ps -> th ) ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ch -> ( ps -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com13 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> ( ps -> ( ph -> th ) ) ) ;
}

proof of com13 {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com23 (step 1) |- ( ps -> ( ch -> ( ph -> th ) ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ch -> ( ps -> ( ph -> th ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem com3l (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ch -> ( ph -> th ) ) ) ;
}

proof of com3l {
	step 1 : wff = thm com23 (hyp 1) |- ( ph -> ( ch -> ( ps -> th ) ) ) ;
	step 2 : wff = thm com13 (step 1) |- ( ps -> ( ch -> ( ph -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com3r (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> ( ph -> ( ps -> th ) ) ) ;
}

proof of com3r {
	step 1 : wff = thm com3l (hyp 1) |- ( ps -> ( ch -> ( ph -> th ) ) ) ;
	step 2 : wff = thm com3l (step 1) |- ( ch -> ( ph -> ( ps -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com34 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) ;
}

proof of com34 {
	step 1 : wff = thm pm2_04 () |- ( ( ch -> ( th -> ta ) ) -> ( th -> ( ch -> ta ) ) ) ;
	step 2 : wff = thm syl6 (hyp 1, step 1) |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com24 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ( ch -> ( ps -> ta ) ) ) ) ;
}

proof of com24 {
	step 1 : wff = thm com34 (hyp 1) |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) ;
	step 2 : wff = thm com23 (step 1) |- ( ph -> ( th -> ( ps -> ( ch -> ta ) ) ) ) ;
	step 3 : wff = thm com34 (step 2) |- ( ph -> ( th -> ( ch -> ( ps -> ta ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem com14 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) ;
}

proof of com14 {
	step 1 : wff = thm com34 (hyp 1) |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) ;
	step 2 : wff = thm com13 (step 1) |- ( th -> ( ps -> ( ph -> ( ch -> ta ) ) ) ) ;
	step 3 : wff = thm com34 (step 2) |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem com4l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) ;
}

proof of com4l {
	step 1 : wff = thm com14 (hyp 1) |- ( th -> ( ps -> ( ch -> ( ph -> ta ) ) ) ) ;
	step 2 : wff = thm com3l (step 1) |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com4t (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> ( th -> ( ph -> ( ps -> ta ) ) ) ) ;
}

proof of com4t {
	step 1 : wff = thm com4l (hyp 1) |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) ;
	step 2 : wff = thm com4l (step 1) |- ( ch -> ( th -> ( ph -> ( ps -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com4r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ph -> ( ps -> ( ch -> ta ) ) ) ) ;
}

proof of com4r {
	step 1 : wff = thm com4t (hyp 1) |- ( ch -> ( th -> ( ph -> ( ps -> ta ) ) ) ) ;
	step 2 : wff = thm com4l (step 1) |- ( th -> ( ph -> ( ps -> ( ch -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com45 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( ta -> ( th -> et ) ) ) ) ) ;
}

proof of com45 {
	step 1 : wff = thm pm2_04 () |- ( ( th -> ( ta -> et ) ) -> ( ta -> ( th -> et ) ) ) ;
	step 2 : wff = thm syl8 (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> ( ta -> ( th -> et ) ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com35 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ta -> ( th -> ( ch -> et ) ) ) ) ) ;
}

proof of com35 {
	step 1 : wff = thm com34 (hyp 1) |- ( ph -> ( ps -> ( th -> ( ch -> ( ta -> et ) ) ) ) ) ;
	step 2 : wff = thm com45 (step 1) |- ( ph -> ( ps -> ( th -> ( ta -> ( ch -> et ) ) ) ) ) ;
	step 3 : wff = thm com34 (step 2) |- ( ph -> ( ps -> ( ta -> ( th -> ( ch -> et ) ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem com25 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ta -> ( ch -> ( th -> ( ps -> et ) ) ) ) ) ;
}

proof of com25 {
	step 1 : wff = thm com24 (hyp 1) |- ( ph -> ( th -> ( ch -> ( ps -> ( ta -> et ) ) ) ) ) ;
	step 2 : wff = thm com45 (step 1) |- ( ph -> ( th -> ( ch -> ( ta -> ( ps -> et ) ) ) ) ) ;
	step 3 : wff = thm com24 (step 2) |- ( ph -> ( ta -> ( ch -> ( th -> ( ps -> et ) ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem com15 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ta -> ( ps -> ( ch -> ( th -> ( ph -> et ) ) ) ) ) ;
}

proof of com15 {
	step 1 : wff = thm com14 (hyp 1) |- ( th -> ( ps -> ( ch -> ( ph -> ( ta -> et ) ) ) ) ) ;
	step 2 : wff = thm com45 (step 1) |- ( th -> ( ps -> ( ch -> ( ta -> ( ph -> et ) ) ) ) ) ;
	step 3 : wff = thm com14 (step 2) |- ( ta -> ( ps -> ( ch -> ( th -> ( ph -> et ) ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem com5l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) ;
}

proof of com5l {
	step 1 : wff = thm com45 (hyp 1) |- ( ph -> ( ps -> ( ch -> ( ta -> ( th -> et ) ) ) ) ) ;
	step 2 : wff = thm com35 (step 1) |- ( ph -> ( ps -> ( th -> ( ta -> ( ch -> et ) ) ) ) ) ;
	step 3 : wff = thm com25 (step 2) |- ( ph -> ( ch -> ( th -> ( ta -> ( ps -> et ) ) ) ) ) ;
	step 4 : wff = thm com15 (step 3) |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem com52l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> ( th -> ( ta -> ( ph -> ( ps -> et ) ) ) ) ) ;
}

proof of com52l {
	step 1 : wff = thm com5l (hyp 1) |- ( ps -> ( ch -> ( th -> ( ta -> ( ph -> et ) ) ) ) ) ;
	step 2 : wff = thm com5l (step 1) |- ( ch -> ( th -> ( ta -> ( ph -> ( ps -> et ) ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem com52r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ( ta -> et ) ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) ) ;
}

proof of com52r {
	step 1 : wff = thm com52l (hyp 1) |- ( ch -> ( th -> ( ta -> ( ph -> ( ps -> et ) ) ) ) ) ;
	step 2 : wff = thm com5l (step 1) |- ( th -> ( ta -> ( ph -> ( ps -> ( ch -> et ) ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem a1dd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( th -> ch ) ) ) ;
}

proof of a1dd {
	step 1 : wff = axm ax-1 () |- ( ch -> ( th -> ch ) ) ;
	step 2 : wff = thm syl6 (hyp 1, step 1) |- ( ph -> ( ps -> ( th -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem mp2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of mp2 {
	step 1 : wff = axm ax-mp (hyp 1, hyp 3) |- ( ps -> ch ) ;
	step 2 : wff = axm ax-mp (hyp 2, step 1) |- ch ;
	qed prop 1 = step 2 ;
}

theorem mpi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mpi {
	step 1 : wff = thm a1i (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm mpd (step 1, hyp 2) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpii (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of mpii {
	step 1 : wff = thm com23 (hyp 2) |- ( ph -> ( ch -> ( ps -> th ) ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpdd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of mpdd {
	step 1 : wff = thm a2d (hyp 2) |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpid (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of mpid {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpdd (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpdi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ps -> ch ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of mpdi {
	step 1 : wff = thm a1i (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpdd (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpcom (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ch ) ;
}

proof of mpcom {
	step 1 : wff = thm com12 (hyp 2) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ps -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem syldd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ( th -> ta ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
}

proof of syldd {
	step 1 : wff = thm imim2 () |- ( ( th -> ta ) -> ( ( ch -> th ) -> ( ch -> ta ) ) ) ;
	step 2 : wff = thm syl6 (hyp 2, step 1) |- ( ph -> ( ps -> ( ( ch -> th ) -> ( ch -> ta ) ) ) ) ;
	step 3 : wff = thm mpdd (hyp 1, step 2) |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem sylcom (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ps -> ( ch -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of sylcom {
	step 1 : wff = thm a2i (hyp 2) |- ( ( ps -> ch ) -> ( ps -> th ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5com (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ph -> ch ) ) ;
}

proof of syl5com {
	step 1 : wff = thm a1d (hyp 2) |- ( th -> ( ph -> ps ) ) ;
	step 2 : wff = thm sylcom (step 1, hyp 1) |- ( th -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6com (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph -> th ) ) ;
}

proof of syl6com {
	step 1 : wff = thm syl6 (hyp 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ps -> ( ph -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syli (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ps -> ( ph -> ch ) ) ;
	hyp 2 : wff = |- ( ch -> ( ph -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph -> th ) ) ;
}

proof of syli {
	step 1 : wff = thm com12 (hyp 2) |- ( ph -> ( ch -> th ) ) ;
	step 2 : wff = thm sylcom (hyp 1, step 1) |- ( ps -> ( ph -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( ph -> ( ta -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
}

proof of syl5d {
	step 1 : wff = thm a1d (hyp 2) |- ( ph -> ( ps -> ( ta -> ch ) ) ) ;
	step 2 : wff = thm syldd (step 1, hyp 1) |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
}

proof of syl6d {
	step 1 : wff = thm a1d (hyp 2) |- ( ph -> ( ps -> ( th -> ta ) ) ) ;
	step 2 : wff = thm syldd (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl9 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ( ps -> ta ) ) ) ;
}

proof of syl9 {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( th -> ( ch -> ta ) ) ) ;
	step 2 : wff = thm syl5d (step 1, hyp 1) |- ( ph -> ( th -> ( ps -> ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl9r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ph -> ( ps -> ta ) ) ) ;
}

proof of syl9r {
	step 1 : wff = thm syl9 (hyp 1, hyp 2) |- ( ph -> ( th -> ( ps -> ta ) ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( th -> ( ph -> ( ps -> ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem id (ph : wff)  {
	prop 1 : wff = |- ( ph -> ph ) ;
}

proof of id {
	step 1 : wff = axm ax-1 () |- ( ph -> ( ph -> ph ) ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( ( ph -> ph ) -> ph ) ) ;
	step 3 : wff = thm mpd (step 1, step 2) |- ( ph -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem id1 (ph : wff)  {
	prop 1 : wff = |- ( ph -> ph ) ;
}

proof of id1 {
	step 1 : wff = axm ax-1 () |- ( ph -> ( ph -> ph ) ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( ( ph -> ph ) -> ph ) ) ;
	step 3 : wff = axm ax-2 () |- ( ( ph -> ( ( ph -> ph ) -> ph ) ) -> ( ( ph -> ( ph -> ph ) ) -> ( ph -> ph ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( ( ph -> ( ph -> ph ) ) -> ( ph -> ph ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- ( ph -> ph ) ;
	qed prop 1 = step 5 ;
}

theorem idd (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> ps ) ) ;
}

proof of idd {
	step 1 : wff = thm id () |- ( ps -> ps ) ;
	step 2 : wff = thm a1i (step 1) |- ( ph -> ( ps -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_27 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
}

proof of pm2_27 {
	step 1 : wff = thm id () |- ( ( ph -> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_43 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
}

proof of pm2_43 {
	step 1 : wff = thm pm2_27 () |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_43i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of pm2_43i {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm mpd (step 1, hyp 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_43d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of pm2_43d {
	step 1 : wff = thm id () |- ( ps -> ps ) ;
	step 2 : wff = thm mpdi (step 1, hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_43a (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ( ph -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph -> ch ) ) ;
}

proof of pm2_43a {
	step 1 : wff = thm id () |- ( ps -> ps ) ;
	step 2 : wff = thm mpid (step 1, hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_43b (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ( ph -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of pm2_43b {
	step 1 : wff = thm pm2_43a (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylc (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ph ) ;
	hyp 3 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ch ) ;
}

proof of sylc {
	step 1 : wff = thm syl (hyp 2, hyp 1) |- ( th -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpd (hyp 3, step 1) |- ( th -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_86 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
}

proof of pm2_86 {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm com23 (step 2) |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_86i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of pm2_86i {
	step 1 : wff = thm pm2_86 () |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_86d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps -> ch ) -> ( ps -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
}

proof of pm2_86d {
	step 1 : wff = thm pm2_86 () |- ( ( ( ps -> ch ) -> ( ps -> th ) ) -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem loolin (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) ;
}

proof of loolin {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ( ps -> ph ) ) ) ;
	step 3 : wff = thm pm2_43d (step 2) |- ( ( ( ph -> ps ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem loowoz (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ( ps -> ph ) -> ( ps -> ch ) ) ) ;
}

proof of loowoz {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm a2d (step 2) |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ( ps -> ph ) -> ( ps -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem con4i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( -. ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ph ) ;
}

proof of con4i {
	step 1 : wff = axm ax-3 () |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem con4d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( -. ps -> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> ps ) ) ;
}

proof of con4d {
	step 1 : wff = axm ax-3 () |- ( ( -. ps -> -. ch ) -> ( ch -> ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ch -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_21 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph -> ( ph -> ps ) ) ;
}

proof of pm2_21 {
	step 1 : wff = axm ax-1 () |- ( -. ph -> ( -. ps -> -. ph ) ) ;
	step 2 : wff = thm con4d (step 1) |- ( -. ph -> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_21i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of pm2_21i {
	step 1 : wff = thm a1i (hyp 1) |- ( -. ps -> -. ph ) ;
	step 2 : wff = thm con4i (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_21d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of pm2_21d {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( -. ch -> -. ps ) ) ;
	step 2 : wff = thm con4d (step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_24 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( -. ph -> ps ) ) ;
}

proof of pm2_24 {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ph -> ( -. ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_24ii (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of pm2_24ii {
	step 1 : wff = thm pm2_21i (hyp 2) |- ( ph -> ps ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem pm2_18 (ph : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ph ) -> ph ) ;
}

proof of pm2_18 {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> -. ( -. ph -> ph ) ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( -. ph -> ph ) -> ( -. ph -> -. ( -. ph -> ph ) ) ) ;
	step 3 : wff = thm con4d (step 2) |- ( ( -. ph -> ph ) -> ( ( -. ph -> ph ) -> ph ) ) ;
	step 4 : wff = thm pm2_43i (step 3) |- ( ( -. ph -> ph ) -> ph ) ;
	qed prop 1 = step 4 ;
}

theorem peirce (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ph ) -> ph ) ;
}

proof of peirce {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph -> ps ) -> ph ) -> ( -. ph -> ph ) ) ;
	step 3 : wff = thm pm2_18 () |- ( ( -. ph -> ph ) -> ph ) ;
	step 4 : wff = thm syl (step 2, step 3) |- ( ( ( ph -> ps ) -> ph ) -> ph ) ;
	qed prop 1 = step 4 ;
}

theorem looinv (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ps ) -> ( ( ps -> ph ) -> ph ) ) ;
}

proof of looinv {
	step 1 : wff = thm imim1 () |- ( ( ( ph -> ps ) -> ps ) -> ( ( ps -> ph ) -> ( ( ph -> ps ) -> ph ) ) ) ;
	step 2 : wff = thm peirce () |- ( ( ( ph -> ps ) -> ph ) -> ph ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ( ( ph -> ps ) -> ps ) -> ( ( ps -> ph ) -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem notnot2 (ph : wff)  {
	prop 1 : wff = |- ( -. -. ph -> ph ) ;
}

proof of notnot2 {
	step 1 : wff = thm pm2_21 () |- ( -. -. ph -> ( -. ph -> ph ) ) ;
	step 2 : wff = thm pm2_18 () |- ( ( -. ph -> ph ) -> ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( -. -. ph -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem notnotri (ph : wff)  {
	hyp 1 : wff = |- -. -. ph ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of notnotri {
	step 1 : wff = thm notnot2 () |- ( -. -. ph -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem notnot1 (ph : wff)  {
	prop 1 : wff = |- ( ph -> -. -. ph ) ;
}

proof of notnot1 {
	step 1 : wff = thm notnot2 () |- ( -. -. -. ph -> -. ph ) ;
	step 2 : wff = thm con4i (step 1) |- ( ph -> -. -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem notnoti (ph : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- -. -. ph ;
}

proof of notnoti {
	step 1 : wff = thm notnot1 () |- ( ph -> -. -. ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- -. -. ph ;
	qed prop 1 = step 2 ;
}

theorem pm2_01 (ph : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ph ) -> -. ph ) ;
}

proof of pm2_01 {
	step 1 : wff = thm pm2_18 () |- ( ( -. ph -> ph ) -> ph ) ;
	step 2 : wff = thm looinv () |- ( ( ( -. ph -> ph ) -> ph ) -> ( ( ph -> -. ph ) -> -. ph ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ph -> -. ph ) -> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_01d (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> -. ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of pm2_01d {
	step 1 : wff = thm pm2_01 () |- ( ( ps -> -. ps ) -> -. ps ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem con2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) ;
}

proof of con2 {
	step 1 : wff = thm notnot2 () |- ( -. -. ph -> ph ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ph -> -. ps ) -> ( -. -. ph -> -. ps ) ) ;
	step 3 : wff = thm con4d (step 2) |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem con2d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> -. ps ) ) ;
}

proof of con2d {
	step 1 : wff = thm con2 () |- ( ( ps -> -. ch ) -> ( ch -> -. ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ch -> -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem con1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) ;
}

proof of con1 {
	step 1 : wff = thm notnot1 () |- ( ps -> -. -. ps ) ;
	step 2 : wff = thm imim2i (step 1) |- ( ( -. ph -> ps ) -> ( -. ph -> -. -. ps ) ) ;
	step 3 : wff = thm con4d (step 2) |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem con1d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ch -> ps ) ) ;
}

proof of con1d {
	step 1 : wff = thm con1 () |- ( ( -. ps -> ch ) -> ( -. ch -> ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( -. ch -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem con3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
}

proof of con3 {
	step 1 : wff = thm notnot1 () |- ( ps -> -. -. ps ) ;
	step 2 : wff = thm imim2i (step 1) |- ( ( ph -> ps ) -> ( ph -> -. -. ps ) ) ;
	step 3 : wff = thm con2d (step 2) |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem con3d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ch -> -. ps ) ) ;
}

proof of con3d {
	step 1 : wff = thm con3 () |- ( ( ps -> ch ) -> ( -. ch -> -. ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( -. ch -> -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem con1i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( -. ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( -. ps -> ph ) ;
}

proof of con1i {
	step 1 : wff = thm con1 () |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( -. ps -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem con2i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> -. ph ) ;
}

proof of con2i {
	step 1 : wff = thm con2 () |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps -> -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem con3i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( -. ps -> -. ph ) ;
}

proof of con3i {
	step 1 : wff = thm notnot2 () |- ( -. -. ph -> ph ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( -. -. ph -> ps ) ;
	step 3 : wff = thm con1i (step 2) |- ( -. ps -> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_5 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) ;
}

proof of pm2_5 {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ( ph -> ps ) -> -. -. ph ) ;
	step 3 : wff = thm pm2_21d (step 2) |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_51 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) ;
}

proof of pm2_51 {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ( ph -> ps ) -> -. ps ) ;
	step 3 : wff = thm a1d (step 2) |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_52 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) ;
}

proof of pm2_52 {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ( ph -> ps ) -> -. ps ) ;
	step 3 : wff = thm a1d (step 2) |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_521 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) ;
}

proof of pm2_521 {
	step 1 : wff = thm pm2_52 () |- ( -. ( ph -> ps ) -> ( -. ph -> -. ps ) ) ;
	step 2 : wff = thm con4d (step 1) |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_24i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( -. ph -> ps ) ;
}

proof of pm2_24i {
	step 1 : wff = thm a1i (hyp 1) |- ( -. ps -> ph ) ;
	step 2 : wff = thm con1i (step 1) |- ( -. ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_24d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
}

proof of pm2_24d {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( -. ch -> ps ) ) ;
	step 2 : wff = thm con1d (step 1) |- ( ph -> ( -. ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem mto (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ps ;
	hyp 2 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- -. ph ;
}

proof of mto {
	step 1 : wff = thm con3i (hyp 2) |- ( -. ps -> -. ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- -. ph ;
	qed prop 1 = step 2 ;
}

theorem mtoi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- -. ch ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of mtoi {
	step 1 : wff = thm con3d (hyp 2) |- ( ph -> ( -. ch -> -. ps ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem mtod (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ch ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of mtod {
	step 1 : wff = thm con3d (hyp 2) |- ( ph -> ( -. ch -> -. ps ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem mt2 (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- -. ph ;
}

proof of mt2 {
	step 1 : wff = thm con2i (hyp 2) |- ( ps -> -. ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- -. ph ;
	qed prop 1 = step 2 ;
}

theorem mt2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ph -> ( ps -> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of mt2i {
	step 1 : wff = thm con2d (hyp 2) |- ( ph -> ( ch -> -. ps ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem mt2d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of mt2d {
	step 1 : wff = thm con2d (hyp 2) |- ( ph -> ( ch -> -. ps ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem mt3 (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ps ;
	hyp 2 : wff = |- ( -. ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of mt3 {
	step 1 : wff = thm con1i (hyp 2) |- ( -. ps -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem mt3i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- -. ch ;
	hyp 2 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of mt3i {
	step 1 : wff = thm con1d (hyp 2) |- ( ph -> ( -. ch -> ps ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem mt3d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ch ) ;
	hyp 2 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of mt3d {
	step 1 : wff = thm con1d (hyp 2) |- ( ph -> ( -. ch -> ps ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem mt4d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ( -. ch -> -. ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mt4d {
	step 1 : wff = thm con4d (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem nsyl (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ch ) ;
}

proof of nsyl {
	step 1 : wff = thm con3i (hyp 2) |- ( -. ps -> -. ch ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> -. ch ) ;
	qed prop 1 = step 2 ;
}

theorem nsyld (ph : wff, ps : wff, ch : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> -. ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ta -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> -. ta ) ) ;
}

proof of nsyld {
	step 1 : wff = thm con3d (hyp 2) |- ( ph -> ( -. ch -> -. ta ) ) ;
	step 2 : wff = thm syld (hyp 1, step 1) |- ( ph -> ( ps -> -. ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem nsyl2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	hyp 2 : wff = |- ( -. ch -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of nsyl2 {
	step 1 : wff = thm con1i (hyp 2) |- ( -. ps -> ch ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem nsyl3 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> -. ph ) ;
}

proof of nsyl3 {
	step 1 : wff = thm con2i (hyp 1) |- ( ps -> -. ph ) ;
	step 2 : wff = thm syl (hyp 2, step 1) |- ( ch -> -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem nsyl4 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( -. ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( -. ch -> ps ) ;
}

proof of nsyl4 {
	step 1 : wff = thm con1i (hyp 2) |- ( -. ch -> ph ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( -. ch -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem nsyli (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> -. ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> -. ps ) ) ;
}

proof of nsyli {
	step 1 : wff = thm con3d (hyp 1) |- ( ph -> ( -. ch -> -. ps ) ) ;
	step 2 : wff = thm syl5 (step 1, hyp 2) |- ( ph -> ( th -> -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_2im (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) ;
}

proof of pm3_2im {
	step 1 : wff = thm pm2_27 () |- ( ph -> ( ( ph -> -. ps ) -> -. ps ) ) ;
	step 2 : wff = thm con2d (step 1) |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem mth8 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( -. ps -> -. ( ph -> ps ) ) ) ;
}

proof of mth8 {
	step 1 : wff = thm pm2_27 () |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm con3d (step 1) |- ( ph -> ( -. ps -> -. ( ph -> ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_61 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) ;
}

proof of pm2_61 {
	step 1 : wff = thm con1 () |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) ;
	step 2 : wff = thm imim1d (step 1) |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ( -. ps -> ps ) ) ) ;
	step 3 : wff = thm pm2_18 () |- ( ( -. ps -> ps ) -> ps ) ;
	step 4 : wff = thm syl6com (step 2, step 3) |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm2_61i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( -. ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of pm2_61i {
	step 1 : wff = thm pm2_61 () |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm mp2 (hyp 1, hyp 2, step 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem pm2_61d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of pm2_61d {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm com12 (hyp 2) |- ( -. ps -> ( ph -> ch ) ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ( ph -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_61d1 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( -. ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of pm2_61d1 {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( -. ps -> ch ) ) ;
	step 2 : wff = thm pm2_61d (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_61d2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of pm2_61d2 {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm pm2_61d (step 1, hyp 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_61ii (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( -. ph -> ( -. ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	hyp 3 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of pm2_61ii {
	step 1 : wff = thm pm2_61d2 (hyp 1, hyp 3) |- ( -. ph -> ch ) ;
	step 2 : wff = thm pm2_61i (hyp 2, step 1) |- ch ;
	qed prop 1 = step 2 ;
}

theorem pm2_61nii (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( -. ph -> ch ) ;
	hyp 3 : wff = |- ( -. ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of pm2_61nii {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm pm2_61d1 (step 1, hyp 2) |- ( ps -> ch ) ;
	step 3 : wff = thm pm2_61i (step 2, hyp 3) |- ch ;
	qed prop 1 = step 3 ;
}

theorem pm2_61iii (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( -. ph -> ( -. ps -> ( -. ch -> th ) ) ) ;
	hyp 2 : wff = |- ( ph -> th ) ;
	hyp 3 : wff = |- ( ps -> th ) ;
	hyp 4 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- th ;
}

proof of pm2_61iii {
	step 1 : wff = thm a1d (hyp 2) |- ( ph -> ( -. ch -> th ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ph -> ( -. ps -> ( -. ch -> th ) ) ) ;
	step 3 : wff = thm pm2_61i (step 2, hyp 1) |- ( -. ps -> ( -. ch -> th ) ) ;
	step 4 : wff = thm pm2_61ii (step 3, hyp 3, hyp 4) |- th ;
	qed prop 1 = step 4 ;
}

theorem pm2_6 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) ;
}

proof of pm2_6 {
	step 1 : wff = thm pm2_61 () |- ( ( ph -> ps ) -> ( ( -. ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_65 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) ;
}

proof of pm2_65 {
	step 1 : wff = thm pm3_2im () |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( ph -> ps ) -> ( ph -> -. ( ph -> -. ps ) ) ) ;
	step 3 : wff = thm con2d (step 2) |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_65i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- -. ph ;
}

proof of pm2_65i {
	step 1 : wff = thm pm2_65 () |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) ;
	step 2 : wff = thm mp2 (hyp 1, hyp 2, step 1) |- -. ph ;
	qed prop 1 = step 2 ;
}

theorem pm2_65d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of pm2_65d {
	step 1 : wff = thm pm2_65 () |- ( ( ps -> ch ) -> ( ( ps -> -. ch ) -> -. ps ) ) ;
	step 2 : wff = thm sylc (step 1, hyp 1, hyp 2) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem ja (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( -. ph -> ch ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ps ) -> ch ) ;
}

proof of ja {
	step 1 : wff = thm imim2i (hyp 2) |- ( ( ph -> ps ) -> ( ph -> ch ) ) ;
	step 2 : wff = thm pm2_61d1 (step 1, hyp 1) |- ( ( ph -> ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem jc (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ( ps -> -. ch ) ) ;
}

proof of jc {
	step 1 : wff = thm pm3_2im () |- ( ps -> ( ch -> -. ( ps -> -. ch ) ) ) ;
	step 2 : wff = thm sylc (step 1, hyp 1, hyp 2) |- ( ph -> -. ( ps -> -. ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_26im (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> -. ps ) -> ph ) ;
}

proof of pm3_26im {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> -. ps ) ) ;
	step 2 : wff = thm con1i (step 1) |- ( -. ( ph -> -. ps ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_27im (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> -. ps ) -> ps ) ;
}

proof of pm3_27im {
	step 1 : wff = axm ax-1 () |- ( -. ps -> ( ph -> -. ps ) ) ;
	step 2 : wff = thm con1i (step 1) |- ( -. ( ph -> -. ps ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem impt (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) ;
}

proof of impt {
	step 1 : wff = thm con3 () |- ( ( ps -> ch ) -> ( -. ch -> -. ps ) ) ;
	step 2 : wff = thm imim2i (step 1) |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( -. ch -> -. ps ) ) ) ;
	step 3 : wff = thm com23 (step 2) |- ( ( ph -> ( ps -> ch ) ) -> ( -. ch -> ( ph -> -. ps ) ) ) ;
	step 4 : wff = thm con1d (step 3) |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem expt (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( -. ( ph -> -. ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) ;
}

proof of expt {
	step 1 : wff = thm pm3_2im () |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) ;
	step 2 : wff = thm imim1d (step 1) |- ( ph -> ( ( -. ( ph -> -. ps ) -> ch ) -> ( ps -> ch ) ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ( -. ( ph -> -. ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem impi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. ( ph -> -. ps ) -> ch ) ;
}

proof of impi {
	step 1 : wff = thm impt () |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( -. ( ph -> -. ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem expi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( -. ( ph -> -. ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of expi {
	step 1 : wff = thm pm3_2im () |- ( ph -> ( ps -> -. ( ph -> -. ps ) ) ) ;
	step 2 : wff = thm syl6 (step 1, hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem bijust (ph : wff)  {
	prop 1 : wff = |- -. ( ( ph -> ph ) -> -. ( ph -> ph ) ) ;
}

proof of bijust {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm pm2_01 () |- ( ( ( ph -> ph ) -> -. ( ph -> ph ) ) -> -. ( ph -> ph ) ) ;
	step 3 : wff = thm mt2 (step 1, step 2) |- -. ( ( ph -> ph ) -> -. ( ph -> ph ) ) ;
	qed prop 1 = step 3 ;
}

constant {
	symbol <-> ;
}

rule wb (ph : wff, ps : wff) {
	term : wff = # ( ph <-> ps ) ;
}

axiom def-bi (ph : wff, ps : wff)  {
	prop 1 : wff = |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
}

theorem bi1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
}

proof of bi1 {
	step 1 : wff = axm def-bi () |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm pm3_26im () |- ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	step 4 : wff = thm pm3_26im () |- ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph -> ps ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem bi2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
}

proof of bi2 {
	step 1 : wff = axm def-bi () |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm pm3_26im () |- ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	step 4 : wff = thm pm3_27im () |- ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ps -> ph ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem bi3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) ;
}

proof of bi3 {
	step 1 : wff = axm def-bi () |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm pm3_27im () |- ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ;
	step 4 : wff = thm expi (step 3) |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem biimpi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of biimpi {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem biimpri (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ph ) ;
}

proof of biimpri {
	step 1 : wff = thm bi2 () |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem biimpd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of biimpd {
	step 1 : wff = thm bi1 () |- ( ( ps <-> ch ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem biimprd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> ps ) ) ;
}

proof of biimprd {
	step 1 : wff = thm bi2 () |- ( ( ps <-> ch ) -> ( ch -> ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ch -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem biimpcd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph -> ch ) ) ;
}

proof of biimpcd {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ps -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem biimprcd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> ( ph -> ps ) ) ;
}

proof of biimprcd {
	step 1 : wff = thm biimprd (hyp 1) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ch -> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem impbii (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ps -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ps ) ;
}

proof of impbii {
	step 1 : wff = thm bi3 () |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm mp2 (hyp 1, hyp 2, step 1) |- ( ph <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem dfbi1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
}

proof of dfbi1 {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm bi2 () |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
	step 3 : wff = thm jc (step 1, step 2) |- ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	step 4 : wff = thm bi3 () |- ( ( ph -> ps ) -> ( ( ps -> ph ) -> ( ph <-> ps ) ) ) ;
	step 5 : wff = thm impi (step 4) |- ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ;
	step 6 : wff = thm impbii (step 3, step 5) |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem dfbi1gb (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
}

proof of dfbi1gb {
	var ch : wff, th : wff;
	step 1 : wff = axm def-bi () |- -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
	step 2 : wff = axm ax-1 () |- ( ch -> ( th -> ch ) ) ;
	step 3 : wff = axm ax-1 () |- ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) ;
	step 4 : wff = axm def-bi () |- -. ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ;
	step 5 : wff = axm ax-1 () |- ( -. ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> ( -. -. ( ch -> ( th -> ch ) ) -> -. ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( -. -. ( ch -> ( th -> ch ) ) -> -. ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) ;
	step 7 : wff = axm ax-3 () |- ( ( -. -. ( ch -> ( th -> ch ) ) -> -. ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) -> ( ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ) ;
	step 8 : wff = axm ax-mp (step 6, step 7) |- ( ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ;
	step 9 : wff = axm ax-1 () |- ( ( ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) -> ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> ( ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ) ) ;
	step 10 : wff = axm ax-mp (step 8, step 9) |- ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> ( ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ) ;
	step 11 : wff = axm ax-2 () |- ( ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> ( ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ) -> ( ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) -> ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ) ) ;
	step 12 : wff = axm ax-mp (step 10, step 11) |- ( ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> ( ( ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ) -> -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) -> ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ) ;
	step 13 : wff = axm ax-mp (step 3, step 12) |- ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) ;
	step 14 : wff = axm ax-3 () |- ( ( -. ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) -> -. ( ch -> ( th -> ch ) ) ) -> ( ( ch -> ( th -> ch ) ) -> ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ) ;
	step 15 : wff = axm ax-mp (step 13, step 14) |- ( ( ch -> ( th -> ch ) ) -> ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ) ;
	step 16 : wff = axm ax-mp (step 2, step 15) |- ( -. ( ( ( ph <-> ps ) -> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) -> -. ( -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) -> ( ph <-> ps ) ) ) -> ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ) ;
	step 17 : wff = axm ax-mp (step 1, step 16) |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	qed prop 1 = step 17 ;
}

theorem bi2_04 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ;
}

proof of bi2_04 {
	step 1 : wff = thm pm2_04 () |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm pm2_04 () |- ( ( ps -> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem notnot (ph : wff)  {
	prop 1 : wff = |- ( ph <-> -. -. ph ) ;
}

proof of notnot {
	step 1 : wff = thm notnot1 () |- ( ph -> -. -. ph ) ;
	step 2 : wff = thm notnot2 () |- ( -. -. ph -> ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ph <-> -. -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_8 (ph : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ph ) <-> -. ph ) ;
}

proof of pm4_8 {
	step 1 : wff = thm pm2_01 () |- ( ( ph -> -. ph ) -> -. ph ) ;
	step 2 : wff = axm ax-1 () |- ( -. ph -> ( ph -> -. ph ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ph -> -. ph ) <-> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_81 (ph : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ph ) <-> ph ) ;
}

proof of pm4_81 {
	step 1 : wff = thm pm2_18 () |- ( ( -. ph -> ph ) -> ph ) ;
	step 2 : wff = thm pm2_24 () |- ( ph -> ( -. ph -> ph ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( -. ph -> ph ) <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem con1b (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) ;
}

proof of con1b {
	step 1 : wff = thm con1 () |- ( ( -. ph -> ps ) -> ( -. ps -> ph ) ) ;
	step 2 : wff = thm con1 () |- ( ( -. ps -> ph ) -> ( -. ph -> ps ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem con2b (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) ;
}

proof of con2b {
	step 1 : wff = thm con2 () |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) ;
	step 2 : wff = thm con2 () |- ( ( ps -> -. ph ) -> ( ph -> -. ps ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem con34b (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) ;
}

proof of con34b {
	step 1 : wff = thm con3 () |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
	step 2 : wff = axm ax-3 () |- ( ( -. ps -> -. ph ) -> ( ph -> ps ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm5_4 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ph -> ps ) ) <-> ( ph -> ps ) ) ;
}

proof of pm5_4 {
	step 1 : wff = thm pm2_43 () |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
	step 2 : wff = axm ax-1 () |- ( ( ph -> ps ) -> ( ph -> ( ph -> ps ) ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ph -> ( ph -> ps ) ) <-> ( ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem imdi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) <-> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
}

proof of imdi {
	step 1 : wff = axm ax-2 () |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm pm2_86 () |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ph -> ( ps -> ch ) ) <-> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm5_41 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) <-> ( ph -> ( ps -> ch ) ) ) ;
}

proof of pm5_41 {
	step 1 : wff = thm pm2_86 () |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = axm ax-2 () |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ( ( ph -> ps ) -> ( ph -> ch ) ) <-> ( ph -> ( ps -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem biid (ph : wff)  {
	prop 1 : wff = |- ( ph <-> ph ) ;
}

proof of biid {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm id () |- ( ph -> ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ph <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem biidd (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ps ) ) ;
}

proof of biidd {
	step 1 : wff = thm biid () |- ( ps <-> ps ) ;
	step 2 : wff = thm a1i (step 1) |- ( ph -> ( ps <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem bicomi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ph ) ;
}

proof of bicomi {
	step 1 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 2 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ps <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem bitri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ps <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ch ) ;
}

proof of bitri {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm biimpi (hyp 2) |- ( ps -> ch ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ch ) ;
	step 4 : wff = thm biimpri (hyp 2) |- ( ch -> ps ) ;
	step 5 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( ch -> ph ) ;
	step 7 : wff = thm impbii (step 3, step 6) |- ( ph <-> ch ) ;
	qed prop 1 = step 7 ;
}

theorem bitr2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ps <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ch <-> ph ) ;
}

proof of bitr2i {
	step 1 : wff = thm bitri (hyp 1, hyp 2) |- ( ph <-> ch ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ch <-> ph ) ;
	qed prop 1 = step 2 ;
}

theorem bitr3i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps <-> ph ) ;
	hyp 2 : wff = |- ( ps <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ch ) ;
}

proof of bitr3i {
	step 1 : wff = thm bicomi (hyp 1) |- ( ph <-> ps ) ;
	step 2 : wff = thm bitri (step 1, hyp 2) |- ( ph <-> ch ) ;
	qed prop 1 = step 2 ;
}

theorem bitr4i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ch ) ;
}

proof of bitr4i {
	step 1 : wff = thm bicomi (hyp 2) |- ( ps <-> ch ) ;
	step 2 : wff = thm bitri (hyp 1, step 1) |- ( ph <-> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitri (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ps <-> ch ) ;
	hyp 3 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> th ) ;
}

proof of 3bitri {
	step 1 : wff = thm bitri (hyp 2, hyp 3) |- ( ps <-> th ) ;
	step 2 : wff = thm bitri (hyp 1, step 1) |- ( ph <-> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitrri (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ps <-> ch ) ;
	hyp 3 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( th <-> ph ) ;
}

proof of 3bitrri {
	step 1 : wff = thm bitr2i (hyp 1, hyp 2) |- ( ch <-> ph ) ;
	step 2 : wff = thm bitr3i (hyp 3, step 1) |- ( th <-> ph ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr2i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> ps ) ;
	hyp 3 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> th ) ;
}

proof of 3bitr2i {
	step 1 : wff = thm bitr4i (hyp 1, hyp 2) |- ( ph <-> ch ) ;
	step 2 : wff = thm bitri (step 1, hyp 3) |- ( ph <-> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr2ri (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> ps ) ;
	hyp 3 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( th <-> ph ) ;
}

proof of 3bitr2ri {
	step 1 : wff = thm bitr4i (hyp 1, hyp 2) |- ( ph <-> ch ) ;
	step 2 : wff = thm bitr2i (step 1, hyp 3) |- ( th <-> ph ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr3i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ph <-> ch ) ;
	hyp 3 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ch <-> th ) ;
}

proof of 3bitr3i {
	step 1 : wff = thm bitr3i (hyp 2, hyp 1) |- ( ch <-> ps ) ;
	step 2 : wff = thm bitri (step 1, hyp 3) |- ( ch <-> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr3ri (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ph <-> ch ) ;
	hyp 3 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( th <-> ch ) ;
}

proof of 3bitr3ri {
	step 1 : wff = thm bitr3i (hyp 1, hyp 2) |- ( ps <-> ch ) ;
	step 2 : wff = thm bitr3i (hyp 3, step 1) |- ( th <-> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr4i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> ph ) ;
	hyp 3 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ch <-> th ) ;
}

proof of 3bitr4i {
	step 1 : wff = thm bitr4i (hyp 1, hyp 3) |- ( ph <-> th ) ;
	step 2 : wff = thm bitri (hyp 2, step 1) |- ( ch <-> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr4ri (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> ph ) ;
	hyp 3 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th <-> ch ) ;
}

proof of 3bitr4ri {
	step 1 : wff = thm bitr4i (hyp 1, hyp 3) |- ( ph <-> th ) ;
	step 2 : wff = thm bitr2i (hyp 2, step 1) |- ( th <-> ch ) ;
	qed prop 1 = step 2 ;
}

theorem imbi2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch -> ph ) <-> ( ch -> ps ) ) ;
}

proof of imbi2i {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm imim2i (step 1) |- ( ( ch -> ph ) -> ( ch -> ps ) ) ;
	step 3 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( ch -> ps ) -> ( ch -> ph ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( ch -> ph ) <-> ( ch -> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem imbi1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ch ) <-> ( ps -> ch ) ) ;
}

proof of imbi1i {
	step 1 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ph -> ch ) -> ( ps -> ch ) ) ;
	step 3 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 4 : wff = thm imim1i (step 3) |- ( ( ps -> ch ) -> ( ph -> ch ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( ph -> ch ) <-> ( ps -> ch ) ) ;
	qed prop 1 = step 5 ;
}

theorem notbii (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph <-> -. ps ) ;
}

proof of notbii {
	step 1 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ph -> -. ps ) ;
	step 3 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. ps -> -. ph ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( -. ph <-> -. ps ) ;
	qed prop 1 = step 5 ;
}

theorem imbi12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ch ) <-> ( ps -> th ) ) ;
}

proof of imbi12i {
	step 1 : wff = thm imbi2i (hyp 2) |- ( ( ph -> ch ) <-> ( ph -> th ) ) ;
	step 2 : wff = thm imbi1i (hyp 1) |- ( ( ph -> th ) <-> ( ps -> th ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph -> ch ) <-> ( ps -> th ) ) ;
	qed prop 1 = step 3 ;
}

theorem mpbi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of mpbi {
	step 1 : wff = thm biimpi (hyp 2) |- ( ph -> ps ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem mpbir (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of mpbir {
	step 1 : wff = thm biimpri (hyp 2) |- ( ps -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem mtbi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	hyp 2 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- -. ps ;
}

proof of mtbi {
	step 1 : wff = thm notbii (hyp 2) |- ( -. ph <-> -. ps ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- -. ps ;
	qed prop 1 = step 2 ;
}

theorem mtbir (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ps ;
	hyp 2 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- -. ph ;
}

proof of mtbir {
	step 1 : wff = thm notbii (hyp 2) |- ( -. ph <-> -. ps ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- -. ph ;
	qed prop 1 = step 2 ;
}

theorem mpbii (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mpbii {
	step 1 : wff = thm biimpd (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpbiri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of mpbiri {
	step 1 : wff = thm biimprd (hyp 2) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem mpbid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mpbid {
	step 1 : wff = thm biimpd (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpbird (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of mpbird {
	step 1 : wff = thm biimprd (hyp 2) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem a1bi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ( ph -> ps ) ) ;
}

proof of a1bi {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm pm2_27 () |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
	step 3 : wff = axm ax-mp (hyp 1, step 2) |- ( ( ph -> ps ) -> ps ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( ps <-> ( ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem sylib (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ps <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of sylib {
	step 1 : wff = thm biimpi (hyp 2) |- ( ps -> ch ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylbi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of sylbi {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm syl (step 1, hyp 2) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylibr (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of sylibr {
	step 1 : wff = thm biimpri (hyp 2) |- ( ps -> ch ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylbir (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps <-> ph ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of sylbir {
	step 1 : wff = thm biimpri (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm syl (step 1, hyp 2) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylibd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of sylibd {
	step 1 : wff = thm biimpd (hyp 2) |- ( ph -> ( ch -> th ) ) ;
	step 2 : wff = thm syld (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylbid (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of sylbid {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syld (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylibrd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of sylibrd {
	step 1 : wff = thm biimprd (hyp 2) |- ( ph -> ( ch -> th ) ) ;
	step 2 : wff = thm syld (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylbird (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ch <-> ps ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of sylbird {
	step 1 : wff = thm biimprd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syld (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5ib (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ch ) ) ;
}

proof of syl5ib {
	step 1 : wff = thm biimpi (hyp 2) |- ( th -> ps ) ;
	step 2 : wff = thm syl5 (hyp 1, step 1) |- ( ph -> ( th -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5ibr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ch ) ) ;
}

proof of syl5ibr {
	step 1 : wff = thm biimpri (hyp 2) |- ( th -> ps ) ;
	step 2 : wff = thm syl5 (hyp 1, step 1) |- ( ph -> ( th -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5bi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ch ) ) ;
}

proof of syl5bi {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl5 (step 1, hyp 2) |- ( ph -> ( th -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5cbi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ph -> ch ) ) ;
}

proof of syl5cbi {
	step 1 : wff = thm syl5bi (hyp 1, hyp 2) |- ( ph -> ( th -> ch ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( th -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5bir (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ps ) ) ;
}

proof of syl5bir {
	step 1 : wff = thm biimprd (hyp 1) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm syl5 (step 1, hyp 2) |- ( ph -> ( th -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5cbir (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ph -> ps ) ) ;
}

proof of syl5cbir {
	step 1 : wff = thm syl5bir (hyp 1, hyp 2) |- ( ph -> ( th -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( th -> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6ib (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of syl6ib {
	step 1 : wff = thm biimpi (hyp 2) |- ( ch -> th ) ;
	step 2 : wff = thm syl6 (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6ibr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of syl6ibr {
	step 1 : wff = thm biimpri (hyp 2) |- ( ch -> th ) ;
	step 2 : wff = thm syl6 (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6bi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of syl6bi {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl6 (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6bir (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ch <-> ps ) ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of syl6bir {
	step 1 : wff = thm biimprd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl6 (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl7ib (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( ta <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
}

proof of syl7ib {
	step 1 : wff = thm biimpi (hyp 2) |- ( ta -> ch ) ;
	step 2 : wff = thm syl7 (hyp 1, step 1) |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl8ib (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	hyp 2 : wff = |- ( th <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
}

proof of syl8ib {
	step 1 : wff = thm biimpi (hyp 2) |- ( th -> ta ) ;
	step 2 : wff = thm syl8 (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3imtr3i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph <-> ch ) ;
	hyp 3 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> th ) ;
}

proof of 3imtr3i {
	step 1 : wff = thm sylbir (hyp 2, hyp 1) |- ( ch -> ps ) ;
	step 2 : wff = thm sylib (step 1, hyp 3) |- ( ch -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3imtr4i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch <-> ph ) ;
	hyp 3 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> th ) ;
}

proof of 3imtr4i {
	step 1 : wff = thm sylbi (hyp 2, hyp 1) |- ( ch -> ps ) ;
	step 2 : wff = thm sylibr (step 1, hyp 3) |- ( ch -> th ) ;
	qed prop 1 = step 2 ;
}

theorem con1bii (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( -. ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( -. ps <-> ph ) ;
}

proof of con1bii {
	step 1 : wff = thm biimpi (hyp 1) |- ( -. ph -> ps ) ;
	step 2 : wff = thm con1i (step 1) |- ( -. ps -> ph ) ;
	step 3 : wff = thm biimpri (hyp 1) |- ( ps -> -. ph ) ;
	step 4 : wff = thm con2i (step 3) |- ( ph -> -. ps ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( -. ps <-> ph ) ;
	qed prop 1 = step 5 ;
}

theorem con2bii (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph <-> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ps <-> -. ph ) ;
}

proof of con2bii {
	step 1 : wff = thm bicomi (hyp 1) |- ( -. ps <-> ph ) ;
	step 2 : wff = thm con1bii (step 1) |- ( -. ph <-> ps ) ;
	step 3 : wff = thm bicomi (step 2) |- ( ps <-> -. ph ) ;
	qed prop 1 = step 3 ;
}

constant {
	symbol \/ ;
}

constant {
	symbol /\ ;
}

rule wo (ph : wff, ps : wff) {
	term : wff = # ( ph \/ ps ) ;
}

rule wa (ph : wff, ps : wff) {
	term : wff = # ( ph /\ ps ) ;
}

definition df-or (ph : wff, ps : wff)  {
	defiendum : wff = # ( ph \/ ps ) ;
	definiens : wff = # ( -. ph -> ps ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-an (ph : wff, ps : wff)  {
	defiendum : wff = # ( ph /\ ps ) ;
	definiens : wff = # -. ( ph -> -. ps ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem pm4_64 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ps ) <-> ( ph \/ ps ) ) ;
}

proof of pm4_64 {
	step 1 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ( -. ph -> ps ) <-> ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_54 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ps ) -> ( ph \/ ps ) ) ;
}

proof of pm2_54 {
	step 1 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( -. ph -> ps ) -> ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_63 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> -. ps ) <-> ( ph /\ ps ) ) ;
}

proof of pm4_63 {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( -. ( ph -> -. ps ) <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem dfor2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) ;
}

proof of dfor2 {
	step 1 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 2 : wff = thm pm2_6 () |- ( ( -. ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) ;
	step 3 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 4 : wff = thm imim1i (step 3) |- ( ( ( ph -> ps ) -> ps ) -> ( -. ph -> ps ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( -. ph -> ps ) <-> ( ( ph -> ps ) -> ps ) ) ;
	step 6 : wff = thm bitri (step 1, step 5) |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem ori (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph \/ ps ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph -> ps ) ;
}

proof of ori {
	step 1 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( -. ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem orri (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( -. ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph \/ ps ) ;
}

proof of orri {
	step 1 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- ( ph \/ ps ) ;
	qed prop 1 = step 2 ;
}

theorem ord (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps \/ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
}

proof of ord {
	step 1 : wff = def df-or () |- ( ( ps \/ ch ) <-> ( -. ps -> ch ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( -. ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem orrd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( -. ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps \/ ch ) ) ;
}

proof of orrd {
	step 1 : wff = def df-or () |- ( ( ps \/ ch ) <-> ( -. ps -> ch ) ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> ( ps \/ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem imor (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) ;
}

proof of imor {
	step 1 : wff = thm notnot () |- ( ph <-> -. -. ph ) ;
	step 2 : wff = thm imbi1i (step 1) |- ( ( ph -> ps ) <-> ( -. -. ph -> ps ) ) ;
	step 3 : wff = def df-or () |- ( ( -. ph \/ ps ) <-> ( -. -. ph -> ps ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm4_62 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ps ) <-> ( -. ph \/ -. ps ) ) ;
}

proof of pm4_62 {
	step 1 : wff = thm imor () |- ( ( ph -> -. ps ) <-> ( -. ph \/ -. ps ) ) ;
	qed prop 1 = step 1 ;
}

theorem pm4_66 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> -. ps ) <-> ( ph \/ -. ps ) ) ;
}

proof of pm4_66 {
	step 1 : wff = thm pm4_64 () |- ( ( -. ph -> -. ps ) <-> ( ph \/ -. ps ) ) ;
	qed prop 1 = step 1 ;
}

theorem iman (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) ;
}

proof of iman {
	step 1 : wff = thm notnot () |- ( ps <-> -. -. ps ) ;
	step 2 : wff = thm imbi2i (step 1) |- ( ( ph -> ps ) <-> ( ph -> -. -. ps ) ) ;
	step 3 : wff = def df-an () |- ( ( ph /\ -. ps ) <-> -. ( ph -> -. -. ps ) ) ;
	step 4 : wff = thm con2bii (step 3) |- ( ( ph -> -. -. ps ) <-> -. ( ph /\ -. ps ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem annim (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
}

proof of annim {
	step 1 : wff = thm iman () |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) ;
	step 2 : wff = thm con2bii (step 1) |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_61 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph -> ps ) <-> ( ph /\ -. ps ) ) ;
}

proof of pm4_61 {
	step 1 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( -. ( ph -> ps ) <-> ( ph /\ -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_65 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( -. ph -> ps ) <-> ( -. ph /\ -. ps ) ) ;
}

proof of pm4_65 {
	step 1 : wff = thm pm4_61 () |- ( -. ( -. ph -> ps ) <-> ( -. ph /\ -. ps ) ) ;
	qed prop 1 = step 1 ;
}

theorem pm4_67 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( -. ph -> -. ps ) <-> ( -. ph /\ ps ) ) ;
}

proof of pm4_67 {
	step 1 : wff = thm pm4_63 () |- ( -. ( -. ph -> -. ps ) <-> ( -. ph /\ ps ) ) ;
	qed prop 1 = step 1 ;
}

theorem imnan (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
}

proof of imnan {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm con2bii (step 1) |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem oridm (ph : wff)  {
	prop 1 : wff = |- ( ( ph \/ ph ) <-> ph ) ;
}

proof of oridm {
	step 1 : wff = def df-or () |- ( ( ph \/ ph ) <-> ( -. ph -> ph ) ) ;
	step 2 : wff = thm pm2_24 () |- ( ph -> ( -. ph -> ph ) ) ;
	step 3 : wff = thm pm2_18 () |- ( ( -. ph -> ph ) -> ph ) ;
	step 4 : wff = thm impbii (step 2, step 3) |- ( ph <-> ( -. ph -> ph ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( ( ph \/ ph ) <-> ph ) ;
	qed prop 1 = step 5 ;
}

theorem pm4_25 (ph : wff)  {
	prop 1 : wff = |- ( ph <-> ( ph \/ ph ) ) ;
}

proof of pm4_25 {
	step 1 : wff = thm oridm () |- ( ( ph \/ ph ) <-> ph ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ph <-> ( ph \/ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm1_2 (ph : wff)  {
	prop 1 : wff = |- ( ( ph \/ ph ) -> ph ) ;
}

proof of pm1_2 {
	step 1 : wff = thm oridm () |- ( ( ph \/ ph ) <-> ph ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph \/ ph ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem orcom (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
}

proof of orcom {
	step 1 : wff = thm con1b () |- ( ( -. ph -> ps ) <-> ( -. ps -> ph ) ) ;
	step 2 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 3 : wff = def df-or () |- ( ( ps \/ ph ) <-> ( -. ps -> ph ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm1_4 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) ;
}

proof of pm1_4 {
	step 1 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_62 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) ;
}

proof of pm2_62 {
	step 1 : wff = thm dfor2 () |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_621 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) ;
}

proof of pm2_621 {
	step 1 : wff = thm pm2_62 () |- ( ( ph \/ ps ) -> ( ( ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_68 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ps ) -> ( ph \/ ps ) ) ;
}

proof of pm2_68 {
	step 1 : wff = thm dfor2 () |- ( ( ph \/ ps ) <-> ( ( ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( ( ph -> ps ) -> ps ) -> ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem orel1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) ;
}

proof of orel1 {
	step 1 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem orel2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph -> ( ( ps \/ ph ) -> ps ) ) ;
}

proof of orel2 {
	step 1 : wff = thm orel1 () |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) ;
	step 2 : wff = thm orcom () |- ( ( ps \/ ph ) <-> ( ph \/ ps ) ) ;
	step 3 : wff = thm syl5ib (step 1, step 2) |- ( -. ph -> ( ( ps \/ ph ) -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_25 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph \/ ( ( ph \/ ps ) -> ps ) ) ;
}

proof of pm2_25 {
	step 1 : wff = thm orel1 () |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) ;
	step 2 : wff = thm orri (step 1) |- ( ph \/ ( ( ph \/ ps ) -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_53 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) ;
}

proof of pm2_53 {
	step 1 : wff = thm orel1 () |- ( -. ph -> ( ( ph \/ ps ) -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem orbi2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ;
}

proof of orbi2i {
	step 1 : wff = thm imbi2i (hyp 1) |- ( ( -. ch -> ph ) <-> ( -. ch -> ps ) ) ;
	step 2 : wff = def df-or () |- ( ( ch \/ ph ) <-> ( -. ch -> ph ) ) ;
	step 3 : wff = def df-or () |- ( ( ch \/ ps ) <-> ( -. ch -> ps ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem orbi1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ;
}

proof of orbi1i {
	step 1 : wff = thm orcom () |- ( ( ph \/ ch ) <-> ( ch \/ ph ) ) ;
	step 2 : wff = thm orbi2i (hyp 1) |- ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ;
	step 3 : wff = thm orcom () |- ( ( ch \/ ps ) <-> ( ps \/ ch ) ) ;
	step 4 : wff = thm 3bitri (step 1, step 2, step 3) |- ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem orbi12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch ) <-> ( ps \/ th ) ) ;
}

proof of orbi12i {
	step 1 : wff = thm orbi2i (hyp 2) |- ( ( ph \/ ch ) <-> ( ph \/ th ) ) ;
	step 2 : wff = thm orbi1i (hyp 1) |- ( ( ph \/ th ) <-> ( ps \/ th ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph \/ ch ) <-> ( ps \/ th ) ) ;
	qed prop 1 = step 3 ;
}

theorem or12 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) ;
}

proof of or12 {
	step 1 : wff = thm bi2_04 () |- ( ( -. ps -> ( -. ph -> ch ) ) <-> ( -. ph -> ( -. ps -> ch ) ) ) ;
	step 2 : wff = def df-or () |- ( ( ph \/ ch ) <-> ( -. ph -> ch ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( -. ps -> ( ph \/ ch ) ) <-> ( -. ps -> ( -. ph -> ch ) ) ) ;
	step 4 : wff = def df-or () |- ( ( ps \/ ch ) <-> ( -. ps -> ch ) ) ;
	step 5 : wff = thm imbi2i (step 4) |- ( ( -. ph -> ( ps \/ ch ) ) <-> ( -. ph -> ( -. ps -> ch ) ) ) ;
	step 6 : wff = thm 3bitr4ri (step 1, step 3, step 5) |- ( ( -. ph -> ( ps \/ ch ) ) <-> ( -. ps -> ( ph \/ ch ) ) ) ;
	step 7 : wff = def df-or () |- ( ( ph \/ ( ps \/ ch ) ) <-> ( -. ph -> ( ps \/ ch ) ) ) ;
	step 8 : wff = def df-or () |- ( ( ps \/ ( ph \/ ch ) ) <-> ( -. ps -> ( ph \/ ch ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 6, step 7, step 8) |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem pm1_5 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) ;
}

proof of pm1_5 {
	step 1 : wff = thm or12 () |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ps \/ ( ph \/ ch ) ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph \/ ( ps \/ ch ) ) -> ( ps \/ ( ph \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem orass (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
}

proof of orass {
	step 1 : wff = thm or12 () |- ( ( ch \/ ( ph \/ ps ) ) <-> ( ph \/ ( ch \/ ps ) ) ) ;
	step 2 : wff = thm orcom () |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ch \/ ( ph \/ ps ) ) ) ;
	step 3 : wff = thm orcom () |- ( ( ps \/ ch ) <-> ( ch \/ ps ) ) ;
	step 4 : wff = thm orbi2i (step 3) |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ph \/ ( ch \/ ps ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_31 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps \/ ch ) ) -> ( ( ph \/ ps ) \/ ch ) ) ;
}

proof of pm2_31 {
	step 1 : wff = thm orass () |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( ph \/ ( ps \/ ch ) ) -> ( ( ph \/ ps ) \/ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_32 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ( ps \/ ch ) ) ) ;
}

proof of pm2_32 {
	step 1 : wff = thm orass () |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ( ps \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem or23 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ps ) ) ;
}

proof of or23 {
	step 1 : wff = thm orcom () |- ( ( ps \/ ch ) <-> ( ch \/ ps ) ) ;
	step 2 : wff = thm orbi2i (step 1) |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ph \/ ( ch \/ ps ) ) ) ;
	step 3 : wff = thm orass () |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 4 : wff = thm orass () |- ( ( ( ph \/ ch ) \/ ps ) <-> ( ph \/ ( ch \/ ps ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem or4 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <-> ( ( ph \/ ch ) \/ ( ps \/ th ) ) ) ;
}

proof of or4 {
	step 1 : wff = thm or12 () |- ( ( ps \/ ( ch \/ th ) ) <-> ( ch \/ ( ps \/ th ) ) ) ;
	step 2 : wff = thm orbi2i (step 1) |- ( ( ph \/ ( ps \/ ( ch \/ th ) ) ) <-> ( ph \/ ( ch \/ ( ps \/ th ) ) ) ) ;
	step 3 : wff = thm orass () |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <-> ( ph \/ ( ps \/ ( ch \/ th ) ) ) ) ;
	step 4 : wff = thm orass () |- ( ( ( ph \/ ch ) \/ ( ps \/ th ) ) <-> ( ph \/ ( ch \/ ( ps \/ th ) ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <-> ( ( ph \/ ch ) \/ ( ps \/ th ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem or42 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <-> ( ( ph \/ ch ) \/ ( th \/ ps ) ) ) ;
}

proof of or42 {
	step 1 : wff = thm or4 () |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <-> ( ( ph \/ ch ) \/ ( ps \/ th ) ) ) ;
	step 2 : wff = thm orcom () |- ( ( ps \/ th ) <-> ( th \/ ps ) ) ;
	step 3 : wff = thm orbi2i (step 2) |- ( ( ( ph \/ ch ) \/ ( ps \/ th ) ) <-> ( ( ph \/ ch ) \/ ( th \/ ps ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ( ph \/ ps ) \/ ( ch \/ th ) ) <-> ( ( ph \/ ch ) \/ ( th \/ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem orordi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ( ph \/ ps ) \/ ( ph \/ ch ) ) ) ;
}

proof of orordi {
	step 1 : wff = thm oridm () |- ( ( ph \/ ph ) <-> ph ) ;
	step 2 : wff = thm orbi1i (step 1) |- ( ( ( ph \/ ph ) \/ ( ps \/ ch ) ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 3 : wff = thm or4 () |- ( ( ( ph \/ ph ) \/ ( ps \/ ch ) ) <-> ( ( ph \/ ps ) \/ ( ph \/ ch ) ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ( ph \/ ps ) \/ ( ph \/ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem orordir (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ( ps \/ ch ) ) ) ;
}

proof of orordir {
	step 1 : wff = thm oridm () |- ( ( ch \/ ch ) <-> ch ) ;
	step 2 : wff = thm orbi2i (step 1) |- ( ( ( ph \/ ps ) \/ ( ch \/ ch ) ) <-> ( ( ph \/ ps ) \/ ch ) ) ;
	step 3 : wff = thm or4 () |- ( ( ( ph \/ ps ) \/ ( ch \/ ch ) ) <-> ( ( ph \/ ch ) \/ ( ps \/ ch ) ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ( ph \/ ch ) \/ ( ps \/ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem olc (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps \/ ph ) ) ;
}

proof of olc {
	step 1 : wff = axm ax-1 () |- ( ph -> ( -. ps -> ph ) ) ;
	step 2 : wff = thm orrd (step 1) |- ( ph -> ( ps \/ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem orc (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ph \/ ps ) ) ;
}

proof of orc {
	step 1 : wff = thm pm2_24 () |- ( ph -> ( -. ph -> ps ) ) ;
	step 2 : wff = thm orrd (step 1) |- ( ph -> ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem orci (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ph \/ ps ) ;
}

proof of orci {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ph \/ ps ) ;
	qed prop 1 = step 2 ;
}

theorem olci (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ps \/ ph ) ;
}

proof of olci {
	step 1 : wff = thm olc () |- ( ph -> ( ps \/ ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps \/ ph ) ;
	qed prop 1 = step 2 ;
}

theorem orcd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps \/ ch ) ) ;
}

proof of orcd {
	step 1 : wff = thm orc () |- ( ps -> ( ps \/ ch ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps \/ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem olcd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch \/ ps ) ) ;
}

proof of olcd {
	step 1 : wff = thm olc () |- ( ps -> ( ch \/ ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ch \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem orcs (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph \/ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of orcs {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem olcs (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph \/ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ch ) ;
}

proof of olcs {
	step 1 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ps -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_07 (ph : wff)  {
	prop 1 : wff = |- ( ph -> ( ph \/ ph ) ) ;
}

proof of pm2_07 {
	step 1 : wff = thm olc () |- ( ph -> ( ph \/ ph ) ) ;
	qed prop 1 = step 1 ;
}

theorem pm2_45 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph \/ ps ) -> -. ph ) ;
}

proof of pm2_45 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ( ph \/ ps ) -> -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_46 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph \/ ps ) -> -. ps ) ;
}

proof of pm2_46 {
	step 1 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ( ph \/ ps ) -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_47 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph \/ ps ) -> ( -. ph \/ ps ) ) ;
}

proof of pm2_47 {
	step 1 : wff = thm pm2_45 () |- ( -. ( ph \/ ps ) -> -. ph ) ;
	step 2 : wff = thm orcd (step 1) |- ( -. ( ph \/ ps ) -> ( -. ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_48 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph \/ ps ) -> ( ph \/ -. ps ) ) ;
}

proof of pm2_48 {
	step 1 : wff = thm pm2_46 () |- ( -. ( ph \/ ps ) -> -. ps ) ;
	step 2 : wff = thm olcd (step 1) |- ( -. ( ph \/ ps ) -> ( ph \/ -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_49 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph \/ ps ) -> ( -. ph \/ -. ps ) ) ;
}

proof of pm2_49 {
	step 1 : wff = thm pm2_46 () |- ( -. ( ph \/ ps ) -> -. ps ) ;
	step 2 : wff = thm olcd (step 1) |- ( -. ( ph \/ ps ) -> ( -. ph \/ -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_67 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) -> ps ) -> ( ph -> ps ) ) ;
}

proof of pm2_67 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph \/ ps ) -> ps ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> ( ph /\ ps ) ) ) ;
}

proof of pm3_2 {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( -. ( ph -> -. ps ) -> ( ph /\ ps ) ) ;
	step 3 : wff = thm expi (step 2) |- ( ph -> ( ps -> ( ph /\ ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm3_21 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> ( ps /\ ph ) ) ) ;
}

proof of pm3_21 {
	step 1 : wff = thm pm3_2 () |- ( ps -> ( ph -> ( ps /\ ph ) ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ph -> ( ps -> ( ps /\ ph ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_2i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( ph /\ ps ) ;
}

proof of pm3_2i {
	step 1 : wff = thm pm3_2 () |- ( ph -> ( ps -> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm mp2 (hyp 1, hyp 2, step 1) |- ( ph /\ ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_37 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ -. ch ) -> -. ps ) ) ;
}

proof of pm3_37 {
	step 1 : wff = thm pm3_21 () |- ( ps -> ( ph -> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm imim1d (step 1) |- ( ps -> ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ( ( ph /\ ps ) -> ch ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 4 : wff = thm iman () |- ( ( ph -> ch ) <-> -. ( ph /\ -. ch ) ) ;
	step 5 : wff = thm syl6ib (step 3, step 4) |- ( ( ( ph /\ ps ) -> ch ) -> ( ps -> -. ( ph /\ -. ch ) ) ) ;
	step 6 : wff = thm con2d (step 5) |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ -. ch ) -> -. ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm3_43i (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ph -> ch ) -> ( ph -> ( ps /\ ch ) ) ) ) ;
}

proof of pm3_43i {
	step 1 : wff = thm pm3_2 () |- ( ps -> ( ch -> ( ps /\ ch ) ) ) ;
	step 2 : wff = thm imim3i (step 1) |- ( ( ph -> ps ) -> ( ( ph -> ch ) -> ( ph -> ( ps /\ ch ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem jca (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ch ) ) ;
}

proof of jca {
	step 1 : wff = thm jc (hyp 1, hyp 2) |- ( ph -> -. ( ps -> -. ch ) ) ;
	step 2 : wff = def df-an () |- ( ( ps /\ ch ) <-> -. ( ps -> -. ch ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> ( ps /\ ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem jca31 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	hyp 3 : wff = |- ( ph -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) /\ th ) ) ;
}

proof of jca31 {
	step 1 : wff = thm jca (hyp 1, hyp 2) |- ( ph -> ( ps /\ ch ) ) ;
	step 2 : wff = thm jca (step 1, hyp 3) |- ( ph -> ( ( ps /\ ch ) /\ th ) ) ;
	qed prop 1 = step 2 ;
}

theorem jca32 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	hyp 3 : wff = |- ( ph -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ( ch /\ th ) ) ) ;
}

proof of jca32 {
	step 1 : wff = thm jca (hyp 2, hyp 3) |- ( ph -> ( ch /\ th ) ) ;
	step 2 : wff = thm jca (hyp 1, step 1) |- ( ph -> ( ps /\ ( ch /\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem jcai (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ch ) ) ;
}

proof of jcai {
	step 1 : wff = thm mpd (hyp 1, hyp 2) |- ( ph -> ch ) ;
	step 2 : wff = thm jca (hyp 1, step 1) |- ( ph -> ( ps /\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem jctl (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ph ) ) ;
}

proof of jctl {
	step 1 : wff = thm a1i (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm id () |- ( ph -> ph ) ;
	step 3 : wff = thm jca (step 1, step 2) |- ( ph -> ( ps /\ ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem jctr (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ph /\ ps ) ) ;
}

proof of jctr {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm a1i (hyp 1) |- ( ph -> ps ) ;
	step 3 : wff = thm jca (step 1, step 2) |- ( ph -> ( ph /\ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem jctil (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch /\ ps ) ) ;
}

proof of jctil {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ch ) ;
	step 2 : wff = thm jca (step 1, hyp 1) |- ( ph -> ( ch /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem jctir (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ch ) ) ;
}

proof of jctir {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ch ) ;
	step 2 : wff = thm jca (hyp 1, step 1) |- ( ph -> ( ps /\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancl (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) ;
}

proof of ancl {
	step 1 : wff = thm pm3_2 () |- ( ph -> ( ps -> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancr (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ph -> ( ps /\ ph ) ) ) ;
}

proof of ancr {
	step 1 : wff = thm pm3_21 () |- ( ph -> ( ps -> ( ps /\ ph ) ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( ph -> ps ) -> ( ph -> ( ps /\ ph ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancli (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ph /\ ps ) ) ;
}

proof of ancli {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm jca (step 1, hyp 1) |- ( ph -> ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancri (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ph ) ) ;
}

proof of ancri {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm jca (hyp 1, step 1) |- ( ph -> ( ps /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancld (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ps /\ ch ) ) ) ;
}

proof of ancld {
	step 1 : wff = thm ancl () |- ( ( ps -> ch ) -> ( ps -> ( ps /\ ch ) ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps -> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancrd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch /\ ps ) ) ) ;
}

proof of ancrd {
	step 1 : wff = thm ancr () |- ( ( ps -> ch ) -> ( ps -> ( ch /\ ps ) ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( ps -> ( ch /\ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem anc2l (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) ;
}

proof of anc2l {
	step 1 : wff = thm pm3_2 () |- ( ph -> ( ch -> ( ph /\ ch ) ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( ph -> ( ( ps -> ch ) -> ( ps -> ( ph /\ ch ) ) ) ) ;
	step 3 : wff = thm a2i (step 2) |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem anc2r (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ch /\ ph ) ) ) ) ;
}

proof of anc2r {
	step 1 : wff = thm pm3_21 () |- ( ph -> ( ch -> ( ch /\ ph ) ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( ph -> ( ( ps -> ch ) -> ( ps -> ( ch /\ ph ) ) ) ) ;
	step 3 : wff = thm a2i (step 2) |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ch /\ ph ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem anc2li (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ph /\ ch ) ) ) ;
}

proof of anc2li {
	step 1 : wff = thm anc2l () |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ph -> ( ps -> ( ph /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem anc2ri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch /\ ph ) ) ) ;
}

proof of anc2ri {
	step 1 : wff = thm anc2r () |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ch /\ ph ) ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ph -> ( ps -> ( ch /\ ph ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem anor (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) ;
}

proof of anor {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm pm4_62 () |- ( ( ph -> -. ps ) <-> ( -. ph \/ -. ps ) ) ;
	step 3 : wff = thm notbii (step 2) |- ( -. ( ph -> -. ps ) <-> -. ( -. ph \/ -. ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem ianor (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) ;
}

proof of ianor {
	step 1 : wff = thm anor () |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) ;
	step 2 : wff = thm notbii (step 1) |- ( -. ( ph /\ ps ) <-> -. -. ( -. ph \/ -. ps ) ) ;
	step 3 : wff = thm notnot () |- ( ( -. ph \/ -. ps ) <-> -. -. ( -. ph \/ -. ps ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem ioran (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
}

proof of ioran {
	step 1 : wff = thm notnot () |- ( ph <-> -. -. ph ) ;
	step 2 : wff = thm notnot () |- ( ps <-> -. -. ps ) ;
	step 3 : wff = thm orbi12i (step 1, step 2) |- ( ( ph \/ ps ) <-> ( -. -. ph \/ -. -. ps ) ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. ( ph \/ ps ) <-> -. ( -. -. ph \/ -. -. ps ) ) ;
	step 5 : wff = thm anor () |- ( ( -. ph /\ -. ps ) <-> -. ( -. -. ph \/ -. -. ps ) ) ;
	step 6 : wff = thm bitr4i (step 4, step 5) |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm4_52 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) ;
}

proof of pm4_52 {
	step 1 : wff = thm anor () |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ -. -. ps ) ) ;
	step 2 : wff = thm notnot () |- ( ps <-> -. -. ps ) ;
	step 3 : wff = thm orbi2i (step 2) |- ( ( -. ph \/ ps ) <-> ( -. ph \/ -. -. ps ) ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. ( -. ph \/ ps ) <-> -. ( -. ph \/ -. -. ps ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm4_53 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph /\ -. ps ) <-> ( -. ph \/ ps ) ) ;
}

proof of pm4_53 {
	step 1 : wff = thm pm4_52 () |- ( ( ph /\ -. ps ) <-> -. ( -. ph \/ ps ) ) ;
	step 2 : wff = thm con2bii (step 1) |- ( ( -. ph \/ ps ) <-> -. ( ph /\ -. ps ) ) ;
	step 3 : wff = thm bicomi (step 2) |- ( -. ( ph /\ -. ps ) <-> ( -. ph \/ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_54 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) ;
}

proof of pm4_54 {
	step 1 : wff = thm anor () |- ( ( -. ph /\ ps ) <-> -. ( -. -. ph \/ -. ps ) ) ;
	step 2 : wff = thm notnot () |- ( ph <-> -. -. ph ) ;
	step 3 : wff = thm orbi1i (step 2) |- ( ( ph \/ -. ps ) <-> ( -. -. ph \/ -. ps ) ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. ( ph \/ -. ps ) <-> -. ( -. -. ph \/ -. ps ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm4_55 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( -. ph /\ ps ) <-> ( ph \/ -. ps ) ) ;
}

proof of pm4_55 {
	step 1 : wff = thm pm4_54 () |- ( ( -. ph /\ ps ) <-> -. ( ph \/ -. ps ) ) ;
	step 2 : wff = thm con2bii (step 1) |- ( ( ph \/ -. ps ) <-> -. ( -. ph /\ ps ) ) ;
	step 3 : wff = thm bicomi (step 2) |- ( -. ( -. ph /\ ps ) <-> ( ph \/ -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_56 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph /\ -. ps ) <-> -. ( ph \/ ps ) ) ;
}

proof of pm4_56 {
	step 1 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ( -. ph /\ -. ps ) <-> -. ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem oran (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) ;
}

proof of oran {
	step 1 : wff = thm notnot () |- ( ( ph \/ ps ) <-> -. -. ( ph \/ ps ) ) ;
	step 2 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 3 : wff = thm notbii (step 2) |- ( -. -. ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm4_57 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( -. ph /\ -. ps ) <-> ( ph \/ ps ) ) ;
}

proof of pm4_57 {
	step 1 : wff = thm oran () |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( -. ( -. ph /\ -. ps ) <-> ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) -> -. ( -. ph \/ -. ps ) ) ;
}

proof of pm3_1 {
	step 1 : wff = thm anor () |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph /\ ps ) -> -. ( -. ph \/ -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_11 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) ;
}

proof of pm3_11 {
	step 1 : wff = thm anor () |- ( ( ph /\ ps ) <-> -. ( -. ph \/ -. ps ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_12 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph \/ -. ps ) \/ ( ph /\ ps ) ) ;
}

proof of pm3_12 {
	step 1 : wff = thm pm3_11 () |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm orri (step 1) |- ( ( -. ph \/ -. ps ) \/ ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_13 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph /\ ps ) -> ( -. ph \/ -. ps ) ) ;
}

proof of pm3_13 {
	step 1 : wff = thm pm3_11 () |- ( -. ( -. ph \/ -. ps ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm con1i (step 1) |- ( -. ( ph /\ ps ) -> ( -. ph \/ -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_14 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph \/ -. ps ) -> -. ( ph /\ ps ) ) ;
}

proof of pm3_14 {
	step 1 : wff = thm pm3_1 () |- ( ( ph /\ ps ) -> -. ( -. ph \/ -. ps ) ) ;
	step 2 : wff = thm con2i (step 1) |- ( ( -. ph \/ -. ps ) -> -. ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_26 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) -> ph ) ;
}

proof of pm3_26 {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm pm3_26im () |- ( -. ( ph -> -. ps ) -> ph ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( ( ph /\ ps ) -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem pm3_26i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph /\ ps ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of pm3_26i {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem pm3_26d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of pm3_26d {
	step 1 : wff = thm pm3_26 () |- ( ( ps /\ ch ) -> ps ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_26bi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of pm3_26bi {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ( ps /\ ch ) ) ;
	step 2 : wff = thm pm3_26d (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_27 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) -> ps ) ;
}

proof of pm3_27 {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm pm3_27im () |- ( -. ( ph -> -. ps ) -> ps ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( ( ph /\ ps ) -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem pm3_27i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph /\ ps ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of pm3_27i {
	step 1 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem pm3_27d (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of pm3_27d {
	step 1 : wff = thm pm3_27 () |- ( ( ps /\ ch ) -> ch ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_27bi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of pm3_27bi {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ( ps /\ ch ) ) ;
	step 2 : wff = thm pm3_27d (step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_41 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ch ) -> ( ( ph /\ ps ) -> ch ) ) ;
}

proof of pm3_41 {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ph -> ch ) -> ( ( ph /\ ps ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_42 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ( ph /\ ps ) -> ch ) ) ;
}

proof of pm3_42 {
	step 1 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ps -> ch ) -> ( ( ph /\ ps ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem anclb (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph -> ( ph /\ ps ) ) ) ;
}

proof of anclb {
	step 1 : wff = thm ancl () |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 3 : wff = thm imim2i (step 2) |- ( ( ph -> ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( ( ph -> ps ) <-> ( ph -> ( ph /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem ancrb (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph -> ( ps /\ ph ) ) ) ;
}

proof of ancrb {
	step 1 : wff = thm ancr () |- ( ( ph -> ps ) -> ( ph -> ( ps /\ ph ) ) ) ;
	step 2 : wff = thm pm3_26 () |- ( ( ps /\ ph ) -> ps ) ;
	step 3 : wff = thm imim2i (step 2) |- ( ( ph -> ( ps /\ ph ) ) -> ( ph -> ps ) ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( ( ph -> ps ) <-> ( ph -> ( ps /\ ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm3_4 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ph -> ps ) ) ;
}

proof of pm3_4 {
	step 1 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 2 : wff = thm a1d (step 1) |- ( ( ph /\ ps ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_45im (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph <-> ( ph /\ ( ps -> ph ) ) ) ;
}

proof of pm4_45im {
	step 1 : wff = axm ax-1 () |- ( ph -> ( ps -> ph ) ) ;
	step 2 : wff = thm ancli (step 1) |- ( ph -> ( ph /\ ( ps -> ph ) ) ) ;
	step 3 : wff = thm pm3_26 () |- ( ( ph /\ ( ps -> ph ) ) -> ph ) ;
	step 4 : wff = thm impbii (step 2, step 3) |- ( ph <-> ( ph /\ ( ps -> ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem anim12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> ( ps /\ th ) ) ;
}

proof of anim12i {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ch ) -> ph ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ( ph /\ ch ) -> ps ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ph /\ ch ) -> ch ) ;
	step 4 : wff = thm syl (step 3, hyp 2) |- ( ( ph /\ ch ) -> th ) ;
	step 5 : wff = thm jca (step 2, step 4) |- ( ( ph /\ ch ) -> ( ps /\ th ) ) ;
	qed prop 1 = step 5 ;
}

theorem anim1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> ( ps /\ ch ) ) ;
}

proof of anim1i {
	step 1 : wff = thm id () |- ( ch -> ch ) ;
	step 2 : wff = thm anim12i (hyp 1, step 1) |- ( ( ph /\ ch ) -> ( ps /\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem anim2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) ;
}

proof of anim2i {
	step 1 : wff = thm id () |- ( ch -> ch ) ;
	step 2 : wff = thm anim12i (step 1, hyp 1) |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem orim12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch ) -> ( ps \/ th ) ) ;
}

proof of orim12i {
	step 1 : wff = thm con3i (hyp 1) |- ( -. ps -> -. ph ) ;
	step 2 : wff = thm con3i (hyp 2) |- ( -. th -> -. ch ) ;
	step 3 : wff = thm anim12i (step 1, step 2) |- ( ( -. ps /\ -. th ) -> ( -. ph /\ -. ch ) ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. ( -. ph /\ -. ch ) -> -. ( -. ps /\ -. th ) ) ;
	step 5 : wff = thm oran () |- ( ( ph \/ ch ) <-> -. ( -. ph /\ -. ch ) ) ;
	step 6 : wff = thm oran () |- ( ( ps \/ th ) <-> -. ( -. ps /\ -. th ) ) ;
	step 7 : wff = thm 3imtr4i (step 4, step 5, step 6) |- ( ( ph \/ ch ) -> ( ps \/ th ) ) ;
	qed prop 1 = step 7 ;
}

theorem orim1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch ) -> ( ps \/ ch ) ) ;
}

proof of orim1i {
	step 1 : wff = thm id () |- ( ch -> ch ) ;
	step 2 : wff = thm orim12i (hyp 1, step 1) |- ( ( ph \/ ch ) -> ( ps \/ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem orim2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch \/ ph ) -> ( ch \/ ps ) ) ;
}

proof of orim2i {
	step 1 : wff = thm id () |- ( ch -> ch ) ;
	step 2 : wff = thm orim12i (step 1, hyp 1) |- ( ( ch \/ ph ) -> ( ch \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_3 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps \/ ch ) ) -> ( ph \/ ( ch \/ ps ) ) ) ;
}

proof of pm2_3 {
	step 1 : wff = thm pm1_4 () |- ( ( ps \/ ch ) -> ( ch \/ ps ) ) ;
	step 2 : wff = thm orim2i (step 1) |- ( ( ph \/ ( ps \/ ch ) ) -> ( ph \/ ( ch \/ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem jao (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
}

proof of jao {
	step 1 : wff = thm con3 () |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
	step 2 : wff = thm pm3_43i () |- ( ( -. ps -> -. ph ) -> ( ( -. ps -> -. ch ) -> ( -. ps -> ( -. ph /\ -. ch ) ) ) ) ;
	step 3 : wff = thm con1 () |- ( ( -. ps -> ( -. ph /\ -. ch ) ) -> ( -. ( -. ph /\ -. ch ) -> ps ) ) ;
	step 4 : wff = thm syl6 (step 2, step 3) |- ( ( -. ps -> -. ph ) -> ( ( -. ps -> -. ch ) -> ( -. ( -. ph /\ -. ch ) -> ps ) ) ) ;
	step 5 : wff = thm oran () |- ( ( ph \/ ch ) <-> -. ( -. ph /\ -. ch ) ) ;
	step 6 : wff = thm syl7ib (step 4, step 5) |- ( ( -. ps -> -. ph ) -> ( ( -. ps -> -. ch ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
	step 7 : wff = thm con3 () |- ( ( ch -> ps ) -> ( -. ps -> -. ch ) ) ;
	step 8 : wff = thm syl5 (step 6, step 7) |- ( ( -. ps -> -. ph ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
	step 9 : wff = thm syl (step 1, step 8) |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem jaoi (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch ) -> ps ) ;
}

proof of jaoi {
	step 1 : wff = thm jao () |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
	step 2 : wff = thm mp2 (hyp 1, hyp 2, step 1) |- ( ( ph \/ ch ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_41 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ps \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) ;
}

proof of pm2_41 {
	step 1 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 2 : wff = thm id () |- ( ( ph \/ ps ) -> ( ph \/ ps ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( ps \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_42 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph \/ ( ph -> ps ) ) -> ( ph -> ps ) ) ;
}

proof of pm2_42 {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 2 : wff = thm id () |- ( ( ph -> ps ) -> ( ph -> ps ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( -. ph \/ ( ph -> ps ) ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_4 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) ;
}

proof of pm2_4 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm id () |- ( ( ph \/ ps ) -> ( ph \/ ps ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( ph \/ ( ph \/ ps ) ) -> ( ph \/ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_44 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph <-> ( ph \/ ( ph /\ ps ) ) ) ;
}

proof of pm4_44 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ( ph /\ ps ) ) ) ;
	step 2 : wff = thm id () |- ( ph -> ph ) ;
	step 3 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 4 : wff = thm jaoi (step 2, step 3) |- ( ( ph \/ ( ph /\ ps ) ) -> ph ) ;
	step 5 : wff = thm impbii (step 1, step 4) |- ( ph <-> ( ph \/ ( ph /\ ps ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm5_63 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) <-> ( ph \/ ( -. ph /\ ps ) ) ) ;
}

proof of pm5_63 {
	step 1 : wff = thm pm2_53 () |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) ;
	step 2 : wff = thm ancld (step 1) |- ( ( ph \/ ps ) -> ( -. ph -> ( -. ph /\ ps ) ) ) ;
	step 3 : wff = thm orrd (step 2) |- ( ( ph \/ ps ) -> ( ph \/ ( -. ph /\ ps ) ) ) ;
	step 4 : wff = thm pm2_24 () |- ( ph -> ( -. ph -> ps ) ) ;
	step 5 : wff = thm pm3_4 () |- ( ( -. ph /\ ps ) -> ( -. ph -> ps ) ) ;
	step 6 : wff = thm jaoi (step 4, step 5) |- ( ( ph \/ ( -. ph /\ ps ) ) -> ( -. ph -> ps ) ) ;
	step 7 : wff = thm orrd (step 6) |- ( ( ph \/ ( -. ph /\ ps ) ) -> ( ph \/ ps ) ) ;
	step 8 : wff = thm impbii (step 3, step 7) |- ( ( ph \/ ps ) <-> ( ph \/ ( -. ph /\ ps ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem impexp (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
}

proof of impexp {
	step 1 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 2 : wff = thm imbi1i (step 1) |- ( ( ( ph /\ ps ) -> ch ) <-> ( -. ( ph -> -. ps ) -> ch ) ) ;
	step 3 : wff = thm expt () |- ( ( -. ( ph -> -. ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 4 : wff = thm impt () |- ( ( ph -> ( ps -> ch ) ) -> ( -. ( ph -> -. ps ) -> ch ) ) ;
	step 5 : wff = thm impbii (step 3, step 4) |- ( ( -. ( ph -> -. ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 6 : wff = thm bitri (step 2, step 5) |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm3_3 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) ;
}

proof of pm3_3 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_31 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph /\ ps ) -> ch ) ) ;
}

proof of pm3_31 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph /\ ps ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem imp (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of imp {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem impcom (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> ch ) ;
}

proof of impcom {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ps /\ ph ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_14 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ -. ch ) -> -. ps ) ) ;
}

proof of pm4_14 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm bi2_04 () |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ( ph /\ ps ) -> ch ) <-> ( ps -> ( ph -> ch ) ) ) ;
	step 4 : wff = thm iman () |- ( ( ph -> ch ) <-> -. ( ph /\ -. ch ) ) ;
	step 5 : wff = thm imbi2i (step 4) |- ( ( ps -> ( ph -> ch ) ) <-> ( ps -> -. ( ph /\ -. ch ) ) ) ;
	step 6 : wff = thm con2b () |- ( ( ps -> -. ( ph /\ -. ch ) ) <-> ( ( ph /\ -. ch ) -> -. ps ) ) ;
	step 7 : wff = thm 3bitri (step 3, step 5, step 6) |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ -. ch ) -> -. ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem pm4_15 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ( ps /\ ch ) -> -. ph ) ) ;
}

proof of pm4_15 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ph -> ( ps -> -. ch ) ) ) ;
	step 2 : wff = thm imnan () |- ( ( ps -> -. ch ) <-> -. ( ps /\ ch ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( ph -> ( ps -> -. ch ) ) <-> ( ph -> -. ( ps /\ ch ) ) ) ;
	step 4 : wff = thm con2b () |- ( ( ph -> -. ( ps /\ ch ) ) <-> ( ( ps /\ ch ) -> -. ph ) ) ;
	step 5 : wff = thm 3bitri (step 1, step 3, step 4) |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ( ps /\ ch ) -> -. ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm4_78 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <-> ( ph -> ( ps \/ ch ) ) ) ;
}

proof of pm4_78 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ -. ps ) -> ( ph -> ch ) ) <-> ( ph -> ( -. ps -> ( ph -> ch ) ) ) ) ;
	step 2 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( ( ph /\ -. ps ) -> ( ph -> ch ) ) <-> ( -. ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 4 : wff = thm bi2_04 () |- ( ( -. ps -> ( ph -> ch ) ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 5 : wff = thm imbi2i (step 4) |- ( ( ph -> ( -. ps -> ( ph -> ch ) ) ) <-> ( ph -> ( ph -> ( -. ps -> ch ) ) ) ) ;
	step 6 : wff = thm pm5_4 () |- ( ( ph -> ( ph -> ( -. ps -> ch ) ) ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 7 : wff = thm bitri (step 5, step 6) |- ( ( ph -> ( -. ps -> ( ph -> ch ) ) ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 8 : wff = thm 3bitr3i (step 1, step 3, step 7) |- ( ( -. ( ph -> ps ) -> ( ph -> ch ) ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 9 : wff = def df-or () |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <-> ( -. ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 10 : wff = def df-or () |- ( ( ps \/ ch ) <-> ( -. ps -> ch ) ) ;
	step 11 : wff = thm imbi2i (step 10) |- ( ( ph -> ( ps \/ ch ) ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 12 : wff = thm 3bitr4i (step 8, step 9, step 11) |- ( ( ( ph -> ps ) \/ ( ph -> ch ) ) <-> ( ph -> ( ps \/ ch ) ) ) ;
	qed prop 1 = step 12 ;
}

theorem pm4_79 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <-> ( ( ps /\ ch ) -> ph ) ) ;
}

proof of pm4_79 {
	step 1 : wff = thm pm4_78 () |- ( ( ( -. ph -> -. ps ) \/ ( -. ph -> -. ch ) ) <-> ( -. ph -> ( -. ps \/ -. ch ) ) ) ;
	step 2 : wff = thm ianor () |- ( -. ( ps /\ ch ) <-> ( -. ps \/ -. ch ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( -. ph -> -. ( ps /\ ch ) ) <-> ( -. ph -> ( -. ps \/ -. ch ) ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( ( -. ph -> -. ps ) \/ ( -. ph -> -. ch ) ) <-> ( -. ph -> -. ( ps /\ ch ) ) ) ;
	step 5 : wff = thm con34b () |- ( ( ps -> ph ) <-> ( -. ph -> -. ps ) ) ;
	step 6 : wff = thm con34b () |- ( ( ch -> ph ) <-> ( -. ph -> -. ch ) ) ;
	step 7 : wff = thm orbi12i (step 5, step 6) |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <-> ( ( -. ph -> -. ps ) \/ ( -. ph -> -. ch ) ) ) ;
	step 8 : wff = thm con34b () |- ( ( ( ps /\ ch ) -> ph ) <-> ( -. ph -> -. ( ps /\ ch ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 4, step 7, step 8) |- ( ( ( ps -> ph ) \/ ( ch -> ph ) ) <-> ( ( ps /\ ch ) -> ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem pm4_87 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) /\ ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ) /\ ( ( ps -> ( ph -> ch ) ) <-> ( ( ps /\ ph ) -> ch ) ) ) ;
}

proof of pm4_87 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm bi2_04 () |- ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm pm3_2i (step 1, step 2) |- ( ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) /\ ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ) ;
	step 4 : wff = thm impexp () |- ( ( ( ps /\ ph ) -> ch ) <-> ( ps -> ( ph -> ch ) ) ) ;
	step 5 : wff = thm bicomi (step 4) |- ( ( ps -> ( ph -> ch ) ) <-> ( ( ps /\ ph ) -> ch ) ) ;
	step 6 : wff = thm pm3_2i (step 3, step 5) |- ( ( ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) /\ ( ( ph -> ( ps -> ch ) ) <-> ( ps -> ( ph -> ch ) ) ) ) /\ ( ( ps -> ( ph -> ch ) ) <-> ( ( ps /\ ph ) -> ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm3_33 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ps -> ch ) ) -> ( ph -> ch ) ) ;
}

proof of pm3_33 {
	step 1 : wff = thm imim1 () |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ph -> ps ) /\ ( ps -> ch ) ) -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_34 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ps -> ch ) /\ ( ph -> ps ) ) -> ( ph -> ch ) ) ;
}

proof of pm3_34 {
	step 1 : wff = thm imim2 () |- ( ( ps -> ch ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ps -> ch ) /\ ( ph -> ps ) ) -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_35 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ph -> ps ) ) -> ps ) ;
}

proof of pm3_35 {
	step 1 : wff = thm pm2_27 () |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ( ph -> ps ) ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_31 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ch /\ ( ph -> ps ) ) -> ( ph -> ( ps /\ ch ) ) ) ;
}

proof of pm5_31 {
	step 1 : wff = thm pm3_21 () |- ( ch -> ( ps -> ( ps /\ ch ) ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( ch -> ( ( ph -> ps ) -> ( ph -> ( ps /\ ch ) ) ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ch /\ ( ph -> ps ) ) -> ( ph -> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem imp3a (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
}

proof of imp3a {
	step 1 : wff = thm impexp () |- ( ( ( ps /\ ch ) -> th ) <-> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem imp31 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
}

proof of imp31 {
	step 1 : wff = thm imp (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem imp32 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
}

proof of imp32 {
	step 1 : wff = thm imp3a (hyp 1) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem imp4a (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
}

proof of imp4a {
	step 1 : wff = thm impexp () |- ( ( ( ch /\ th ) -> ta ) <-> ( ch -> ( th -> ta ) ) ) ;
	step 2 : wff = thm syl6ibr (hyp 1, step 1) |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imp4b (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) ;
}

proof of imp4b {
	step 1 : wff = thm imp4a (hyp 1) |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem imp4c (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) ;
}

proof of imp4c {
	step 1 : wff = thm imp3a (hyp 1) |- ( ph -> ( ( ps /\ ch ) -> ( th -> ta ) ) ) ;
	step 2 : wff = thm imp3a (step 1) |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem imp4d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) ;
}

proof of imp4d {
	step 1 : wff = thm imp4a (hyp 1) |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
	step 2 : wff = thm imp3a (step 1) |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem imp41 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) ;
}

proof of imp41 {
	step 1 : wff = thm imp (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> ( th -> ta ) ) ) ;
	step 2 : wff = thm imp31 (step 1) |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem imp42 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) ;
}

proof of imp42 {
	step 1 : wff = thm imp32 (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> ( th -> ta ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem imp43 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
}

proof of imp43 {
	step 1 : wff = thm imp4b (hyp 1) |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem imp44 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) ;
}

proof of imp44 {
	step 1 : wff = thm imp4c (hyp 1) |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem imp45 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) ;
}

proof of imp45 {
	step 1 : wff = thm imp4d (hyp 1) |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem ex (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of ex {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> ch ) <-> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem expcom (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph -> ch ) ) ;
}

proof of expcom {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ps -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem expimpd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
}

proof of expimpd {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp3a (step 1) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp3a (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
}

proof of exp3a {
	step 1 : wff = thm impexp () |- ( ( ( ps /\ ch ) -> th ) <-> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem expdimp (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
}

proof of expdimp {
	step 1 : wff = thm exp3a (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp31 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
}

proof of exp31 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm ex (step 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp32 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
}

proof of exp32 {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	step 2 : wff = thm exp3a (step 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp4a (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp4a {
	step 1 : wff = thm impexp () |- ( ( ( ch /\ th ) -> ta ) <-> ( ch -> ( th -> ta ) ) ) ;
	step 2 : wff = thm syl6ib (hyp 1, step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp4b (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp4b {
	step 1 : wff = thm exp3a (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> ( th -> ta ) ) ) ;
	step 2 : wff = thm ex (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp4c (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ( ps /\ ch ) /\ th ) -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp4c {
	step 1 : wff = thm exp3a (hyp 1) |- ( ph -> ( ( ps /\ ch ) -> ( th -> ta ) ) ) ;
	step 2 : wff = thm exp3a (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp4d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ( ch /\ th ) ) -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp4d {
	step 1 : wff = thm exp3a (hyp 1) |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
	step 2 : wff = thm exp4a (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp41 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp41 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ( ph /\ ps ) /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm exp31 (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp42 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp42 {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ( ps /\ ch ) -> ( th -> ta ) ) ) ;
	step 2 : wff = thm exp3a (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp43 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp43 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) ;
	step 2 : wff = thm exp4b (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp44 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp44 {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ( ps /\ ch ) -> ( th -> ta ) ) ) ;
	step 2 : wff = thm exp3a (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem exp45 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of exp45 {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ( ch /\ th ) -> ta ) ) ) ;
	step 2 : wff = thm exp4a (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem impac (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ch /\ ps ) ) ;
}

proof of impac {
	step 1 : wff = thm ancrd (hyp 1) |- ( ph -> ( ps -> ( ch /\ ps ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ps ) -> ( ch /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem adantl (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ph ) -> ps ) ;
}

proof of adantl {
	step 1 : wff = thm a1i (hyp 1) |- ( ch -> ( ph -> ps ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ch /\ ph ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem adantr (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> ps ) ;
}

proof of adantr {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ch ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem adantld (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th /\ ps ) -> ch ) ) ;
}

proof of adantld {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( th -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm imp3a (step 1) |- ( ph -> ( ( th /\ ps ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem adantrd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th ) -> ch ) ) ;
}

proof of adantrd {
	step 1 : wff = thm pm3_26 () |- ( ( ps /\ th ) -> ps ) ;
	step 2 : wff = thm syl5 (hyp 1, step 1) |- ( ph -> ( ( ps /\ th ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem adantll (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( th /\ ph ) /\ ps ) -> ch ) ;
}

proof of adantll {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( th /\ ph ) -> ( ps -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( th /\ ph ) /\ ps ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem adantlr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ th ) /\ ps ) -> ch ) ;
}

proof of adantlr {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ph /\ th ) -> ( ps -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ th ) /\ ps ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem adantrl (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( th /\ ps ) ) -> ch ) ;
}

proof of adantrl {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantld (step 1) |- ( ph -> ( ( th /\ ps ) -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ( th /\ ps ) ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem adantrr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ th ) ) -> ch ) ;
}

proof of adantrr {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantrd (step 1) |- ( ph -> ( ( ps /\ th ) -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ( ps /\ th ) ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem adantlll (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ( ta /\ ph ) /\ ps ) /\ ch ) -> th ) ;
}

proof of adantlll {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1i (step 1) |- ( ta -> ( ph -> ( ps -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp41 (step 2) |- ( ( ( ( ta /\ ph ) /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantllr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ( ph /\ ta ) /\ ps ) /\ ch ) -> th ) ;
}

proof of adantllr {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ph -> ( ta -> ( ps -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp41 (step 2) |- ( ( ( ( ph /\ ta ) /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantlrl (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ( ta /\ ps ) ) /\ ch ) -> th ) ;
}

proof of adantlrl {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ph -> ( ta -> ( ps -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp42 (step 2) |- ( ( ( ph /\ ( ta /\ ps ) ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantlrr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ( ps /\ ta ) ) /\ ch ) -> th ) ;
}

proof of adantlrr {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1dd (step 1) |- ( ph -> ( ps -> ( ta -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp42 (step 2) |- ( ( ( ph /\ ( ps /\ ta ) ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantrll (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ( ta /\ ps ) /\ ch ) ) -> th ) ;
}

proof of adantrll {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ph -> ( ta -> ( ps -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp44 (step 2) |- ( ( ph /\ ( ( ta /\ ps ) /\ ch ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantrlr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ( ps /\ ta ) /\ ch ) ) -> th ) ;
}

proof of adantrlr {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1dd (step 1) |- ( ph -> ( ps -> ( ta -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp44 (step 2) |- ( ( ph /\ ( ( ps /\ ta ) /\ ch ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantrrl (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ( ta /\ ch ) ) ) -> th ) ;
}

proof of adantrrl {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1dd (step 1) |- ( ph -> ( ps -> ( ta -> ( ch -> th ) ) ) ) ;
	step 3 : wff = thm imp45 (step 2) |- ( ( ph /\ ( ps /\ ( ta /\ ch ) ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem adantrrr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ( ch /\ ta ) ) ) -> th ) ;
}

proof of adantrrr {
	step 1 : wff = thm a1d (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> ( ta -> th ) ) ;
	step 2 : wff = thm exp32 (step 1) |- ( ph -> ( ps -> ( ch -> ( ta -> th ) ) ) ) ;
	step 3 : wff = thm imp45 (step 2) |- ( ( ph /\ ( ps /\ ( ch /\ ta ) ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem ad2antrr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ch ) /\ th ) -> ps ) ;
}

proof of ad2antrr {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ ch ) -> ps ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ( ph /\ ch ) /\ th ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ad2antlr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ch /\ ph ) /\ th ) -> ps ) ;
}

proof of ad2antlr {
	step 1 : wff = thm adantl (hyp 1) |- ( ( ch /\ ph ) -> ps ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ( ch /\ ph ) /\ th ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ad2antrl (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ( ph /\ th ) ) -> ps ) ;
}

proof of ad2antrl {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ps ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( ch /\ ( ph /\ th ) ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ad2antll (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ( th /\ ph ) ) -> ps ) ;
}

proof of ad2antll {
	step 1 : wff = thm adantl (hyp 1) |- ( ( th /\ ph ) -> ps ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( ch /\ ( th /\ ph ) ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ad2ant2l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( th /\ ph ) /\ ( ta /\ ps ) ) -> ch ) ;
}

proof of ad2ant2l {
	step 1 : wff = thm adantrl (hyp 1) |- ( ( ph /\ ( ta /\ ps ) ) -> ch ) ;
	step 2 : wff = thm adantll (step 1) |- ( ( ( th /\ ph ) /\ ( ta /\ ps ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem ad2ant2r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) -> ch ) ;
}

proof of ad2ant2r {
	step 1 : wff = thm adantrr (hyp 1) |- ( ( ph /\ ( ps /\ ta ) ) -> ch ) ;
	step 2 : wff = thm adantlr (step 1) |- ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem ad2ant2lr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( th /\ ph ) /\ ( ps /\ ta ) ) -> ch ) ;
}

proof of ad2ant2lr {
	step 1 : wff = thm adantrr (hyp 1) |- ( ( ph /\ ( ps /\ ta ) ) -> ch ) ;
	step 2 : wff = thm adantll (step 1) |- ( ( ( th /\ ph ) /\ ( ps /\ ta ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem ad2ant2rl (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ th ) /\ ( ta /\ ps ) ) -> ch ) ;
}

proof of ad2ant2rl {
	step 1 : wff = thm adantrl (hyp 1) |- ( ( ph /\ ( ta /\ ps ) ) -> ch ) ;
	step 2 : wff = thm adantlr (step 1) |- ( ( ( ph /\ th ) /\ ( ta /\ ps ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem simpll (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> ph ) ;
}

proof of simpll {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm ad2antrr (step 1) |- ( ( ( ph /\ ps ) /\ ch ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem simplr (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> ps ) ;
}

proof of simplr {
	step 1 : wff = thm id () |- ( ps -> ps ) ;
	step 2 : wff = thm ad2antlr (step 1) |- ( ( ( ph /\ ps ) /\ ch ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem simprl (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> ps ) ;
}

proof of simprl {
	step 1 : wff = thm id () |- ( ps -> ps ) ;
	step 2 : wff = thm ad2antrl (step 1) |- ( ( ph /\ ( ps /\ ch ) ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem simprr (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> ch ) ;
}

proof of simprr {
	step 1 : wff = thm id () |- ( ch -> ch ) ;
	step 2 : wff = thm ad2antll (step 1) |- ( ( ph /\ ( ps /\ ch ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem simplll (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ph ) ;
}

proof of simplll {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm ad2antrr (step 1) |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem simpllr (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ps ) ;
}

proof of simpllr {
	step 1 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 2 : wff = thm ad2antrr (step 1) |- ( ( ( ( ph /\ ps ) /\ ch ) /\ th ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem simplrl (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ps ) ;
}

proof of simplrl {
	step 1 : wff = thm pm3_26 () |- ( ( ps /\ ch ) -> ps ) ;
	step 2 : wff = thm ad2antlr (step 1) |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem simplrr (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ch ) ;
}

proof of simplrr {
	step 1 : wff = thm pm3_27 () |- ( ( ps /\ ch ) -> ch ) ;
	step 2 : wff = thm ad2antlr (step 1) |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem simprll (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ps ) ;
}

proof of simprll {
	step 1 : wff = thm pm3_26 () |- ( ( ps /\ ch ) -> ps ) ;
	step 2 : wff = thm ad2antrl (step 1) |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem simprlr (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ch ) ;
}

proof of simprlr {
	step 1 : wff = thm pm3_27 () |- ( ( ps /\ ch ) -> ch ) ;
	step 2 : wff = thm ad2antrl (step 1) |- ( ( ph /\ ( ( ps /\ ch ) /\ th ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem simprrl (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ch ) ;
}

proof of simprrl {
	step 1 : wff = thm pm3_26 () |- ( ( ch /\ th ) -> ch ) ;
	step 2 : wff = thm ad2antll (step 1) |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem simprrr (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> th ) ;
}

proof of simprrr {
	step 1 : wff = thm pm3_27 () |- ( ( ch /\ th ) -> th ) ;
	step 2 : wff = thm ad2antll (step 1) |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem biimpa (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of biimpa {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem biimpar (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> ps ) ;
}

proof of biimpar {
	step 1 : wff = thm biimprd (hyp 1) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ch ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem biimpac (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> ch ) ;
}

proof of biimpac {
	step 1 : wff = thm biimpcd (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ps /\ ph ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem biimparc (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ph ) -> ps ) ;
}

proof of biimparc {
	step 1 : wff = thm biimprcd (hyp 1) |- ( ch -> ( ph -> ps ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ch /\ ph ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_26bda (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ( ch /\ th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of pm3_26bda {
	step 1 : wff = thm biimpa (hyp 1) |- ( ( ph /\ ps ) -> ( ch /\ th ) ) ;
	step 2 : wff = thm pm3_26d (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_27bda (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ( ch /\ th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
}

proof of pm3_27bda {
	step 1 : wff = thm biimpa (hyp 1) |- ( ( ph /\ ps ) -> ( ch /\ th ) ) ;
	step 2 : wff = thm pm3_27d (step 1) |- ( ( ph /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem jaob (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ch ) -> ps ) <-> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) ;
}

proof of jaob {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ch ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph \/ ch ) -> ps ) -> ( ph -> ps ) ) ;
	step 3 : wff = thm olc () |- ( ch -> ( ph \/ ch ) ) ;
	step 4 : wff = thm imim1i (step 3) |- ( ( ( ph \/ ch ) -> ps ) -> ( ch -> ps ) ) ;
	step 5 : wff = thm jca (step 2, step 4) |- ( ( ( ph \/ ch ) -> ps ) -> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) ;
	step 6 : wff = thm jao () |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
	step 7 : wff = thm imp (step 6) |- ( ( ( ph -> ps ) /\ ( ch -> ps ) ) -> ( ( ph \/ ch ) -> ps ) ) ;
	step 8 : wff = thm impbii (step 5, step 7) |- ( ( ( ph \/ ch ) -> ps ) <-> ( ( ph -> ps ) /\ ( ch -> ps ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem pm4_77 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) <-> ( ( ps \/ ch ) -> ph ) ) ;
}

proof of pm4_77 {
	step 1 : wff = thm jaob () |- ( ( ( ps \/ ch ) -> ph ) <-> ( ( ps -> ph ) /\ ( ch -> ph ) ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) <-> ( ( ps \/ ch ) -> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem jaod (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th ) -> ch ) ) ;
}

proof of jaod {
	step 1 : wff = thm jao () |- ( ( ps -> ch ) -> ( ( th -> ch ) -> ( ( ps \/ th ) -> ch ) ) ) ;
	step 2 : wff = thm sylc (step 1, hyp 1, hyp 2) |- ( ph -> ( ( ps \/ th ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem jaoian (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( th /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph \/ th ) /\ ps ) -> ch ) ;
}

proof of jaoian {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( th -> ( ps -> ch ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( ph \/ th ) -> ( ps -> ch ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ( ph \/ th ) /\ ps ) -> ch ) ;
	qed prop 1 = step 4 ;
}

theorem jaodan (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ th ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps \/ th ) ) -> ch ) ;
}

proof of jaodan {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( ph -> ( th -> ch ) ) ;
	step 3 : wff = thm jaod (step 1, step 2) |- ( ph -> ( ( ps \/ th ) -> ch ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ph /\ ( ps \/ th ) ) -> ch ) ;
	qed prop 1 = step 4 ;
}

theorem jaao (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ( ps \/ ta ) -> ch ) ) ;
}

proof of jaao {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ th ) -> ( ta -> ch ) ) ;
	step 3 : wff = thm jaod (step 1, step 2) |- ( ( ph /\ th ) -> ( ( ps \/ ta ) -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem jaoa (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ th ) -> ( ( ps /\ ta ) -> ch ) ) ;
}

proof of jaoa {
	step 1 : wff = thm adantrd (hyp 1) |- ( ph -> ( ( ps /\ ta ) -> ch ) ) ;
	step 2 : wff = thm adantld (hyp 2) |- ( th -> ( ( ps /\ ta ) -> ch ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( ph \/ th ) -> ( ( ps /\ ta ) -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_63 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) -> ( ( -. ph \/ ps ) -> ps ) ) ;
}

proof of pm2_63 {
	step 1 : wff = thm pm2_53 () |- ( ( ph \/ ps ) -> ( -. ph -> ps ) ) ;
	step 2 : wff = thm idd () |- ( ( ph \/ ps ) -> ( ps -> ps ) ) ;
	step 3 : wff = thm jaod (step 1, step 2) |- ( ( ph \/ ps ) -> ( ( -. ph \/ ps ) -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_64 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) -> ( ( ph \/ -. ps ) -> ph ) ) ;
}

proof of pm2_64 {
	step 1 : wff = axm ax-1 () |- ( ph -> ( ( ph \/ ps ) -> ph ) ) ;
	step 2 : wff = thm orel2 () |- ( -. ps -> ( ( ph \/ ps ) -> ph ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( ph \/ -. ps ) -> ( ( ph \/ ps ) -> ph ) ) ;
	step 4 : wff = thm com12 (step 3) |- ( ( ph \/ ps ) -> ( ( ph \/ -. ps ) -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm3_44 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) -> ( ( ps \/ ch ) -> ph ) ) ;
}

proof of pm3_44 {
	step 1 : wff = thm jaob () |- ( ( ( ps \/ ch ) -> ph ) <-> ( ( ps -> ph ) /\ ( ch -> ph ) ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( ( ps -> ph ) /\ ( ch -> ph ) ) -> ( ( ps \/ ch ) -> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_43 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph <-> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) ;
}

proof of pm4_43 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm orc () |- ( ph -> ( ph \/ -. ps ) ) ;
	step 3 : wff = thm jca (step 1, step 2) |- ( ph -> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) ;
	step 4 : wff = thm pm2_64 () |- ( ( ph \/ ps ) -> ( ( ph \/ -. ps ) -> ph ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) -> ph ) ;
	step 6 : wff = thm impbii (step 3, step 5) |- ( ph <-> ( ( ph \/ ps ) /\ ( ph \/ -. ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem anidm (ph : wff)  {
	prop 1 : wff = |- ( ( ph /\ ph ) <-> ph ) ;
}

proof of anidm {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ph ) -> ph ) ;
	step 2 : wff = thm pm3_2 () |- ( ph -> ( ph -> ( ph /\ ph ) ) ) ;
	step 3 : wff = thm pm2_43i (step 2) |- ( ph -> ( ph /\ ph ) ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( ( ph /\ ph ) <-> ph ) ;
	qed prop 1 = step 4 ;
}

theorem pm4_24 (ph : wff)  {
	prop 1 : wff = |- ( ph <-> ( ph /\ ph ) ) ;
}

proof of pm4_24 {
	step 1 : wff = thm anidm () |- ( ( ph /\ ph ) <-> ph ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ph <-> ( ph /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem anidms (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ph ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of anidms {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ph -> ps ) ) ;
	step 2 : wff = thm pm2_43i (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem anidmdbi (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps /\ ps ) ) <-> ( ph -> ps ) ) ;
}

proof of anidmdbi {
	step 1 : wff = thm anidm () |- ( ( ps /\ ps ) <-> ps ) ;
	step 2 : wff = thm imbi2i (step 1) |- ( ( ph -> ( ps /\ ps ) ) <-> ( ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancom (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
}

proof of ancom {
	step 1 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 2 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 3 : wff = thm jca (step 1, step 2) |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) ;
	step 4 : wff = thm pm3_27 () |- ( ( ps /\ ph ) -> ph ) ;
	step 5 : wff = thm pm3_26 () |- ( ( ps /\ ph ) -> ps ) ;
	step 6 : wff = thm jca (step 4, step 5) |- ( ( ps /\ ph ) -> ( ph /\ ps ) ) ;
	step 7 : wff = thm impbii (step 3, step 6) |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem ancomd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch /\ ps ) ) ;
}

proof of ancomd {
	step 1 : wff = thm ancom () |- ( ( ps /\ ch ) <-> ( ch /\ ps ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ch /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem ancoms (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> ch ) ;
}

proof of ancoms {
	step 1 : wff = thm ancom () |- ( ( ps /\ ph ) <-> ( ph /\ ps ) ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( ( ps /\ ph ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem ancomsd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ch /\ ps ) -> th ) ) ;
}

proof of ancomsd {
	step 1 : wff = thm ancom () |- ( ( ch /\ ps ) <-> ( ps /\ ch ) ) ;
	step 2 : wff = thm syl5ib (hyp 1, step 1) |- ( ph -> ( ( ch /\ ps ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_22 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) ;
}

proof of pm3_22 {
	step 1 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem anass (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
}

proof of anass {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ph -> ( ps -> -. ch ) ) ) ;
	step 2 : wff = thm imnan () |- ( ( ps -> -. ch ) <-> -. ( ps /\ ch ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( ph -> ( ps -> -. ch ) ) <-> ( ph -> -. ( ps /\ ch ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ph -> -. ( ps /\ ch ) ) ) ;
	step 5 : wff = thm notbii (step 4) |- ( -. ( ( ph /\ ps ) -> -. ch ) <-> -. ( ph -> -. ( ps /\ ch ) ) ) ;
	step 6 : wff = def df-an () |- ( ( ( ph /\ ps ) /\ ch ) <-> -. ( ( ph /\ ps ) -> -. ch ) ) ;
	step 7 : wff = def df-an () |- ( ( ph /\ ( ps /\ ch ) ) <-> -. ( ph -> -. ( ps /\ ch ) ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem anasss (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
}

proof of anasss {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp32 (step 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem anassrs (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
}

proof of anassrs {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp31 (step 1) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem imdistan (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) <-> ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) ;
}

proof of imdistan {
	step 1 : wff = thm anc2l () |- ( ( ph -> ( ps -> ch ) ) -> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) ;
	step 2 : wff = thm imp3a (step 1) |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ph /\ ch ) -> ch ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( ( ph /\ ps ) -> ( ph /\ ch ) ) -> ( ( ph /\ ps ) -> ch ) ) ;
	step 5 : wff = thm exp3a (step 4) |- ( ( ( ph /\ ps ) -> ( ph /\ ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 6 : wff = thm impbii (step 2, step 5) |- ( ( ph -> ( ps -> ch ) ) <-> ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem imdistani (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ph /\ ch ) ) ;
}

proof of imdistani {
	step 1 : wff = thm anc2li (hyp 1) |- ( ph -> ( ps -> ( ph /\ ch ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ps ) -> ( ph /\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem imdistanri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> ( ch /\ ph ) ) ;
}

proof of imdistanri {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm impac (step 1) |- ( ( ps /\ ph ) -> ( ch /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem imdistand (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) ;
}

proof of imdistand {
	step 1 : wff = thm imdistan () |- ( ( ps -> ( ch -> th ) ) <-> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ( ps /\ ch ) -> ( ps /\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_3 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) ;
}

proof of pm5_3 {
	step 1 : wff = thm pm3_3 () |- ( ( ( ph /\ ps ) -> ch ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm imdistand (step 1) |- ( ( ( ph /\ ps ) -> ch ) -> ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ph /\ ch ) -> ch ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( ( ph /\ ps ) -> ( ph /\ ch ) ) -> ( ( ph /\ ps ) -> ch ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( ( ph /\ ps ) -> ch ) <-> ( ( ph /\ ps ) -> ( ph /\ ch ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm5_61 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) /\ -. ps ) <-> ( ph /\ -. ps ) ) ;
}

proof of pm5_61 {
	step 1 : wff = thm orel2 () |- ( -. ps -> ( ( ph \/ ps ) -> ph ) ) ;
	step 2 : wff = thm imdistanri (step 1) |- ( ( ( ph \/ ps ) /\ -. ps ) -> ( ph /\ -. ps ) ) ;
	step 3 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 4 : wff = thm anim1i (step 3) |- ( ( ph /\ -. ps ) -> ( ( ph \/ ps ) /\ -. ps ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( ( ph \/ ps ) /\ -. ps ) <-> ( ph /\ -. ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem sylan (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ps ) -> ch ) ;
}

proof of sylan {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl (hyp 2, step 1) |- ( th -> ( ps -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( th /\ ps ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem sylanb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th <-> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ps ) -> ch ) ;
}

proof of sylanb {
	step 1 : wff = thm biimpi (hyp 2) |- ( th -> ph ) ;
	step 2 : wff = thm sylan (hyp 1, step 1) |- ( ( th /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylanbr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ph <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ps ) -> ch ) ;
}

proof of sylanbr {
	step 1 : wff = thm biimpri (hyp 2) |- ( th -> ph ) ;
	step 2 : wff = thm sylan (hyp 1, step 1) |- ( ( th /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylan2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ch ) ;
}

proof of sylan2 {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl5 (step 1, hyp 2) |- ( ph -> ( th -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ th ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem sylan2b (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ch ) ;
}

proof of sylan2b {
	step 1 : wff = thm biimpi (hyp 2) |- ( th -> ps ) ;
	step 2 : wff = thm sylan2 (hyp 1, step 1) |- ( ( ph /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylan2br (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ch ) ;
}

proof of sylan2br {
	step 1 : wff = thm biimpri (hyp 2) |- ( th -> ps ) ;
	step 2 : wff = thm sylan2 (hyp 1, step 1) |- ( ( ph /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem syl2an (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th -> ph ) ;
	hyp 3 : wff = |- ( ta -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ta ) -> ch ) ;
}

proof of syl2an {
	step 1 : wff = thm sylan (hyp 1, hyp 2) |- ( ( th /\ ps ) -> ch ) ;
	step 2 : wff = thm sylan2 (step 1, hyp 3) |- ( ( th /\ ta ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem syl2anb (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th <-> ph ) ;
	hyp 3 : wff = |- ( ta <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ta ) -> ch ) ;
}

proof of syl2anb {
	step 1 : wff = thm sylanb (hyp 1, hyp 2) |- ( ( th /\ ps ) -> ch ) ;
	step 2 : wff = thm sylan2b (step 1, hyp 3) |- ( ( th /\ ta ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem syl2anbr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ph <-> th ) ;
	hyp 3 : wff = |- ( ps <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ta ) -> ch ) ;
}

proof of syl2anbr {
	step 1 : wff = thm sylanbr (hyp 1, hyp 2) |- ( ( th /\ ps ) -> ch ) ;
	step 2 : wff = thm sylan2br (step 1, hyp 3) |- ( ( th /\ ta ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem syland (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	hyp 2 : wff = |- ( ph -> ( ta -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ta /\ ch ) -> th ) ) ;
}

proof of syland {
	step 1 : wff = thm exp3a (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm syld (hyp 2, step 1) |- ( ph -> ( ta -> ( ch -> th ) ) ) ;
	step 3 : wff = thm imp3a (step 2) |- ( ph -> ( ( ta /\ ch ) -> th ) ) ;
	qed prop 1 = step 3 ;
}

theorem sylan2d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	hyp 2 : wff = |- ( ph -> ( ta -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ta ) -> th ) ) ;
}

proof of sylan2d {
	step 1 : wff = thm ancomsd (hyp 1) |- ( ph -> ( ( ch /\ ps ) -> th ) ) ;
	step 2 : wff = thm syland (step 1, hyp 2) |- ( ph -> ( ( ta /\ ps ) -> th ) ) ;
	step 3 : wff = thm ancomsd (step 2) |- ( ph -> ( ( ps /\ ta ) -> th ) ) ;
	qed prop 1 = step 3 ;
}

theorem syl2and (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	hyp 2 : wff = |- ( ph -> ( ta -> ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( et -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ta /\ et ) -> th ) ) ;
}

proof of syl2and {
	step 1 : wff = thm sylan2d (hyp 1, hyp 3) |- ( ph -> ( ( ps /\ et ) -> th ) ) ;
	step 2 : wff = thm syland (step 1, hyp 2) |- ( ph -> ( ( ta /\ et ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylanl1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ta /\ ps ) /\ ch ) -> th ) ;
}

proof of sylanl1 {
	step 1 : wff = thm anim1i (hyp 2) |- ( ( ta /\ ps ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm sylan (hyp 1, step 1) |- ( ( ( ta /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem sylanl2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ta ) /\ ch ) -> th ) ;
}

proof of sylanl2 {
	step 1 : wff = thm anim2i (hyp 2) |- ( ( ph /\ ta ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm sylan (hyp 1, step 1) |- ( ( ( ph /\ ta ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem sylanr1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ta /\ ch ) ) -> th ) ;
}

proof of sylanr1 {
	step 1 : wff = thm anim1i (hyp 2) |- ( ( ta /\ ch ) -> ( ps /\ ch ) ) ;
	step 2 : wff = thm sylan2 (hyp 1, step 1) |- ( ( ph /\ ( ta /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem sylanr2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ta ) ) -> th ) ;
}

proof of sylanr2 {
	step 1 : wff = thm anim2i (hyp 2) |- ( ( ps /\ ta ) -> ( ps /\ ch ) ) ;
	step 2 : wff = thm sylan2 (hyp 1, step 1) |- ( ( ph /\ ( ps /\ ta ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem sylani (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ta /\ ch ) -> th ) ) ;
}

proof of sylani {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( ta -> ps ) ) ;
	step 2 : wff = thm syland (hyp 1, step 1) |- ( ph -> ( ( ta /\ ch ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylan2i (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	hyp 2 : wff = |- ( ta -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ta ) -> th ) ) ;
}

proof of sylan2i {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( ta -> ch ) ) ;
	step 2 : wff = thm sylan2d (hyp 1, step 1) |- ( ph -> ( ( ps /\ ta ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl2ani (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	hyp 3 : wff = |- ( et -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ta /\ et ) -> th ) ) ;
}

proof of syl2ani {
	step 1 : wff = thm sylan2i (hyp 1, hyp 3) |- ( ph -> ( ( ps /\ et ) -> th ) ) ;
	step 2 : wff = thm sylani (step 1, hyp 2) |- ( ph -> ( ( ta /\ et ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syldan (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
}

proof of syldan {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( ph -> ( ch -> th ) ) ;
	step 3 : wff = thm syld (step 1, step 2) |- ( ph -> ( ps -> th ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ph /\ ps ) -> th ) ;
	qed prop 1 = step 4 ;
}

theorem sylan9 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ps -> ta ) ) ;
}

proof of sylan9 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ th ) -> ( ch -> ta ) ) ;
	step 3 : wff = thm syld (step 1, step 2) |- ( ( ph /\ th ) -> ( ps -> ta ) ) ;
	qed prop 1 = step 3 ;
}

theorem sylan9r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ph ) -> ( ps -> ta ) ) ;
}

proof of sylan9r {
	step 1 : wff = thm syl9r (hyp 1, hyp 2) |- ( th -> ( ph -> ( ps -> ta ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( th /\ ph ) -> ( ps -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpan9 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> ( ps -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
}

proof of mpan9 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ ch ) -> ps ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ ch ) -> ( ps -> th ) ) ;
	step 3 : wff = thm mpd (step 1, step 2) |- ( ( ph /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem sylanc (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th -> ph ) ;
	hyp 3 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ch ) ;
}

proof of sylanc {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm sylc (step 1, hyp 2, hyp 3) |- ( th -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylancl (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th -> ph ) ;
	hyp 3 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( th -> ch ) ;
}

proof of sylancl {
	step 1 : wff = thm a1i (hyp 3) |- ( th -> ps ) ;
	step 2 : wff = thm sylanc (hyp 1, hyp 2, step 1) |- ( th -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylancr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ph ;
	hyp 3 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ch ) ;
}

proof of sylancr {
	step 1 : wff = thm a1i (hyp 2) |- ( th -> ph ) ;
	step 2 : wff = thm sylanc (hyp 1, step 1, hyp 3) |- ( th -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylanbrc (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	hyp 2 : wff = |- ( th -> ps ) ;
	hyp 3 : wff = |- ( th -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ph ) ;
}

proof of sylanbrc {
	step 1 : wff = thm jca (hyp 2, hyp 3) |- ( th -> ( ps /\ ch ) ) ;
	step 2 : wff = thm sylibr (step 1, hyp 1) |- ( th -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem syl2anc (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ph ) ;
	hyp 3 : wff = |- ( et -> ps ) ;
	hyp 4 : wff = |- ( et -> ch ) ;
	hyp 5 : wff = |- ( et -> th ) ;
	-----------------------
	prop 1 : wff = |- ( et -> ta ) ;
}

proof of syl2anc {
	step 1 : wff = thm jca (hyp 2, hyp 3) |- ( et -> ( ph /\ ps ) ) ;
	step 2 : wff = thm jca (hyp 4, hyp 5) |- ( et -> ( ch /\ th ) ) ;
	step 3 : wff = thm sylanc (hyp 1, step 1, step 2) |- ( et -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem sylancb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( th <-> ph ) ;
	hyp 3 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ch ) ;
}

proof of sylancb {
	step 1 : wff = thm syl2anb (hyp 1, hyp 2, hyp 3) |- ( ( th /\ th ) -> ch ) ;
	step 2 : wff = thm anidms (step 1) |- ( th -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylancbr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ph <-> th ) ;
	hyp 3 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ch ) ;
}

proof of sylancbr {
	step 1 : wff = thm syl2anbr (hyp 1, hyp 2, hyp 3) |- ( ( th /\ th ) -> ch ) ;
	step 2 : wff = thm anidms (step 1) |- ( th -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem sylancom (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ch /\ ps ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
}

proof of sylancom {
	step 1 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 2 : wff = thm sylanc (hyp 2, hyp 1, step 1) |- ( ( ph /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem sylan31c (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ta -> ph ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	hyp 3 : wff = |- ( ta -> ch ) ;
	hyp 4 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ta -> th ) ;
}

proof of sylan31c {
	step 1 : wff = thm jca31 (hyp 1, hyp 2, hyp 3) |- ( ta -> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm syl (step 1, hyp 4) |- ( ta -> th ) ;
	qed prop 1 = step 2 ;
}

theorem sylan32c (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ta -> ph ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	hyp 3 : wff = |- ( ta -> ch ) ;
	hyp 4 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ta -> th ) ;
}

proof of sylan32c {
	step 1 : wff = thm jca32 (hyp 1, hyp 2, hyp 3) |- ( ta -> ( ph /\ ( ps /\ ch ) ) ) ;
	step 2 : wff = thm syl (step 1, hyp 4) |- ( ta -> th ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_61ian (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( -. ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ch ) ;
}

proof of pm2_61ian {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( -. ph -> ( ps -> ch ) ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ( ps -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_61dan (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ -. ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of pm2_61dan {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( ph -> ( -. ps -> ch ) ) ;
	step 3 : wff = thm pm2_61d (step 1, step 2) |- ( ph -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem condan (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ -. ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ -. ps ) -> -. ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of condan {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( -. ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( ph -> ( -. ps -> -. ch ) ) ;
	step 3 : wff = thm pm2_65d (step 1, step 2) |- ( ph -> -. -. ps ) ;
	step 4 : wff = thm notnot2 () |- ( -. -. ps -> ps ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( ph -> ps ) ;
	qed prop 1 = step 5 ;
}

theorem abai (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) <-> ( ph /\ ( ph -> ps ) ) ) ;
}

proof of abai {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm pm3_4 () |- ( ( ph /\ ps ) -> ( ph -> ps ) ) ;
	step 3 : wff = thm jca (step 1, step 2) |- ( ( ph /\ ps ) -> ( ph /\ ( ph -> ps ) ) ) ;
	step 4 : wff = thm pm3_26 () |- ( ( ph /\ ( ph -> ps ) ) -> ph ) ;
	step 5 : wff = thm pm3_35 () |- ( ( ph /\ ( ph -> ps ) ) -> ps ) ;
	step 6 : wff = thm jca (step 4, step 5) |- ( ( ph /\ ( ph -> ps ) ) -> ( ph /\ ps ) ) ;
	step 7 : wff = thm impbii (step 3, step 6) |- ( ( ph /\ ps ) <-> ( ph /\ ( ph -> ps ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem anbi2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) ;
}

proof of anbi2i {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm anim2i (step 1) |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) ;
	step 3 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 4 : wff = thm anim2i (step 3) |- ( ( ch /\ ps ) -> ( ch /\ ph ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem anbi1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ;
}

proof of anbi1i {
	step 1 : wff = thm ancom () |- ( ( ph /\ ch ) <-> ( ch /\ ph ) ) ;
	step 2 : wff = thm anbi2i (hyp 1) |- ( ( ch /\ ph ) <-> ( ch /\ ps ) ) ;
	step 3 : wff = thm ancom () |- ( ( ch /\ ps ) <-> ( ps /\ ch ) ) ;
	step 4 : wff = thm 3bitri (step 1, step 2, step 3) |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem anbi12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) <-> ( ps /\ th ) ) ;
}

proof of anbi12i {
	step 1 : wff = thm anbi1i (hyp 1) |- ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ;
	step 2 : wff = thm anbi2i (hyp 2) |- ( ( ps /\ ch ) <-> ( ps /\ th ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph /\ ch ) <-> ( ps /\ th ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm5_53 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ( ph \/ ps ) \/ ch ) -> th ) <-> ( ( ( ph -> th ) /\ ( ps -> th ) ) /\ ( ch -> th ) ) ) ;
}

proof of pm5_53 {
	step 1 : wff = thm jaob () |- ( ( ( ( ph \/ ps ) \/ ch ) -> th ) <-> ( ( ( ph \/ ps ) -> th ) /\ ( ch -> th ) ) ) ;
	step 2 : wff = thm jaob () |- ( ( ( ph \/ ps ) -> th ) <-> ( ( ph -> th ) /\ ( ps -> th ) ) ) ;
	step 3 : wff = thm anbi1i (step 2) |- ( ( ( ( ph \/ ps ) -> th ) /\ ( ch -> th ) ) <-> ( ( ( ph -> th ) /\ ( ps -> th ) ) /\ ( ch -> th ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ( ( ph \/ ps ) \/ ch ) -> th ) <-> ( ( ( ph -> th ) /\ ( ps -> th ) ) /\ ( ch -> th ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem an12 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ps /\ ( ph /\ ch ) ) ) ;
}

proof of an12 {
	step 1 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 2 : wff = thm anbi1i (step 1) |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ps /\ ph ) /\ ch ) ) ;
	step 3 : wff = thm anass () |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 4 : wff = thm anass () |- ( ( ( ps /\ ph ) /\ ch ) <-> ( ps /\ ( ph /\ ch ) ) ) ;
	step 5 : wff = thm 3bitr3i (step 2, step 3, step 4) |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ps /\ ( ph /\ ch ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem an23 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ps ) ) ;
}

proof of an23 {
	step 1 : wff = thm ancom () |- ( ( ps /\ ch ) <-> ( ch /\ ps ) ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ph /\ ( ch /\ ps ) ) ) ;
	step 3 : wff = thm anass () |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 4 : wff = thm anass () |- ( ( ( ph /\ ch ) /\ ps ) <-> ( ph /\ ( ch /\ ps ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem an1s (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ( ph /\ ch ) ) -> th ) ;
}

proof of an1s {
	step 1 : wff = thm an12 () |- ( ( ps /\ ( ph /\ ch ) ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( ( ps /\ ( ph /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem ancom2s (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ch /\ ps ) ) -> th ) ;
}

proof of ancom2s {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com23 (step 1) |- ( ph -> ( ch -> ( ps -> th ) ) ) ;
	step 3 : wff = thm imp32 (step 2) |- ( ( ph /\ ( ch /\ ps ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem ancom13s (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ( ps /\ ph ) ) -> th ) ;
}

proof of ancom13s {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com13 (step 1) |- ( ch -> ( ps -> ( ph -> th ) ) ) ;
	step 3 : wff = thm imp32 (step 2) |- ( ( ch /\ ( ps /\ ph ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem an1rs (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ch ) /\ ps ) -> th ) ;
}

proof of an1rs {
	step 1 : wff = thm an23 () |- ( ( ( ph /\ ch ) /\ ps ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( ( ( ph /\ ch ) /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem ancom1s (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ps /\ ph ) /\ ch ) -> th ) ;
}

proof of ancom1s {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ps -> ( ph -> ( ch -> th ) ) ) ;
	step 3 : wff = thm imp31 (step 2) |- ( ( ( ps /\ ph ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem ancom31s (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ch /\ ps ) /\ ph ) -> th ) ;
}

proof of ancom31s {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com13 (step 1) |- ( ch -> ( ps -> ( ph -> th ) ) ) ;
	step 3 : wff = thm imp31 (step 2) |- ( ( ( ch /\ ps ) /\ ph ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem anabs1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) ;
}

proof of anabs1 {
	step 1 : wff = thm pm3_26 () |- ( ( ( ph /\ ps ) /\ ph ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 3 : wff = thm ancli (step 2) |- ( ( ph /\ ps ) -> ( ( ph /\ ps ) /\ ph ) ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem anabs5 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) ;
}

proof of anabs5 {
	step 1 : wff = thm ancom () |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ( ph /\ ps ) ) ) ;
	step 2 : wff = thm anabs1 () |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( ( ph /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem anabs7 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ps /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) ;
}

proof of anabs7 {
	step 1 : wff = thm pm3_27 () |- ( ( ps /\ ( ph /\ ps ) ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 3 : wff = thm ancri (step 2) |- ( ( ph /\ ps ) -> ( ps /\ ( ph /\ ps ) ) ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( ( ps /\ ( ph /\ ps ) ) <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem anabsi5 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ph /\ ps ) -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabsi5 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ ps ) -> ( ( ph /\ ps ) -> ch ) ) ;
	step 2 : wff = thm pm2_43i (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabsi6 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ph ) -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabsi6 {
	step 1 : wff = thm ancomsd (hyp 1) |- ( ph -> ( ( ph /\ ps ) -> ch ) ) ;
	step 2 : wff = thm anabsi5 (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabsi7 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ( ( ph /\ ps ) -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabsi7 {
	step 1 : wff = thm exp3a (hyp 1) |- ( ps -> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm pm2_43b (step 1) |- ( ph -> ( ps -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem anabsi8 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ( ( ps /\ ph ) -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabsi8 {
	step 1 : wff = thm anabsi5 (hyp 1) |- ( ( ps /\ ph ) -> ch ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabss1 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ph ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabss1 {
	step 1 : wff = thm adantrr (hyp 1) |- ( ( ( ph /\ ps ) /\ ( ph /\ ps ) ) -> ch ) ;
	step 2 : wff = thm anidms (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabss3 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabss3 {
	step 1 : wff = thm adantrl (hyp 1) |- ( ( ( ph /\ ps ) /\ ( ph /\ ps ) ) -> ch ) ;
	step 2 : wff = thm anidms (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabss4 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ( ps /\ ph ) /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabss4 {
	step 1 : wff = thm anabss1 (hyp 1) |- ( ( ps /\ ph ) -> ch ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabss5 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ph /\ ps ) ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabss5 {
	step 1 : wff = thm adantlr (hyp 1) |- ( ( ( ph /\ ps ) /\ ( ph /\ ps ) ) -> ch ) ;
	step 2 : wff = thm anidms (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabss7 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ps /\ ( ph /\ ps ) ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabss7 {
	step 1 : wff = thm ex (hyp 1) |- ( ps -> ( ( ph /\ ps ) -> ch ) ) ;
	step 2 : wff = thm anabsi7 (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabsan (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ph ) /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabsan {
	step 1 : wff = thm an1rs (hyp 1) |- ( ( ( ph /\ ps ) /\ ph ) -> ch ) ;
	step 2 : wff = thm anabss1 (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem anabsan2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ps ) ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of anabsan2 {
	step 1 : wff = thm anassrs (hyp 1) |- ( ( ( ph /\ ps ) /\ ps ) -> ch ) ;
	step 2 : wff = thm anabss3 (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem an4 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( ps /\ th ) ) ) ;
}

proof of an4 {
	step 1 : wff = thm an12 () |- ( ( ps /\ ( ch /\ th ) ) <-> ( ch /\ ( ps /\ th ) ) ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( ph /\ ( ps /\ ( ch /\ th ) ) ) <-> ( ph /\ ( ch /\ ( ps /\ th ) ) ) ) ;
	step 3 : wff = thm anass () |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ph /\ ( ps /\ ( ch /\ th ) ) ) ) ;
	step 4 : wff = thm anass () |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) <-> ( ph /\ ( ch /\ ( ps /\ th ) ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( ps /\ th ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem an42 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) ;
}

proof of an42 {
	step 1 : wff = thm an4 () |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( ps /\ th ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( ps /\ th ) <-> ( th /\ ps ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) <-> ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem an4s (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) -> ta ) ;
}

proof of an4s {
	step 1 : wff = thm an4 () |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) <-> ( ( ph /\ ps ) /\ ( ch /\ th ) ) ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem an42s (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ch ) /\ ( th /\ ps ) ) -> ta ) ;
}

proof of an42s {
	step 1 : wff = thm an42 () |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( th /\ ps ) ) ) ;
	step 2 : wff = thm sylbir (step 1, hyp 1) |- ( ( ( ph /\ ch ) /\ ( th /\ ps ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem anandi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ( ph /\ ps ) /\ ( ph /\ ch ) ) ) ;
}

proof of anandi {
	step 1 : wff = thm anidm () |- ( ( ph /\ ph ) <-> ph ) ;
	step 2 : wff = thm anbi1i (step 1) |- ( ( ( ph /\ ph ) /\ ( ps /\ ch ) ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 3 : wff = thm an4 () |- ( ( ( ph /\ ph ) /\ ( ps /\ ch ) ) <-> ( ( ph /\ ps ) /\ ( ph /\ ch ) ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ( ph /\ ps ) /\ ( ph /\ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem anandir (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ( ps /\ ch ) ) ) ;
}

proof of anandir {
	step 1 : wff = thm anidm () |- ( ( ch /\ ch ) <-> ch ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( ( ph /\ ps ) /\ ( ch /\ ch ) ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 3 : wff = thm an4 () |- ( ( ( ph /\ ps ) /\ ( ch /\ ch ) ) <-> ( ( ph /\ ch ) /\ ( ps /\ ch ) ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ph /\ ch ) /\ ( ps /\ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem anandis (ph : wff, ps : wff, ch : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) ;
}

proof of anandis {
	step 1 : wff = thm an4s (hyp 1) |- ( ( ( ph /\ ph ) /\ ( ps /\ ch ) ) -> ta ) ;
	step 2 : wff = thm anabsan (step 1) |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem anandirs (ph : wff, ps : wff, ch : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ch ) /\ ( ps /\ ch ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> ta ) ;
}

proof of anandirs {
	step 1 : wff = thm an4s (hyp 1) |- ( ( ( ph /\ ps ) /\ ( ch /\ ch ) ) -> ta ) ;
	step 2 : wff = thm anabsan2 (step 1) |- ( ( ( ph /\ ps ) /\ ch ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem dfbi2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
}

proof of dfbi2 {
	step 1 : wff = thm dfbi1 () |- ( ( ph <-> ps ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	step 2 : wff = def df-an () |- ( ( ( ph -> ps ) /\ ( ps -> ph ) ) <-> -. ( ( ph -> ps ) -> -. ( ps -> ph ) ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem dfbi (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph <-> ps ) -> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) /\ ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
}

proof of dfbi {
	step 1 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph <-> ps ) -> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 3 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 4 : wff = thm biimpri (step 3) |- ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> ( ph <-> ps ) ) ;
	step 5 : wff = thm pm3_2i (step 2, step 4) |- ( ( ( ph <-> ps ) -> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) /\ ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> ( ph <-> ps ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem impbid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of impbid {
	step 1 : wff = thm dfbi2 () |- ( ( ps <-> ch ) <-> ( ( ps -> ch ) /\ ( ch -> ps ) ) ) ;
	step 2 : wff = thm sylanbrc (step 1, hyp 1, hyp 2) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem impbid1 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of impbid1 {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm impbid (hyp 1, step 1) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem impbid2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ch ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of impbid2 {
	step 1 : wff = thm a1i (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm impbid (step 1, hyp 2) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem impbida (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ ch ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of impbida {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( ph -> ( ch -> ps ) ) ;
	step 3 : wff = thm impbid (step 1, step 2) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem bicom (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
}

proof of bicom {
	step 1 : wff = thm ancom () |- ( ( ( ph -> ps ) /\ ( ps -> ph ) ) <-> ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 2 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 3 : wff = thm dfbi2 () |- ( ( ps <-> ph ) <-> ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem bicomd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> ps ) ) ;
}

proof of bicomd {
	step 1 : wff = thm bicom () |- ( ( ps <-> ch ) <-> ( ch <-> ps ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ch <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem notbi (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) ;
}

proof of notbi {
	step 1 : wff = thm con34b () |- ( ( ph -> ps ) <-> ( -. ps -> -. ph ) ) ;
	step 2 : wff = thm con34b () |- ( ( ps -> ph ) <-> ( -. ph -> -. ps ) ) ;
	step 3 : wff = thm anbi12i (step 1, step 2) |- ( ( ( ph -> ps ) /\ ( ps -> ph ) ) <-> ( ( -. ps -> -. ph ) /\ ( -. ph -> -. ps ) ) ) ;
	step 4 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 5 : wff = thm dfbi2 () |- ( ( -. ps <-> -. ph ) <-> ( ( -. ps -> -. ph ) /\ ( -. ph -> -. ps ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 3, step 4, step 5) |- ( ( ph <-> ps ) <-> ( -. ps <-> -. ph ) ) ;
	step 7 : wff = thm bicom () |- ( ( -. ps <-> -. ph ) <-> ( -. ph <-> -. ps ) ) ;
	step 8 : wff = thm bitri (step 6, step 7) |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem con4bii (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( -. ph <-> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ps ) ;
}

proof of con4bii {
	step 1 : wff = thm notbi () |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- ( ph <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem con4bid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( -. ps <-> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of con4bid {
	step 1 : wff = thm notbi () |- ( ( ps <-> ch ) <-> ( -. ps <-> -. ch ) ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem con2bi (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> -. ps ) <-> ( ps <-> -. ph ) ) ;
}

proof of con2bi {
	step 1 : wff = thm con2b () |- ( ( ph -> -. ps ) <-> ( ps -> -. ph ) ) ;
	step 2 : wff = thm con1b () |- ( ( -. ps -> ph ) <-> ( -. ph -> ps ) ) ;
	step 3 : wff = thm anbi12i (step 1, step 2) |- ( ( ( ph -> -. ps ) /\ ( -. ps -> ph ) ) <-> ( ( ps -> -. ph ) /\ ( -. ph -> ps ) ) ) ;
	step 4 : wff = thm dfbi2 () |- ( ( ph <-> -. ps ) <-> ( ( ph -> -. ps ) /\ ( -. ps -> ph ) ) ) ;
	step 5 : wff = thm dfbi2 () |- ( ( ps <-> -. ph ) <-> ( ( ps -> -. ph ) /\ ( -. ph -> ps ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 3, step 4, step 5) |- ( ( ph <-> -. ps ) <-> ( ps <-> -. ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem con2bid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> -. ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> -. ps ) ) ;
}

proof of con2bid {
	step 1 : wff = thm con2bi () |- ( ( ch <-> -. ps ) <-> ( ps <-> -. ch ) ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> ( ch <-> -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem con1bid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( -. ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ch <-> ps ) ) ;
}

proof of con1bid {
	step 1 : wff = thm bicomd (hyp 1) |- ( ph -> ( ch <-> -. ps ) ) ;
	step 2 : wff = thm con2bid (step 1) |- ( ph -> ( ps <-> -. ch ) ) ;
	step 3 : wff = thm bicomd (step 2) |- ( ph -> ( -. ch <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem bitrd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> th ) ) ;
}

proof of bitrd {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm sylibd (step 1, hyp 2) |- ( ph -> ( ps -> th ) ) ;
	step 3 : wff = thm biimprd (hyp 2) |- ( ph -> ( th -> ch ) ) ;
	step 4 : wff = thm sylibrd (step 3, hyp 1) |- ( ph -> ( th -> ps ) ) ;
	step 5 : wff = thm impbid (step 2, step 4) |- ( ph -> ( ps <-> th ) ) ;
	qed prop 1 = step 5 ;
}

theorem bitr2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ps ) ) ;
}

proof of bitr2d {
	step 1 : wff = thm bitrd (hyp 1, hyp 2) |- ( ph -> ( ps <-> th ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( ph -> ( th <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem bitr3d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> th ) ) ;
}

proof of bitr3d {
	step 1 : wff = thm bicomd (hyp 1) |- ( ph -> ( ch <-> ps ) ) ;
	step 2 : wff = thm bitrd (step 1, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem bitr4d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> th ) ) ;
}

proof of bitr4d {
	step 1 : wff = thm bicomd (hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 2 : wff = thm bitrd (hyp 1, step 1) |- ( ph -> ( ps <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5bb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ch ) ) ;
}

proof of syl5bb {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( th <-> ps ) ) ;
	step 2 : wff = thm bitrd (step 1, hyp 1) |- ( ph -> ( th <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5rbb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> th ) ) ;
}

proof of syl5rbb {
	step 1 : wff = thm syl5bb (hyp 1, hyp 2) |- ( ph -> ( th <-> ch ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( ph -> ( ch <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5bbr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ch ) ) ;
}

proof of syl5bbr {
	step 1 : wff = thm bicomi (hyp 2) |- ( th <-> ps ) ;
	step 2 : wff = thm syl5bb (hyp 1, step 1) |- ( ph -> ( th <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl5rbbr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ps <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> th ) ) ;
}

proof of syl5rbbr {
	step 1 : wff = thm bicomi (hyp 2) |- ( th <-> ps ) ;
	step 2 : wff = thm syl5rbb (hyp 1, step 1) |- ( ph -> ( ch <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6bb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> th ) ) ;
}

proof of syl6bb {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 2 : wff = thm bitrd (hyp 1, step 1) |- ( ph -> ( ps <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6rbb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ps ) ) ;
}

proof of syl6rbb {
	step 1 : wff = thm syl6bb (hyp 1, hyp 2) |- ( ph -> ( ps <-> th ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( ph -> ( th <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6bbr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> th ) ) ;
}

proof of syl6bbr {
	step 1 : wff = thm bicomi (hyp 2) |- ( ch <-> th ) ;
	step 2 : wff = thm syl6bb (hyp 1, step 1) |- ( ph -> ( ps <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem syl6rbbr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ps ) ) ;
}

proof of syl6rbbr {
	step 1 : wff = thm bicomi (hyp 2) |- ( ch <-> th ) ;
	step 2 : wff = thm syl6rbb (hyp 1, step 1) |- ( ph -> ( th <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem sylan9bb (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ps <-> ta ) ) ;
}

proof of sylan9bb {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ th ) -> ( ch <-> ta ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ( ph /\ th ) -> ( ps <-> ta ) ) ;
	qed prop 1 = step 3 ;
}

theorem sylan9bbr (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ph ) -> ( ps <-> ta ) ) ;
}

proof of sylan9bbr {
	step 1 : wff = thm sylan9bb (hyp 1, hyp 2) |- ( ( ph /\ th ) -> ( ps <-> ta ) ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( th /\ ph ) -> ( ps <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3imtr3d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( ch <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ta ) ) ;
}

proof of 3imtr3d {
	step 1 : wff = thm sylibd (hyp 1, hyp 3) |- ( ph -> ( ps -> ta ) ) ;
	step 2 : wff = thm sylbird (hyp 2, step 1) |- ( ph -> ( th -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3imtr4d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( ta <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ta ) ) ;
}

proof of 3imtr4d {
	step 1 : wff = thm sylibrd (hyp 1, hyp 3) |- ( ph -> ( ps -> ta ) ) ;
	step 2 : wff = thm sylbid (hyp 2, step 1) |- ( ph -> ( th -> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitrd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ta ) ) ;
}

proof of 3bitrd {
	step 1 : wff = thm bitrd (hyp 1, hyp 2) |- ( ph -> ( ps <-> th ) ) ;
	step 2 : wff = thm bitrd (step 1, hyp 3) |- ( ph -> ( ps <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitrrd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ta <-> ps ) ) ;
}

proof of 3bitrrd {
	step 1 : wff = thm bitr2d (hyp 1, hyp 2) |- ( ph -> ( th <-> ps ) ) ;
	step 2 : wff = thm bitr3d (hyp 3, step 1) |- ( ph -> ( ta <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr2d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ch ) ) ;
	hyp 3 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ta ) ) ;
}

proof of 3bitr2d {
	step 1 : wff = thm bitr4d (hyp 1, hyp 2) |- ( ph -> ( ps <-> th ) ) ;
	step 2 : wff = thm bitrd (step 1, hyp 3) |- ( ph -> ( ps <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr2rd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ch ) ) ;
	hyp 3 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ta <-> ps ) ) ;
}

proof of 3bitr2rd {
	step 1 : wff = thm bitr4d (hyp 1, hyp 2) |- ( ph -> ( ps <-> th ) ) ;
	step 2 : wff = thm bitr2d (step 1, hyp 3) |- ( ph -> ( ta <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr3d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( ch <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ta ) ) ;
}

proof of 3bitr3d {
	step 1 : wff = thm bitr3d (hyp 2, hyp 1) |- ( ph -> ( th <-> ch ) ) ;
	step 2 : wff = thm bitrd (step 1, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr3rd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( ch <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ta <-> th ) ) ;
}

proof of 3bitr3rd {
	step 1 : wff = thm bitr3d (hyp 1, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 2 : wff = thm bitr3d (hyp 3, step 1) |- ( ph -> ( ta <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr4d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( ta <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ta ) ) ;
}

proof of 3bitr4d {
	step 1 : wff = thm bitr4d (hyp 1, hyp 3) |- ( ph -> ( ps <-> ta ) ) ;
	step 2 : wff = thm bitrd (hyp 2, step 1) |- ( ph -> ( th <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr4rd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( ta <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ta <-> th ) ) ;
}

proof of 3bitr4rd {
	step 1 : wff = thm bitr4d (hyp 3, hyp 1) |- ( ph -> ( ta <-> ps ) ) ;
	step 2 : wff = thm bitr4d (step 1, hyp 2) |- ( ph -> ( ta <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3imtr3g (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ps <-> th ) ;
	hyp 3 : wff = |- ( ch <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ta ) ) ;
}

proof of 3imtr3g {
	step 1 : wff = thm imp (hyp 1) |- ( ( ph /\ ps ) -> ch ) ;
	step 2 : wff = thm anbi2i (hyp 2) |- ( ( ph /\ ps ) <-> ( ph /\ th ) ) ;
	step 3 : wff = thm 3imtr3i (step 1, step 2, hyp 3) |- ( ( ph /\ th ) -> ta ) ;
	step 4 : wff = thm ex (step 3) |- ( ph -> ( th -> ta ) ) ;
	qed prop 1 = step 4 ;
}

theorem 3imtr4g (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ps ) ;
	hyp 3 : wff = |- ( ta <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th -> ta ) ) ;
}

proof of 3imtr4g {
	step 1 : wff = thm bicomi (hyp 2) |- ( ps <-> th ) ;
	step 2 : wff = thm bicomi (hyp 3) |- ( ch <-> ta ) ;
	step 3 : wff = thm 3imtr3g (hyp 1, step 1, step 2) |- ( ph -> ( th -> ta ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3bitr3g (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ps <-> th ) ;
	hyp 3 : wff = |- ( ch <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ta ) ) ;
}

proof of 3bitr3g {
	step 1 : wff = thm syl5bbr (hyp 1, hyp 2) |- ( ph -> ( th <-> ch ) ) ;
	step 2 : wff = thm syl6bb (step 1, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3bitr4g (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th <-> ps ) ;
	hyp 3 : wff = |- ( ta <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( th <-> ta ) ) ;
}

proof of 3bitr4g {
	step 1 : wff = thm syl5bb (hyp 1, hyp 2) |- ( ph -> ( th <-> ch ) ) ;
	step 2 : wff = thm syl6bbr (step 1, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	qed prop 1 = step 2 ;
}

theorem prth (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ( ph /\ ch ) -> ( ps /\ th ) ) ) ;
}

proof of prth {
	step 1 : wff = thm pm3_2 () |- ( ps -> ( th -> ( ps /\ th ) ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( ps -> ( ( ch -> th ) -> ( ch -> ( ps /\ th ) ) ) ) ;
	step 3 : wff = thm imim2i (step 2) |- ( ( ph -> ps ) -> ( ph -> ( ( ch -> th ) -> ( ch -> ( ps /\ th ) ) ) ) ) ;
	step 4 : wff = thm com23 (step 3) |- ( ( ph -> ps ) -> ( ( ch -> th ) -> ( ph -> ( ch -> ( ps /\ th ) ) ) ) ) ;
	step 5 : wff = thm imp4b (step 4) |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ( ph /\ ch ) -> ( ps /\ th ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm3_48 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ( ph \/ ch ) -> ( ps \/ th ) ) ) ;
}

proof of pm3_48 {
	step 1 : wff = thm pm3_26 () |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm con3d (step 1) |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( -. ps -> -. ph ) ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ch -> th ) ) ;
	step 4 : wff = thm imim12d (step 2, step 3) |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ( -. ph -> ch ) -> ( -. ps -> th ) ) ) ;
	step 5 : wff = def df-or () |- ( ( ph \/ ch ) <-> ( -. ph -> ch ) ) ;
	step 6 : wff = def df-or () |- ( ( ps \/ th ) <-> ( -. ps -> th ) ) ;
	step 7 : wff = thm 3imtr4g (step 4, step 5, step 6) |- ( ( ( ph -> ps ) /\ ( ch -> th ) ) -> ( ( ph \/ ch ) -> ( ps \/ th ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem anim12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) ;
}

proof of anim12d {
	step 1 : wff = thm prth () |- ( ( ( ps -> ch ) /\ ( th -> ta ) ) -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) ;
	step 2 : wff = thm sylanc (step 1, hyp 1, hyp 2) |- ( ph -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem anim12ii (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ps -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ps -> ( ch /\ ta ) ) ) ;
}

proof of anim12ii {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> ch ) ) ;
	step 2 : wff = thm com12 (hyp 2) |- ( ps -> ( th -> ta ) ) ;
	step 3 : wff = thm anim12d (step 1, step 2) |- ( ps -> ( ( ph /\ th ) -> ( ch /\ ta ) ) ) ;
	step 4 : wff = thm com12 (step 3) |- ( ( ph /\ th ) -> ( ps -> ( ch /\ ta ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem anim1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th ) -> ( ch /\ th ) ) ) ;
}

proof of anim1d {
	step 1 : wff = thm idd () |- ( ph -> ( th -> th ) ) ;
	step 2 : wff = thm anim12d (hyp 1, step 1) |- ( ph -> ( ( ps /\ th ) -> ( ch /\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem anim2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th /\ ps ) -> ( th /\ ch ) ) ) ;
}

proof of anim2d {
	step 1 : wff = thm idd () |- ( ph -> ( th -> th ) ) ;
	step 2 : wff = thm anim12d (step 1, hyp 1) |- ( ph -> ( ( th /\ ps ) -> ( th /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_45 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ph /\ ch ) -> ( ps /\ ch ) ) ) ;
}

proof of pm3_45 {
	step 1 : wff = thm id () |- ( ( ph -> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm anim1d (step 1) |- ( ( ph -> ps ) -> ( ( ph /\ ch ) -> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem im2anan9 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta -> et ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) ;
}

proof of im2anan9 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ th ) -> ( ta -> et ) ) ;
	step 3 : wff = thm anim12d (step 1, step 2) |- ( ( ph /\ th ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem im2anan9r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta -> et ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ph ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) ;
}

proof of im2anan9r {
	step 1 : wff = thm adantl (hyp 1) |- ( ( th /\ ph ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm adantr (hyp 2) |- ( ( th /\ ph ) -> ( ta -> et ) ) ;
	step 3 : wff = thm anim12d (step 1, step 2) |- ( ( th /\ ph ) -> ( ( ps /\ ta ) -> ( ch /\ et ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem orim12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) ;
}

proof of orim12d {
	step 1 : wff = thm pm3_48 () |- ( ( ( ps -> ch ) /\ ( th -> ta ) ) -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) ;
	step 2 : wff = thm sylanc (step 1, hyp 1, hyp 2) |- ( ph -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem orim1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th ) -> ( ch \/ th ) ) ) ;
}

proof of orim1d {
	step 1 : wff = thm idd () |- ( ph -> ( th -> th ) ) ;
	step 2 : wff = thm orim12d (hyp 1, step 1) |- ( ph -> ( ( ps \/ th ) -> ( ch \/ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem orim2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th \/ ps ) -> ( th \/ ch ) ) ) ;
}

proof of orim2d {
	step 1 : wff = thm idd () |- ( ph -> ( th -> th ) ) ;
	step 2 : wff = thm orim12d (step 1, hyp 1) |- ( ph -> ( ( th \/ ps ) -> ( th \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem orim2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) ;
}

proof of orim2 {
	step 1 : wff = thm id () |- ( ( ps -> ch ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm orim2d (step 1) |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_38 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) ;
}

proof of pm2_38 {
	step 1 : wff = thm id () |- ( ( ps -> ch ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm orim1d (step 1) |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_36 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ch \/ ph ) ) ) ;
}

proof of pm2_36 {
	step 1 : wff = thm pm2_38 () |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) ;
	step 2 : wff = thm pm1_4 () |- ( ( ph \/ ps ) -> ( ps \/ ph ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( ( ps -> ch ) -> ( ( ph \/ ps ) -> ( ch \/ ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_37 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ph \/ ch ) ) ) ;
}

proof of pm2_37 {
	step 1 : wff = thm pm2_38 () |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ch \/ ph ) ) ) ;
	step 2 : wff = thm pm1_4 () |- ( ( ch \/ ph ) -> ( ph \/ ch ) ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ( ps -> ch ) -> ( ( ps \/ ph ) -> ( ph \/ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_73 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ( ph \/ ps ) \/ ch ) -> ( ps \/ ch ) ) ) ;
}

proof of pm2_73 {
	step 1 : wff = thm pm2_621 () |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) ;
	step 2 : wff = thm orim1d (step 1) |- ( ( ph -> ps ) -> ( ( ( ph \/ ps ) \/ ch ) -> ( ps \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_74 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> ph ) -> ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ch ) ) ) ;
}

proof of pm2_74 {
	step 1 : wff = thm orel2 () |- ( -. ps -> ( ( ph \/ ps ) -> ph ) ) ;
	step 2 : wff = thm orim1d (step 1) |- ( -. ps -> ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ch ) ) ) ;
	step 3 : wff = thm orc () |- ( ph -> ( ph \/ ch ) ) ;
	step 4 : wff = thm a1d (step 3) |- ( ph -> ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ch ) ) ) ;
	step 5 : wff = thm ja (step 2, step 4) |- ( ( ps -> ph ) -> ( ( ( ph \/ ps ) \/ ch ) -> ( ph \/ ch ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_75 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps ) -> ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) ;
}

proof of pm2_75 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ch ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ph -> ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) ;
	step 3 : wff = thm pm2_27 () |- ( ps -> ( ( ps -> ch ) -> ch ) ) ;
	step 4 : wff = thm orim2d (step 3) |- ( ps -> ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) ;
	step 5 : wff = thm jaoi (step 2, step 4) |- ( ( ph \/ ps ) -> ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_76 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps -> ch ) ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) ;
}

proof of pm2_76 {
	step 1 : wff = thm pm2_75 () |- ( ( ph \/ ps ) -> ( ( ph \/ ( ps -> ch ) ) -> ( ph \/ ch ) ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ( ph \/ ( ps -> ch ) ) -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_8 (ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ps \/ ch ) -> ( ( -. ch \/ th ) -> ( ps \/ th ) ) ) ;
}

proof of pm2_8 {
	step 1 : wff = thm orc () |- ( ps -> ( ps \/ th ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ps -> ( ( -. ch \/ th ) -> ( ps \/ th ) ) ) ;
	step 3 : wff = thm pm2_24 () |- ( ch -> ( -. ch -> ps ) ) ;
	step 4 : wff = thm orim1d (step 3) |- ( ch -> ( ( -. ch \/ th ) -> ( ps \/ th ) ) ) ;
	step 5 : wff = thm jaoi (step 2, step 4) |- ( ( ps \/ ch ) -> ( ( -. ch \/ th ) -> ( ps \/ th ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_81 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ps -> ( ch -> th ) ) -> ( ( ph \/ ps ) -> ( ( ph \/ ch ) -> ( ph \/ th ) ) ) ) ;
}

proof of pm2_81 {
	step 1 : wff = thm orim2 () |- ( ( ps -> ( ch -> th ) ) -> ( ( ph \/ ps ) -> ( ph \/ ( ch -> th ) ) ) ) ;
	step 2 : wff = thm pm2_76 () |- ( ( ph \/ ( ch -> th ) ) -> ( ( ph \/ ch ) -> ( ph \/ th ) ) ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ( ps -> ( ch -> th ) ) -> ( ( ph \/ ps ) -> ( ( ph \/ ch ) -> ( ph \/ th ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_82 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) \/ ch ) -> ( ( ( ph \/ -. ch ) \/ th ) -> ( ( ph \/ ps ) \/ th ) ) ) ;
}

proof of pm2_82 {
	step 1 : wff = axm ax-1 () |- ( ( ph \/ ps ) -> ( ( ph \/ -. ch ) -> ( ph \/ ps ) ) ) ;
	step 2 : wff = thm pm2_24 () |- ( ch -> ( -. ch -> ps ) ) ;
	step 3 : wff = thm orim2d (step 2) |- ( ch -> ( ( ph \/ -. ch ) -> ( ph \/ ps ) ) ) ;
	step 4 : wff = thm jaoi (step 1, step 3) |- ( ( ( ph \/ ps ) \/ ch ) -> ( ( ph \/ -. ch ) -> ( ph \/ ps ) ) ) ;
	step 5 : wff = thm orim1d (step 4) |- ( ( ( ph \/ ps ) \/ ch ) -> ( ( ( ph \/ -. ch ) \/ th ) -> ( ( ph \/ ps ) \/ th ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_85 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) -> ( ph \/ ( ps -> ch ) ) ) ;
}

proof of pm2_85 {
	step 1 : wff = thm imor () |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) <-> ( -. ( ph \/ ps ) \/ ( ph \/ ch ) ) ) ;
	step 2 : wff = thm pm2_48 () |- ( -. ( ph \/ ps ) -> ( ph \/ -. ps ) ) ;
	step 3 : wff = thm orim1i (step 2) |- ( ( -. ( ph \/ ps ) \/ ( ph \/ ch ) ) -> ( ( ph \/ -. ps ) \/ ( ph \/ ch ) ) ) ;
	step 4 : wff = thm sylbi (step 1, step 3) |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) -> ( ( ph \/ -. ps ) \/ ( ph \/ ch ) ) ) ;
	step 5 : wff = thm imor () |- ( ( ps -> ch ) <-> ( -. ps \/ ch ) ) ;
	step 6 : wff = thm orbi2i (step 5) |- ( ( ph \/ ( ps -> ch ) ) <-> ( ph \/ ( -. ps \/ ch ) ) ) ;
	step 7 : wff = thm orordi () |- ( ( ph \/ ( -. ps \/ ch ) ) <-> ( ( ph \/ -. ps ) \/ ( ph \/ ch ) ) ) ;
	step 8 : wff = thm bitr2i (step 6, step 7) |- ( ( ( ph \/ -. ps ) \/ ( ph \/ ch ) ) <-> ( ph \/ ( ps -> ch ) ) ) ;
	step 9 : wff = thm sylib (step 4, step 8) |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) -> ( ph \/ ( ps -> ch ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem pm3_2ni (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	hyp 2 : wff = |- -. ps ;
	-----------------------
	prop 1 : wff = |- -. ( ph \/ ps ) ;
}

proof of pm3_2ni {
	step 1 : wff = thm pm3_2i (hyp 1, hyp 2) |- ( -. ph /\ -. ps ) ;
	step 2 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- -. ( ph \/ ps ) ;
	qed prop 1 = step 3 ;
}

theorem orabs (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) ;
}

proof of orabs {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm ancri (step 1) |- ( ph -> ( ( ph \/ ps ) /\ ph ) ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ( ph \/ ps ) /\ ph ) -> ph ) ;
	step 4 : wff = thm impbii (step 2, step 3) |- ( ph <-> ( ( ph \/ ps ) /\ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem oranabs (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ph /\ ps ) ) ;
}

proof of oranabs {
	step 1 : wff = thm pm5_61 () |- ( ( ( ph \/ -. ps ) /\ -. -. ps ) <-> ( ph /\ -. -. ps ) ) ;
	step 2 : wff = thm notnot () |- ( ps <-> -. -. ps ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ( ph \/ -. ps ) /\ -. -. ps ) ) ;
	step 4 : wff = thm notnot () |- ( ps <-> -. -. ps ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( ph /\ ps ) <-> ( ph /\ -. -. ps ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 3, step 5) |- ( ( ( ph \/ -. ps ) /\ ps ) <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm5_74 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
}

proof of pm5_74 {
	step 1 : wff = thm bi1 () |- ( ( ps <-> ch ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm imim3i (step 1) |- ( ( ph -> ( ps <-> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 3 : wff = thm bi2 () |- ( ( ps <-> ch ) -> ( ch -> ps ) ) ;
	step 4 : wff = thm imim3i (step 3) |- ( ( ph -> ( ps <-> ch ) ) -> ( ( ph -> ch ) -> ( ph -> ps ) ) ) ;
	step 5 : wff = thm impbid (step 2, step 4) |- ( ( ph -> ( ps <-> ch ) ) -> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 6 : wff = thm bi1 () |- ( ( ( ph -> ps ) <-> ( ph -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 7 : wff = thm pm2_86d (step 6) |- ( ( ( ph -> ps ) <-> ( ph -> ch ) ) -> ( ph -> ( ps -> ch ) ) ) ;
	step 8 : wff = thm bi2 () |- ( ( ( ph -> ps ) <-> ( ph -> ch ) ) -> ( ( ph -> ch ) -> ( ph -> ps ) ) ) ;
	step 9 : wff = thm pm2_86d (step 8) |- ( ( ( ph -> ps ) <-> ( ph -> ch ) ) -> ( ph -> ( ch -> ps ) ) ) ;
	step 10 : wff = thm anim12d (step 7, step 9) |- ( ( ( ph -> ps ) <-> ( ph -> ch ) ) -> ( ( ph /\ ph ) -> ( ( ps -> ch ) /\ ( ch -> ps ) ) ) ) ;
	step 11 : wff = thm pm4_24 () |- ( ph <-> ( ph /\ ph ) ) ;
	step 12 : wff = thm dfbi2 () |- ( ( ps <-> ch ) <-> ( ( ps -> ch ) /\ ( ch -> ps ) ) ) ;
	step 13 : wff = thm 3imtr4g (step 10, step 11, step 12) |- ( ( ( ph -> ps ) <-> ( ph -> ch ) ) -> ( ph -> ( ps <-> ch ) ) ) ;
	step 14 : wff = thm impbii (step 5, step 13) |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem pm5_74i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph -> ch ) ) ;
}

proof of pm5_74i {
	step 1 : wff = thm pm5_74 () |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( ( ph -> ps ) <-> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_74d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
}

proof of pm5_74d {
	step 1 : wff = thm pm5_74 () |- ( ( ps -> ( ch <-> th ) ) <-> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_74da (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
}

proof of pm5_74da {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
	step 2 : wff = thm pm5_74d (step 1) |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_74ri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph -> ps ) <-> ( ph -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of pm5_74ri {
	step 1 : wff = thm pm5_74 () |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_74rd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
}

proof of pm5_74rd {
	step 1 : wff = thm pm5_74 () |- ( ( ps -> ( ch <-> th ) ) <-> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpbidi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( th -> ( ph -> ps ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ( ph -> ch ) ) ;
}

proof of mpbidi {
	step 1 : wff = thm pm5_74i (hyp 2) |- ( ( ph -> ps ) <-> ( ph -> ch ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( th -> ( ph -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem ibib (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) ;
}

proof of ibib {
	step 1 : wff = thm pm3_4 () |- ( ( ph /\ ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 3 : wff = thm a1d (step 2) |- ( ( ph /\ ps ) -> ( ps -> ph ) ) ;
	step 4 : wff = thm impbid (step 1, step 3) |- ( ( ph /\ ps ) -> ( ph <-> ps ) ) ;
	step 5 : wff = thm ex (step 4) |- ( ph -> ( ps -> ( ph <-> ps ) ) ) ;
	step 6 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 7 : wff = thm com12 (step 6) |- ( ph -> ( ( ph <-> ps ) -> ps ) ) ;
	step 8 : wff = thm impbid (step 5, step 7) |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) ;
	step 9 : wff = thm pm5_74i (step 8) |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem ibibr (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph -> ( ps <-> ph ) ) ) ;
}

proof of ibibr {
	step 1 : wff = thm ibib () |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm bicom () |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( ph -> ( ph <-> ps ) ) <-> ( ph -> ( ps <-> ph ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ph -> ps ) <-> ( ph -> ( ps <-> ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem ibi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of ibi {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ph -> ps ) ) ;
	step 2 : wff = thm pm2_43i (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ibir (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ph ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of ibir {
	step 1 : wff = thm bicomd (hyp 1) |- ( ph -> ( ph <-> ps ) ) ;
	step 2 : wff = thm ibi (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ibd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
}

proof of ibd {
	step 1 : wff = thm ibib () |- ( ( ps -> ch ) <-> ( ps -> ( ps <-> ch ) ) ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> ( ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_501 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) ;
}

proof of pm5_501 {
	step 1 : wff = thm ibib () |- ( ( ph -> ps ) <-> ( ph -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm pm5_74ri (step 1) |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem ordi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps /\ ch ) ) <-> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) ) ;
}

proof of ordi {
	step 1 : wff = thm pm3_26 () |- ( ( ps /\ ch ) -> ps ) ;
	step 2 : wff = thm orim2i (step 1) |- ( ( ph \/ ( ps /\ ch ) ) -> ( ph \/ ps ) ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ps /\ ch ) -> ch ) ;
	step 4 : wff = thm orim2i (step 3) |- ( ( ph \/ ( ps /\ ch ) ) -> ( ph \/ ch ) ) ;
	step 5 : wff = thm jca (step 2, step 4) |- ( ( ph \/ ( ps /\ ch ) ) -> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) ) ;
	step 6 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 7 : wff = thm pm3_43i () |- ( ( -. ph -> ps ) -> ( ( -. ph -> ch ) -> ( -. ph -> ( ps /\ ch ) ) ) ) ;
	step 8 : wff = def df-or () |- ( ( ph \/ ch ) <-> ( -. ph -> ch ) ) ;
	step 9 : wff = def df-or () |- ( ( ph \/ ( ps /\ ch ) ) <-> ( -. ph -> ( ps /\ ch ) ) ) ;
	step 10 : wff = thm 3imtr4g (step 7, step 8, step 9) |- ( ( -. ph -> ps ) -> ( ( ph \/ ch ) -> ( ph \/ ( ps /\ ch ) ) ) ) ;
	step 11 : wff = thm sylbi (step 6, step 10) |- ( ( ph \/ ps ) -> ( ( ph \/ ch ) -> ( ph \/ ( ps /\ ch ) ) ) ) ;
	step 12 : wff = thm imp (step 11) |- ( ( ( ph \/ ps ) /\ ( ph \/ ch ) ) -> ( ph \/ ( ps /\ ch ) ) ) ;
	step 13 : wff = thm impbii (step 5, step 12) |- ( ( ph \/ ( ps /\ ch ) ) <-> ( ( ph \/ ps ) /\ ( ph \/ ch ) ) ) ;
	qed prop 1 = step 13 ;
}

theorem ordir (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) \/ ch ) <-> ( ( ph \/ ch ) /\ ( ps \/ ch ) ) ) ;
}

proof of ordir {
	step 1 : wff = thm ordi () |- ( ( ch \/ ( ph /\ ps ) ) <-> ( ( ch \/ ph ) /\ ( ch \/ ps ) ) ) ;
	step 2 : wff = thm orcom () |- ( ( ( ph /\ ps ) \/ ch ) <-> ( ch \/ ( ph /\ ps ) ) ) ;
	step 3 : wff = thm orcom () |- ( ( ph \/ ch ) <-> ( ch \/ ph ) ) ;
	step 4 : wff = thm orcom () |- ( ( ps \/ ch ) <-> ( ch \/ ps ) ) ;
	step 5 : wff = thm anbi12i (step 3, step 4) |- ( ( ( ph \/ ch ) /\ ( ps \/ ch ) ) <-> ( ( ch \/ ph ) /\ ( ch \/ ps ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 2, step 5) |- ( ( ( ph /\ ps ) \/ ch ) <-> ( ( ph \/ ch ) /\ ( ps \/ ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem jcab (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps /\ ch ) ) <-> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
}

proof of jcab {
	step 1 : wff = thm ordi () |- ( ( -. ph \/ ( ps /\ ch ) ) <-> ( ( -. ph \/ ps ) /\ ( -. ph \/ ch ) ) ) ;
	step 2 : wff = thm imor () |- ( ( ph -> ( ps /\ ch ) ) <-> ( -. ph \/ ( ps /\ ch ) ) ) ;
	step 3 : wff = thm imor () |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) ;
	step 4 : wff = thm imor () |- ( ( ph -> ch ) <-> ( -. ph \/ ch ) ) ;
	step 5 : wff = thm anbi12i (step 3, step 4) |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) <-> ( ( -. ph \/ ps ) /\ ( -. ph \/ ch ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 2, step 5) |- ( ( ph -> ( ps /\ ch ) ) <-> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm4_76 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) <-> ( ph -> ( ps /\ ch ) ) ) ;
}

proof of pm4_76 {
	step 1 : wff = thm jcab () |- ( ( ph -> ( ps /\ ch ) ) <-> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) <-> ( ph -> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem jcad (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch /\ th ) ) ) ;
}

proof of jcad {
	step 1 : wff = thm imp (hyp 1) |- ( ( ph /\ ps ) -> ch ) ;
	step 2 : wff = thm imp (hyp 2) |- ( ( ph /\ ps ) -> th ) ;
	step 3 : wff = thm jca (step 1, step 2) |- ( ( ph /\ ps ) -> ( ch /\ th ) ) ;
	step 4 : wff = thm ex (step 3) |- ( ph -> ( ps -> ( ch /\ th ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem jctild (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( th /\ ch ) ) ) ;
}

proof of jctild {
	step 1 : wff = thm a1d (hyp 2) |- ( ph -> ( ps -> th ) ) ;
	step 2 : wff = thm jcad (step 1, hyp 1) |- ( ph -> ( ps -> ( th /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem jctird (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch /\ th ) ) ) ;
}

proof of jctird {
	step 1 : wff = thm a1d (hyp 2) |- ( ph -> ( ps -> th ) ) ;
	step 2 : wff = thm jcad (hyp 1, step 1) |- ( ph -> ( ps -> ( ch /\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_43 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) -> ( ph -> ( ps /\ ch ) ) ) ;
}

proof of pm3_43 {
	step 1 : wff = thm jcab () |- ( ( ph -> ( ps /\ ch ) ) <-> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) -> ( ph -> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem andi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps \/ ch ) ) <-> ( ( ph /\ ps ) \/ ( ph /\ ch ) ) ) ;
}

proof of andi {
	step 1 : wff = thm ordi () |- ( ( -. ph \/ ( -. ps /\ -. ch ) ) <-> ( ( -. ph \/ -. ps ) /\ ( -. ph \/ -. ch ) ) ) ;
	step 2 : wff = thm ioran () |- ( -. ( ps \/ ch ) <-> ( -. ps /\ -. ch ) ) ;
	step 3 : wff = thm orbi2i (step 2) |- ( ( -. ph \/ -. ( ps \/ ch ) ) <-> ( -. ph \/ ( -. ps /\ -. ch ) ) ) ;
	step 4 : wff = thm ianor () |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) ;
	step 5 : wff = thm ianor () |- ( -. ( ph /\ ch ) <-> ( -. ph \/ -. ch ) ) ;
	step 6 : wff = thm anbi12i (step 4, step 5) |- ( ( -. ( ph /\ ps ) /\ -. ( ph /\ ch ) ) <-> ( ( -. ph \/ -. ps ) /\ ( -. ph \/ -. ch ) ) ) ;
	step 7 : wff = thm 3bitr4i (step 1, step 3, step 6) |- ( ( -. ph \/ -. ( ps \/ ch ) ) <-> ( -. ( ph /\ ps ) /\ -. ( ph /\ ch ) ) ) ;
	step 8 : wff = thm notbii (step 7) |- ( -. ( -. ph \/ -. ( ps \/ ch ) ) <-> -. ( -. ( ph /\ ps ) /\ -. ( ph /\ ch ) ) ) ;
	step 9 : wff = thm anor () |- ( ( ph /\ ( ps \/ ch ) ) <-> -. ( -. ph \/ -. ( ps \/ ch ) ) ) ;
	step 10 : wff = thm oran () |- ( ( ( ph /\ ps ) \/ ( ph /\ ch ) ) <-> -. ( -. ( ph /\ ps ) /\ -. ( ph /\ ch ) ) ) ;
	step 11 : wff = thm 3bitr4i (step 8, step 9, step 10) |- ( ( ph /\ ( ps \/ ch ) ) <-> ( ( ph /\ ps ) \/ ( ph /\ ch ) ) ) ;
	qed prop 1 = step 11 ;
}

theorem andir (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) /\ ch ) <-> ( ( ph /\ ch ) \/ ( ps /\ ch ) ) ) ;
}

proof of andir {
	step 1 : wff = thm andi () |- ( ( ch /\ ( ph \/ ps ) ) <-> ( ( ch /\ ph ) \/ ( ch /\ ps ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( ( ph \/ ps ) /\ ch ) <-> ( ch /\ ( ph \/ ps ) ) ) ;
	step 3 : wff = thm ancom () |- ( ( ph /\ ch ) <-> ( ch /\ ph ) ) ;
	step 4 : wff = thm ancom () |- ( ( ps /\ ch ) <-> ( ch /\ ps ) ) ;
	step 5 : wff = thm orbi12i (step 3, step 4) |- ( ( ( ph /\ ch ) \/ ( ps /\ ch ) ) <-> ( ( ch /\ ph ) \/ ( ch /\ ps ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 2, step 5) |- ( ( ( ph \/ ps ) /\ ch ) <-> ( ( ph /\ ch ) \/ ( ps /\ ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem orddi (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <-> ( ( ( ph \/ ch ) /\ ( ph \/ th ) ) /\ ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ) ;
}

proof of orddi {
	step 1 : wff = thm ordir () |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <-> ( ( ph \/ ( ch /\ th ) ) /\ ( ps \/ ( ch /\ th ) ) ) ) ;
	step 2 : wff = thm ordi () |- ( ( ph \/ ( ch /\ th ) ) <-> ( ( ph \/ ch ) /\ ( ph \/ th ) ) ) ;
	step 3 : wff = thm ordi () |- ( ( ps \/ ( ch /\ th ) ) <-> ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ;
	step 4 : wff = thm anbi12i (step 2, step 3) |- ( ( ( ph \/ ( ch /\ th ) ) /\ ( ps \/ ( ch /\ th ) ) ) <-> ( ( ( ph \/ ch ) /\ ( ph \/ th ) ) /\ ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <-> ( ( ( ph \/ ch ) /\ ( ph \/ th ) ) /\ ( ( ps \/ ch ) /\ ( ps \/ th ) ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem anddi (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) /\ ( ch \/ th ) ) <-> ( ( ( ph /\ ch ) \/ ( ph /\ th ) ) \/ ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ) ;
}

proof of anddi {
	step 1 : wff = thm andir () |- ( ( ( ph \/ ps ) /\ ( ch \/ th ) ) <-> ( ( ph /\ ( ch \/ th ) ) \/ ( ps /\ ( ch \/ th ) ) ) ) ;
	step 2 : wff = thm andi () |- ( ( ph /\ ( ch \/ th ) ) <-> ( ( ph /\ ch ) \/ ( ph /\ th ) ) ) ;
	step 3 : wff = thm andi () |- ( ( ps /\ ( ch \/ th ) ) <-> ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ;
	step 4 : wff = thm orbi12i (step 2, step 3) |- ( ( ( ph /\ ( ch \/ th ) ) \/ ( ps /\ ( ch \/ th ) ) ) <-> ( ( ( ph /\ ch ) \/ ( ph /\ th ) ) \/ ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( ( ( ph \/ ps ) /\ ( ch \/ th ) ) <-> ( ( ( ph /\ ch ) \/ ( ph /\ th ) ) \/ ( ( ps /\ ch ) \/ ( ps /\ th ) ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem bibi2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch <-> ph ) <-> ( ch <-> ps ) ) ;
}

proof of bibi2i {
	step 1 : wff = thm dfbi2 () |- ( ( ch <-> ph ) <-> ( ( ch -> ph ) /\ ( ph -> ch ) ) ) ;
	step 2 : wff = thm imbi1i (hyp 1) |- ( ( ph -> ch ) <-> ( ps -> ch ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( ( ch -> ph ) /\ ( ph -> ch ) ) <-> ( ( ch -> ph ) /\ ( ps -> ch ) ) ) ;
	step 4 : wff = thm imbi2i (hyp 1) |- ( ( ch -> ph ) <-> ( ch -> ps ) ) ;
	step 5 : wff = thm anbi1i (step 4) |- ( ( ( ch -> ph ) /\ ( ps -> ch ) ) <-> ( ( ch -> ps ) /\ ( ps -> ch ) ) ) ;
	step 6 : wff = thm dfbi2 () |- ( ( ch <-> ps ) <-> ( ( ch -> ps ) /\ ( ps -> ch ) ) ) ;
	step 7 : wff = thm bitr4i (step 5, step 6) |- ( ( ( ch -> ph ) /\ ( ps -> ch ) ) <-> ( ch <-> ps ) ) ;
	step 8 : wff = thm 3bitri (step 1, step 3, step 7) |- ( ( ch <-> ph ) <-> ( ch <-> ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem bibi1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ;
}

proof of bibi1i {
	step 1 : wff = thm bicom () |- ( ( ph <-> ch ) <-> ( ch <-> ph ) ) ;
	step 2 : wff = thm bibi2i (hyp 1) |- ( ( ch <-> ph ) <-> ( ch <-> ps ) ) ;
	step 3 : wff = thm bicom () |- ( ( ch <-> ps ) <-> ( ps <-> ch ) ) ;
	step 4 : wff = thm 3bitri (step 1, step 2, step 3) |- ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem bibi12i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph <-> ch ) <-> ( ps <-> th ) ) ;
}

proof of bibi12i {
	step 1 : wff = thm bibi2i (hyp 2) |- ( ( ph <-> ch ) <-> ( ph <-> th ) ) ;
	step 2 : wff = thm bibi1i (hyp 1) |- ( ( ph <-> th ) <-> ( ps <-> th ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph <-> ch ) <-> ( ps <-> th ) ) ;
	qed prop 1 = step 3 ;
}

theorem notbid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps <-> -. ch ) ) ;
}

proof of notbid {
	step 1 : wff = thm notbi () |- ( ( ps <-> ch ) <-> ( -. ps <-> -. ch ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( -. ps <-> -. ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem imbi2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th -> ps ) <-> ( th -> ch ) ) ) ;
}

proof of imbi2d {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( th -> ( ps <-> ch ) ) ) ;
	step 2 : wff = thm pm5_74d (step 1) |- ( ph -> ( ( th -> ps ) <-> ( th -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imbi1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) ;
}

proof of imbi1d {
	step 1 : wff = thm notbid (hyp 1) |- ( ph -> ( -. ps <-> -. ch ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( ph -> ( ( -. th -> -. ps ) <-> ( -. th -> -. ch ) ) ) ;
	step 3 : wff = thm con34b () |- ( ( ps -> th ) <-> ( -. th -> -. ps ) ) ;
	step 4 : wff = thm con34b () |- ( ( ch -> th ) <-> ( -. th -> -. ch ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem orbi2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th \/ ps ) <-> ( th \/ ch ) ) ) ;
}

proof of orbi2d {
	step 1 : wff = thm imbi2d (hyp 1) |- ( ph -> ( ( -. th -> ps ) <-> ( -. th -> ch ) ) ) ;
	step 2 : wff = def df-or () |- ( ( th \/ ps ) <-> ( -. th -> ps ) ) ;
	step 3 : wff = def df-or () |- ( ( th \/ ch ) <-> ( -. th -> ch ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( ( th \/ ps ) <-> ( th \/ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem orbi1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ th ) ) ) ;
}

proof of orbi1d {
	step 1 : wff = thm orbi2d (hyp 1) |- ( ph -> ( ( th \/ ps ) <-> ( th \/ ch ) ) ) ;
	step 2 : wff = thm orcom () |- ( ( ps \/ th ) <-> ( th \/ ps ) ) ;
	step 3 : wff = thm orcom () |- ( ( ch \/ th ) <-> ( th \/ ch ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ th ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem anbi2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) ;
}

proof of anbi2d {
	step 1 : wff = thm biimpd (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm anim2d (step 1) |- ( ph -> ( ( th /\ ps ) -> ( th /\ ch ) ) ) ;
	step 3 : wff = thm biimprd (hyp 1) |- ( ph -> ( ch -> ps ) ) ;
	step 4 : wff = thm anim2d (step 3) |- ( ph -> ( ( th /\ ch ) -> ( th /\ ps ) ) ) ;
	step 5 : wff = thm impbid (step 2, step 4) |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem anbi1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) ;
}

proof of anbi1d {
	step 1 : wff = thm anbi2d (hyp 1) |- ( ph -> ( ( th /\ ps ) <-> ( th /\ ch ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( ps /\ th ) <-> ( th /\ ps ) ) ;
	step 3 : wff = thm ancom () |- ( ( ch /\ th ) <-> ( th /\ ch ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem bibi2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th <-> ps ) <-> ( th <-> ch ) ) ) ;
}

proof of bibi2d {
	step 1 : wff = thm imbi2d (hyp 1) |- ( ph -> ( ( th -> ps ) <-> ( th -> ch ) ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( ph -> ( ( ( th -> ps ) /\ ( ps -> th ) ) <-> ( ( th -> ch ) /\ ( ps -> th ) ) ) ) ;
	step 3 : wff = thm imbi1d (hyp 1) |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) ;
	step 4 : wff = thm anbi2d (step 3) |- ( ph -> ( ( ( th -> ch ) /\ ( ps -> th ) ) <-> ( ( th -> ch ) /\ ( ch -> th ) ) ) ) ;
	step 5 : wff = thm bitrd (step 2, step 4) |- ( ph -> ( ( ( th -> ps ) /\ ( ps -> th ) ) <-> ( ( th -> ch ) /\ ( ch -> th ) ) ) ) ;
	step 6 : wff = thm dfbi2 () |- ( ( th <-> ps ) <-> ( ( th -> ps ) /\ ( ps -> th ) ) ) ;
	step 7 : wff = thm dfbi2 () |- ( ( th <-> ch ) <-> ( ( th -> ch ) /\ ( ch -> th ) ) ) ;
	step 8 : wff = thm 3bitr4g (step 5, step 6, step 7) |- ( ph -> ( ( th <-> ps ) <-> ( th <-> ch ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem bibi1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> th ) ) ) ;
}

proof of bibi1d {
	step 1 : wff = thm bibi2d (hyp 1) |- ( ph -> ( ( th <-> ps ) <-> ( th <-> ch ) ) ) ;
	step 2 : wff = thm bicom () |- ( ( ps <-> th ) <-> ( th <-> ps ) ) ;
	step 3 : wff = thm bicom () |- ( ( ch <-> th ) <-> ( th <-> ch ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> th ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem orbi1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ) ;
}

proof of orbi1 {
	step 1 : wff = thm id () |- ( ( ph <-> ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm orbi1d (step 1) |- ( ( ph <-> ps ) -> ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem anbi1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ) ;
}

proof of anbi1 {
	step 1 : wff = thm id () |- ( ( ph <-> ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( ( ph <-> ps ) -> ( ( ph /\ ch ) <-> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem bitr (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph <-> ps ) /\ ( ps <-> ch ) ) -> ( ph <-> ch ) ) ;
}

proof of bitr {
	step 1 : wff = thm id () |- ( ( ph <-> ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm bibi1d (step 1) |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ) ;
	step 3 : wff = thm biimpar (step 2) |- ( ( ( ph <-> ps ) /\ ( ps <-> ch ) ) -> ( ph <-> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem imbi1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ( ph -> ch ) <-> ( ps -> ch ) ) ) ;
}

proof of imbi1 {
	step 1 : wff = thm id () |- ( ( ph <-> ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm imbi1d (step 1) |- ( ( ph <-> ps ) -> ( ( ph -> ch ) <-> ( ps -> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imbi2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ( ch -> ph ) <-> ( ch -> ps ) ) ) ;
}

proof of imbi2 {
	step 1 : wff = axm ax-1 () |- ( ( ph <-> ps ) -> ( ch -> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm pm5_74d (step 1) |- ( ( ph <-> ps ) -> ( ( ch -> ph ) <-> ( ch -> ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem bibi1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ) ;
}

proof of bibi1 {
	step 1 : wff = thm id () |- ( ( ph <-> ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm bibi1d (step 1) |- ( ( ph <-> ps ) -> ( ( ph <-> ch ) <-> ( ps <-> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem imbi12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps -> th ) <-> ( ch -> ta ) ) ) ;
}

proof of imbi12d {
	step 1 : wff = thm imbi1d (hyp 1) |- ( ph -> ( ( ps -> th ) <-> ( ch -> th ) ) ) ;
	step 2 : wff = thm imbi2d (hyp 2) |- ( ph -> ( ( ch -> th ) <-> ( ch -> ta ) ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( ( ps -> th ) <-> ( ch -> ta ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem orbi12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ ta ) ) ) ;
}

proof of orbi12d {
	step 1 : wff = thm orbi1d (hyp 1) |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ th ) ) ) ;
	step 2 : wff = thm orbi2d (hyp 2) |- ( ph -> ( ( ch \/ th ) <-> ( ch \/ ta ) ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ ta ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem anbi12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ ta ) ) ) ;
}

proof of anbi12d {
	step 1 : wff = thm anbi1d (hyp 1) |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ th ) ) ) ;
	step 2 : wff = thm anbi2d (hyp 2) |- ( ph -> ( ( ch /\ th ) <-> ( ch /\ ta ) ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ ta ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem bibi12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> ta ) ) ) ;
}

proof of bibi12d {
	step 1 : wff = thm bibi1d (hyp 1) |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> th ) ) ) ;
	step 2 : wff = thm bibi2d (hyp 2) |- ( ph -> ( ( ch <-> th ) <-> ( ch <-> ta ) ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( ( ps <-> th ) <-> ( ch <-> ta ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_39 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ( ph \/ ps ) <-> ( ch \/ th ) ) ) ;
}

proof of pm4_39 {
	step 1 : wff = thm pm3_26 () |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ph <-> ch ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ps <-> th ) ) ;
	step 3 : wff = thm orbi12d (step 1, step 2) |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ( ph \/ ps ) <-> ( ch \/ th ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_38 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ( ph /\ ps ) <-> ( ch /\ th ) ) ) ;
}

proof of pm4_38 {
	step 1 : wff = thm pm3_26 () |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ph <-> ch ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ps <-> th ) ) ;
	step 3 : wff = thm anbi12d (step 1, step 2) |- ( ( ( ph <-> ch ) /\ ( ps <-> th ) ) -> ( ( ph /\ ps ) <-> ( ch /\ th ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem bi2anan9 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta <-> et ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) ;
}

proof of bi2anan9 {
	step 1 : wff = thm anbi1d (hyp 1) |- ( ph -> ( ( ps /\ ta ) <-> ( ch /\ ta ) ) ) ;
	step 2 : wff = thm anbi2d (hyp 2) |- ( th -> ( ( ch /\ ta ) <-> ( ch /\ et ) ) ) ;
	step 3 : wff = thm sylan9bb (step 1, step 2) |- ( ( ph /\ th ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem bi2anan9r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta <-> et ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ph ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) ;
}

proof of bi2anan9r {
	step 1 : wff = thm bi2anan9 (hyp 1, hyp 2) |- ( ( ph /\ th ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( th /\ ph ) -> ( ( ps /\ ta ) <-> ( ch /\ et ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem bi2bian9 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ta <-> et ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th ) -> ( ( ps <-> ta ) <-> ( ch <-> et ) ) ) ;
}

proof of bi2bian9 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ th ) -> ( ta <-> et ) ) ;
	step 3 : wff = thm bibi12d (step 1, step 2) |- ( ( ph /\ th ) -> ( ( ps <-> ta ) <-> ( ch <-> et ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_71 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) ;
}

proof of pm4_71 {
	step 1 : wff = thm ancl () |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 3 : wff = thm impbid1 (step 1, step 2) |- ( ( ph -> ps ) -> ( ph <-> ( ph /\ ps ) ) ) ;
	step 4 : wff = thm bi1 () |- ( ( ph <-> ( ph /\ ps ) ) -> ( ph -> ( ph /\ ps ) ) ) ;
	step 5 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 6 : wff = thm syl6 (step 4, step 5) |- ( ( ph <-> ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 7 : wff = thm impbii (step 3, step 6) |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem pm4_71r (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) ;
}

proof of pm4_71r {
	step 1 : wff = thm pm4_71 () |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 3 : wff = thm bibi2i (step 2) |- ( ( ph <-> ( ph /\ ps ) ) <-> ( ph <-> ( ps /\ ph ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm4_71i (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ( ph /\ ps ) ) ;
}

proof of pm4_71i {
	step 1 : wff = thm pm4_71 () |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( ph <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_71ri (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ( ps /\ ph ) ) ;
}

proof of pm4_71ri {
	step 1 : wff = thm pm4_71r () |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( ph <-> ( ps /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_71rd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ( ch /\ ps ) ) ) ;
}

proof of pm4_71rd {
	step 1 : wff = thm pm4_71r () |- ( ( ps -> ch ) <-> ( ps <-> ( ch /\ ps ) ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ps <-> ( ch /\ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_45 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph <-> ( ph /\ ( ph \/ ps ) ) ) ;
}

proof of pm4_45 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm pm4_71i (step 1) |- ( ph <-> ( ph /\ ( ph \/ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm4_72 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) ;
}

proof of pm4_72 {
	step 1 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 2 : wff = thm pm2_621 () |- ( ( ph -> ps ) -> ( ( ph \/ ps ) -> ps ) ) ;
	step 3 : wff = thm impbid2 (step 1, step 2) |- ( ( ph -> ps ) -> ( ps <-> ( ph \/ ps ) ) ) ;
	step 4 : wff = thm bi2 () |- ( ( ps <-> ( ph \/ ps ) ) -> ( ( ph \/ ps ) -> ps ) ) ;
	step 5 : wff = thm pm2_67 () |- ( ( ( ph \/ ps ) -> ps ) -> ( ph -> ps ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( ( ps <-> ( ph \/ ps ) ) -> ( ph -> ps ) ) ;
	step 7 : wff = thm impbii (step 3, step 6) |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem iba (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) ;
}

proof of iba {
	step 1 : wff = thm ancrb () |- ( ( ph -> ps ) <-> ( ph -> ( ps /\ ph ) ) ) ;
	step 2 : wff = thm pm5_74ri (step 1) |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem ibar (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) ;
}

proof of ibar {
	step 1 : wff = thm anclb () |- ( ( ph -> ps ) <-> ( ph -> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm pm5_74ri (step 1) |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_32 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
}

proof of pm5_32 {
	step 1 : wff = thm notbi () |- ( ( ps <-> ch ) <-> ( -. ps <-> -. ch ) ) ;
	step 2 : wff = thm imbi2i (step 1) |- ( ( ph -> ( ps <-> ch ) ) <-> ( ph -> ( -. ps <-> -. ch ) ) ) ;
	step 3 : wff = thm pm5_74 () |- ( ( ph -> ( -. ps <-> -. ch ) ) <-> ( ( ph -> -. ps ) <-> ( ph -> -. ch ) ) ) ;
	step 4 : wff = thm notbi () |- ( ( ( ph -> -. ps ) <-> ( ph -> -. ch ) ) <-> ( -. ( ph -> -. ps ) <-> -. ( ph -> -. ch ) ) ) ;
	step 5 : wff = thm 3bitri (step 2, step 3, step 4) |- ( ( ph -> ( ps <-> ch ) ) <-> ( -. ( ph -> -. ps ) <-> -. ( ph -> -. ch ) ) ) ;
	step 6 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 7 : wff = def df-an () |- ( ( ph /\ ch ) <-> -. ( ph -> -. ch ) ) ;
	step 8 : wff = thm bibi12i (step 6, step 7) |- ( ( ( ph /\ ps ) <-> ( ph /\ ch ) ) <-> ( -. ( ph -> -. ps ) <-> -. ( ph -> -. ch ) ) ) ;
	step 9 : wff = thm bitr4i (step 5, step 8) |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem pm5_32i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ;
}

proof of pm5_32i {
	step 1 : wff = thm pm5_32 () |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_32ri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) <-> ( ch /\ ph ) ) ;
}

proof of pm5_32ri {
	step 1 : wff = thm pm5_32i (hyp 1) |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ;
	step 2 : wff = thm ancom () |- ( ( ps /\ ph ) <-> ( ph /\ ps ) ) ;
	step 3 : wff = thm ancom () |- ( ( ch /\ ph ) <-> ( ph /\ ch ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( ( ps /\ ph ) <-> ( ch /\ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_32d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) ;
}

proof of pm5_32d {
	step 1 : wff = thm pm5_32 () |- ( ( ps -> ( ch <-> th ) ) <-> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_32rd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ch /\ ps ) <-> ( th /\ ps ) ) ) ;
}

proof of pm5_32rd {
	step 1 : wff = thm pm5_32d (hyp 1) |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( ch /\ ps ) <-> ( ps /\ ch ) ) ;
	step 3 : wff = thm ancom () |- ( ( th /\ ps ) <-> ( ps /\ th ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( ( ch /\ ps ) <-> ( th /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_32da (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) ;
}

proof of pm5_32da {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ( ch <-> th ) ) ) ;
	step 2 : wff = thm pm5_32d (step 1) |- ( ph -> ( ( ps /\ ch ) <-> ( ps /\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_33 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps -> ch ) ) <-> ( ph /\ ( ( ph /\ ps ) -> ch ) ) ) ;
}

proof of pm5_33 {
	step 1 : wff = thm ibar () |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm imbi1d (step 1) |- ( ph -> ( ( ps -> ch ) <-> ( ( ph /\ ps ) -> ch ) ) ) ;
	step 3 : wff = thm pm5_32i (step 2) |- ( ( ph /\ ( ps -> ch ) ) <-> ( ph /\ ( ( ph /\ ps ) -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm5_36 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ph <-> ps ) ) <-> ( ps /\ ( ph <-> ps ) ) ) ;
}

proof of pm5_36 {
	step 1 : wff = thm id () |- ( ( ph <-> ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm pm5_32ri (step 1) |- ( ( ph /\ ( ph <-> ps ) ) <-> ( ps /\ ( ph <-> ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_42 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) <-> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) ;
}

proof of pm5_42 {
	step 1 : wff = thm ibar () |- ( ph -> ( ch <-> ( ph /\ ch ) ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( ph -> ( ( ps -> ch ) <-> ( ps -> ( ph /\ ch ) ) ) ) ;
	step 3 : wff = thm pm5_74i (step 2) |- ( ( ph -> ( ps -> ch ) ) <-> ( ph -> ( ps -> ( ph /\ ch ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem bianabs (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ( ph /\ ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of bianabs {
	step 1 : wff = thm ibar () |- ( ph -> ( ch <-> ( ph /\ ch ) ) ) ;
	step 2 : wff = thm bitr4d (hyp 1, step 1) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem oibabs (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) <-> ( ph <-> ps ) ) ;
}

proof of oibabs {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) -> ( ph -> ( ph <-> ps ) ) ) ;
	step 3 : wff = thm ibd (step 2) |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) -> ( ph -> ps ) ) ;
	step 4 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 5 : wff = thm imim1i (step 4) |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) -> ( ps -> ( ph <-> ps ) ) ) ;
	step 6 : wff = thm ibibr () |- ( ( ps -> ph ) <-> ( ps -> ( ph <-> ps ) ) ) ;
	step 7 : wff = thm sylibr (step 5, step 6) |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) -> ( ps -> ph ) ) ;
	step 8 : wff = thm impbid (step 3, step 7) |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) -> ( ph <-> ps ) ) ;
	step 9 : wff = axm ax-1 () |- ( ( ph <-> ps ) -> ( ( ph \/ ps ) -> ( ph <-> ps ) ) ) ;
	step 10 : wff = thm impbii (step 8, step 9) |- ( ( ( ph \/ ps ) -> ( ph <-> ps ) ) <-> ( ph <-> ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem exmid (ph : wff)  {
	prop 1 : wff = |- ( ph \/ -. ph ) ;
}

proof of exmid {
	step 1 : wff = thm id () |- ( -. ph -> -. ph ) ;
	step 2 : wff = thm orri (step 1) |- ( ph \/ -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_1 (ph : wff)  {
	prop 1 : wff = |- ( -. ph \/ ph ) ;
}

proof of pm2_1 {
	step 1 : wff = thm notnot2 () |- ( -. -. ph -> ph ) ;
	step 2 : wff = thm orri (step 1) |- ( -. ph \/ ph ) ;
	qed prop 1 = step 2 ;
}

theorem pm2_13 (ph : wff)  {
	prop 1 : wff = |- ( ph \/ -. -. -. ph ) ;
}

proof of pm2_13 {
	step 1 : wff = thm notnot1 () |- ( -. ph -> -. -. -. ph ) ;
	step 2 : wff = thm orri (step 1) |- ( ph \/ -. -. -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem pm3_24 (ph : wff)  {
	prop 1 : wff = |- -. ( ph /\ -. ph ) ;
}

proof of pm3_24 {
	step 1 : wff = thm exmid () |- ( -. ph \/ -. -. ph ) ;
	step 2 : wff = thm ianor () |- ( -. ( ph /\ -. ph ) <-> ( -. ph \/ -. -. ph ) ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- -. ( ph /\ -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem pm2_26 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph \/ ( ( ph -> ps ) -> ps ) ) ;
}

proof of pm2_26 {
	step 1 : wff = thm notnot2 () |- ( -. -. ph -> ph ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( -. -. ph -> ( ( ph -> ps ) -> ps ) ) ;
	step 4 : wff = thm orri (step 3) |- ( -. ph \/ ( ( ph -> ps ) -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_18 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) ;
}

proof of pm5_18 {
	step 1 : wff = thm bicom () |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	step 2 : wff = thm bicom () |- ( ( ph <-> -. ps ) <-> ( -. ps <-> ph ) ) ;
	step 3 : wff = thm pm2_61 () |- ( ( ps -> ph ) -> ( ( -. ps -> ph ) -> ph ) ) ;
	step 4 : wff = thm pm2_65 () |- ( ( ps -> ph ) -> ( ( ps -> -. ph ) -> -. ps ) ) ;
	step 5 : wff = thm con2 () |- ( ( ph -> -. ps ) -> ( ps -> -. ph ) ) ;
	step 6 : wff = thm syl5 (step 4, step 5) |- ( ( ps -> ph ) -> ( ( ph -> -. ps ) -> -. ps ) ) ;
	step 7 : wff = thm anim12d (step 3, step 6) |- ( ( ps -> ph ) -> ( ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) -> ( ph /\ -. ps ) ) ) ;
	step 8 : wff = thm dfbi2 () |- ( ( -. ps <-> ph ) <-> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 9 : wff = thm syl5ib (step 7, step 8) |- ( ( ps -> ph ) -> ( ( -. ps <-> ph ) -> ( ph /\ -. ps ) ) ) ;
	step 10 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 11 : wff = thm syl6ib (step 9, step 10) |- ( ( ps -> ph ) -> ( ( -. ps <-> ph ) -> -. ( ph -> ps ) ) ) ;
	step 12 : wff = thm com12 (step 11) |- ( ( -. ps <-> ph ) -> ( ( ps -> ph ) -> -. ( ph -> ps ) ) ) ;
	step 13 : wff = thm imnan () |- ( ( ( ps -> ph ) -> -. ( ph -> ps ) ) <-> -. ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 14 : wff = thm sylib (step 12, step 13) |- ( ( -. ps <-> ph ) -> -. ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 15 : wff = thm dfbi2 () |- ( ( ps <-> ph ) <-> ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 16 : wff = thm notbii (step 15) |- ( -. ( ps <-> ph ) <-> -. ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 17 : wff = thm sylibr (step 14, step 16) |- ( ( -. ps <-> ph ) -> -. ( ps <-> ph ) ) ;
	step 18 : wff = thm dfbi2 () |- ( ( ps <-> ph ) <-> ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 19 : wff = thm notbii (step 18) |- ( -. ( ps <-> ph ) <-> -. ( ( ps -> ph ) /\ ( ph -> ps ) ) ) ;
	step 20 : wff = thm pm2_5 () |- ( -. ( ps -> ph ) -> ( -. ps -> ph ) ) ;
	step 21 : wff = thm annim () |- ( ( ps /\ -. ph ) <-> -. ( ps -> ph ) ) ;
	step 22 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> -. ps ) ) ;
	step 23 : wff = thm adantl (step 22) |- ( ( ps /\ -. ph ) -> ( ph -> -. ps ) ) ;
	step 24 : wff = thm sylbir (step 21, step 23) |- ( -. ( ps -> ph ) -> ( ph -> -. ps ) ) ;
	step 25 : wff = thm jca (step 20, step 24) |- ( -. ( ps -> ph ) -> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 26 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 27 : wff = axm ax-1 () |- ( ph -> ( -. ps -> ph ) ) ;
	step 28 : wff = thm adantr (step 27) |- ( ( ph /\ -. ps ) -> ( -. ps -> ph ) ) ;
	step 29 : wff = thm sylbir (step 26, step 28) |- ( -. ( ph -> ps ) -> ( -. ps -> ph ) ) ;
	step 30 : wff = thm pm2_51 () |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) ;
	step 31 : wff = thm jca (step 29, step 30) |- ( -. ( ph -> ps ) -> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 32 : wff = thm jaoi (step 25, step 31) |- ( ( -. ( ps -> ph ) \/ -. ( ph -> ps ) ) -> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 33 : wff = thm ianor () |- ( -. ( ( ps -> ph ) /\ ( ph -> ps ) ) <-> ( -. ( ps -> ph ) \/ -. ( ph -> ps ) ) ) ;
	step 34 : wff = thm dfbi2 () |- ( ( -. ps <-> ph ) <-> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 35 : wff = thm 3imtr4i (step 32, step 33, step 34) |- ( -. ( ( ps -> ph ) /\ ( ph -> ps ) ) -> ( -. ps <-> ph ) ) ;
	step 36 : wff = thm sylbi (step 19, step 35) |- ( -. ( ps <-> ph ) -> ( -. ps <-> ph ) ) ;
	step 37 : wff = thm impbii (step 17, step 36) |- ( ( -. ps <-> ph ) <-> -. ( ps <-> ph ) ) ;
	step 38 : wff = thm bitri (step 2, step 37) |- ( ( ph <-> -. ps ) <-> -. ( ps <-> ph ) ) ;
	step 39 : wff = thm con2bii (step 38) |- ( ( ps <-> ph ) <-> -. ( ph <-> -. ps ) ) ;
	step 40 : wff = thm bitri (step 1, step 39) |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) ;
	qed prop 1 = step 40 ;
}

theorem nbbn (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph <-> ps ) <-> -. ( ph <-> ps ) ) ;
}

proof of nbbn {
	step 1 : wff = thm bicom () |- ( ( -. ph <-> ps ) <-> ( ps <-> -. ph ) ) ;
	step 2 : wff = thm bicom () |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	step 3 : wff = thm pm5_18 () |- ( ( ps <-> ph ) <-> -. ( ps <-> -. ph ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ( ph <-> ps ) <-> -. ( ps <-> -. ph ) ) ;
	step 5 : wff = thm con2bii (step 4) |- ( ( ps <-> -. ph ) <-> -. ( ph <-> ps ) ) ;
	step 6 : wff = thm bitri (step 1, step 5) |- ( ( -. ph <-> ps ) <-> -. ( ph <-> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm5_11 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) \/ ( -. ph -> ps ) ) ;
}

proof of pm5_11 {
	step 1 : wff = thm pm2_5 () |- ( -. ( ph -> ps ) -> ( -. ph -> ps ) ) ;
	step 2 : wff = thm orri (step 1) |- ( ( ph -> ps ) \/ ( -. ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_12 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) \/ ( ph -> -. ps ) ) ;
}

proof of pm5_12 {
	step 1 : wff = thm pm2_51 () |- ( -. ( ph -> ps ) -> ( ph -> -. ps ) ) ;
	step 2 : wff = thm orri (step 1) |- ( ( ph -> ps ) \/ ( ph -> -. ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_13 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) \/ ( ps -> ph ) ) ;
}

proof of pm5_13 {
	step 1 : wff = thm pm2_521 () |- ( -. ( ph -> ps ) -> ( ps -> ph ) ) ;
	step 2 : wff = thm orri (step 1) |- ( ( ph -> ps ) \/ ( ps -> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_14 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) \/ ( ps -> ch ) ) ;
}

proof of pm5_14 {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. ( ph -> ps ) -> -. ps ) ;
	step 3 : wff = thm pm2_21d (step 2) |- ( -. ( ph -> ps ) -> ( ps -> ch ) ) ;
	step 4 : wff = thm orri (step 3) |- ( ( ph -> ps ) \/ ( ps -> ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_15 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) \/ ( ph <-> -. ps ) ) ;
}

proof of pm5_15 {
	step 1 : wff = thm pm5_18 () |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( -. ( ph <-> -. ps ) -> ( ph <-> ps ) ) ;
	step 3 : wff = thm con1i (step 2) |- ( -. ( ph <-> ps ) -> ( ph <-> -. ps ) ) ;
	step 4 : wff = thm orri (step 3) |- ( ( ph <-> ps ) \/ ( ph <-> -. ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_16 (ph : wff, ps : wff)  {
	prop 1 : wff = |- -. ( ( ph <-> ps ) /\ ( ph <-> -. ps ) ) ;
}

proof of pm5_16 {
	step 1 : wff = thm pm5_18 () |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph <-> ps ) -> -. ( ph <-> -. ps ) ) ;
	step 3 : wff = thm pm4_62 () |- ( ( ( ph <-> ps ) -> -. ( ph <-> -. ps ) ) <-> ( -. ( ph <-> ps ) \/ -. ( ph <-> -. ps ) ) ) ;
	step 4 : wff = thm mpbi (step 2, step 3) |- ( -. ( ph <-> ps ) \/ -. ( ph <-> -. ps ) ) ;
	step 5 : wff = thm ianor () |- ( -. ( ( ph <-> ps ) /\ ( ph <-> -. ps ) ) <-> ( -. ( ph <-> ps ) \/ -. ( ph <-> -. ps ) ) ) ;
	step 6 : wff = thm mpbir (step 4, step 5) |- -. ( ( ph <-> ps ) /\ ( ph <-> -. ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm5_17 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ph <-> -. ps ) ) ;
}

proof of pm5_17 {
	step 1 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 2 : wff = def df-or () |- ( ( ps \/ ph ) <-> ( -. ps -> ph ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph \/ ps ) <-> ( -. ps -> ph ) ) ;
	step 4 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 5 : wff = thm bicomi (step 4) |- ( -. ( ph /\ ps ) <-> ( ph -> -. ps ) ) ;
	step 6 : wff = thm anbi12i (step 3, step 5) |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 7 : wff = thm dfbi2 () |- ( ( -. ps <-> ph ) <-> ( ( -. ps -> ph ) /\ ( ph -> -. ps ) ) ) ;
	step 8 : wff = thm bicom () |- ( ( -. ps <-> ph ) <-> ( ph <-> -. ps ) ) ;
	step 9 : wff = thm 3bitr2i (step 6, step 7, step 8) |- ( ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) <-> ( ph <-> -. ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem pm5_19 (ph : wff)  {
	prop 1 : wff = |- -. ( ph <-> -. ph ) ;
}

proof of pm5_19 {
	step 1 : wff = thm biid () |- ( ph <-> ph ) ;
	step 2 : wff = thm pm5_18 () |- ( ( ph <-> ph ) <-> -. ( ph <-> -. ph ) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- -. ( ph <-> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem dfbi3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
}

proof of dfbi3 {
	step 1 : wff = thm pm5_18 () |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) ;
	step 2 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 3 : wff = thm con1b () |- ( ( -. ps -> ph ) <-> ( -. ph -> ps ) ) ;
	step 4 : wff = thm iman () |- ( ( -. ph -> ps ) <-> -. ( -. ph /\ -. ps ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( -. ps -> ph ) <-> -. ( -. ph /\ -. ps ) ) ;
	step 6 : wff = thm anbi12i (step 2, step 5) |- ( ( ( ph -> -. ps ) /\ ( -. ps -> ph ) ) <-> ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 7 : wff = thm dfbi2 () |- ( ( ph <-> -. ps ) <-> ( ( ph -> -. ps ) /\ ( -. ps -> ph ) ) ) ;
	step 8 : wff = thm ioran () |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <-> ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 9 : wff = thm 3bitr4ri (step 6, step 7, step 8) |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <-> ( ph <-> -. ps ) ) ;
	step 10 : wff = thm con1bii (step 9) |- ( -. ( ph <-> -. ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	step 11 : wff = thm bitri (step 1, step 10) |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	qed prop 1 = step 11 ;
}

theorem xor (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph <-> ps ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
}

proof of xor {
	step 1 : wff = thm dfbi3 () |- ( ( -. ph <-> ps ) <-> ( ( -. ph /\ ps ) \/ ( -. -. ph /\ -. ps ) ) ) ;
	step 2 : wff = thm nbbn () |- ( ( -. ph <-> ps ) <-> -. ( ph <-> ps ) ) ;
	step 3 : wff = thm ancom () |- ( ( ps /\ -. ph ) <-> ( -. ph /\ ps ) ) ;
	step 4 : wff = thm notnot () |- ( ph <-> -. -. ph ) ;
	step 5 : wff = thm anbi1i (step 4) |- ( ( ph /\ -. ps ) <-> ( -. -. ph /\ -. ps ) ) ;
	step 6 : wff = thm orbi12i (step 3, step 5) |- ( ( ( ps /\ -. ph ) \/ ( ph /\ -. ps ) ) <-> ( ( -. ph /\ ps ) \/ ( -. -. ph /\ -. ps ) ) ) ;
	step 7 : wff = thm orcom () |- ( ( ( ps /\ -. ph ) \/ ( ph /\ -. ps ) ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	step 8 : wff = thm bitr3i (step 6, step 7) |- ( ( ( -. ph /\ ps ) \/ ( -. -. ph /\ -. ps ) ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	step 9 : wff = thm 3bitr3i (step 1, step 2, step 8) |- ( -. ( ph <-> ps ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem pm5_24 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
}

proof of pm5_24 {
	step 1 : wff = thm dfbi3 () |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	step 2 : wff = thm notbii (step 1) |- ( -. ( ph <-> ps ) <-> -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	step 3 : wff = thm xor () |- ( -. ( ph <-> ps ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem xor2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph <-> ps ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) ;
}

proof of xor2 {
	step 1 : wff = thm xor () |- ( -. ( ph <-> ps ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	step 2 : wff = thm ioran () |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <-> ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 3 : wff = thm pm5_24 () |- ( -. ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) <-> ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) ) ;
	step 4 : wff = thm oran () |- ( ( ph \/ ps ) <-> -. ( -. ph /\ -. ps ) ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( -. ( ph /\ ps ) /\ ( ph \/ ps ) ) <-> ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 6 : wff = thm ancom () |- ( ( -. ( ph /\ ps ) /\ ( ph \/ ps ) ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) ;
	step 7 : wff = thm bitr3i (step 5, step 6) |- ( ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) ;
	step 8 : wff = thm 3bitr3i (step 2, step 3, step 7) |- ( ( ( ph /\ -. ps ) \/ ( ps /\ -. ph ) ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) ;
	step 9 : wff = thm bitri (step 1, step 8) |- ( -. ( ph <-> ps ) <-> ( ( ph \/ ps ) /\ -. ( ph /\ ps ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem xor3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ( ph <-> ps ) <-> ( ph <-> -. ps ) ) ;
}

proof of xor3 {
	step 1 : wff = thm pm5_18 () |- ( ( ph <-> ps ) <-> -. ( ph <-> -. ps ) ) ;
	step 2 : wff = thm con2bii (step 1) |- ( ( ph <-> -. ps ) <-> -. ( ph <-> ps ) ) ;
	step 3 : wff = thm bicomi (step 2) |- ( -. ( ph <-> ps ) <-> ( ph <-> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem xordi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ -. ( ps <-> ch ) ) <-> -. ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
}

proof of xordi {
	step 1 : wff = thm annim () |- ( ( ph /\ -. ( ps <-> ch ) ) <-> -. ( ph -> ( ps <-> ch ) ) ) ;
	step 2 : wff = thm pm5_32 () |- ( ( ph -> ( ps <-> ch ) ) <-> ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
	step 3 : wff = thm notbii (step 2) |- ( -. ( ph -> ( ps <-> ch ) ) <-> -. ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ph /\ -. ( ps <-> ch ) ) <-> -. ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_55 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) ;
}

proof of pm5_55 {
	step 1 : wff = thm pm5_13 () |- ( ( ps -> ph ) \/ ( ph -> ps ) ) ;
	step 2 : wff = thm pm4_72 () |- ( ( ps -> ph ) <-> ( ph <-> ( ps \/ ph ) ) ) ;
	step 3 : wff = thm orcom () |- ( ( ps \/ ph ) <-> ( ph \/ ps ) ) ;
	step 4 : wff = thm bibi2i (step 3) |- ( ( ph <-> ( ps \/ ph ) ) <-> ( ph <-> ( ph \/ ps ) ) ) ;
	step 5 : wff = thm bicom () |- ( ( ph <-> ( ph \/ ps ) ) <-> ( ( ph \/ ps ) <-> ph ) ) ;
	step 6 : wff = thm 3bitri (step 2, step 4, step 5) |- ( ( ps -> ph ) <-> ( ( ph \/ ps ) <-> ph ) ) ;
	step 7 : wff = thm pm4_72 () |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) ;
	step 8 : wff = thm bicom () |- ( ( ps <-> ( ph \/ ps ) ) <-> ( ( ph \/ ps ) <-> ps ) ) ;
	step 9 : wff = thm bitri (step 7, step 8) |- ( ( ph -> ps ) <-> ( ( ph \/ ps ) <-> ps ) ) ;
	step 10 : wff = thm orbi12i (step 6, step 9) |- ( ( ( ps -> ph ) \/ ( ph -> ps ) ) <-> ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) ) ;
	step 11 : wff = thm mpbi (step 1, step 10) |- ( ( ( ph \/ ps ) <-> ph ) \/ ( ( ph \/ ps ) <-> ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem pm5_1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ph <-> ps ) ) ;
}

proof of pm5_1 {
	step 1 : wff = thm pm5_501 () |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm biimpa (step 1) |- ( ( ph /\ ps ) -> ( ph <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_21 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) ;
}

proof of pm5_21 {
	step 1 : wff = thm pm5_1 () |- ( ( -. ph /\ -. ps ) -> ( -. ph <-> -. ps ) ) ;
	step 2 : wff = thm con4bid (step 1) |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_21ni (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( -. ps -> ( ph <-> ch ) ) ;
}

proof of pm5_21ni {
	step 1 : wff = thm pm5_21 () |- ( ( -. ph /\ -. ch ) -> ( ph <-> ch ) ) ;
	step 2 : wff = thm con3i (hyp 1) |- ( -. ps -> -. ph ) ;
	step 3 : wff = thm con3i (hyp 2) |- ( -. ps -> -. ch ) ;
	step 4 : wff = thm sylanc (step 1, step 2, step 3) |- ( -. ps -> ( ph <-> ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_21nii (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	hyp 3 : wff = |- ( ps -> ( ph <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ch ) ;
}

proof of pm5_21nii {
	step 1 : wff = thm pm5_21ni (hyp 1, hyp 2) |- ( -. ps -> ( ph <-> ch ) ) ;
	step 2 : wff = thm pm2_61i (hyp 3, step 1) |- ( ph <-> ch ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_21nd (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
	hyp 2 : wff = |- ( ( ph /\ ch ) -> th ) ;
	hyp 3 : wff = |- ( th -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
}

proof of pm5_21nd {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> th ) ) ;
	step 2 : wff = thm con3d (step 1) |- ( ph -> ( -. th -> -. ps ) ) ;
	step 3 : wff = thm ex (hyp 2) |- ( ph -> ( ch -> th ) ) ;
	step 4 : wff = thm con3d (step 3) |- ( ph -> ( -. th -> -. ch ) ) ;
	step 5 : wff = thm jcad (step 2, step 4) |- ( ph -> ( -. th -> ( -. ps /\ -. ch ) ) ) ;
	step 6 : wff = thm pm5_21 () |- ( ( -. ps /\ -. ch ) -> ( ps <-> ch ) ) ;
	step 7 : wff = thm syl6 (step 5, step 6) |- ( ph -> ( -. th -> ( ps <-> ch ) ) ) ;
	step 8 : wff = thm pm2_61d2 (step 7, hyp 3) |- ( ph -> ( ps <-> ch ) ) ;
	qed prop 1 = step 8 ;
}

theorem bibif (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ps -> ( ( ph <-> ps ) <-> -. ph ) ) ;
}

proof of bibif {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm con3d (step 1) |- ( ( ph <-> ps ) -> ( -. ps -> -. ph ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( -. ps -> ( ( ph <-> ps ) -> -. ph ) ) ;
	step 4 : wff = thm pm5_21 () |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) ;
	step 5 : wff = thm expcom (step 4) |- ( -. ps -> ( -. ph -> ( ph <-> ps ) ) ) ;
	step 6 : wff = thm impbid (step 3, step 5) |- ( -. ps -> ( ( ph <-> ps ) <-> -. ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem pm5_35 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) -> ( ph -> ( ps <-> ch ) ) ) ;
}

proof of pm5_35 {
	step 1 : wff = thm pm5_1 () |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) -> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 2 : wff = thm pm5_74rd (step 1) |- ( ( ( ph -> ps ) /\ ( ph -> ch ) ) -> ( ph -> ( ps <-> ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_54 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) <-> ph ) \/ ( ( ph /\ ps ) <-> ps ) ) ;
}

proof of pm5_54 {
	step 1 : wff = thm pm5_1 () |- ( ( ( ph /\ ps ) /\ ph ) -> ( ( ph /\ ps ) <-> ph ) ) ;
	step 2 : wff = thm anabss1 (step 1) |- ( ( ph /\ ps ) -> ( ( ph /\ ps ) <-> ph ) ) ;
	step 3 : wff = thm iba () |- ( ps -> ( ph <-> ( ph /\ ps ) ) ) ;
	step 4 : wff = thm bicomd (step 3) |- ( ps -> ( ( ph /\ ps ) <-> ph ) ) ;
	step 5 : wff = thm pm5_21ni (step 2, step 4) |- ( -. ( ( ph /\ ps ) <-> ph ) -> ( ( ph /\ ps ) <-> ps ) ) ;
	step 6 : wff = thm orri (step 5) |- ( ( ( ph /\ ps ) <-> ph ) \/ ( ( ph /\ ps ) <-> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem elimant (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ( ps -> ch ) -> ( ph -> th ) ) ) -> ( ph -> ( ch -> th ) ) ) ;
}

proof of elimant {
	step 1 : wff = thm pm3_27 () |- ( ( ( ph -> ps ) /\ ( ( ps -> ch ) -> ( ph -> th ) ) ) -> ( ( ps -> ch ) -> ( ph -> th ) ) ) ;
	step 2 : wff = axm ax-1 () |- ( ch -> ( ps -> ch ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( ( ( ph -> ps ) /\ ( ( ps -> ch ) -> ( ph -> th ) ) ) -> ( ch -> ( ph -> th ) ) ) ;
	step 4 : wff = thm com23 (step 3) |- ( ( ( ph -> ps ) /\ ( ( ps -> ch ) -> ( ph -> th ) ) ) -> ( ph -> ( ch -> th ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem baib (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ph <-> ch ) ) ;
}

proof of baib {
	step 1 : wff = thm ibar () |- ( ps -> ( ch <-> ( ps /\ ch ) ) ) ;
	step 2 : wff = thm syl6rbbr (step 1, hyp 1) |- ( ps -> ( ph <-> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem baibr (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( ch <-> ph ) ) ;
}

proof of baibr {
	step 1 : wff = thm baib (hyp 1) |- ( ps -> ( ph <-> ch ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( ps -> ( ch <-> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_44 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ph -> ch ) <-> ( ph -> ( ps /\ ch ) ) ) ) ;
}

proof of pm5_44 {
	step 1 : wff = thm jcab () |- ( ( ph -> ( ps /\ ch ) ) <-> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
	step 2 : wff = thm baibr (step 1) |- ( ( ph -> ps ) -> ( ( ph -> ch ) <-> ( ph -> ( ps /\ ch ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_6 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( ps \/ ch ) ) ) ;
}

proof of pm5_6 {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 2 : wff = def df-or () |- ( ( ps \/ ch ) <-> ( -. ps -> ch ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( ph -> ( ps \/ ch ) ) <-> ( ph -> ( -. ps -> ch ) ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( ps \/ ch ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem nan (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ( ps /\ ch ) ) <-> ( ( ph /\ ps ) -> -. ch ) ) ;
}

proof of nan {
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> -. ch ) <-> ( ph -> ( ps -> -. ch ) ) ) ;
	step 2 : wff = thm imnan () |- ( ( ps -> -. ch ) <-> -. ( ps /\ ch ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( ph -> ( ps -> -. ch ) ) <-> ( ph -> -. ( ps /\ ch ) ) ) ;
	step 4 : wff = thm bitr2i (step 1, step 3) |- ( ( ph -> -. ( ps /\ ch ) ) <-> ( ( ph /\ ps ) -> -. ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem orcanai (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps \/ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ -. ps ) -> ch ) ;
}

proof of orcanai {
	step 1 : wff = thm ord (hyp 1) |- ( ph -> ( -. ps -> ch ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ -. ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem intnan (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- -. ( ps /\ ph ) ;
}

proof of intnan {
	step 1 : wff = thm pm3_27 () |- ( ( ps /\ ph ) -> ph ) ;
	step 2 : wff = thm mto (hyp 1, step 1) |- -. ( ps /\ ph ) ;
	qed prop 1 = step 2 ;
}

theorem intnanr (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- -. ( ph /\ ps ) ;
}

proof of intnanr {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm mto (hyp 1, step 1) |- -. ( ph /\ ps ) ;
	qed prop 1 = step 2 ;
}

theorem intnand (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ( ch /\ ps ) ) ;
}

proof of intnand {
	step 1 : wff = thm pm3_27 () |- ( ( ch /\ ps ) -> ps ) ;
	step 2 : wff = thm nsyl (hyp 1, step 1) |- ( ph -> -. ( ch /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem intnanrd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ( ps /\ ch ) ) ;
}

proof of intnanrd {
	step 1 : wff = thm pm3_26 () |- ( ( ps /\ ch ) -> ps ) ;
	step 2 : wff = thm nsyl (hyp 1, step 1) |- ( ph -> -. ( ps /\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpan (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ch ) ;
}

proof of mpan {
	step 1 : wff = thm ex (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpan2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mpan2 {
	step 1 : wff = thm ex (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mp2an (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of mp2an {
	step 1 : wff = thm mpan (hyp 1, hyp 3) |- ( ps -> ch ) ;
	step 2 : wff = axm ax-mp (hyp 2, step 1) |- ch ;
	qed prop 1 = step 2 ;
}

theorem mpani (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> th ) ) ;
}

proof of mpani {
	step 1 : wff = thm exp3a (hyp 2) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ph -> ( ch -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpan2i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of mpan2i {
	step 1 : wff = thm exp3a (hyp 2) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm mpii (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mp2ani (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ch ;
	hyp 3 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of mp2ani {
	step 1 : wff = thm mpani (hyp 1, hyp 3) |- ( ph -> ( ch -> th ) ) ;
	step 2 : wff = thm mpi (hyp 2, step 1) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mpand (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch -> th ) ) ;
}

proof of mpand {
	step 1 : wff = thm exp3a (hyp 2) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ( ch -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpan2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	hyp 2 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> th ) ) ;
}

proof of mpan2d {
	step 1 : wff = thm exp3a (hyp 2) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm mpid (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem mp2and (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	hyp 3 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of mp2and {
	step 1 : wff = thm mpand (hyp 1, hyp 3) |- ( ph -> ( ch -> th ) ) ;
	step 2 : wff = thm mpd (hyp 2, step 1) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mpdan (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of mpdan {
	step 1 : wff = thm ex (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mpd (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpancom (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ps -> ph ) ;
	hyp 2 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ch ) ;
}

proof of mpancom {
	step 1 : wff = thm ancoms (hyp 2) |- ( ( ps /\ ph ) -> ch ) ;
	step 2 : wff = thm mpdan (hyp 1, step 1) |- ( ps -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpanl1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ch ) -> th ) ;
}

proof of mpanl1 {
	step 1 : wff = thm ex (hyp 2) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm mpan (hyp 1, step 1) |- ( ps -> ( ch -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ps /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem mpanl2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
}

proof of mpanl2 {
	step 1 : wff = thm ex (hyp 2) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm mpan2 (hyp 1, step 1) |- ( ph -> ( ch -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem mpanl12 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> th ) ;
}

proof of mpanl12 {
	step 1 : wff = thm mpanl1 (hyp 1, hyp 3) |- ( ( ps /\ ch ) -> th ) ;
	step 2 : wff = thm mpan (hyp 2, step 1) |- ( ch -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mpanr1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
}

proof of mpanr1 {
	step 1 : wff = thm ex (hyp 2) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	step 2 : wff = thm mpani (hyp 1, step 1) |- ( ph -> ( ch -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem mpanr2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
}

proof of mpanr2 {
	step 1 : wff = thm ex (hyp 2) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	step 2 : wff = thm mpan2i (hyp 1, step 1) |- ( ph -> ( ps -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ps ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem mpanr12 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ch ;
	hyp 3 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of mpanr12 {
	step 1 : wff = thm mpanr1 (hyp 1, hyp 3) |- ( ( ph /\ ch ) -> th ) ;
	step 2 : wff = thm mpan2 (hyp 2, step 1) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mpanlr1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ( ph /\ ( ps /\ ch ) ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ch ) /\ th ) -> ta ) ;
}

proof of mpanlr1 {
	step 1 : wff = thm ex (hyp 2) |- ( ( ph /\ ( ps /\ ch ) ) -> ( th -> ta ) ) ;
	step 2 : wff = thm mpanr1 (hyp 1, step 1) |- ( ( ph /\ ch ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mtt (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph -> ( -. ps <-> ( ps -> ph ) ) ) ;
}

proof of mtt {
	step 1 : wff = thm pm2_21 () |- ( -. ps -> ( ps -> ph ) ) ;
	step 2 : wff = thm con3 () |- ( ( ps -> ph ) -> ( -. ph -> -. ps ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( -. ph -> ( ( ps -> ph ) -> -. ps ) ) ;
	step 4 : wff = thm impbid2 (step 1, step 3) |- ( -. ph -> ( -. ps <-> ( ps -> ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem mt2bi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( -. ps <-> ( ps -> -. ph ) ) ;
}

proof of mt2bi {
	step 1 : wff = thm pm2_21 () |- ( -. ps -> ( ps -> -. ph ) ) ;
	step 2 : wff = thm con2 () |- ( ( ps -> -. ph ) -> ( ph -> -. ps ) ) ;
	step 3 : wff = thm mpi (hyp 1, step 2) |- ( ( ps -> -. ph ) -> -. ps ) ;
	step 4 : wff = thm impbii (step 1, step 3) |- ( -. ps <-> ( ps -> -. ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem mtbid (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ch ) ;
}

proof of mtbid {
	step 1 : wff = thm biimprd (hyp 2) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm mtod (hyp 1, step 1) |- ( ph -> -. ch ) ;
	qed prop 1 = step 2 ;
}

theorem mtbird (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ch ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of mtbird {
	step 1 : wff = thm biimpd (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mtod (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem mtbii (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- -. ps ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ch ) ;
}

proof of mtbii {
	step 1 : wff = thm biimprd (hyp 2) |- ( ph -> ( ch -> ps ) ) ;
	step 2 : wff = thm mtoi (hyp 1, step 1) |- ( ph -> -. ch ) ;
	qed prop 1 = step 2 ;
}

theorem mtbiri (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- -. ch ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. ps ) ;
}

proof of mtbiri {
	step 1 : wff = thm biimpd (hyp 2) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm mtoi (hyp 1, step 1) |- ( ph -> -. ps ) ;
	qed prop 1 = step 2 ;
}

theorem 2th (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ps ) ;
}

proof of 2th {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> ps ) ;
	step 2 : wff = thm a1i (hyp 1) |- ( ps -> ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ph <-> ps ) ;
	qed prop 1 = step 3 ;
}

theorem 2false (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	hyp 2 : wff = |- -. ps ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ps ) ;
}

proof of 2false {
	step 1 : wff = thm pm5_21 () |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- ( ph <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem tbt (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ( ps <-> ph ) ) ;
}

proof of tbt {
	step 1 : wff = thm pm5_501 () |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps <-> ( ph <-> ps ) ) ;
	step 3 : wff = thm bicom () |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ps <-> ( ps <-> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem nbn2 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) ;
}

proof of nbn2 {
	step 1 : wff = thm pm5_21 () |- ( ( -. ph /\ -. ps ) -> ( ph <-> ps ) ) ;
	step 2 : wff = thm ex (step 1) |- ( -. ph -> ( -. ps -> ( ph <-> ps ) ) ) ;
	step 3 : wff = thm notbi () |- ( ( ph <-> ps ) <-> ( -. ph <-> -. ps ) ) ;
	step 4 : wff = thm biimpi (step 3) |- ( ( ph <-> ps ) -> ( -. ph <-> -. ps ) ) ;
	step 5 : wff = thm biimpcd (step 4) |- ( -. ph -> ( ( ph <-> ps ) -> -. ps ) ) ;
	step 6 : wff = thm impbid (step 2, step 5) |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem nbn (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- ( -. ps <-> ( ps <-> ph ) ) ;
}

proof of nbn {
	step 1 : wff = thm nbn2 () |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( -. ps <-> ( ph <-> ps ) ) ;
	step 3 : wff = thm bicom () |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( -. ps <-> ( ps <-> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem nbn3 (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( -. ps <-> ( ps <-> -. ph ) ) ;
}

proof of nbn3 {
	step 1 : wff = thm notnoti (hyp 1) |- -. -. ph ;
	step 2 : wff = thm nbn (step 1) |- ( -. ps <-> ( ps <-> -. ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem biantru (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ( ps /\ ph ) ) ;
}

proof of biantru {
	step 1 : wff = thm iba () |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps <-> ( ps /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem biantrur (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ( ph /\ ps ) ) ;
}

proof of biantrur {
	step 1 : wff = thm ibar () |- ( ph -> ( ps <-> ( ph /\ ps ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps <-> ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem biantrud (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> ( ch /\ ps ) ) ) ;
}

proof of biantrud {
	step 1 : wff = thm anim2i (hyp 1) |- ( ( ch /\ ph ) -> ( ch /\ ps ) ) ;
	step 2 : wff = thm expcom (step 1) |- ( ph -> ( ch -> ( ch /\ ps ) ) ) ;
	step 3 : wff = thm pm3_26 () |- ( ( ch /\ ps ) -> ch ) ;
	step 4 : wff = thm impbid1 (step 2, step 3) |- ( ph -> ( ch <-> ( ch /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem biantrurd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ch <-> ( ps /\ ch ) ) ) ;
}

proof of biantrurd {
	step 1 : wff = thm biantrud (hyp 1) |- ( ph -> ( ch <-> ( ch /\ ps ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( ch /\ ps ) <-> ( ps /\ ch ) ) ;
	step 3 : wff = thm syl6bb (step 1, step 2) |- ( ph -> ( ch <-> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem mpbiran (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ch ) ;
}

proof of mpbiran {
	step 1 : wff = thm biantrur (hyp 2) |- ( ch <-> ( ps /\ ch ) ) ;
	step 2 : wff = thm bitr4i (hyp 1, step 1) |- ( ph <-> ch ) ;
	qed prop 1 = step 2 ;
}

theorem mpbiran2 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	hyp 2 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ps ) ;
}

proof of mpbiran2 {
	step 1 : wff = thm biantru (hyp 2) |- ( ps <-> ( ps /\ ch ) ) ;
	step 2 : wff = thm bitr4i (hyp 1, step 1) |- ( ph <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem mpbir2an (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph <-> ( ps /\ ch ) ) ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of mpbir2an {
	step 1 : wff = thm mpbiran (hyp 1, hyp 2) |- ( ph <-> ch ) ;
	step 2 : wff = thm mpbir (hyp 3, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem biimt (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ( ph -> ps ) ) ) ;
}

proof of biimt {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm pm2_27 () |- ( ph -> ( ( ph -> ps ) -> ps ) ) ;
	step 3 : wff = thm impbid2 (step 1, step 2) |- ( ph -> ( ps <-> ( ph -> ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm5_5 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ( ph -> ps ) <-> ps ) ) ;
}

proof of pm5_5 {
	step 1 : wff = thm biimt () |- ( ph -> ( ps <-> ( ph -> ps ) ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( ph -> ( ( ph -> ps ) <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem pm5_62 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) \/ -. ps ) <-> ( ph \/ -. ps ) ) ;
}

proof of pm5_62 {
	step 1 : wff = thm ordir () |- ( ( ( ph /\ ps ) \/ -. ps ) <-> ( ( ph \/ -. ps ) /\ ( ps \/ -. ps ) ) ) ;
	step 2 : wff = thm exmid () |- ( ps \/ -. ps ) ;
	step 3 : wff = thm mpbiran2 (step 1, step 2) |- ( ( ( ph /\ ps ) \/ -. ps ) <-> ( ph \/ -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem biort (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ph <-> ( ph \/ ps ) ) ) ;
}

proof of biort {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( ( ph \/ ps ) -> ph ) ) ;
	step 3 : wff = thm impbid2 (step 1, step 2) |- ( ph -> ( ph <-> ( ph \/ ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem biorf (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) ;
}

proof of biorf {
	step 1 : wff = thm biimt () |- ( -. ph -> ( ps <-> ( -. ph -> ps ) ) ) ;
	step 2 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 3 : wff = thm syl6bbr (step 1, step 2) |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem biorfi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ( ps \/ ph ) ) ;
}

proof of biorfi {
	step 1 : wff = thm biorf () |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps <-> ( ph \/ ps ) ) ;
	step 3 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ps <-> ( ps \/ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem bianfi (ph : wff, ps : wff)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- ( ph <-> ( ps /\ ph ) ) ;
}

proof of bianfi {
	step 1 : wff = thm pm2_21i (hyp 1) |- ( ph -> ( ps /\ ph ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( ps /\ ph ) -> ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( ph <-> ( ps /\ ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem bianfd (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> ( ps /\ ch ) ) ) ;
}

proof of bianfd {
	step 1 : wff = thm pm2_21d (hyp 1) |- ( ph -> ( ps -> ( ps /\ ch ) ) ) ;
	step 2 : wff = thm pm3_26 () |- ( ( ps /\ ch ) -> ps ) ;
	step 3 : wff = thm impbid1 (step 1, step 2) |- ( ph -> ( ps <-> ( ps /\ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem pm4_82 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ph -> -. ps ) ) <-> -. ph ) ;
}

proof of pm4_82 {
	step 1 : wff = thm pm2_65 () |- ( ( ph -> ps ) -> ( ( ph -> -. ps ) -> -. ph ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ph -> ps ) /\ ( ph -> -. ps ) ) -> -. ph ) ;
	step 3 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 4 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> -. ps ) ) ;
	step 5 : wff = thm jca (step 3, step 4) |- ( -. ph -> ( ( ph -> ps ) /\ ( ph -> -. ps ) ) ) ;
	step 6 : wff = thm impbii (step 2, step 5) |- ( ( ( ph -> ps ) /\ ( ph -> -. ps ) ) <-> -. ph ) ;
	qed prop 1 = step 6 ;
}

theorem pm4_83 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( -. ph -> ps ) ) <-> ps ) ;
}

proof of pm4_83 {
	step 1 : wff = thm exmid () |- ( ph \/ -. ph ) ;
	step 2 : wff = thm a1bi (step 1) |- ( ps <-> ( ( ph \/ -. ph ) -> ps ) ) ;
	step 3 : wff = thm jaob () |- ( ( ( ph \/ -. ph ) -> ps ) <-> ( ( ph -> ps ) /\ ( -. ph -> ps ) ) ) ;
	step 4 : wff = thm bitr2i (step 2, step 3) |- ( ( ( ph -> ps ) /\ ( -. ph -> ps ) ) <-> ps ) ;
	qed prop 1 = step 4 ;
}

theorem pclem6 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ps ) ;
}

proof of pclem6 {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ( ps /\ -. ph ) ) -> ( ph -> ( ps /\ -. ph ) ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( ps /\ -. ph ) -> -. ph ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ( ph <-> ( ps /\ -. ph ) ) -> ( ph -> -. ph ) ) ;
	step 4 : wff = thm pm2_01d (step 3) |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ph ) ;
	step 5 : wff = thm bi2 () |- ( ( ph <-> ( ps /\ -. ph ) ) -> ( ( ps /\ -. ph ) -> ph ) ) ;
	step 6 : wff = thm exp3a (step 5) |- ( ( ph <-> ( ps /\ -. ph ) ) -> ( ps -> ( -. ph -> ph ) ) ) ;
	step 7 : wff = thm com23 (step 6) |- ( ( ph <-> ( ps /\ -. ph ) ) -> ( -. ph -> ( ps -> ph ) ) ) ;
	step 8 : wff = thm con3 () |- ( ( ps -> ph ) -> ( -. ph -> -. ps ) ) ;
	step 9 : wff = thm syli (step 7, step 8) |- ( ( ph <-> ( ps /\ -. ph ) ) -> ( -. ph -> -. ps ) ) ;
	step 10 : wff = thm mpd (step 4, step 9) |- ( ( ph <-> ( ps /\ -. ph ) ) -> -. ps ) ;
	qed prop 1 = step 10 ;
}

theorem biantr (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph <-> ps ) /\ ( ch <-> ps ) ) -> ( ph <-> ch ) ) ;
}

proof of biantr {
	step 1 : wff = thm id () |- ( ( ch <-> ps ) -> ( ch <-> ps ) ) ;
	step 2 : wff = thm bibi2d (step 1) |- ( ( ch <-> ps ) -> ( ( ph <-> ch ) <-> ( ph <-> ps ) ) ) ;
	step 3 : wff = thm biimparc (step 2) |- ( ( ( ph <-> ps ) /\ ( ch <-> ps ) ) -> ( ph <-> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem orbidi (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ( ps <-> ch ) ) <-> ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) ;
}

proof of orbidi {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ch ) ) ;
	step 2 : wff = thm a1d (step 1) |- ( ph -> ( ( ph \/ ps ) -> ( ph \/ ch ) ) ) ;
	step 3 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 4 : wff = thm a1d (step 3) |- ( ph -> ( ( ph \/ ch ) -> ( ph \/ ps ) ) ) ;
	step 5 : wff = thm impbid (step 2, step 4) |- ( ph -> ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) ;
	step 6 : wff = thm id () |- ( ( ps <-> ch ) -> ( ps <-> ch ) ) ;
	step 7 : wff = thm orbi2d (step 6) |- ( ( ps <-> ch ) -> ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) ;
	step 8 : wff = thm jaoi (step 5, step 7) |- ( ( ph \/ ( ps <-> ch ) ) -> ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) ;
	step 9 : wff = thm pm2_85 () |- ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) -> ( ph \/ ( ps -> ch ) ) ) ;
	step 10 : wff = thm pm2_85 () |- ( ( ( ph \/ ch ) -> ( ph \/ ps ) ) -> ( ph \/ ( ch -> ps ) ) ) ;
	step 11 : wff = thm anim12i (step 9, step 10) |- ( ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) /\ ( ( ph \/ ch ) -> ( ph \/ ps ) ) ) -> ( ( ph \/ ( ps -> ch ) ) /\ ( ph \/ ( ch -> ps ) ) ) ) ;
	step 12 : wff = thm dfbi2 () |- ( ( ( ph \/ ps ) <-> ( ph \/ ch ) ) <-> ( ( ( ph \/ ps ) -> ( ph \/ ch ) ) /\ ( ( ph \/ ch ) -> ( ph \/ ps ) ) ) ) ;
	step 13 : wff = thm dfbi2 () |- ( ( ps <-> ch ) <-> ( ( ps -> ch ) /\ ( ch -> ps ) ) ) ;
	step 14 : wff = thm orbi2i (step 13) |- ( ( ph \/ ( ps <-> ch ) ) <-> ( ph \/ ( ( ps -> ch ) /\ ( ch -> ps ) ) ) ) ;
	step 15 : wff = thm ordi () |- ( ( ph \/ ( ( ps -> ch ) /\ ( ch -> ps ) ) ) <-> ( ( ph \/ ( ps -> ch ) ) /\ ( ph \/ ( ch -> ps ) ) ) ) ;
	step 16 : wff = thm bitri (step 14, step 15) |- ( ( ph \/ ( ps <-> ch ) ) <-> ( ( ph \/ ( ps -> ch ) ) /\ ( ph \/ ( ch -> ps ) ) ) ) ;
	step 17 : wff = thm 3imtr4i (step 11, step 12, step 16) |- ( ( ( ph \/ ps ) <-> ( ph \/ ch ) ) -> ( ph \/ ( ps <-> ch ) ) ) ;
	step 18 : wff = thm impbii (step 8, step 17) |- ( ( ph \/ ( ps <-> ch ) ) <-> ( ( ph \/ ps ) <-> ( ph \/ ch ) ) ) ;
	qed prop 1 = step 18 ;
}

theorem biass (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) ;
}

proof of biass {
	step 1 : wff = thm pm5_501 () |- ( ph -> ( ps <-> ( ph <-> ps ) ) ) ;
	step 2 : wff = thm bibi1d (step 1) |- ( ph -> ( ( ps <-> ch ) <-> ( ( ph <-> ps ) <-> ch ) ) ) ;
	step 3 : wff = thm pm5_501 () |- ( ph -> ( ( ps <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) ) ;
	step 4 : wff = thm bitr3d (step 2, step 3) |- ( ph -> ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) ) ;
	step 5 : wff = thm nbbn () |- ( ( -. ps <-> ch ) <-> -. ( ps <-> ch ) ) ;
	step 6 : wff = thm a1i (step 5) |- ( -. ph -> ( ( -. ps <-> ch ) <-> -. ( ps <-> ch ) ) ) ;
	step 7 : wff = thm nbn2 () |- ( -. ph -> ( -. ps <-> ( ph <-> ps ) ) ) ;
	step 8 : wff = thm bibi1d (step 7) |- ( -. ph -> ( ( -. ps <-> ch ) <-> ( ( ph <-> ps ) <-> ch ) ) ) ;
	step 9 : wff = thm nbn2 () |- ( -. ph -> ( -. ( ps <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) ) ;
	step 10 : wff = thm 3bitr3d (step 6, step 8, step 9) |- ( -. ph -> ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) ) ;
	step 11 : wff = thm pm2_61i (step 4, step 10) |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ph <-> ( ps <-> ch ) ) ) ;
	qed prop 1 = step 11 ;
}

theorem biluk (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> ( ( ch <-> ps ) <-> ( ph <-> ch ) ) ) ;
}

proof of biluk {
	step 1 : wff = thm bicom () |- ( ( ph <-> ps ) <-> ( ps <-> ph ) ) ;
	step 2 : wff = thm bibi1i (step 1) |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ( ps <-> ph ) <-> ch ) ) ;
	step 3 : wff = thm biass () |- ( ( ( ps <-> ph ) <-> ch ) <-> ( ps <-> ( ph <-> ch ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ( ( ph <-> ps ) <-> ch ) <-> ( ps <-> ( ph <-> ch ) ) ) ;
	step 5 : wff = thm biass () |- ( ( ( ( ph <-> ps ) <-> ch ) <-> ( ps <-> ( ph <-> ch ) ) ) <-> ( ( ph <-> ps ) <-> ( ch <-> ( ps <-> ( ph <-> ch ) ) ) ) ) ;
	step 6 : wff = thm mpbi (step 4, step 5) |- ( ( ph <-> ps ) <-> ( ch <-> ( ps <-> ( ph <-> ch ) ) ) ) ;
	step 7 : wff = thm biass () |- ( ( ( ch <-> ps ) <-> ( ph <-> ch ) ) <-> ( ch <-> ( ps <-> ( ph <-> ch ) ) ) ) ;
	step 8 : wff = thm bitr4i (step 6, step 7) |- ( ( ph <-> ps ) <-> ( ( ch <-> ps ) <-> ( ph <-> ch ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem pm5_7 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph \/ ch ) <-> ( ps \/ ch ) ) <-> ( ch \/ ( ph <-> ps ) ) ) ;
}

proof of pm5_7 {
	step 1 : wff = thm orbidi () |- ( ( ch \/ ( ph <-> ps ) ) <-> ( ( ch \/ ph ) <-> ( ch \/ ps ) ) ) ;
	step 2 : wff = thm orcom () |- ( ( ch \/ ph ) <-> ( ph \/ ch ) ) ;
	step 3 : wff = thm orcom () |- ( ( ch \/ ps ) <-> ( ps \/ ch ) ) ;
	step 4 : wff = thm bibi12i (step 2, step 3) |- ( ( ( ch \/ ph ) <-> ( ch \/ ps ) ) <-> ( ( ph \/ ch ) <-> ( ps \/ ch ) ) ) ;
	step 5 : wff = thm bitr2i (step 1, step 4) |- ( ( ( ph \/ ch ) <-> ( ps \/ ch ) ) <-> ( ch \/ ( ph <-> ps ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem bigolden (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) <-> ph ) <-> ( ps <-> ( ph \/ ps ) ) ) ;
}

proof of bigolden {
	step 1 : wff = thm pm4_71 () |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm pm4_72 () |- ( ( ph -> ps ) <-> ( ps <-> ( ph \/ ps ) ) ) ;
	step 3 : wff = thm bicom () |- ( ( ph <-> ( ph /\ ps ) ) <-> ( ( ph /\ ps ) <-> ph ) ) ;
	step 4 : wff = thm 3bitr3ri (step 1, step 2, step 3) |- ( ( ( ph /\ ps ) <-> ph ) <-> ( ps <-> ( ph \/ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem pm5_71 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ps -> -. ch ) -> ( ( ( ph \/ ps ) /\ ch ) <-> ( ph /\ ch ) ) ) ;
}

proof of pm5_71 {
	step 1 : wff = thm orel2 () |- ( -. ps -> ( ( ph \/ ps ) -> ph ) ) ;
	step 2 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 3 : wff = thm impbid1 (step 1, step 2) |- ( -. ps -> ( ( ph \/ ps ) <-> ph ) ) ;
	step 4 : wff = thm anbi1d (step 3) |- ( -. ps -> ( ( ( ph \/ ps ) /\ ch ) <-> ( ph /\ ch ) ) ) ;
	step 5 : wff = thm pm2_21 () |- ( -. ch -> ( ch -> ( ( ph \/ ps ) <-> ph ) ) ) ;
	step 6 : wff = thm pm5_32rd (step 5) |- ( -. ch -> ( ( ( ph \/ ps ) /\ ch ) <-> ( ph /\ ch ) ) ) ;
	step 7 : wff = thm ja (step 4, step 6) |- ( ( ps -> -. ch ) -> ( ( ( ph \/ ps ) /\ ch ) <-> ( ph /\ ch ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem pm5_75 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) -> ( ( ph /\ -. ps ) <-> ch ) ) ;
}

proof of pm5_75 {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ( ps \/ ch ) ) -> ( ph -> ( ps \/ ch ) ) ) ;
	step 2 : wff = thm pm5_6 () |- ( ( ( ph /\ -. ps ) -> ch ) <-> ( ph -> ( ps \/ ch ) ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ( ph <-> ( ps \/ ch ) ) -> ( ( ph /\ -. ps ) -> ch ) ) ;
	step 4 : wff = thm adantl (step 3) |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) -> ( ( ph /\ -. ps ) -> ch ) ) ;
	step 5 : wff = thm bi2 () |- ( ( ph <-> ( ps \/ ch ) ) -> ( ( ps \/ ch ) -> ph ) ) ;
	step 6 : wff = thm olc () |- ( ch -> ( ps \/ ch ) ) ;
	step 7 : wff = thm olc () |- ( ph -> ( ps \/ ph ) ) ;
	step 8 : wff = thm imim12i (step 6, step 7) |- ( ( ( ps \/ ch ) -> ph ) -> ( ch -> ( ps \/ ph ) ) ) ;
	step 9 : wff = thm syl (step 5, step 8) |- ( ( ph <-> ( ps \/ ch ) ) -> ( ch -> ( ps \/ ph ) ) ) ;
	step 10 : wff = thm pm5_6 () |- ( ( ( ch /\ -. ps ) -> ph ) <-> ( ch -> ( ps \/ ph ) ) ) ;
	step 11 : wff = thm sylibr (step 9, step 10) |- ( ( ph <-> ( ps \/ ch ) ) -> ( ( ch /\ -. ps ) -> ph ) ) ;
	step 12 : wff = thm exp3a (step 11) |- ( ( ph <-> ( ps \/ ch ) ) -> ( ch -> ( -. ps -> ph ) ) ) ;
	step 13 : wff = thm a2d (step 12) |- ( ( ph <-> ( ps \/ ch ) ) -> ( ( ch -> -. ps ) -> ( ch -> ph ) ) ) ;
	step 14 : wff = thm impcom (step 13) |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) -> ( ch -> ph ) ) ;
	step 15 : wff = thm pm3_26 () |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) -> ( ch -> -. ps ) ) ;
	step 16 : wff = thm jcad (step 14, step 15) |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) -> ( ch -> ( ph /\ -. ps ) ) ) ;
	step 17 : wff = thm impbid (step 4, step 16) |- ( ( ( ch -> -. ps ) /\ ( ph <-> ( ps \/ ch ) ) ) -> ( ( ph /\ -. ps ) <-> ch ) ) ;
	qed prop 1 = step 17 ;
}

theorem bimsc1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ch <-> ( ps /\ ph ) ) ) -> ( ch <-> ph ) ) ;
}

proof of bimsc1 {
	step 1 : wff = thm id () |- ( ( ch <-> ( ps /\ ph ) ) -> ( ch <-> ( ps /\ ph ) ) ) ;
	step 2 : wff = thm pm4_71r () |- ( ( ph -> ps ) <-> ( ph <-> ( ps /\ ph ) ) ) ;
	step 3 : wff = thm biimpi (step 2) |- ( ( ph -> ps ) -> ( ph <-> ( ps /\ ph ) ) ) ;
	step 4 : wff = thm bicomd (step 3) |- ( ( ph -> ps ) -> ( ( ps /\ ph ) <-> ph ) ) ;
	step 5 : wff = thm sylan9bbr (step 1, step 4) |- ( ( ( ph -> ps ) /\ ( ch <-> ( ps /\ ph ) ) ) -> ( ch <-> ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem ecase2d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> -. ( ps /\ ch ) ) ;
	hyp 3 : wff = |- ( ph -> -. ( ps /\ th ) ) ;
	hyp 4 : wff = |- ( ph -> ( ta \/ ( ch \/ th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ta ) ;
}

proof of ecase2d {
	step 1 : wff = thm ioran () |- ( -. ( ch \/ th ) <-> ( -. ch /\ -. th ) ) ;
	step 2 : wff = thm imnan () |- ( ( ps -> -. ch ) <-> -. ( ps /\ ch ) ) ;
	step 3 : wff = thm sylibr (hyp 2, step 2) |- ( ph -> ( ps -> -. ch ) ) ;
	step 4 : wff = thm mpd (hyp 1, step 3) |- ( ph -> -. ch ) ;
	step 5 : wff = thm imnan () |- ( ( ps -> -. th ) <-> -. ( ps /\ th ) ) ;
	step 6 : wff = thm sylibr (hyp 3, step 5) |- ( ph -> ( ps -> -. th ) ) ;
	step 7 : wff = thm mpd (hyp 1, step 6) |- ( ph -> -. th ) ;
	step 8 : wff = thm sylanbrc (step 1, step 4, step 7) |- ( ph -> -. ( ch \/ th ) ) ;
	step 9 : wff = thm orcom () |- ( ( ta \/ ( ch \/ th ) ) <-> ( ( ch \/ th ) \/ ta ) ) ;
	step 10 : wff = thm sylib (hyp 4, step 9) |- ( ph -> ( ( ch \/ th ) \/ ta ) ) ;
	step 11 : wff = thm ord (step 10) |- ( ph -> ( -. ( ch \/ th ) -> ta ) ) ;
	step 12 : wff = thm mpd (step 8, step 11) |- ( ph -> ta ) ;
	qed prop 1 = step 12 ;
}

theorem ecase3 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	hyp 3 : wff = |- ( -. ( ph \/ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of ecase3 {
	step 1 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 2 : wff = thm sylbir (step 1, hyp 3) |- ( ( -. ph /\ -. ps ) -> ch ) ;
	step 3 : wff = thm ex (step 2) |- ( -. ph -> ( -. ps -> ch ) ) ;
	step 4 : wff = thm pm2_61ii (step 3, hyp 1, hyp 2) |- ch ;
	qed prop 1 = step 4 ;
}

theorem ecase (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( -. ph -> ch ) ;
	hyp 2 : wff = |- ( -. ps -> ch ) ;
	hyp 3 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of ecase {
	step 1 : wff = thm ex (hyp 3) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm pm2_61nii (step 1, hyp 1, hyp 2) |- ch ;
	qed prop 1 = step 2 ;
}

theorem ecase3d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> th ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( -. ( ps \/ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of ecase3d {
	step 1 : wff = thm com12 (hyp 1) |- ( ps -> ( ph -> th ) ) ;
	step 2 : wff = thm com12 (hyp 2) |- ( ch -> ( ph -> th ) ) ;
	step 3 : wff = thm com12 (hyp 3) |- ( -. ( ps \/ ch ) -> ( ph -> th ) ) ;
	step 4 : wff = thm ecase3 (step 1, step 2, step 3) |- ( ph -> th ) ;
	qed prop 1 = step 4 ;
}

theorem ccase (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ta ) ;
	hyp 2 : wff = |- ( ( ch /\ ps ) -> ta ) ;
	hyp 3 : wff = |- ( ( ph /\ th ) -> ta ) ;
	hyp 4 : wff = |- ( ( ch /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) ;
}

proof of ccase {
	step 1 : wff = thm anddi () |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) <-> ( ( ( ph /\ ps ) \/ ( ph /\ th ) ) \/ ( ( ch /\ ps ) \/ ( ch /\ th ) ) ) ) ;
	step 2 : wff = thm or4 () |- ( ( ( ( ph /\ ps ) \/ ( ph /\ th ) ) \/ ( ( ch /\ ps ) \/ ( ch /\ th ) ) ) <-> ( ( ( ph /\ ps ) \/ ( ch /\ ps ) ) \/ ( ( ph /\ th ) \/ ( ch /\ th ) ) ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) <-> ( ( ( ph /\ ps ) \/ ( ch /\ ps ) ) \/ ( ( ph /\ th ) \/ ( ch /\ th ) ) ) ) ;
	step 4 : wff = thm jaoi (hyp 1, hyp 2) |- ( ( ( ph /\ ps ) \/ ( ch /\ ps ) ) -> ta ) ;
	step 5 : wff = thm jaoi (hyp 3, hyp 4) |- ( ( ( ph /\ th ) \/ ( ch /\ th ) ) -> ta ) ;
	step 6 : wff = thm jaoi (step 4, step 5) |- ( ( ( ( ph /\ ps ) \/ ( ch /\ ps ) ) \/ ( ( ph /\ th ) \/ ( ch /\ th ) ) ) -> ta ) ;
	step 7 : wff = thm sylbi (step 3, step 6) |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) ;
	qed prop 1 = step 7 ;
}

theorem ccased (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> et ) ) ;
	hyp 2 : wff = |- ( ph -> ( ( th /\ ch ) -> et ) ) ;
	hyp 3 : wff = |- ( ph -> ( ( ps /\ ta ) -> et ) ) ;
	hyp 4 : wff = |- ( ph -> ( ( th /\ ta ) -> et ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) -> et ) ) ;
}

proof of ccased {
	step 1 : wff = thm jaod (hyp 1, hyp 2) |- ( ph -> ( ( ( ps /\ ch ) \/ ( th /\ ch ) ) -> et ) ) ;
	step 2 : wff = thm jaod (hyp 3, hyp 4) |- ( ph -> ( ( ( ps /\ ta ) \/ ( th /\ ta ) ) -> et ) ) ;
	step 3 : wff = thm jaod (step 1, step 2) |- ( ph -> ( ( ( ( ps /\ ch ) \/ ( th /\ ch ) ) \/ ( ( ps /\ ta ) \/ ( th /\ ta ) ) ) -> et ) ) ;
	step 4 : wff = thm anddi () |- ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) <-> ( ( ( ps /\ ch ) \/ ( ps /\ ta ) ) \/ ( ( th /\ ch ) \/ ( th /\ ta ) ) ) ) ;
	step 5 : wff = thm or4 () |- ( ( ( ( ps /\ ch ) \/ ( ps /\ ta ) ) \/ ( ( th /\ ch ) \/ ( th /\ ta ) ) ) <-> ( ( ( ps /\ ch ) \/ ( th /\ ch ) ) \/ ( ( ps /\ ta ) \/ ( th /\ ta ) ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) <-> ( ( ( ps /\ ch ) \/ ( th /\ ch ) ) \/ ( ( ps /\ ta ) \/ ( th /\ ta ) ) ) ) ;
	step 7 : wff = thm syl5ib (step 3, step 6) |- ( ph -> ( ( ( ps \/ th ) /\ ( ch \/ ta ) ) -> et ) ) ;
	qed prop 1 = step 7 ;
}

theorem ccase2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ta ) ;
	hyp 2 : wff = |- ( ch -> ta ) ;
	hyp 3 : wff = |- ( th -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) ;
}

proof of ccase2 {
	step 1 : wff = thm adantr (hyp 2) |- ( ( ch /\ ps ) -> ta ) ;
	step 2 : wff = thm adantl (hyp 3) |- ( ( ph /\ th ) -> ta ) ;
	step 3 : wff = thm adantl (hyp 3) |- ( ( ch /\ th ) -> ta ) ;
	step 4 : wff = thm ccase (hyp 1, step 1, step 2, step 3) |- ( ( ( ph \/ ch ) /\ ( ps \/ th ) ) -> ta ) ;
	qed prop 1 = step 4 ;
}

theorem 4cases (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ -. ps ) -> ch ) ;
	hyp 3 : wff = |- ( ( -. ph /\ ps ) -> ch ) ;
	hyp 4 : wff = |- ( ( -. ph /\ -. ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of 4cases {
	step 1 : wff = thm pm2_61ian (hyp 1, hyp 3) |- ( ps -> ch ) ;
	step 2 : wff = thm pm2_61ian (hyp 2, hyp 4) |- ( -. ps -> ch ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ch ;
	qed prop 1 = step 3 ;
}

theorem niabn (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( -. ps -> ( ( ch /\ ps ) <-> -. ph ) ) ;
}

proof of niabn {
	step 1 : wff = thm pm3_27 () |- ( ( ch /\ ps ) -> ps ) ;
	step 2 : wff = thm pm2_24i (hyp 1) |- ( -. ph -> ps ) ;
	step 3 : wff = thm pm5_21ni (step 1, step 2) |- ( -. ps -> ( ( ch /\ ps ) <-> -. ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem dedlem0a (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) ;
}

proof of dedlem0a {
	step 1 : wff = axm ax-1 () |- ( ps -> ( ( ch -> ph ) -> ps ) ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( ch -> ph ) ) ;
	step 3 : wff = thm imim1i (step 2) |- ( ( ( ch -> ph ) -> ps ) -> ( ph -> ps ) ) ;
	step 4 : wff = thm com12 (step 3) |- ( ph -> ( ( ( ch -> ph ) -> ps ) -> ps ) ) ;
	step 5 : wff = thm impbid2 (step 1, step 4) |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ps ) ) ) ;
	step 6 : wff = thm iba () |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) ;
	step 7 : wff = thm imbi2d (step 6) |- ( ph -> ( ( ( ch -> ph ) -> ps ) <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) ;
	step 8 : wff = thm bitrd (step 5, step 7) |- ( ph -> ( ps <-> ( ( ch -> ph ) -> ( ps /\ ph ) ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem dedlem0b (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( -. ph -> ( ps <-> ( ( ps -> ph ) -> ( ch /\ ph ) ) ) ) ;
}

proof of dedlem0b {
	step 1 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ( ch /\ ph ) ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( -. ph -> ( ( ps -> ph ) -> ( ps -> ( ch /\ ph ) ) ) ) ;
	step 3 : wff = thm com23 (step 2) |- ( -. ph -> ( ps -> ( ( ps -> ph ) -> ( ch /\ ph ) ) ) ) ;
	step 4 : wff = thm pm2_21 () |- ( -. ps -> ( ps -> ph ) ) ;
	step 5 : wff = thm pm3_27 () |- ( ( ch /\ ph ) -> ph ) ;
	step 6 : wff = thm imim12i (step 4, step 5) |- ( ( ( ps -> ph ) -> ( ch /\ ph ) ) -> ( -. ps -> ph ) ) ;
	step 7 : wff = thm con1d (step 6) |- ( ( ( ps -> ph ) -> ( ch /\ ph ) ) -> ( -. ph -> ps ) ) ;
	step 8 : wff = thm com12 (step 7) |- ( -. ph -> ( ( ( ps -> ph ) -> ( ch /\ ph ) ) -> ps ) ) ;
	step 9 : wff = thm impbid (step 3, step 8) |- ( -. ph -> ( ps <-> ( ( ps -> ph ) -> ( ch /\ ph ) ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem dedlema (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ph -> ( ps <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
}

proof of dedlema {
	step 1 : wff = thm orc () |- ( ps -> ( ps \/ ( ch /\ -. ph ) ) ) ;
	step 2 : wff = thm idd () |- ( ph -> ( ps -> ps ) ) ;
	step 3 : wff = thm pm2_24 () |- ( ph -> ( -. ph -> ps ) ) ;
	step 4 : wff = thm adantld (step 3) |- ( ph -> ( ( ch /\ -. ph ) -> ps ) ) ;
	step 5 : wff = thm jaod (step 2, step 4) |- ( ph -> ( ( ps \/ ( ch /\ -. ph ) ) -> ps ) ) ;
	step 6 : wff = thm impbid2 (step 1, step 5) |- ( ph -> ( ps <-> ( ps \/ ( ch /\ -. ph ) ) ) ) ;
	step 7 : wff = thm iba () |- ( ph -> ( ps <-> ( ps /\ ph ) ) ) ;
	step 8 : wff = thm orbi1d (step 7) |- ( ph -> ( ( ps \/ ( ch /\ -. ph ) ) <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 9 : wff = thm bitrd (step 6, step 8) |- ( ph -> ( ps <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem dedlemb (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( -. ph -> ( ch <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
}

proof of dedlemb {
	step 1 : wff = thm olc () |- ( ( ch /\ -. ph ) -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ;
	step 2 : wff = thm expcom (step 1) |- ( -. ph -> ( ch -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 3 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ( ps -> ch ) ) ) ;
	step 4 : wff = thm com23 (step 3) |- ( -. ph -> ( ps -> ( ph -> ch ) ) ) ;
	step 5 : wff = thm imp3a (step 4) |- ( -. ph -> ( ( ps /\ ph ) -> ch ) ) ;
	step 6 : wff = thm pm3_26 () |- ( ( ch /\ -. ph ) -> ch ) ;
	step 7 : wff = thm a1i (step 6) |- ( -. ph -> ( ( ch /\ -. ph ) -> ch ) ) ;
	step 8 : wff = thm jaod (step 5, step 7) |- ( -. ph -> ( ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) -> ch ) ) ;
	step 9 : wff = thm impbid (step 2, step 8) |- ( -. ph -> ( ch <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem elimh (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) -> ( ch <-> ta ) ) ;
	hyp 2 : wff = |- ( ( ps <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) -> ( th <-> ta ) ) ;
	hyp 3 : wff = |- th ;
	-----------------------
	prop 1 : wff = |- ta ;
}

proof of elimh {
	step 1 : wff = thm dedlema () |- ( ch -> ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ch -> ( ch <-> ta ) ) ;
	step 3 : wff = thm ibi (step 2) |- ( ch -> ta ) ;
	step 4 : wff = thm dedlemb () |- ( -. ch -> ( ps <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) ) ;
	step 5 : wff = thm syl (step 4, hyp 2) |- ( -. ch -> ( th <-> ta ) ) ;
	step 6 : wff = thm mpbii (hyp 3, step 5) |- ( -. ch -> ta ) ;
	step 7 : wff = thm pm2_61i (step 3, step 6) |- ta ;
	qed prop 1 = step 7 ;
}

theorem dedt (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) -> ( th <-> ta ) ) ;
	hyp 2 : wff = |- ta ;
	-----------------------
	prop 1 : wff = |- ( ch -> th ) ;
}

proof of dedt {
	step 1 : wff = thm dedlema () |- ( ch -> ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) ) ;
	step 2 : wff = thm mpbiri (hyp 2, hyp 1) |- ( ( ph <-> ( ( ph /\ ch ) \/ ( ps /\ -. ch ) ) ) -> th ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ch -> th ) ;
	qed prop 1 = step 3 ;
}

theorem con3th (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
}

proof of con3th {
	step 1 : wff = thm id () |- ( ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ) ;
	step 2 : wff = thm notbid (step 1) |- ( ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( -. ps <-> -. ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ) ;
	step 3 : wff = thm imbi1d (step 2) |- ( ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( ( -. ps -> -. ph ) <-> ( -. ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) -> -. ph ) ) ) ;
	step 4 : wff = thm id () |- ( ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ) ;
	step 5 : wff = thm imbi2d (step 4) |- ( ( ps <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( ( ph -> ps ) <-> ( ph -> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ) ) ;
	step 6 : wff = thm id () |- ( ( ph <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( ph <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ) ;
	step 7 : wff = thm imbi2d (step 6) |- ( ( ph <-> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) -> ( ( ph -> ph ) <-> ( ph -> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ) ) ;
	step 8 : wff = thm id () |- ( ph -> ph ) ;
	step 9 : wff = thm elimh (step 5, step 7, step 8) |- ( ph -> ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) ) ;
	step 10 : wff = thm con3i (step 9) |- ( -. ( ( ps /\ ( ph -> ps ) ) \/ ( ph /\ -. ( ph -> ps ) ) ) -> -. ph ) ;
	step 11 : wff = thm dedt (step 3, step 10) |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
	qed prop 1 = step 11 ;
}

theorem consensus (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) ;
}

proof of consensus {
	step 1 : wff = thm id () |- ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) -> ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) ;
	step 2 : wff = thm dedlema () |- ( ph -> ( ps <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 3 : wff = thm biimpd (step 2) |- ( ph -> ( ps -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 4 : wff = thm adantrd (step 3) |- ( ph -> ( ( ps /\ ch ) -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 5 : wff = thm dedlemb () |- ( -. ph -> ( ch <-> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 6 : wff = thm biimpd (step 5) |- ( -. ph -> ( ch -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 7 : wff = thm adantld (step 6) |- ( -. ph -> ( ( ps /\ ch ) -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ) ;
	step 8 : wff = thm pm2_61i (step 4, step 7) |- ( ( ps /\ ch ) -> ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) ) ;
	step 9 : wff = thm ancom () |- ( ( ps /\ ph ) <-> ( ph /\ ps ) ) ;
	step 10 : wff = thm ancom () |- ( ( ch /\ -. ph ) <-> ( -. ph /\ ch ) ) ;
	step 11 : wff = thm orbi12i (step 9, step 10) |- ( ( ( ps /\ ph ) \/ ( ch /\ -. ph ) ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) ;
	step 12 : wff = thm sylib (step 8, step 11) |- ( ( ps /\ ch ) -> ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) ;
	step 13 : wff = thm jaoi (step 1, step 12) |- ( ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) -> ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) ;
	step 14 : wff = thm orc () |- ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) -> ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) ) ;
	step 15 : wff = thm impbii (step 13, step 14) |- ( ( ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) \/ ( ps /\ ch ) ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ ch ) ) ) ;
	qed prop 1 = step 15 ;
}

theorem pm4_42 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) ;
}

proof of pm4_42 {
	step 1 : wff = thm dedlema () |- ( ps -> ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) ) ;
	step 2 : wff = thm dedlemb () |- ( -. ps -> ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ( ph <-> ( ( ph /\ ps ) \/ ( ph /\ -. ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ninba (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( -. ps -> ( -. ph <-> ( ch /\ ps ) ) ) ;
}

proof of ninba {
	step 1 : wff = thm niabn (hyp 1) |- ( -. ps -> ( ( ch /\ ps ) <-> -. ph ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( -. ps -> ( -. ph <-> ( ch /\ ps ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem prlem1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( et <-> ch ) ) ;
	hyp 2 : wff = |- ( ps -> -. th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ( ( ps /\ ch ) \/ ( th /\ ta ) ) -> et ) ) ) ;
}

proof of prlem1 {
	step 1 : wff = thm biimprcd (hyp 1) |- ( ch -> ( ph -> et ) ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( ps /\ ch ) -> ( ph -> et ) ) ;
	step 3 : wff = thm a1dd (step 2) |- ( ( ps /\ ch ) -> ( ph -> ( ps -> et ) ) ) ;
	step 4 : wff = thm pm2_24 () |- ( th -> ( -. th -> et ) ) ;
	step 5 : wff = thm syl5 (step 4, hyp 2) |- ( th -> ( ps -> et ) ) ;
	step 6 : wff = thm adantr (step 5) |- ( ( th /\ ta ) -> ( ps -> et ) ) ;
	step 7 : wff = thm a1d (step 6) |- ( ( th /\ ta ) -> ( ph -> ( ps -> et ) ) ) ;
	step 8 : wff = thm jaoi (step 3, step 7) |- ( ( ( ps /\ ch ) \/ ( th /\ ta ) ) -> ( ph -> ( ps -> et ) ) ) ;
	step 9 : wff = thm com3l (step 8) |- ( ph -> ( ps -> ( ( ( ps /\ ch ) \/ ( th /\ ta ) ) -> et ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem prlem2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <-> ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) ) ;
}

proof of prlem2 {
	step 1 : wff = thm orabs () |- ( ph <-> ( ( ph \/ ch ) /\ ph ) ) ;
	step 2 : wff = thm anbi1i (step 1) |- ( ( ph /\ ps ) <-> ( ( ( ph \/ ch ) /\ ph ) /\ ps ) ) ;
	step 3 : wff = thm anass () |- ( ( ( ( ph \/ ch ) /\ ph ) /\ ps ) <-> ( ( ph \/ ch ) /\ ( ph /\ ps ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ( ph /\ ps ) <-> ( ( ph \/ ch ) /\ ( ph /\ ps ) ) ) ;
	step 5 : wff = thm orabs () |- ( ch <-> ( ( ch \/ ph ) /\ ch ) ) ;
	step 6 : wff = thm orcom () |- ( ( ch \/ ph ) <-> ( ph \/ ch ) ) ;
	step 7 : wff = thm anbi1i (step 6) |- ( ( ( ch \/ ph ) /\ ch ) <-> ( ( ph \/ ch ) /\ ch ) ) ;
	step 8 : wff = thm bitri (step 5, step 7) |- ( ch <-> ( ( ph \/ ch ) /\ ch ) ) ;
	step 9 : wff = thm anbi1i (step 8) |- ( ( ch /\ th ) <-> ( ( ( ph \/ ch ) /\ ch ) /\ th ) ) ;
	step 10 : wff = thm anass () |- ( ( ( ( ph \/ ch ) /\ ch ) /\ th ) <-> ( ( ph \/ ch ) /\ ( ch /\ th ) ) ) ;
	step 11 : wff = thm bitri (step 9, step 10) |- ( ( ch /\ th ) <-> ( ( ph \/ ch ) /\ ( ch /\ th ) ) ) ;
	step 12 : wff = thm orbi12i (step 4, step 11) |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <-> ( ( ( ph \/ ch ) /\ ( ph /\ ps ) ) \/ ( ( ph \/ ch ) /\ ( ch /\ th ) ) ) ) ;
	step 13 : wff = thm andi () |- ( ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) <-> ( ( ( ph \/ ch ) /\ ( ph /\ ps ) ) \/ ( ( ph \/ ch ) /\ ( ch /\ th ) ) ) ) ;
	step 14 : wff = thm bitr4i (step 12, step 13) |- ( ( ( ph /\ ps ) \/ ( ch /\ th ) ) <-> ( ( ph \/ ch ) /\ ( ( ph /\ ps ) \/ ( ch /\ th ) ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem oplem1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps \/ ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th \/ ta ) ) ;
	hyp 3 : wff = |- ( ps <-> th ) ;
	hyp 4 : wff = |- ( ch -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of oplem1 {
	step 1 : wff = thm ord (hyp 1) |- ( ph -> ( -. ps -> ch ) ) ;
	step 2 : wff = thm ord (hyp 2) |- ( ph -> ( -. th -> ta ) ) ;
	step 3 : wff = thm notbii (hyp 3) |- ( -. ps <-> -. th ) ;
	step 4 : wff = thm syl5ib (step 2, step 3) |- ( ph -> ( -. ps -> ta ) ) ;
	step 5 : wff = thm jcad (step 1, step 4) |- ( ph -> ( -. ps -> ( ch /\ ta ) ) ) ;
	step 6 : wff = thm syl5bb (hyp 4, hyp 3) |- ( ch -> ( ps <-> ta ) ) ;
	step 7 : wff = thm biimpar (step 6) |- ( ( ch /\ ta ) -> ps ) ;
	step 8 : wff = thm syl6 (step 5, step 7) |- ( ph -> ( -. ps -> ps ) ) ;
	step 9 : wff = thm pm2_18 () |- ( ( -. ps -> ps ) -> ps ) ;
	step 10 : wff = thm syl (step 8, step 9) |- ( ph -> ps ) ;
	qed prop 1 = step 10 ;
}

theorem rnlem (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) ;
}

proof of rnlem {
	step 1 : wff = thm anandir () |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ph /\ ( ch /\ th ) ) /\ ( ps /\ ( ch /\ th ) ) ) ) ;
	step 2 : wff = thm anandi () |- ( ( ph /\ ( ch /\ th ) ) <-> ( ( ph /\ ch ) /\ ( ph /\ th ) ) ) ;
	step 3 : wff = thm anandi () |- ( ( ps /\ ( ch /\ th ) ) <-> ( ( ps /\ ch ) /\ ( ps /\ th ) ) ) ;
	step 4 : wff = thm anbi12i (step 2, step 3) |- ( ( ( ph /\ ( ch /\ th ) ) /\ ( ps /\ ( ch /\ th ) ) ) <-> ( ( ( ph /\ ch ) /\ ( ph /\ th ) ) /\ ( ( ps /\ ch ) /\ ( ps /\ th ) ) ) ) ;
	step 5 : wff = thm ancom () |- ( ( ( ps /\ ch ) /\ ( ps /\ th ) ) <-> ( ( ps /\ th ) /\ ( ps /\ ch ) ) ) ;
	step 6 : wff = thm anbi2i (step 5) |- ( ( ( ( ph /\ ch ) /\ ( ph /\ th ) ) /\ ( ( ps /\ ch ) /\ ( ps /\ th ) ) ) <-> ( ( ( ph /\ ch ) /\ ( ph /\ th ) ) /\ ( ( ps /\ th ) /\ ( ps /\ ch ) ) ) ) ;
	step 7 : wff = thm an4 () |- ( ( ( ( ph /\ ch ) /\ ( ph /\ th ) ) /\ ( ( ps /\ th ) /\ ( ps /\ ch ) ) ) <-> ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) ;
	step 8 : wff = thm bitri (step 6, step 7) |- ( ( ( ( ph /\ ch ) /\ ( ph /\ th ) ) /\ ( ( ps /\ ch ) /\ ( ps /\ th ) ) ) <-> ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) ;
	step 9 : wff = thm 3bitri (step 1, step 4, step 8) |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ( ( ph /\ ch ) /\ ( ps /\ th ) ) /\ ( ( ph /\ th ) /\ ( ps /\ ch ) ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem dn1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( -. ( -. ( -. ( ph \/ ps ) \/ ch ) \/ -. ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> ch ) ;
}

proof of dn1 {
	step 1 : wff = thm anor () |- ( ( ( -. ( ph \/ ps ) \/ ch ) /\ ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> -. ( -. ( -. ( ph \/ ps ) \/ ch ) \/ -. ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) ) ;
	step 2 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 3 : wff = thm pm2_24 () |- ( ph -> ( -. ph -> ( -. ps -> ch ) ) ) ;
	step 4 : wff = thm com23 (step 3) |- ( ph -> ( -. ps -> ( -. ph -> ch ) ) ) ;
	step 5 : wff = thm anor () |- ( ( ch /\ ( ch \/ th ) ) <-> -. ( -. ch \/ -. ( ch \/ th ) ) ) ;
	step 6 : wff = axm ax-1 () |- ( ch -> ( -. ph -> ch ) ) ;
	step 7 : wff = thm a1d (step 6) |- ( ch -> ( -. ps -> ( -. ph -> ch ) ) ) ;
	step 8 : wff = thm adantr (step 7) |- ( ( ch /\ ( ch \/ th ) ) -> ( -. ps -> ( -. ph -> ch ) ) ) ;
	step 9 : wff = thm sylbir (step 5, step 8) |- ( -. ( -. ch \/ -. ( ch \/ th ) ) -> ( -. ps -> ( -. ph -> ch ) ) ) ;
	step 10 : wff = thm jaoi (step 4, step 9) |- ( ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) -> ( -. ps -> ( -. ph -> ch ) ) ) ;
	step 11 : wff = thm com13 (step 10) |- ( -. ph -> ( -. ps -> ( ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) -> ch ) ) ) ;
	step 12 : wff = thm imp (step 11) |- ( ( -. ph /\ -. ps ) -> ( ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) -> ch ) ) ;
	step 13 : wff = thm sylbi (step 2, step 12) |- ( -. ( ph \/ ps ) -> ( ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) -> ch ) ) ;
	step 14 : wff = axm ax-1 () |- ( ch -> ( ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) -> ch ) ) ;
	step 15 : wff = thm jaoi (step 13, step 14) |- ( ( -. ( ph \/ ps ) \/ ch ) -> ( ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) -> ch ) ) ;
	step 16 : wff = thm imp (step 15) |- ( ( ( -. ( ph \/ ps ) \/ ch ) /\ ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) -> ch ) ;
	step 17 : wff = thm olc () |- ( ch -> ( -. ( ph \/ ps ) \/ ch ) ) ;
	step 18 : wff = thm pm2_24 () |- ( ch -> ( -. ch -> ph ) ) ;
	step 19 : wff = thm pm2_24 () |- ( ch -> ( -. ch -> ( -. th -> ph ) ) ) ;
	step 20 : wff = thm imp3a (step 19) |- ( ch -> ( ( -. ch /\ -. th ) -> ph ) ) ;
	step 21 : wff = thm ioran () |- ( -. ( ch \/ th ) <-> ( -. ch /\ -. th ) ) ;
	step 22 : wff = thm syl5ib (step 20, step 21) |- ( ch -> ( -. ( ch \/ th ) -> ph ) ) ;
	step 23 : wff = thm jaod (step 18, step 22) |- ( ch -> ( ( -. ch \/ -. ( ch \/ th ) ) -> ph ) ) ;
	step 24 : wff = thm con3d (step 23) |- ( ch -> ( -. ph -> -. ( -. ch \/ -. ( ch \/ th ) ) ) ) ;
	step 25 : wff = thm orrd (step 24) |- ( ch -> ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) ;
	step 26 : wff = thm jca (step 17, step 25) |- ( ch -> ( ( -. ( ph \/ ps ) \/ ch ) /\ ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) ) ;
	step 27 : wff = thm impbii (step 16, step 26) |- ( ( ( -. ( ph \/ ps ) \/ ch ) /\ ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> ch ) ;
	step 28 : wff = thm bitr3i (step 1, step 27) |- ( -. ( -. ( -. ( ph \/ ps ) \/ ch ) \/ -. ( ph \/ -. ( -. ch \/ -. ( ch \/ th ) ) ) ) <-> ch ) ;
	qed prop 1 = step 28 ;
}

rule w3o (ph : wff, ps : wff, ch : wff) {
	term : wff = # ( ph \/ ps \/ ch ) ;
}

rule w3a (ph : wff, ps : wff, ch : wff) {
	term : wff = # ( ph /\ ps /\ ch ) ;
}

definition df-3or (ph : wff, ps : wff, ch : wff)  {
	defiendum : wff = # ( ph \/ ps \/ ch ) ;
	definiens : wff = # ( ( ph \/ ps ) \/ ch ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-3an (ph : wff, ps : wff, ch : wff)  {
	defiendum : wff = # ( ph /\ ps /\ ch ) ;
	definiens : wff = # ( ( ph /\ ps ) /\ ch ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem 3orass (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
}

proof of 3orass {
	step 1 : wff = def df-3or () |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) ;
	step 2 : wff = thm orass () |- ( ( ( ph \/ ps ) \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3anass (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
}

proof of 3anass {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm anass () |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3anrot (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ch /\ ph ) ) ;
}

proof of 3anrot {
	step 1 : wff = thm ancom () |- ( ( ph /\ ( ps /\ ch ) ) <-> ( ( ps /\ ch ) /\ ph ) ) ;
	step 2 : wff = thm 3anass () |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 3 : wff = def df-3an () |- ( ( ps /\ ch /\ ph ) <-> ( ( ps /\ ch ) /\ ph ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ch /\ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem 3orrot (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph \/ ps \/ ch ) <-> ( ps \/ ch \/ ph ) ) ;
}

proof of 3orrot {
	step 1 : wff = thm orcom () |- ( ( ph \/ ( ps \/ ch ) ) <-> ( ( ps \/ ch ) \/ ph ) ) ;
	step 2 : wff = thm 3orass () |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 3 : wff = def df-3or () |- ( ( ps \/ ch \/ ph ) <-> ( ( ps \/ ch ) \/ ph ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( ( ph \/ ps \/ ch ) <-> ( ps \/ ch \/ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem 3ancoma (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) ;
}

proof of 3ancoma {
	step 1 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 2 : wff = thm anbi1i (step 1) |- ( ( ( ph /\ ps ) /\ ch ) <-> ( ( ps /\ ph ) /\ ch ) ) ;
	step 3 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 4 : wff = def df-3an () |- ( ( ps /\ ph /\ ch ) <-> ( ( ps /\ ph ) /\ ch ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3ancomb (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ch /\ ps ) ) ;
}

proof of 3ancomb {
	step 1 : wff = thm 3ancoma () |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) ;
	step 2 : wff = thm 3anrot () |- ( ( ps /\ ph /\ ch ) <-> ( ph /\ ch /\ ps ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ch /\ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3anrev (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) <-> ( ch /\ ps /\ ph ) ) ;
}

proof of 3anrev {
	step 1 : wff = thm 3ancoma () |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ph /\ ch ) ) ;
	step 2 : wff = thm 3anrot () |- ( ( ch /\ ps /\ ph ) <-> ( ps /\ ph /\ ch ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( ( ph /\ ps /\ ch ) <-> ( ch /\ ps /\ ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3simpa (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) ;
}

proof of 3simpa {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm pm3_26bi (step 1) |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpb (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ch ) ) ;
}

proof of 3simpb {
	step 1 : wff = thm 3ancomb () |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ch /\ ps ) ) ;
	step 2 : wff = thm 3simpa () |- ( ( ph /\ ch /\ ps ) -> ( ph /\ ch ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3simpc (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> ( ps /\ ch ) ) ;
}

proof of 3simpc {
	step 1 : wff = thm 3anrot () |- ( ( ph /\ ps /\ ch ) <-> ( ps /\ ch /\ ph ) ) ;
	step 2 : wff = thm 3simpa () |- ( ( ps /\ ch /\ ph ) -> ( ps /\ ch ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( ( ph /\ ps /\ ch ) -> ( ps /\ ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3simp1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> ph ) ;
}

proof of 3simp1 {
	step 1 : wff = thm 3simpa () |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm pm3_26d (step 1) |- ( ( ph /\ ps /\ ch ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem 3simp2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> ps ) ;
}

proof of 3simp2 {
	step 1 : wff = thm 3simpa () |- ( ( ph /\ ps /\ ch ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm pm3_27d (step 1) |- ( ( ph /\ ps /\ ch ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 3simp3 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> ch ) ;
}

proof of 3simp3 {
	step 1 : wff = thm 3simpc () |- ( ( ph /\ ps /\ ch ) -> ( ps /\ ch ) ) ;
	step 2 : wff = thm pm3_27d (step 1) |- ( ( ph /\ ps /\ ch ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpl1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ph ) ;
}

proof of 3simpl1 {
	step 1 : wff = thm 3simp1 () |- ( ( ph /\ ps /\ ch ) -> ph ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpl2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ps ) ;
}

proof of 3simpl2 {
	step 1 : wff = thm 3simp2 () |- ( ( ph /\ ps /\ ch ) -> ps ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpl3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ch ) ;
}

proof of 3simpl3 {
	step 1 : wff = thm 3simp3 () |- ( ( ph /\ ps /\ ch ) -> ch ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpr1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ps ) ;
}

proof of 3simpr1 {
	step 1 : wff = thm 3simp1 () |- ( ( ps /\ ch /\ th ) -> ps ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpr2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ch ) ;
}

proof of 3simpr2 {
	step 1 : wff = thm 3simp2 () |- ( ( ps /\ ch /\ th ) -> ch ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3simpr3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> th ) ;
}

proof of 3simpr3 {
	step 1 : wff = thm 3simp3 () |- ( ( ps /\ ch /\ th ) -> th ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3simp1i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph /\ ps /\ ch ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of 3simp1i {
	step 1 : wff = thm 3simp1 () |- ( ( ph /\ ps /\ ch ) -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem 3simp2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph /\ ps /\ ch ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of 3simp2i {
	step 1 : wff = thm 3simp2 () |- ( ( ph /\ ps /\ ch ) -> ps ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem 3simp3i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph /\ ps /\ ch ) ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of 3simp3i {
	step 1 : wff = thm 3simp3 () |- ( ( ph /\ ps /\ ch ) -> ch ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ch ;
	qed prop 1 = step 2 ;
}

theorem 3simp1d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps /\ ch /\ th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of 3simp1d {
	step 1 : wff = thm 3simp1 () |- ( ( ps /\ ch /\ th ) -> ps ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 3simp2d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps /\ ch /\ th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of 3simp2d {
	step 1 : wff = thm 3simp2 () |- ( ( ps /\ ch /\ th ) -> ch ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3simp3d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps /\ ch /\ th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of 3simp3d {
	step 1 : wff = thm 3simp3 () |- ( ( ps /\ ch /\ th ) -> th ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( th /\ ph /\ ps ) -> ch ) ;
}

proof of 3adant1 {
	step 1 : wff = thm 3simpc () |- ( ( th /\ ph /\ ps ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ( th /\ ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th /\ ps ) -> ch ) ;
}

proof of 3adant2 {
	step 1 : wff = thm 3simpb () |- ( ( ph /\ th /\ ps ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ( ph /\ th /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ th ) -> ch ) ;
}

proof of 3adant3 {
	step 1 : wff = thm 3simpa () |- ( ( ph /\ ps /\ th ) -> ( ph /\ ps ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ( ph /\ ps /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2ant1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ th ) -> ch ) ;
}

proof of 3ad2ant1 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ch ) ;
	step 2 : wff = thm 3adant2 (step 1) |- ( ( ph /\ ps /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2ant2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph /\ th ) -> ch ) ;
}

proof of 3ad2ant2 {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ th ) -> ch ) ;
	step 2 : wff = thm 3adant1 (step 1) |- ( ( ps /\ ph /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2ant3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ th /\ ph ) -> ch ) ;
}

proof of 3ad2ant3 {
	step 1 : wff = thm adantl (hyp 1) |- ( ( th /\ ph ) -> ch ) ;
	step 2 : wff = thm 3adant1 (step 1) |- ( ( ps /\ th /\ ph ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3adantl1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ta /\ ph /\ ps ) /\ ch ) -> th ) ;
}

proof of 3adantl1 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm 3adant1 (step 1) |- ( ( ta /\ ph /\ ps ) -> ( ch -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ta /\ ph /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adantl2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ta /\ ps ) /\ ch ) -> th ) ;
}

proof of 3adantl2 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm 3adant2 (step 1) |- ( ( ph /\ ta /\ ps ) -> ( ch -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ ta /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adantl3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) ;
}

proof of 3adantl3 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	step 2 : wff = thm 3adant3 (step 1) |- ( ( ph /\ ps /\ ta ) -> ( ch -> th ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adantr1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) ;
}

proof of 3adantr1 {
	step 1 : wff = thm ancoms (hyp 1) |- ( ( ( ps /\ ch ) /\ ph ) -> th ) ;
	step 2 : wff = thm 3adantl1 (step 1) |- ( ( ( ta /\ ps /\ ch ) /\ ph ) -> th ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adantr2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) ;
}

proof of 3adantr2 {
	step 1 : wff = thm ancoms (hyp 1) |- ( ( ( ps /\ ch ) /\ ph ) -> th ) ;
	step 2 : wff = thm 3adantl2 (step 1) |- ( ( ( ps /\ ta /\ ch ) /\ ph ) -> th ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adantr3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) ;
}

proof of 3adantr3 {
	step 1 : wff = thm ancoms (hyp 1) |- ( ( ( ps /\ ch ) /\ ph ) -> th ) ;
	step 2 : wff = thm 3adantl3 (step 1) |- ( ( ( ps /\ ch /\ ta ) /\ ph ) -> th ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3ad2antl1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) ;
}

proof of 3ad2antl1 {
	step 1 : wff = thm adantlr (hyp 1) |- ( ( ( ph /\ ta ) /\ ch ) -> th ) ;
	step 2 : wff = thm 3adantl2 (step 1) |- ( ( ( ph /\ ps /\ ta ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2antl2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ps /\ ph /\ ta ) /\ ch ) -> th ) ;
}

proof of 3ad2antl2 {
	step 1 : wff = thm adantlr (hyp 1) |- ( ( ( ph /\ ta ) /\ ch ) -> th ) ;
	step 2 : wff = thm 3adantl1 (step 1) |- ( ( ( ps /\ ph /\ ta ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2antl3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ps /\ ta /\ ph ) /\ ch ) -> th ) ;
}

proof of 3ad2antl3 {
	step 1 : wff = thm adantll (hyp 1) |- ( ( ( ta /\ ph ) /\ ch ) -> th ) ;
	step 2 : wff = thm 3adantl1 (step 1) |- ( ( ( ps /\ ta /\ ph ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2antr1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ch /\ ps /\ ta ) ) -> th ) ;
}

proof of 3ad2antr1 {
	step 1 : wff = thm adantrr (hyp 1) |- ( ( ph /\ ( ch /\ ps ) ) -> th ) ;
	step 2 : wff = thm 3adantr3 (step 1) |- ( ( ph /\ ( ch /\ ps /\ ta ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2antr2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) ;
}

proof of 3ad2antr2 {
	step 1 : wff = thm adantrl (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm 3adantr3 (step 1) |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3ad2antr3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) ;
}

proof of 3ad2antr3 {
	step 1 : wff = thm adantrl (hyp 1) |- ( ( ph /\ ( ta /\ ch ) ) -> th ) ;
	step 2 : wff = thm 3adantr1 (step 1) |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3mix1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ph -> ( ph \/ ps \/ ch ) ) ;
}

proof of 3mix1 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ( ps \/ ch ) ) ) ;
	step 2 : wff = thm 3orass () |- ( ( ph \/ ps \/ ch ) <-> ( ph \/ ( ps \/ ch ) ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> ( ph \/ ps \/ ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3mix2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ph -> ( ps \/ ph \/ ch ) ) ;
}

proof of 3mix2 {
	step 1 : wff = thm 3mix1 () |- ( ph -> ( ph \/ ch \/ ps ) ) ;
	step 2 : wff = thm 3orrot () |- ( ( ps \/ ph \/ ch ) <-> ( ph \/ ch \/ ps ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> ( ps \/ ph \/ ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3mix3 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ph -> ( ps \/ ch \/ ph ) ) ;
}

proof of 3mix3 {
	step 1 : wff = thm 3mix1 () |- ( ph -> ( ph \/ ps \/ ch ) ) ;
	step 2 : wff = thm 3orrot () |- ( ( ph \/ ps \/ ch ) <-> ( ps \/ ch \/ ph ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( ph -> ( ps \/ ch \/ ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3pm3_2i (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ( ph /\ ps /\ ch ) ;
}

proof of 3pm3_2i {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm pm3_2i (hyp 1, hyp 2) |- ( ph /\ ps ) ;
	step 3 : wff = thm mpbir2an (step 1, step 2, hyp 3) |- ( ph /\ ps /\ ch ) ;
	qed prop 1 = step 3 ;
}

theorem 3jca (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	hyp 3 : wff = |- ( ph -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps /\ ch /\ th ) ) ;
}

proof of 3jca {
	step 1 : wff = thm jca31 (hyp 1, hyp 2, hyp 3) |- ( ph -> ( ( ps /\ ch ) /\ th ) ) ;
	step 2 : wff = def df-3an () |- ( ( ps /\ ch /\ th ) <-> ( ( ps /\ ch ) /\ th ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> ( ps /\ ch /\ th ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3jcad (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> th ) ) ;
	hyp 3 : wff = |- ( ph -> ( ps -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch /\ th /\ ta ) ) ) ;
}

proof of 3jcad {
	step 1 : wff = thm imp (hyp 1) |- ( ( ph /\ ps ) -> ch ) ;
	step 2 : wff = thm imp (hyp 2) |- ( ( ph /\ ps ) -> th ) ;
	step 3 : wff = thm imp (hyp 3) |- ( ( ph /\ ps ) -> ta ) ;
	step 4 : wff = thm 3jca (step 1, step 2, step 3) |- ( ( ph /\ ps ) -> ( ch /\ th /\ ta ) ) ;
	step 5 : wff = thm ex (step 4) |- ( ph -> ( ps -> ( ch /\ th /\ ta ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3anim123i (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> th ) ;
	hyp 3 : wff = |- ( ta -> et ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch /\ ta ) -> ( ps /\ th /\ et ) ) ;
}

proof of 3anim123i {
	step 1 : wff = thm anim12i (hyp 1, hyp 2) |- ( ( ph /\ ch ) -> ( ps /\ th ) ) ;
	step 2 : wff = thm anim12i (step 1, hyp 3) |- ( ( ( ph /\ ch ) /\ ta ) -> ( ( ps /\ th ) /\ et ) ) ;
	step 3 : wff = def df-3an () |- ( ( ph /\ ch /\ ta ) <-> ( ( ph /\ ch ) /\ ta ) ) ;
	step 4 : wff = def df-3an () |- ( ( ps /\ th /\ et ) <-> ( ( ps /\ th ) /\ et ) ) ;
	step 5 : wff = thm 3imtr4i (step 2, step 3, step 4) |- ( ( ph /\ ch /\ ta ) -> ( ps /\ th /\ et ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3anbi123i (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	hyp 3 : wff = |- ( ta <-> et ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch /\ ta ) <-> ( ps /\ th /\ et ) ) ;
}

proof of 3anbi123i {
	step 1 : wff = thm anbi12i (hyp 1, hyp 2) |- ( ( ph /\ ch ) <-> ( ps /\ th ) ) ;
	step 2 : wff = thm anbi12i (step 1, hyp 3) |- ( ( ( ph /\ ch ) /\ ta ) <-> ( ( ps /\ th ) /\ et ) ) ;
	step 3 : wff = def df-3an () |- ( ( ph /\ ch /\ ta ) <-> ( ( ph /\ ch ) /\ ta ) ) ;
	step 4 : wff = def df-3an () |- ( ( ps /\ th /\ et ) <-> ( ( ps /\ th ) /\ et ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ph /\ ch /\ ta ) <-> ( ps /\ th /\ et ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3orbi123i (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	hyp 2 : wff = |- ( ch <-> th ) ;
	hyp 3 : wff = |- ( ta <-> et ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) ;
}

proof of 3orbi123i {
	step 1 : wff = thm orbi12i (hyp 1, hyp 2) |- ( ( ph \/ ch ) <-> ( ps \/ th ) ) ;
	step 2 : wff = thm orbi12i (step 1, hyp 3) |- ( ( ( ph \/ ch ) \/ ta ) <-> ( ( ps \/ th ) \/ et ) ) ;
	step 3 : wff = def df-3or () |- ( ( ph \/ ch \/ ta ) <-> ( ( ph \/ ch ) \/ ta ) ) ;
	step 4 : wff = def df-3or () |- ( ( ps \/ th \/ et ) <-> ( ( ps \/ th ) \/ et ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( ( ph \/ ch \/ ta ) <-> ( ps \/ th \/ et ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3anbi1i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch /\ th ) <-> ( ps /\ ch /\ th ) ) ;
}

proof of 3anbi1i {
	step 1 : wff = thm biid () |- ( ch <-> ch ) ;
	step 2 : wff = thm biid () |- ( th <-> th ) ;
	step 3 : wff = thm 3anbi123i (hyp 1, step 1, step 2) |- ( ( ph /\ ch /\ th ) <-> ( ps /\ ch /\ th ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3anbi2i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ph /\ th ) <-> ( ch /\ ps /\ th ) ) ;
}

proof of 3anbi2i {
	step 1 : wff = thm biid () |- ( ch <-> ch ) ;
	step 2 : wff = thm biid () |- ( th <-> th ) ;
	step 3 : wff = thm 3anbi123i (step 1, hyp 1, step 2) |- ( ( ch /\ ph /\ th ) <-> ( ch /\ ps /\ th ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3anbi3i (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ th /\ ph ) <-> ( ch /\ th /\ ps ) ) ;
}

proof of 3anbi3i {
	step 1 : wff = thm biid () |- ( ch <-> ch ) ;
	step 2 : wff = thm biid () |- ( th <-> th ) ;
	step 3 : wff = thm 3anbi123i (step 1, step 2, hyp 1) |- ( ( ch /\ th /\ ph ) <-> ( ch /\ th /\ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3imp (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of 3imp {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm imp31 (hyp 1) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3impa (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of 3impa {
	step 1 : wff = thm exp31 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm 3imp (step 1) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3impb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of 3impb {
	step 1 : wff = thm exp32 (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm 3imp (step 1) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3impia (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of 3impia {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm 3imp (step 1) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3impib (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of 3impib {
	step 1 : wff = thm exp3a (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm 3imp (step 1) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3exp (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
}

proof of 3exp {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm sylbir (step 1, hyp 1) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	step 3 : wff = thm exp31 (step 2) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3expa (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
}

proof of 3expa {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp31 (step 1) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3expb (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
}

proof of 3expb {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp32 (step 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3expia (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
}

proof of 3expia {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ps ) -> ( ch -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3expib (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
}

proof of 3expib {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm imp3a (step 1) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3com12 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph /\ ch ) -> th ) ;
}

proof of 3com12 {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( ps -> ( ph -> ( ch -> th ) ) ) ;
	step 3 : wff = thm 3imp (step 2) |- ( ( ps /\ ph /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3com13 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ps /\ ph ) -> th ) ;
}

proof of 3com13 {
	step 1 : wff = thm 3anrev () |- ( ( ch /\ ps /\ ph ) <-> ( ph /\ ps /\ ch ) ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( ( ch /\ ps /\ ph ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3com23 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch /\ ps ) -> th ) ;
}

proof of 3com23 {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm com23 (step 1) |- ( ph -> ( ch -> ( ps -> th ) ) ) ;
	step 3 : wff = thm 3imp (step 2) |- ( ( ph /\ ch /\ ps ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3coml (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ch /\ ph ) -> th ) ;
}

proof of 3coml {
	step 1 : wff = thm 3com23 (hyp 1) |- ( ( ph /\ ch /\ ps ) -> th ) ;
	step 2 : wff = thm 3com13 (step 1) |- ( ( ps /\ ch /\ ph ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3comr (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ch /\ ph /\ ps ) -> th ) ;
}

proof of 3comr {
	step 1 : wff = thm 3coml (hyp 1) |- ( ( ps /\ ch /\ ph ) -> th ) ;
	step 2 : wff = thm 3coml (step 1) |- ( ( ch /\ ph /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant3r1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) ;
}

proof of 3adant3r1 {
	step 1 : wff = thm 3expb (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm 3adantr1 (step 1) |- ( ( ph /\ ( ta /\ ps /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant3r2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) ;
}

proof of 3adant3r2 {
	step 1 : wff = thm 3expb (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm 3adantr2 (step 1) |- ( ( ph /\ ( ps /\ ta /\ ch ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant3r3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) ;
}

proof of 3adant3r3 {
	step 1 : wff = thm 3expb (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm 3adantr3 (step 1) |- ( ( ph /\ ( ps /\ ch /\ ta ) ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3an1rs (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps /\ th ) /\ ch ) -> ta ) ;
}

proof of 3an1rs {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm 3exp (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	step 3 : wff = thm com34 (step 2) |- ( ph -> ( ps -> ( th -> ( ch -> ta ) ) ) ) ;
	step 4 : wff = thm 3imp (step 3) |- ( ( ph /\ ps /\ th ) -> ( ch -> ta ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( ( ph /\ ps /\ th ) /\ ch ) -> ta ) ;
	qed prop 1 = step 5 ;
}

theorem 3imp1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
}

proof of 3imp1 {
	step 1 : wff = thm 3imp (hyp 1) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem 3impd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) ;
}

proof of 3impd {
	step 1 : wff = thm com4l (hyp 1) |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) ;
	step 2 : wff = thm 3imp (step 1) |- ( ( ps /\ ch /\ th ) -> ( ph -> ta ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3imp2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
}

proof of 3imp2 {
	step 1 : wff = thm 3impd (hyp 1) |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem 3exp1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of 3exp1 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm 3exp (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3expd (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of 3expd {
	step 1 : wff = thm com12 (hyp 1) |- ( ( ps /\ ch /\ th ) -> ( ph -> ta ) ) ;
	step 2 : wff = thm 3exp (step 1) |- ( ps -> ( ch -> ( th -> ( ph -> ta ) ) ) ) ;
	step 3 : wff = thm com4r (step 2) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3exp2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
}

proof of 3exp2 {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) ;
	step 2 : wff = thm 3expd (step 1) |- ( ph -> ( ps -> ( ch -> ( th -> ta ) ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3adant1l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ta /\ ph ) /\ ps /\ ch ) -> th ) ;
}

proof of 3adant1l {
	step 1 : wff = thm 3expb (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm adantll (step 1) |- ( ( ( ta /\ ph ) /\ ( ps /\ ch ) ) -> th ) ;
	step 3 : wff = thm 3impb (step 2) |- ( ( ( ta /\ ph ) /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adant1r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ta ) /\ ps /\ ch ) -> th ) ;
}

proof of 3adant1r {
	step 1 : wff = thm 3expb (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm adantlr (step 1) |- ( ( ( ph /\ ta ) /\ ( ps /\ ch ) ) -> th ) ;
	step 3 : wff = thm 3impb (step 2) |- ( ( ( ph /\ ta ) /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adant2l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ta /\ ps ) /\ ch ) -> th ) ;
}

proof of 3adant2l {
	step 1 : wff = thm 3com12 (hyp 1) |- ( ( ps /\ ph /\ ch ) -> th ) ;
	step 2 : wff = thm 3adant1l (step 1) |- ( ( ( ta /\ ps ) /\ ph /\ ch ) -> th ) ;
	step 3 : wff = thm 3com12 (step 2) |- ( ( ph /\ ( ta /\ ps ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adant2r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ta ) /\ ch ) -> th ) ;
}

proof of 3adant2r {
	step 1 : wff = thm 3com12 (hyp 1) |- ( ( ps /\ ph /\ ch ) -> th ) ;
	step 2 : wff = thm 3adant1r (step 1) |- ( ( ( ps /\ ta ) /\ ph /\ ch ) -> th ) ;
	step 3 : wff = thm 3com12 (step 2) |- ( ( ph /\ ( ps /\ ta ) /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adant3l (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ( ta /\ ch ) ) -> th ) ;
}

proof of 3adant3l {
	step 1 : wff = thm 3com13 (hyp 1) |- ( ( ch /\ ps /\ ph ) -> th ) ;
	step 2 : wff = thm 3adant1l (step 1) |- ( ( ( ta /\ ch ) /\ ps /\ ph ) -> th ) ;
	step 3 : wff = thm 3com13 (step 2) |- ( ( ph /\ ps /\ ( ta /\ ch ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem 3adant3r (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ( ch /\ ta ) ) -> th ) ;
}

proof of 3adant3r {
	step 1 : wff = thm 3com13 (hyp 1) |- ( ( ch /\ ps /\ ph ) -> th ) ;
	step 2 : wff = thm 3adant1r (step 1) |- ( ( ( ch /\ ta ) /\ ps /\ ph ) -> th ) ;
	step 3 : wff = thm 3com13 (step 2) |- ( ( ph /\ ps /\ ( ch /\ ta ) ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem syl3anc (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ph ) ;
	hyp 3 : wff = |- ( ta -> ps ) ;
	hyp 4 : wff = |- ( ta -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ta -> th ) ;
}

proof of syl3anc {
	step 1 : wff = thm 3jca (hyp 2, hyp 3, hyp 4) |- ( ta -> ( ph /\ ps /\ ch ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ta -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( ta /\ ps /\ ch ) -> th ) ;
}

proof of syl3an1 {
	step 1 : wff = thm 3expb (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm sylan (step 1, hyp 2) |- ( ( ta /\ ( ps /\ ch ) ) -> th ) ;
	step 3 : wff = thm 3impb (step 2) |- ( ( ta /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem syl3an2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ta /\ ch ) -> th ) ;
}

proof of syl3an2 {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm syl5 (step 1, hyp 2) |- ( ph -> ( ta -> ( ch -> th ) ) ) ;
	step 3 : wff = thm 3imp (step 2) |- ( ( ph /\ ta /\ ch ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem syl3an3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ta ) -> th ) ;
}

proof of syl3an3 {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm syl7 (step 1, hyp 2) |- ( ph -> ( ps -> ( ta -> th ) ) ) ;
	step 3 : wff = thm 3imp (step 2) |- ( ( ph /\ ps /\ ta ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem syl3an1b (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta <-> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( ta /\ ps /\ ch ) -> th ) ;
}

proof of syl3an1b {
	step 1 : wff = thm biimpi (hyp 2) |- ( ta -> ph ) ;
	step 2 : wff = thm syl3an1 (hyp 1, step 1) |- ( ( ta /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an2b (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ta /\ ch ) -> th ) ;
}

proof of syl3an2b {
	step 1 : wff = thm biimpi (hyp 2) |- ( ta -> ps ) ;
	step 2 : wff = thm syl3an2 (hyp 1, step 1) |- ( ( ph /\ ta /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an3b (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ta ) -> th ) ;
}

proof of syl3an3b {
	step 1 : wff = thm biimpi (hyp 2) |- ( ta -> ch ) ;
	step 2 : wff = thm syl3an3 (hyp 1, step 1) |- ( ( ph /\ ps /\ ta ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an1br (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ph <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ta /\ ps /\ ch ) -> th ) ;
}

proof of syl3an1br {
	step 1 : wff = thm biimpri (hyp 2) |- ( ta -> ph ) ;
	step 2 : wff = thm syl3an1 (hyp 1, step 1) |- ( ( ta /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an2br (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ps <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ta /\ ch ) -> th ) ;
}

proof of syl3an2br {
	step 1 : wff = thm biimpri (hyp 2) |- ( ta -> ps ) ;
	step 2 : wff = thm syl3an2 (hyp 1, step 1) |- ( ( ph /\ ta /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an3br (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ch <-> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ta ) -> th ) ;
}

proof of syl3an3br {
	step 1 : wff = thm biimpri (hyp 2) |- ( ta -> ch ) ;
	step 2 : wff = thm syl3an3 (hyp 1, step 1) |- ( ( ph /\ ps /\ ta ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3an (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta -> ph ) ;
	hyp 3 : wff = |- ( et -> ps ) ;
	hyp 4 : wff = |- ( ze -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ta /\ et /\ ze ) -> th ) ;
}

proof of syl3an {
	step 1 : wff = thm 3anim123i (hyp 2, hyp 3, hyp 4) |- ( ( ta /\ et /\ ze ) -> ( ph /\ ps /\ ch ) ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ( ta /\ et /\ ze ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syl3anb (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ta <-> ph ) ;
	hyp 3 : wff = |- ( et <-> ps ) ;
	hyp 4 : wff = |- ( ze <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ta /\ et /\ ze ) -> th ) ;
}

proof of syl3anb {
	step 1 : wff = thm 3anbi123i (hyp 2, hyp 3, hyp 4) |- ( ( ta /\ et /\ ze ) <-> ( ph /\ ps /\ ch ) ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( ( ta /\ et /\ ze ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem syld3an3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ( ph /\ ps /\ ta ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ta ) -> th ) ;
}

proof of syld3an3 {
	step 1 : wff = thm 3simp1 () |- ( ( ph /\ ps /\ ta ) -> ph ) ;
	step 2 : wff = thm 3simp2 () |- ( ( ph /\ ps /\ ta ) -> ps ) ;
	step 3 : wff = thm syl3anc (hyp 1, step 1, step 2, hyp 2) |- ( ( ph /\ ps /\ ta ) -> th ) ;
	qed prop 1 = step 3 ;
}

theorem syld3an1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ( ta /\ ps /\ ch ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( ta /\ ps /\ ch ) -> th ) ;
}

proof of syld3an1 {
	step 1 : wff = thm 3com13 (hyp 1) |- ( ( ch /\ ps /\ ph ) -> th ) ;
	step 2 : wff = thm 3com13 (hyp 2) |- ( ( ch /\ ps /\ ta ) -> ph ) ;
	step 3 : wff = thm syld3an3 (step 1, step 2) |- ( ( ch /\ ps /\ ta ) -> th ) ;
	step 4 : wff = thm 3com13 (step 3) |- ( ( ta /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 4 ;
}

theorem syld3an2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	hyp 2 : wff = |- ( ( ph /\ ta /\ ch ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ta /\ ch ) -> th ) ;
}

proof of syld3an2 {
	step 1 : wff = thm 3com23 (hyp 1) |- ( ( ph /\ ch /\ ps ) -> th ) ;
	step 2 : wff = thm 3com23 (hyp 2) |- ( ( ph /\ ch /\ ta ) -> ps ) ;
	step 3 : wff = thm syld3an3 (step 1, step 2) |- ( ( ph /\ ch /\ ta ) -> th ) ;
	step 4 : wff = thm 3com23 (step 3) |- ( ( ph /\ ta /\ ch ) -> th ) ;
	qed prop 1 = step 4 ;
}

theorem syl3anl1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( et /\ ps /\ ch ) /\ th ) -> ta ) ;
}

proof of syl3anl1 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm syl3an1 (step 1, hyp 2) |- ( ( et /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( et /\ ps /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem syl3anl2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ et /\ ch ) /\ th ) -> ta ) ;
}

proof of syl3anl2 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm syl3an2 (step 1, hyp 2) |- ( ( ph /\ et /\ ch ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ et /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem syl3anl3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps /\ et ) /\ th ) -> ta ) ;
}

proof of syl3anl3 {
	step 1 : wff = thm ex (hyp 1) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm syl3an3 (step 1, hyp 2) |- ( ( ph /\ ps /\ et ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ ps /\ et ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem syl3anl (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff, si : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ph ) ;
	hyp 3 : wff = |- ( ze -> ps ) ;
	hyp 4 : wff = |- ( si -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( et /\ ze /\ si ) /\ th ) -> ta ) ;
}

proof of syl3anl {
	step 1 : wff = thm 3anim123i (hyp 2, hyp 3, hyp 4) |- ( ( et /\ ze /\ si ) -> ( ph /\ ps /\ ch ) ) ;
	step 2 : wff = thm sylan (hyp 1, step 1) |- ( ( ( et /\ ze /\ si ) /\ th ) -> ta ) ;
	qed prop 1 = step 2 ;
}

theorem syl3anr1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( et /\ ch /\ th ) ) -> ta ) ;
}

proof of syl3anr1 {
	step 1 : wff = thm ancoms (hyp 1) |- ( ( ( ps /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 2 : wff = thm syl3anl1 (step 1, hyp 2) |- ( ( ( et /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( et /\ ch /\ th ) ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem syl3anr2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	hyp 2 : wff = |- ( et -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ et /\ th ) ) -> ta ) ;
}

proof of syl3anr2 {
	step 1 : wff = thm ancoms (hyp 1) |- ( ( ( ps /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 2 : wff = thm syl3anl2 (step 1, hyp 2) |- ( ( ( ps /\ et /\ th ) /\ ph ) -> ta ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ps /\ et /\ th ) ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem syl3anr3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	hyp 2 : wff = |- ( et -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ et ) ) -> ta ) ;
}

proof of syl3anr3 {
	step 1 : wff = thm ancoms (hyp 1) |- ( ( ( ps /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 2 : wff = thm syl3anl3 (step 1, hyp 2) |- ( ( ( ps /\ ch /\ et ) /\ ph ) -> ta ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ps /\ ch /\ et ) ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem 3impdi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of 3impdi {
	step 1 : wff = thm anandis (hyp 1) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm 3impb (step 1) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3impdir (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ ps ) ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch /\ ps ) -> th ) ;
}

proof of 3impdir {
	step 1 : wff = thm anandirs (hyp 1) |- ( ( ( ph /\ ch ) /\ ps ) -> th ) ;
	step 2 : wff = thm 3impa (step 1) |- ( ( ph /\ ch /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem 3anidm12 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ph /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of 3anidm12 {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ph -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm pm2_43i (step 1) |- ( ph -> ( ps -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem 3anidm13 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ph ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of 3anidm13 {
	step 1 : wff = thm 3com23 (hyp 1) |- ( ( ph /\ ph /\ ps ) -> ch ) ;
	step 2 : wff = thm 3anidm12 (step 1) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3anidm23 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of 3anidm23 {
	step 1 : wff = thm 3exp (hyp 1) |- ( ph -> ( ps -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm pm2_43d (step 1) |- ( ph -> ( ps -> ch ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem 3ori (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph \/ ps \/ ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( -. ph /\ -. ps ) -> ch ) ;
}

proof of 3ori {
	step 1 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 2 : wff = def df-3or () |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) ;
	step 3 : wff = thm mpbi (hyp 1, step 2) |- ( ( ph \/ ps ) \/ ch ) ;
	step 4 : wff = thm ori (step 3) |- ( -. ( ph \/ ps ) -> ch ) ;
	step 5 : wff = thm sylbir (step 1, step 4) |- ( ( -. ph /\ -. ps ) -> ch ) ;
	qed prop 1 = step 5 ;
}

theorem 3jao (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) -> ( ( ph \/ ch \/ th ) -> ps ) ) ;
}

proof of 3jao {
	step 1 : wff = thm jao () |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( ph \/ ch ) -> ps ) ) ) ;
	step 2 : wff = thm jao () |- ( ( ( ph \/ ch ) -> ps ) -> ( ( th -> ps ) -> ( ( ( ph \/ ch ) \/ th ) -> ps ) ) ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ( ph -> ps ) -> ( ( ch -> ps ) -> ( ( th -> ps ) -> ( ( ( ph \/ ch ) \/ th ) -> ps ) ) ) ) ;
	step 4 : wff = thm 3imp (step 3) |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) -> ( ( ( ph \/ ch ) \/ th ) -> ps ) ) ;
	step 5 : wff = def df-3or () |- ( ( ph \/ ch \/ th ) <-> ( ( ph \/ ch ) \/ th ) ) ;
	step 6 : wff = thm syl5ib (step 4, step 5) |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) -> ( ( ph \/ ch \/ th ) -> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem 3jaoi (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ch -> ps ) ;
	hyp 3 : wff = |- ( th -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ch \/ th ) -> ps ) ;
}

proof of 3jaoi {
	step 1 : wff = thm 3pm3_2i (hyp 1, hyp 2, hyp 3) |- ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) ;
	step 2 : wff = thm 3jao () |- ( ( ( ph -> ps ) /\ ( ch -> ps ) /\ ( th -> ps ) ) -> ( ( ph \/ ch \/ th ) -> ps ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ph \/ ch \/ th ) -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem 3jaod (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ch ) ) ;
	hyp 3 : wff = |- ( ph -> ( ta -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th \/ ta ) -> ch ) ) ;
}

proof of 3jaod {
	step 1 : wff = thm 3jao () |- ( ( ( ps -> ch ) /\ ( th -> ch ) /\ ( ta -> ch ) ) -> ( ( ps \/ th \/ ta ) -> ch ) ) ;
	step 2 : wff = thm syl3anc (step 1, hyp 1, hyp 2, hyp 3) |- ( ph -> ( ( ps \/ th \/ ta ) -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3jaoian (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( th /\ ps ) -> ch ) ;
	hyp 3 : wff = |- ( ( ta /\ ps ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph \/ th \/ ta ) /\ ps ) -> ch ) ;
}

proof of 3jaoian {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( th -> ( ps -> ch ) ) ;
	step 3 : wff = thm ex (hyp 3) |- ( ta -> ( ps -> ch ) ) ;
	step 4 : wff = thm 3jaoi (step 1, step 2, step 3) |- ( ( ph \/ th \/ ta ) -> ( ps -> ch ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( ( ph \/ th \/ ta ) /\ ps ) -> ch ) ;
	qed prop 1 = step 5 ;
}

theorem 3jaodan (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ th ) -> ch ) ;
	hyp 3 : wff = |- ( ( ph /\ ta ) -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps \/ th \/ ta ) ) -> ch ) ;
}

proof of 3jaodan {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ps -> ch ) ) ;
	step 2 : wff = thm ex (hyp 2) |- ( ph -> ( th -> ch ) ) ;
	step 3 : wff = thm ex (hyp 3) |- ( ph -> ( ta -> ch ) ) ;
	step 4 : wff = thm 3jaod (step 1, step 2, step 3) |- ( ph -> ( ( ps \/ th \/ ta ) -> ch ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( ph /\ ( ps \/ th \/ ta ) ) -> ch ) ;
	qed prop 1 = step 5 ;
}

theorem syl3an9b (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( th -> ( ch <-> ta ) ) ;
	hyp 3 : wff = |- ( et -> ( ta <-> ze ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ th /\ et ) -> ( ps <-> ze ) ) ;
}

proof of syl3an9b {
	step 1 : wff = thm sylan9bb (hyp 1, hyp 2) |- ( ( ph /\ th ) -> ( ps <-> ta ) ) ;
	step 2 : wff = thm sylan9bb (step 1, hyp 3) |- ( ( ( ph /\ th ) /\ et ) -> ( ps <-> ze ) ) ;
	step 3 : wff = thm 3impa (step 2) |- ( ( ph /\ th /\ et ) -> ( ps <-> ze ) ) ;
	qed prop 1 = step 3 ;
}

theorem 3orbi123d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	hyp 3 : wff = |- ( ph -> ( et <-> ze ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th \/ et ) <-> ( ch \/ ta \/ ze ) ) ) ;
}

proof of 3orbi123d {
	step 1 : wff = thm orbi12d (hyp 1, hyp 2) |- ( ph -> ( ( ps \/ th ) <-> ( ch \/ ta ) ) ) ;
	step 2 : wff = thm orbi12d (step 1, hyp 3) |- ( ph -> ( ( ( ps \/ th ) \/ et ) <-> ( ( ch \/ ta ) \/ ze ) ) ) ;
	step 3 : wff = def df-3or () |- ( ( ps \/ th \/ et ) <-> ( ( ps \/ th ) \/ et ) ) ;
	step 4 : wff = def df-3or () |- ( ( ch \/ ta \/ ze ) <-> ( ( ch \/ ta ) \/ ze ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( ph -> ( ( ps \/ th \/ et ) <-> ( ch \/ ta \/ ze ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3anbi123d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	hyp 3 : wff = |- ( ph -> ( et <-> ze ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ ze ) ) ) ;
}

proof of 3anbi123d {
	step 1 : wff = thm anbi12d (hyp 1, hyp 2) |- ( ph -> ( ( ps /\ th ) <-> ( ch /\ ta ) ) ) ;
	step 2 : wff = thm anbi12d (step 1, hyp 3) |- ( ph -> ( ( ( ps /\ th ) /\ et ) <-> ( ( ch /\ ta ) /\ ze ) ) ) ;
	step 3 : wff = def df-3an () |- ( ( ps /\ th /\ et ) <-> ( ( ps /\ th ) /\ et ) ) ;
	step 4 : wff = def df-3an () |- ( ( ch /\ ta /\ ze ) <-> ( ( ch /\ ta ) /\ ze ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ ze ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3anbi12d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ et ) ) ) ;
}

proof of 3anbi12d {
	step 1 : wff = thm biidd () |- ( ph -> ( et <-> et ) ) ;
	step 2 : wff = thm 3anbi123d (hyp 1, hyp 2, step 1) |- ( ph -> ( ( ps /\ th /\ et ) <-> ( ch /\ ta /\ et ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3anbi13d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ et /\ th ) <-> ( ch /\ et /\ ta ) ) ) ;
}

proof of 3anbi13d {
	step 1 : wff = thm biidd () |- ( ph -> ( et <-> et ) ) ;
	step 2 : wff = thm 3anbi123d (hyp 1, step 1, hyp 2) |- ( ph -> ( ( ps /\ et /\ th ) <-> ( ch /\ et /\ ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3anbi23d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th <-> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( et /\ ps /\ th ) <-> ( et /\ ch /\ ta ) ) ) ;
}

proof of 3anbi23d {
	step 1 : wff = thm biidd () |- ( ph -> ( et <-> et ) ) ;
	step 2 : wff = thm 3anbi123d (step 1, hyp 1, hyp 2) |- ( ph -> ( ( et /\ ps /\ th ) <-> ( et /\ ch /\ ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3anbi1d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th /\ ta ) <-> ( ch /\ th /\ ta ) ) ) ;
}

proof of 3anbi1d {
	step 1 : wff = thm biidd () |- ( ph -> ( th <-> th ) ) ;
	step 2 : wff = thm 3anbi12d (hyp 1, step 1) |- ( ph -> ( ( ps /\ th /\ ta ) <-> ( ch /\ th /\ ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3anbi2d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th /\ ps /\ ta ) <-> ( th /\ ch /\ ta ) ) ) ;
}

proof of 3anbi2d {
	step 1 : wff = thm biidd () |- ( ph -> ( th <-> th ) ) ;
	step 2 : wff = thm 3anbi12d (step 1, hyp 1) |- ( ph -> ( ( th /\ ps /\ ta ) <-> ( th /\ ch /\ ta ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3anbi3d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( th /\ ta /\ ps ) <-> ( th /\ ta /\ ch ) ) ) ;
}

proof of 3anbi3d {
	step 1 : wff = thm biidd () |- ( ph -> ( th <-> th ) ) ;
	step 2 : wff = thm 3anbi13d (step 1, hyp 1) |- ( ph -> ( ( th /\ ta /\ ps ) <-> ( th /\ ta /\ ch ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3anim123d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ta ) ) ;
	hyp 3 : wff = |- ( ph -> ( et -> ze ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ th /\ et ) -> ( ch /\ ta /\ ze ) ) ) ;
}

proof of 3anim123d {
	step 1 : wff = thm anim12d (hyp 1, hyp 2) |- ( ph -> ( ( ps /\ th ) -> ( ch /\ ta ) ) ) ;
	step 2 : wff = thm anim12d (step 1, hyp 3) |- ( ph -> ( ( ( ps /\ th ) /\ et ) -> ( ( ch /\ ta ) /\ ze ) ) ) ;
	step 3 : wff = def df-3an () |- ( ( ps /\ th /\ et ) <-> ( ( ps /\ th ) /\ et ) ) ;
	step 4 : wff = def df-3an () |- ( ( ch /\ ta /\ ze ) <-> ( ( ch /\ ta ) /\ ze ) ) ;
	step 5 : wff = thm 3imtr4g (step 2, step 3, step 4) |- ( ph -> ( ( ps /\ th /\ et ) -> ( ch /\ ta /\ ze ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem 3orim123d (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	hyp 2 : wff = |- ( ph -> ( th -> ta ) ) ;
	hyp 3 : wff = |- ( ph -> ( et -> ze ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps \/ th \/ et ) -> ( ch \/ ta \/ ze ) ) ) ;
}

proof of 3orim123d {
	step 1 : wff = thm orim12d (hyp 1, hyp 2) |- ( ph -> ( ( ps \/ th ) -> ( ch \/ ta ) ) ) ;
	step 2 : wff = thm orim12d (step 1, hyp 3) |- ( ph -> ( ( ( ps \/ th ) \/ et ) -> ( ( ch \/ ta ) \/ ze ) ) ) ;
	step 3 : wff = def df-3or () |- ( ( ps \/ th \/ et ) <-> ( ( ps \/ th ) \/ et ) ) ;
	step 4 : wff = def df-3or () |- ( ( ch \/ ta \/ ze ) <-> ( ( ch \/ ta ) \/ ze ) ) ;
	step 5 : wff = thm 3imtr4g (step 2, step 3, step 4) |- ( ph -> ( ( ps \/ th \/ et ) -> ( ch \/ ta \/ ze ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem an6 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <-> ( ( ph /\ th ) /\ ( ps /\ ta ) /\ ( ch /\ et ) ) ) ;
}

proof of an6 {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = def df-3an () |- ( ( th /\ ta /\ et ) <-> ( ( th /\ ta ) /\ et ) ) ;
	step 3 : wff = thm anbi12i (step 1, step 2) |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <-> ( ( ( ph /\ ps ) /\ ch ) /\ ( ( th /\ ta ) /\ et ) ) ) ;
	step 4 : wff = thm an4 () |- ( ( ( ( ph /\ ps ) /\ ch ) /\ ( ( th /\ ta ) /\ et ) ) <-> ( ( ( ph /\ ps ) /\ ( th /\ ta ) ) /\ ( ch /\ et ) ) ) ;
	step 5 : wff = thm an4 () |- ( ( ( ph /\ ps ) /\ ( th /\ ta ) ) <-> ( ( ph /\ th ) /\ ( ps /\ ta ) ) ) ;
	step 6 : wff = thm anbi1i (step 5) |- ( ( ( ( ph /\ ps ) /\ ( th /\ ta ) ) /\ ( ch /\ et ) ) <-> ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) /\ ( ch /\ et ) ) ) ;
	step 7 : wff = thm 3bitri (step 3, step 4, step 6) |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <-> ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) /\ ( ch /\ et ) ) ) ;
	step 8 : wff = def df-3an () |- ( ( ( ph /\ th ) /\ ( ps /\ ta ) /\ ( ch /\ et ) ) <-> ( ( ( ph /\ th ) /\ ( ps /\ ta ) ) /\ ( ch /\ et ) ) ) ;
	step 9 : wff = thm bitr4i (step 7, step 8) |- ( ( ( ph /\ ps /\ ch ) /\ ( th /\ ta /\ et ) ) <-> ( ( ph /\ th ) /\ ( ps /\ ta ) /\ ( ch /\ et ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem mp3an1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ch ) -> th ) ;
}

proof of mp3an1 {
	step 1 : wff = thm 3expb (hyp 2) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 2 : wff = thm mpan (hyp 1, step 1) |- ( ( ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mp3an2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ch ) -> th ) ;
}

proof of mp3an2 {
	step 1 : wff = thm 3expa (hyp 2) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	step 2 : wff = thm mpanl2 (hyp 1, step 1) |- ( ( ph /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mp3an3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
}

proof of mp3an3 {
	step 1 : wff = thm 3expa (hyp 2) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	step 2 : wff = thm mpan2 (hyp 1, step 1) |- ( ( ph /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mp3an12 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> th ) ;
}

proof of mp3an12 {
	step 1 : wff = thm mp3an1 (hyp 1, hyp 3) |- ( ( ps /\ ch ) -> th ) ;
	step 2 : wff = thm mpan (hyp 2, step 1) |- ( ch -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mp3an13 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ch ;
	hyp 3 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> th ) ;
}

proof of mp3an13 {
	step 1 : wff = thm mp3an3 (hyp 2, hyp 3) |- ( ( ph /\ ps ) -> th ) ;
	step 2 : wff = thm mpan (hyp 1, step 1) |- ( ps -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mp3an23 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ch ;
	hyp 3 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of mp3an23 {
	step 1 : wff = thm mp3an3 (hyp 2, hyp 3) |- ( ( ph /\ ps ) -> th ) ;
	step 2 : wff = thm mpan2 (hyp 1, step 1) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mp3an1i (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ph -> ( ( ps /\ ch /\ th ) -> ta ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ch /\ th ) -> ta ) ) ;
}

proof of mp3an1i {
	step 1 : wff = thm com12 (hyp 2) |- ( ( ps /\ ch /\ th ) -> ( ph -> ta ) ) ;
	step 2 : wff = thm mp3an1 (hyp 1, step 1) |- ( ( ch /\ th ) -> ( ph -> ta ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ph -> ( ( ch /\ th ) -> ta ) ) ;
	qed prop 1 = step 3 ;
}

theorem mp3anl1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ps /\ ch ) /\ th ) -> ta ) ;
}

proof of mp3anl1 {
	step 1 : wff = thm ex (hyp 2) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm mp3an1 (hyp 1, step 1) |- ( ( ps /\ ch ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ps /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mp3anl2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ch ) /\ th ) -> ta ) ;
}

proof of mp3anl2 {
	step 1 : wff = thm ex (hyp 2) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm mp3an2 (hyp 1, step 1) |- ( ( ph /\ ch ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mp3anl3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ th ) -> ta ) ;
}

proof of mp3anl3 {
	step 1 : wff = thm ex (hyp 2) |- ( ( ph /\ ps /\ ch ) -> ( th -> ta ) ) ;
	step 2 : wff = thm mp3an3 (hyp 1, step 1) |- ( ( ph /\ ps ) -> ( th -> ta ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ph /\ ps ) /\ th ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mp3anr1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ps ;
	hyp 2 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ch /\ th ) ) -> ta ) ;
}

proof of mp3anr1 {
	step 1 : wff = thm ancoms (hyp 2) |- ( ( ( ps /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 2 : wff = thm mp3anl1 (hyp 1, step 1) |- ( ( ( ch /\ th ) /\ ph ) -> ta ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ch /\ th ) ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mp3anr2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ch ;
	hyp 2 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ th ) ) -> ta ) ;
}

proof of mp3anr2 {
	step 1 : wff = thm ancoms (hyp 2) |- ( ( ( ps /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 2 : wff = thm mp3anl2 (hyp 1, step 1) |- ( ( ( ps /\ th ) /\ ph ) -> ta ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ps /\ th ) ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mp3anr3 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- th ;
	hyp 2 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) ;
}

proof of mp3anr3 {
	step 1 : wff = thm ancoms (hyp 2) |- ( ( ( ps /\ ch /\ th ) /\ ph ) -> ta ) ;
	step 2 : wff = thm mp3anl3 (hyp 1, step 1) |- ( ( ( ps /\ ch ) /\ ph ) -> ta ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( ph /\ ( ps /\ ch ) ) -> ta ) ;
	qed prop 1 = step 3 ;
}

theorem mp3an (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ps ;
	hyp 3 : wff = |- ch ;
	hyp 4 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- th ;
}

proof of mp3an {
	step 1 : wff = thm mp3an1 (hyp 1, hyp 4) |- ( ( ps /\ ch ) -> th ) ;
	step 2 : wff = thm mp2an (hyp 2, hyp 3, step 1) |- th ;
	qed prop 1 = step 2 ;
}

theorem mpd3an3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
	hyp 2 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> th ) ;
}

proof of mpd3an3 {
	step 1 : wff = thm 3expa (hyp 2) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	step 2 : wff = thm mpdan (hyp 1, step 1) |- ( ( ph /\ ps ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem mpd3an23 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ph -> ch ) ;
	hyp 3 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> th ) ;
}

proof of mpd3an23 {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm syl3anc (hyp 3, step 1, hyp 1, hyp 2) |- ( ph -> th ) ;
	qed prop 1 = step 2 ;
}

theorem biimp3a (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of biimp3a {
	step 1 : wff = thm biimpa (hyp 1) |- ( ( ( ph /\ ps ) /\ ch ) -> th ) ;
	step 2 : wff = thm 3impa (step 1) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 2 ;
}

theorem biimp3ar (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph /\ ps ) -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ th ) -> ch ) ;
}

proof of biimp3ar {
	step 1 : wff = thm biimpar (hyp 1) |- ( ( ( ph /\ ps ) /\ th ) -> ch ) ;
	step 2 : wff = thm 3impa (step 1) |- ( ( ph /\ ps /\ th ) -> ch ) ;
	qed prop 1 = step 2 ;
}

theorem 3anandis (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ph /\ ch ) /\ ( ph /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
}

proof of 3anandis {
	step 1 : wff = thm 3simp1 () |- ( ( ps /\ ch /\ th ) -> ps ) ;
	step 2 : wff = thm anim2i (step 1) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ( ph /\ ps ) ) ;
	step 3 : wff = thm 3simp2 () |- ( ( ps /\ ch /\ th ) -> ch ) ;
	step 4 : wff = thm anim2i (step 3) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ( ph /\ ch ) ) ;
	step 5 : wff = thm 3simp3 () |- ( ( ps /\ ch /\ th ) -> th ) ;
	step 6 : wff = thm anim2i (step 5) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ( ph /\ th ) ) ;
	step 7 : wff = thm syl3anc (hyp 1, step 2, step 4, step 6) |- ( ( ph /\ ( ps /\ ch /\ th ) ) -> ta ) ;
	qed prop 1 = step 7 ;
}

theorem 3anandirs (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	hyp 1 : wff = |- ( ( ( ph /\ th ) /\ ( ps /\ th ) /\ ( ch /\ th ) ) -> ta ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
}

proof of 3anandirs {
	step 1 : wff = thm 3simp1 () |- ( ( ph /\ ps /\ ch ) -> ph ) ;
	step 2 : wff = thm anim1i (step 1) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ( ph /\ th ) ) ;
	step 3 : wff = thm 3simp2 () |- ( ( ph /\ ps /\ ch ) -> ps ) ;
	step 4 : wff = thm anim1i (step 3) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ( ps /\ th ) ) ;
	step 5 : wff = thm 3simp3 () |- ( ( ph /\ ps /\ ch ) -> ch ) ;
	step 6 : wff = thm anim1i (step 5) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ( ch /\ th ) ) ;
	step 7 : wff = thm syl3anc (hyp 1, step 2, step 4, step 6) |- ( ( ( ph /\ ps /\ ch ) /\ th ) -> ta ) ;
	qed prop 1 = step 7 ;
}

theorem ecase23d (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -> -. ch ) ;
	hyp 2 : wff = |- ( ph -> -. th ) ;
	hyp 3 : wff = |- ( ph -> ( ps \/ ch \/ th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of ecase23d {
	step 1 : wff = thm ioran () |- ( -. ( ch \/ th ) <-> ( -. ch /\ -. th ) ) ;
	step 2 : wff = thm sylanbrc (step 1, hyp 1, hyp 2) |- ( ph -> -. ( ch \/ th ) ) ;
	step 3 : wff = thm 3orass () |- ( ( ps \/ ch \/ th ) <-> ( ps \/ ( ch \/ th ) ) ) ;
	step 4 : wff = thm sylib (hyp 3, step 3) |- ( ph -> ( ps \/ ( ch \/ th ) ) ) ;
	step 5 : wff = thm ord (step 4) |- ( ph -> ( -. ps -> ( ch \/ th ) ) ) ;
	step 6 : wff = thm mt3d (step 2, step 5) |- ( ph -> ps ) ;
	qed prop 1 = step 6 ;
}

theorem 3ecase (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( -. ph -> th ) ;
	hyp 2 : wff = |- ( -. ps -> th ) ;
	hyp 3 : wff = |- ( -. ch -> th ) ;
	hyp 4 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
	-----------------------
	prop 1 : wff = |- th ;
}

proof of 3ecase {
	step 1 : wff = thm 3exp (hyp 4) |- ( ph -> ( ps -> ( ch -> th ) ) ) ;
	step 2 : wff = thm a1d (hyp 1) |- ( -. ph -> ( ch -> th ) ) ;
	step 3 : wff = thm a1d (step 2) |- ( -. ph -> ( ps -> ( ch -> th ) ) ) ;
	step 4 : wff = thm pm2_61i (step 1, step 3) |- ( ps -> ( ch -> th ) ) ;
	step 5 : wff = thm pm2_61nii (step 4, hyp 2, hyp 3) |- th ;
	qed prop 1 = step 5 ;
}

theorem meredith (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) -> ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ;
}

proof of meredith {
	step 1 : wff = axm ax-3 () |- ( ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) -> ( ( -. ch -> ( -. ph -> -. th ) ) -> ch ) ) ;
	step 2 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 3 : wff = thm imim1i (step 2) |- ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ( -. ph -> ( -. ch -> -. th ) ) ) ;
	step 4 : wff = thm com23 (step 3) |- ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ( -. ch -> ( -. ph -> -. th ) ) ) ;
	step 5 : wff = thm syl5 (step 1, step 4) |- ( ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) -> ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) ) ;
	step 6 : wff = thm imim1i (step 5) |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) -> ta ) -> ( ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) -> ta ) ) ;
	step 7 : wff = thm con3d (step 6) |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) -> ta ) -> ( -. ta -> -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) ) ) ;
	step 8 : wff = thm pm2_27 () |- ( -. ch -> ( ( -. ch -> ( -. ph -> -. th ) ) -> ( -. ph -> -. th ) ) ) ;
	step 9 : wff = thm impi (step 8) |- ( -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) -> ( -. ph -> -. th ) ) ;
	step 10 : wff = thm com12 (step 9) |- ( -. ph -> ( -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) -> -. th ) ) ;
	step 11 : wff = thm imim2d (step 10) |- ( -. ph -> ( ( -. ta -> -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) ) -> ( -. ta -> -. th ) ) ) ;
	step 12 : wff = thm com12 (step 11) |- ( ( -. ta -> -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) ) -> ( -. ph -> ( -. ta -> -. th ) ) ) ;
	step 13 : wff = thm a2d (step 12) |- ( ( -. ta -> -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) ) -> ( ( -. ph -> -. ta ) -> ( -. ph -> -. th ) ) ) ;
	step 14 : wff = thm con3 () |- ( ( ta -> ph ) -> ( -. ph -> -. ta ) ) ;
	step 15 : wff = thm syl5 (step 13, step 14) |- ( ( -. ta -> -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) ) -> ( ( ta -> ph ) -> ( -. ph -> -. th ) ) ) ;
	step 16 : wff = axm ax-3 () |- ( ( -. ph -> -. th ) -> ( th -> ph ) ) ;
	step 17 : wff = thm syl6 (step 15, step 16) |- ( ( -. ta -> -. ( -. ch -> -. ( -. ch -> ( -. ph -> -. th ) ) ) ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ;
	step 18 : wff = thm syl (step 7, step 17) |- ( ( ( ( ( ph -> ps ) -> ( -. ch -> -. th ) ) -> ch ) -> ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ;
	qed prop 1 = step 18 ;
}

theorem merlem1 (ph : wff, ps : wff, ch : wff, ta : wff)  {
	prop 1 : wff = |- ( ( ( ch -> ( -. ph -> ps ) ) -> ta ) -> ( ph -> ta ) ) ;
}

proof of merlem1 {
	step 1 : wff = thm meredith () |- ( ( ( ( ( -. ph -> ps ) -> ( -. ( -. ta -> -. ch ) -> -. -. ( -. ph -> ps ) ) ) -> ( -. ta -> -. ch ) ) -> ta ) -> ( ( ta -> -. ph ) -> ( -. ( -. ph -> ps ) -> -. ph ) ) ) ;
	step 2 : wff = thm meredith () |- ( ( ( ( ( ( -. ph -> ps ) -> ( -. ( -. ta -> -. ch ) -> -. -. ( -. ph -> ps ) ) ) -> ( -. ta -> -. ch ) ) -> ta ) -> ( ( ta -> -. ph ) -> ( -. ( -. ph -> ps ) -> -. ph ) ) ) -> ( ( ( ( ta -> -. ph ) -> ( -. ( -. ph -> ps ) -> -. ph ) ) -> ( -. ph -> ps ) ) -> ( ch -> ( -. ph -> ps ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ( ( ta -> -. ph ) -> ( -. ( -. ph -> ps ) -> -. ph ) ) -> ( -. ph -> ps ) ) -> ( ch -> ( -. ph -> ps ) ) ) ;
	step 4 : wff = thm meredith () |- ( ( ( ( ( ta -> -. ph ) -> ( -. ( -. ph -> ps ) -> -. ph ) ) -> ( -. ph -> ps ) ) -> ( ch -> ( -. ph -> ps ) ) ) -> ( ( ( ch -> ( -. ph -> ps ) ) -> ta ) -> ( ph -> ta ) ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( ch -> ( -. ph -> ps ) ) -> ta ) -> ( ph -> ta ) ) ;
	qed prop 1 = step 5 ;
}

theorem merlem2 (ph : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ph ) -> ch ) -> ( th -> ch ) ) ;
}

proof of merlem2 {
	step 1 : wff = thm merlem1 () |- ( ( ( ( ch -> ch ) -> ( -. ph -> -. th ) ) -> ph ) -> ( ph -> ph ) ) ;
	step 2 : wff = thm meredith () |- ( ( ( ( ( ch -> ch ) -> ( -. ph -> -. th ) ) -> ph ) -> ( ph -> ph ) ) -> ( ( ( ph -> ph ) -> ch ) -> ( th -> ch ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ( ph -> ph ) -> ch ) -> ( th -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem merlem3 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ( ps -> ch ) -> ph ) -> ( ch -> ph ) ) ;
}

proof of merlem3 {
	step 1 : wff = thm merlem2 () |- ( ( ( -. ch -> -. ch ) -> ( -. ch -> -. ch ) ) -> ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) ) ;
	step 2 : wff = thm merlem2 () |- ( ( ( ( -. ch -> -. ch ) -> ( -. ch -> -. ch ) ) -> ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) ) -> ( ( ( ( ch -> ph ) -> ( -. ps -> -. ps ) ) -> ps ) -> ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ( ( ch -> ph ) -> ( -. ps -> -. ps ) ) -> ps ) -> ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) ) ;
	step 4 : wff = thm meredith () |- ( ( ( ( ( ch -> ph ) -> ( -. ps -> -. ps ) ) -> ps ) -> ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) ) -> ( ( ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) -> ch ) -> ( ps -> ch ) ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) -> ch ) -> ( ps -> ch ) ) ;
	step 6 : wff = thm meredith () |- ( ( ( ( ( ph -> ph ) -> ( -. ch -> -. ch ) ) -> ch ) -> ( ps -> ch ) ) -> ( ( ( ps -> ch ) -> ph ) -> ( ch -> ph ) ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( ( ( ps -> ch ) -> ph ) -> ( ch -> ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem merlem4 (ph : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ta -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ;
}

proof of merlem4 {
	step 1 : wff = thm meredith () |- ( ( ( ( ( ph -> ph ) -> ( -. th -> -. th ) ) -> th ) -> ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ;
	step 2 : wff = thm merlem3 () |- ( ( ( ( ( ( ph -> ph ) -> ( -. th -> -. th ) ) -> th ) -> ta ) -> ( ( ta -> ph ) -> ( th -> ph ) ) ) -> ( ta -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ta -> ( ( ta -> ph ) -> ( th -> ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem merlem5 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ;
}

proof of merlem5 {
	step 1 : wff = thm meredith () |- ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ;
	step 2 : wff = thm meredith () |- ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. -. -. ph ) ) -> ps ) -> ph ) -> ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ) ;
	step 3 : wff = thm merlem1 () |- ( ( ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) -> ( -. ph -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) ) ;
	step 4 : wff = thm merlem4 () |- ( ( ( ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) -> ( -. ph -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) ) -> ( ( ( ( ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) -> ( -. ph -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) ) -> ph ) -> ( ( ( ( ps -> ps ) -> ( -. ps -> -. -. -. ph ) ) -> ps ) -> ph ) ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( ( ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) -> ( -. ph -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) ) -> ph ) -> ( ( ( ( ps -> ps ) -> ( -. ps -> -. -. -. ph ) ) -> ps ) -> ph ) ) ;
	step 6 : wff = thm meredith () |- ( ( ( ( ( ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) -> ( -. ph -> -. ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) ) ) -> ph ) -> ( ( ( ( ps -> ps ) -> ( -. ps -> -. -. -. ph ) ) -> ps ) -> ph ) ) -> ( ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. -. -. ph ) ) -> ps ) -> ph ) -> ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ) -> ( ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) -> ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ) ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. -. -. ph ) ) -> ps ) -> ph ) -> ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ) -> ( ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) -> ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ) ) ;
	step 8 : wff = axm ax-mp (step 2, step 7) |- ( ( ( ( ( ( ps -> ps ) -> ( -. ps -> -. ps ) ) -> ps ) -> ps ) -> ( ( ps -> ps ) -> ( ps -> ps ) ) ) -> ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ) ;
	step 9 : wff = axm ax-mp (step 1, step 8) |- ( ( ph -> ps ) -> ( -. -. ph -> ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem merlem6 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ch -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) ;
}

proof of merlem6 {
	step 1 : wff = thm merlem4 () |- ( ( ps -> ch ) -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) ;
	step 2 : wff = thm merlem3 () |- ( ( ( ps -> ch ) -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) -> ( ch -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ch -> ( ( ( ps -> ch ) -> ph ) -> ( th -> ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem merlem7 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) ;
}

proof of merlem7 {
	step 1 : wff = thm merlem4 () |- ( ( ps -> ch ) -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) ;
	step 2 : wff = thm merlem6 () |- ( ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) -> ( ( ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) -> -. ph ) -> ( -. ch -> -. ph ) ) ) ;
	step 3 : wff = thm meredith () |- ( ( ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) -> ( ( ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) -> -. ph ) -> ( -. ch -> -. ph ) ) ) -> ( ( ( ( ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) -> -. ph ) -> ( -. ch -> -. ph ) ) -> ch ) -> ( ps -> ch ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( ( ( ( ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) -> -. ph ) -> ( -. ch -> -. ph ) ) -> ch ) -> ( ps -> ch ) ) ;
	step 5 : wff = thm meredith () |- ( ( ( ( ( ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) -> -. ph ) -> ( -. ch -> -. ph ) ) -> ch ) -> ( ps -> ch ) ) -> ( ( ( ps -> ch ) -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) -> ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( ( ( ps -> ch ) -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) -> ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) ) ;
	step 7 : wff = axm ax-mp (step 1, step 6) |- ( ph -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem merlem8 (ps : wff, ch : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ;
}

proof of merlem8 {
	var ph : wff;
	step 1 : wff = thm meredith () |- ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) ;
	step 2 : wff = thm merlem7 () |- ( ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) -> ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ( ps -> ch ) -> th ) -> ( ( ( ch -> ta ) -> ( -. th -> -. ps ) ) -> th ) ) ;
	qed prop 1 = step 3 ;
}

theorem merlem9 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	prop 1 : wff = |- ( ( ( ph -> ps ) -> ( ch -> ( th -> ( ps -> ta ) ) ) ) -> ( et -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ) ;
}

proof of merlem9 {
	step 1 : wff = thm merlem6 () |- ( ( th -> ( ps -> ta ) ) -> ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) ) ;
	step 2 : wff = thm merlem8 () |- ( ( ( th -> ( ps -> ta ) ) -> ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) ) -> ( ( ( ( ps -> ta ) -> ( -. ( -. ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> -. th ) -> -. ph ) ) -> ( -. ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> -. th ) ) -> ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ( ( ps -> ta ) -> ( -. ( -. ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> -. th ) -> -. ph ) ) -> ( -. ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> -. th ) ) -> ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) ) ;
	step 4 : wff = thm meredith () |- ( ( ( ( ( ps -> ta ) -> ( -. ( -. ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> -. th ) -> -. ph ) ) -> ( -. ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> -. th ) ) -> ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) ) -> ( ( ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> ps ) -> ( ph -> ps ) ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> ps ) -> ( ph -> ps ) ) ;
	step 6 : wff = thm meredith () |- ( ( ( ( ( ( ch -> ( th -> ( ps -> ta ) ) ) -> -. et ) -> ( -. ps -> -. et ) ) -> ps ) -> ( ph -> ps ) ) -> ( ( ( ph -> ps ) -> ( ch -> ( th -> ( ps -> ta ) ) ) ) -> ( et -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( ( ( ph -> ps ) -> ( ch -> ( th -> ( ps -> ta ) ) ) ) -> ( et -> ( ch -> ( th -> ( ps -> ta ) ) ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem merlem10 (ph : wff, ps : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) ;
}

proof of merlem10 {
	step 1 : wff = thm meredith () |- ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) ;
	step 2 : wff = thm meredith () |- ( ( ( ( ( ( ph -> ps ) -> ph ) -> ( -. ph -> -. th ) ) -> ph ) -> ph ) -> ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) ) ;
	step 3 : wff = thm merlem9 () |- ( ( ( ( ( ( ( ph -> ps ) -> ph ) -> ( -. ph -> -. th ) ) -> ph ) -> ph ) -> ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) ) -> ( ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) -> ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) -> ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- ( ( ph -> ( ph -> ps ) ) -> ( th -> ( ph -> ps ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem merlem11 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
}

proof of merlem11 {
	step 1 : wff = thm meredith () |- ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) ;
	step 2 : wff = thm merlem10 () |- ( ( ph -> ( ph -> ps ) ) -> ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) ;
	step 3 : wff = thm merlem10 () |- ( ( ( ph -> ( ph -> ps ) ) -> ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) -> ( ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) -> ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( ( ( ( ( ( ph -> ph ) -> ( -. ph -> -. ph ) ) -> ph ) -> ph ) -> ( ( ph -> ph ) -> ( ph -> ph ) ) ) -> ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem merlem12 (ph : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) ;
}

proof of merlem12 {
	step 1 : wff = thm merlem5 () |- ( ( ch -> ch ) -> ( -. -. ch -> ch ) ) ;
	step 2 : wff = thm merlem2 () |- ( ( ( ch -> ch ) -> ( -. -. ch -> ch ) ) -> ( th -> ( -. -. ch -> ch ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( th -> ( -. -. ch -> ch ) ) ;
	step 4 : wff = thm merlem4 () |- ( ( th -> ( -. -. ch -> ch ) ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) ) ;
	step 6 : wff = thm merlem11 () |- ( ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( ( ( th -> ( -. -. ch -> ch ) ) -> ph ) -> ph ) ;
	qed prop 1 = step 7 ;
}

theorem merlem13 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) ) ;
}

proof of merlem13 {
	step 1 : wff = thm merlem12 () |- ( ( ( th -> ( -. -. ch -> ch ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ;
	step 2 : wff = thm merlem12 () |- ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) ;
	step 3 : wff = thm merlem5 () |- ( ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) -> ( -. -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( -. -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) ;
	step 5 : wff = thm merlem6 () |- ( ( -. -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) -> ( ( ( ( -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) -> ( -. -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> ( ( th -> ( -. -. ch -> ch ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( ( ( ( -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) -> ( -. -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> ( ( th -> ( -. -. ch -> ch ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) ;
	step 7 : wff = thm meredith () |- ( ( ( ( ( -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) -> ( -. -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> -. -. ph ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> ( ( th -> ( -. -. ch -> ch ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ( ( ( ( th -> ( -. -. ch -> ch ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) ) ;
	step 8 : wff = axm ax-mp (step 6, step 7) |- ( ( ( ( th -> ( -. -. ch -> ch ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) ;
	step 9 : wff = axm ax-mp (step 1, step 8) |- ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ;
	step 10 : wff = thm merlem6 () |- ( ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) -> ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ph ) ) ) ;
	step 11 : wff = axm ax-mp (step 9, step 10) |- ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ph ) ) ;
	step 12 : wff = thm merlem11 () |- ( ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ph ) ) -> ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ph ) ) ;
	step 13 : wff = axm ax-mp (step 11, step 12) |- ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ph ) ;
	step 14 : wff = thm meredith () |- ( ( ( ( ( ps -> ps ) -> ( -. ph -> -. ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) ) ) -> ph ) -> ph ) -> ( ( ph -> ps ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) ) ) ;
	step 15 : wff = axm ax-mp (step 13, step 14) |- ( ( ph -> ps ) -> ( ( ( th -> ( -. -. ch -> ch ) ) -> -. -. ph ) -> ps ) ) ;
	qed prop 1 = step 15 ;
}

theorem luk-1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
}

proof of luk-1 {
	step 1 : wff = thm meredith () |- ( ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm merlem13 () |- ( ( ph -> ps ) -> ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) ) ;
	step 3 : wff = thm merlem13 () |- ( ( ( ph -> ps ) -> ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) ) -> ( ( ( ( ( ( ps -> ch ) -> ( ph -> ch ) ) -> ph ) -> ( -. -. -. ( ph -> ps ) -> -. ( ph -> ps ) ) ) -> -. -. ( ph -> ps ) ) -> ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( ( ( ( ( ( ps -> ch ) -> ( ph -> ch ) ) -> ph ) -> ( -. -. -. ( ph -> ps ) -> -. ( ph -> ps ) ) ) -> -. -. ( ph -> ps ) ) -> ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) ) ;
	step 5 : wff = thm meredith () |- ( ( ( ( ( ( ( ps -> ch ) -> ( ph -> ch ) ) -> ph ) -> ( -. -. -. ( ph -> ps ) -> -. ( ph -> ps ) ) ) -> -. -. ( ph -> ps ) ) -> ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) ) -> ( ( ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) -> ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( ( ( ( ( ( ch -> ch ) -> ( -. -. -. ph -> -. ph ) ) -> -. -. ph ) -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) -> ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ;
	step 7 : wff = axm ax-mp (step 1, step 6) |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem luk-2 (ph : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ph ) -> ph ) ;
}

proof of luk-2 {
	step 1 : wff = thm merlem5 () |- ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) ;
	step 2 : wff = thm merlem4 () |- ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> -. ph ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> -. ph ) ) ;
	step 4 : wff = thm merlem11 () |- ( ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> -. ph ) ) -> ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> -. ph ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> -. ph ) ;
	step 6 : wff = thm meredith () |- ( ( ( ( ( ph -> -. ( -. ph -> ph ) ) -> ( -. -. ph -> -. ( -. ph -> ph ) ) ) -> -. ph ) -> -. ph ) -> ( ( -. ph -> ph ) -> ( ( -. ph -> ph ) -> ph ) ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( ( -. ph -> ph ) -> ( ( -. ph -> ph ) -> ph ) ) ;
	step 8 : wff = thm merlem11 () |- ( ( ( -. ph -> ph ) -> ( ( -. ph -> ph ) -> ph ) ) -> ( ( -. ph -> ph ) -> ph ) ) ;
	step 9 : wff = axm ax-mp (step 7, step 8) |- ( ( -. ph -> ph ) -> ph ) ;
	qed prop 1 = step 9 ;
}

theorem luk-3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( -. ph -> ps ) ) ;
}

proof of luk-3 {
	step 1 : wff = thm merlem11 () |- ( ( -. ph -> ( -. ph -> ps ) ) -> ( -. ph -> ps ) ) ;
	step 2 : wff = thm merlem1 () |- ( ( ( -. ph -> ( -. ph -> ps ) ) -> ( -. ph -> ps ) ) -> ( ph -> ( -. ph -> ps ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ph -> ( -. ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem luklem1 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( ps -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ch ) ;
}

proof of luklem1 {
	step 1 : wff = thm luk-1 () |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ( ps -> ch ) -> ( ph -> ch ) ) ;
	step 3 : wff = axm ax-mp (hyp 2, step 2) |- ( ph -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem luklem2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph -> -. ps ) -> ( ( ( ph -> ch ) -> th ) -> ( ps -> th ) ) ) ;
}

proof of luklem2 {
	step 1 : wff = thm luk-1 () |- ( ( ph -> -. ps ) -> ( ( -. ps -> ch ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm luk-3 () |- ( ps -> ( -. ps -> ch ) ) ;
	step 3 : wff = thm luk-1 () |- ( ( ps -> ( -. ps -> ch ) ) -> ( ( ( -. ps -> ch ) -> ( ph -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( ( ( -. ps -> ch ) -> ( ph -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 5 : wff = thm luklem1 (step 1, step 4) |- ( ( ph -> -. ps ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 6 : wff = thm luk-1 () |- ( ( ps -> ( ph -> ch ) ) -> ( ( ( ph -> ch ) -> th ) -> ( ps -> th ) ) ) ;
	step 7 : wff = thm luklem1 (step 5, step 6) |- ( ( ph -> -. ps ) -> ( ( ( ph -> ch ) -> th ) -> ( ps -> th ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem luklem3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ph -> ( ( ( -. ph -> ps ) -> ch ) -> ( th -> ch ) ) ) ;
}

proof of luklem3 {
	step 1 : wff = thm luk-3 () |- ( ph -> ( -. ph -> -. th ) ) ;
	step 2 : wff = thm luklem2 () |- ( ( -. ph -> -. th ) -> ( ( ( -. ph -> ps ) -> ch ) -> ( th -> ch ) ) ) ;
	step 3 : wff = thm luklem1 (step 1, step 2) |- ( ph -> ( ( ( -. ph -> ps ) -> ch ) -> ( th -> ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem luklem4 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ps ) ;
}

proof of luklem4 {
	step 1 : wff = thm luk-2 () |- ( ( -. ( ( -. ph -> ph ) -> ph ) -> ( ( -. ph -> ph ) -> ph ) ) -> ( ( -. ph -> ph ) -> ph ) ) ;
	step 2 : wff = thm luk-2 () |- ( ( -. ph -> ph ) -> ph ) ;
	step 3 : wff = thm a1i12 (step 2) |- ( ( ( -. ( ( -. ph -> ph ) -> ph ) -> ( ( -. ph -> ph ) -> ph ) ) -> ( ( -. ph -> ph ) -> ph ) ) -> ( -. ps -> ( ( -. ph -> ph ) -> ph ) ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- ( -. ps -> ( ( -. ph -> ph ) -> ph ) ) ;
	step 5 : wff = thm luk-1 () |- ( ( -. ps -> ( ( -. ph -> ph ) -> ph ) ) -> ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ( -. ps -> ps ) ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ( -. ps -> ps ) ) ;
	step 7 : wff = thm luk-2 () |- ( ( -. ps -> ps ) -> ps ) ;
	step 8 : wff = thm luklem1 (step 6, step 7) |- ( ( ( ( -. ph -> ph ) -> ph ) -> ps ) -> ps ) ;
	qed prop 1 = step 8 ;
}

theorem luklem5 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> ph ) ) ;
}

proof of luklem5 {
	step 1 : wff = thm luklem3 () |- ( ph -> ( ( ( -. ph -> ph ) -> ph ) -> ( ps -> ph ) ) ) ;
	step 2 : wff = thm luklem4 () |- ( ( ( ( -. ph -> ph ) -> ph ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) ;
	step 3 : wff = thm luklem1 (step 1, step 2) |- ( ph -> ( ps -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem luklem6 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
}

proof of luklem6 {
	step 1 : wff = thm luk-1 () |- ( ( ph -> ( ph -> ps ) ) -> ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) ) ;
	step 2 : wff = thm luklem5 () |- ( -. ( ph -> ps ) -> ( -. ps -> -. ( ph -> ps ) ) ) ;
	step 3 : wff = thm luklem2 () |- ( ( -. ps -> -. ( ph -> ps ) ) -> ( ( ( -. ps -> ps ) -> ps ) -> ( ( ph -> ps ) -> ps ) ) ) ;
	step 4 : wff = thm luklem4 () |- ( ( ( ( -. ps -> ps ) -> ps ) -> ( ( ph -> ps ) -> ps ) ) -> ( ( ph -> ps ) -> ps ) ) ;
	step 5 : wff = thm luklem1 (step 3, step 4) |- ( ( -. ps -> -. ( ph -> ps ) ) -> ( ( ph -> ps ) -> ps ) ) ;
	step 6 : wff = thm luklem1 (step 2, step 5) |- ( -. ( ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) ;
	step 7 : wff = thm luk-1 () |- ( ( -. ( ph -> ps ) -> ( ( ph -> ps ) -> ps ) ) -> ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( -. ( ph -> ps ) -> ( ph -> ps ) ) ) ) ;
	step 8 : wff = axm ax-mp (step 6, step 7) |- ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( -. ( ph -> ps ) -> ( ph -> ps ) ) ) ;
	step 9 : wff = thm luk-1 () |- ( ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( -. ( ph -> ps ) -> ( ph -> ps ) ) ) -> ( ( ( -. ( ph -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) -> ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) ) ;
	step 10 : wff = axm ax-mp (step 8, step 9) |- ( ( ( -. ( ph -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) -> ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) ;
	step 11 : wff = thm luklem4 () |- ( ( ( ( -. ( ph -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) -> ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) -> ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) ) ;
	step 12 : wff = axm ax-mp (step 10, step 11) |- ( ( ( ( ph -> ps ) -> ps ) -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
	step 13 : wff = thm luklem1 (step 1, step 12) |- ( ( ph -> ( ph -> ps ) ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 13 ;
}

theorem luklem7 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
}

proof of luklem7 {
	step 1 : wff = thm luk-1 () |- ( ( ph -> ( ps -> ch ) ) -> ( ( ( ps -> ch ) -> ch ) -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm luklem5 () |- ( ps -> ( ( ps -> ch ) -> ps ) ) ;
	step 3 : wff = thm luk-1 () |- ( ( ( ps -> ch ) -> ps ) -> ( ( ps -> ch ) -> ( ( ps -> ch ) -> ch ) ) ) ;
	step 4 : wff = thm luklem1 (step 2, step 3) |- ( ps -> ( ( ps -> ch ) -> ( ( ps -> ch ) -> ch ) ) ) ;
	step 5 : wff = thm luklem6 () |- ( ( ( ps -> ch ) -> ( ( ps -> ch ) -> ch ) ) -> ( ( ps -> ch ) -> ch ) ) ;
	step 6 : wff = thm luklem1 (step 4, step 5) |- ( ps -> ( ( ps -> ch ) -> ch ) ) ;
	step 7 : wff = thm luk-1 () |- ( ( ps -> ( ( ps -> ch ) -> ch ) ) -> ( ( ( ( ps -> ch ) -> ch ) -> ( ph -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ) ;
	step 8 : wff = axm ax-mp (step 6, step 7) |- ( ( ( ( ps -> ch ) -> ch ) -> ( ph -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 9 : wff = thm luklem1 (step 1, step 8) |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem luklem8 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) ;
}

proof of luklem8 {
	step 1 : wff = thm luk-1 () |- ( ( ch -> ph ) -> ( ( ph -> ps ) -> ( ch -> ps ) ) ) ;
	step 2 : wff = thm luklem7 () |- ( ( ( ch -> ph ) -> ( ( ph -> ps ) -> ( ch -> ps ) ) ) -> ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( ph -> ps ) -> ( ( ch -> ph ) -> ( ch -> ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ax1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( ps -> ph ) ) ;
}

proof of ax1 {
	step 1 : wff = thm luklem5 () |- ( ph -> ( ps -> ph ) ) ;
	qed prop 1 = step 1 ;
}

theorem ax2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
}

proof of ax2 {
	step 1 : wff = thm luklem7 () |- ( ( ph -> ( ps -> ch ) ) -> ( ps -> ( ph -> ch ) ) ) ;
	step 2 : wff = thm luklem8 () |- ( ( ps -> ( ph -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ( ph -> ch ) ) ) ) ;
	step 3 : wff = thm luklem6 () |- ( ( ph -> ( ph -> ch ) ) -> ( ph -> ch ) ) ;
	step 4 : wff = thm luklem8 () |- ( ( ( ph -> ( ph -> ch ) ) -> ( ph -> ch ) ) -> ( ( ( ph -> ps ) -> ( ph -> ( ph -> ch ) ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( ( ( ph -> ps ) -> ( ph -> ( ph -> ch ) ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 6 : wff = thm luklem1 (step 2, step 5) |- ( ( ps -> ( ph -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 7 : wff = thm luklem1 (step 1, step 6) |- ( ( ph -> ( ps -> ch ) ) -> ( ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem ax3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) ;
}

proof of ax3 {
	step 1 : wff = thm luklem2 () |- ( ( -. ph -> -. ps ) -> ( ( ( -. ph -> ph ) -> ph ) -> ( ps -> ph ) ) ) ;
	step 2 : wff = thm luklem4 () |- ( ( ( ( -. ph -> ph ) -> ph ) -> ( ps -> ph ) ) -> ( ps -> ph ) ) ;
	step 3 : wff = thm luklem1 (step 1, step 2) |- ( ( -. ph -> -. ps ) -> ( ps -> ph ) ) ;
	qed prop 1 = step 3 ;
}

constant {
	symbol -/\ ;
}

rule wnand (ph : wff, ps : wff) {
	term : wff = # ( ph -/\ ps ) ;
}

definition df-nand (ph : wff, ps : wff)  {
	defiendum : wff = # ( ph -/\ ps ) ;
	definiens : wff = # -. ( ph /\ ps ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem nic-justlem (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) ;
}

proof of nic-justlem {
	step 1 : wff = def df-nand () |- ( ( ch -/\ ps ) <-> -. ( ch /\ ps ) ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( ph /\ ( ch -/\ ps ) ) <-> ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 3 : wff = thm notbii (step 2) |- ( -. ( ph /\ ( ch -/\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 4 : wff = def df-nand () |- ( ( ph -/\ ( ch -/\ ps ) ) <-> -. ( ph /\ ( ch -/\ ps ) ) ) ;
	step 5 : wff = thm iman () |- ( ( ph -> ( ch /\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 3, step 4, step 5) |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem nic-justim (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) ;
}

proof of nic-justim {
	step 1 : wff = thm nic-justlem () |- ( ( ph -/\ ( ps -/\ ps ) ) <-> ( ph -> ( ps /\ ps ) ) ) ;
	step 2 : wff = thm anidmdbi () |- ( ( ph -> ( ps /\ ps ) ) <-> ( ph -> ps ) ) ;
	step 3 : wff = thm bitr2i (step 1, step 2) |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem nic-justneg (ps : wff)  {
	prop 1 : wff = |- ( -. ps <-> ( ps -/\ ps ) ) ;
}

proof of nic-justneg {
	step 1 : wff = def df-nand () |- ( ( ps -/\ ps ) <-> -. ( ps /\ ps ) ) ;
	step 2 : wff = thm anidm () |- ( ( ps /\ ps ) <-> ps ) ;
	step 3 : wff = thm notbii (step 2) |- ( -. ( ps /\ ps ) <-> -. ps ) ;
	step 4 : wff = thm bitr2i (step 1, step 3) |- ( -. ps <-> ( ps -/\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-justbi (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph <-> ps ) <-> ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) ;
}

proof of nic-justbi {
	step 1 : wff = thm pm4_57 () |- ( -. ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	step 2 : wff = def df-nand () |- ( ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) <-> -. ( ( ph -/\ ps ) /\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) ;
	step 3 : wff = def df-nand () |- ( ( ph -/\ ps ) <-> -. ( ph /\ ps ) ) ;
	step 4 : wff = def df-nand () |- ( ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) <-> -. ( ( ph -/\ ph ) /\ ( ps -/\ ps ) ) ) ;
	step 5 : wff = thm nic-justneg () |- ( -. ph <-> ( ph -/\ ph ) ) ;
	step 6 : wff = thm nic-justneg () |- ( -. ps <-> ( ps -/\ ps ) ) ;
	step 7 : wff = thm anbi12i (step 5, step 6) |- ( ( -. ph /\ -. ps ) <-> ( ( ph -/\ ph ) /\ ( ps -/\ ps ) ) ) ;
	step 8 : wff = thm notbii (step 7) |- ( -. ( -. ph /\ -. ps ) <-> -. ( ( ph -/\ ph ) /\ ( ps -/\ ps ) ) ) ;
	step 9 : wff = thm bitr4i (step 4, step 8) |- ( ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) <-> -. ( -. ph /\ -. ps ) ) ;
	step 10 : wff = thm anbi12i (step 3, step 9) |- ( ( ( ph -/\ ps ) /\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) <-> ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 11 : wff = thm notbii (step 10) |- ( -. ( ( ph -/\ ps ) /\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) <-> -. ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 12 : wff = thm bitri (step 2, step 11) |- ( ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) <-> -. ( -. ( ph /\ ps ) /\ -. ( -. ph /\ -. ps ) ) ) ;
	step 13 : wff = thm dfbi3 () |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	step 14 : wff = thm 3bitr4ri (step 1, step 12, step 13) |- ( ( ph <-> ps ) <-> ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem nic-dfim (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\ ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) -/\ ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) ;
}

proof of nic-dfim {
	step 1 : wff = thm nic-justim () |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ( ph -/\ ( ps -/\ ps ) ) <-> ( ph -> ps ) ) ;
	step 3 : wff = thm nic-justbi () |- ( ( ( ph -/\ ( ps -/\ ps ) ) <-> ( ph -> ps ) ) <-> ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\ ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) -/\ ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) ) ;
	step 4 : wff = thm mpbi (step 2, step 3) |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\ ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) -/\ ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-dfneg (ph : wff)  {
	prop 1 : wff = |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\ ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ -. ph ) ) ) ;
}

proof of nic-dfneg {
	step 1 : wff = thm nic-justneg () |- ( -. ph <-> ( ph -/\ ph ) ) ;
	step 2 : wff = thm bicomi (step 1) |- ( ( ph -/\ ph ) <-> -. ph ) ;
	step 3 : wff = thm nic-justbi () |- ( ( ( ph -/\ ph ) <-> -. ph ) <-> ( ( ( ph -/\ ph ) -/\ -. ph ) -/\ ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ -. ph ) ) ) ) ;
	step 4 : wff = thm mpbi (step 2, step 3) |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\ ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ -. ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-mp (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ph -/\ ( ch -/\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of nic-mp {
	step 1 : wff = thm nic-justlem () |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) ;
	step 2 : wff = thm mpbi (hyp 2, step 1) |- ( ph -> ( ch /\ ps ) ) ;
	step 3 : wff = thm pm3_27d (step 2) |- ( ph -> ps ) ;
	step 4 : wff = axm ax-mp (hyp 1, step 3) |- ps ;
	qed prop 1 = step 4 ;
}

theorem nic-mpALT (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ph -/\ ( ch -/\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of nic-mpALT {
	step 1 : wff = def df-nand () |- ( ( ph -/\ ( ch -/\ ps ) ) <-> -. ( ph /\ ( ch -/\ ps ) ) ) ;
	step 2 : wff = def df-nand () |- ( ( ch -/\ ps ) <-> -. ( ch /\ ps ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( ph /\ ( ch -/\ ps ) ) <-> ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. ( ph /\ ( ch -/\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( ( ph -/\ ( ch -/\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 6 : wff = thm mpbi (hyp 2, step 5) |- -. ( ph /\ -. ( ch /\ ps ) ) ;
	step 7 : wff = thm iman () |- ( ( ph -> ( ch /\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 8 : wff = thm mpbir (step 6, step 7) |- ( ph -> ( ch /\ ps ) ) ;
	step 9 : wff = thm pm3_27d (step 8) |- ( ph -> ps ) ;
	step 10 : wff = axm ax-mp (hyp 1, step 9) |- ps ;
	qed prop 1 = step 10 ;
}

theorem nic-ax (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
}

proof of nic-ax {
	step 1 : wff = thm nic-justlem () |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( ( ph -/\ ( ch -/\ ps ) ) -> ( ph -> ( ch /\ ps ) ) ) ;
	step 3 : wff = thm pm3_26 () |- ( ( ch /\ ps ) -> ch ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( ph -> ( ch /\ ps ) ) -> ( ph -> ch ) ) ;
	step 5 : wff = thm con3 () |- ( ( ph -> ch ) -> ( -. ch -> -. ph ) ) ;
	step 6 : wff = thm imim2d (step 5) |- ( ( ph -> ch ) -> ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ;
	step 7 : wff = thm imnan () |- ( ( ph -> -. th ) <-> -. ( ph /\ th ) ) ;
	step 8 : wff = thm con2b () |- ( ( th -> -. ph ) <-> ( ph -> -. th ) ) ;
	step 9 : wff = def df-nand () |- ( ( ph -/\ th ) <-> -. ( ph /\ th ) ) ;
	step 10 : wff = thm 3bitr4ri (step 7, step 8, step 9) |- ( ( ph -/\ th ) <-> ( th -> -. ph ) ) ;
	step 11 : wff = thm syl6ibr (step 6, step 10) |- ( ( ph -> ch ) -> ( ( th -> -. ch ) -> ( ph -/\ th ) ) ) ;
	step 12 : wff = thm imnan () |- ( ( th -> -. ch ) <-> -. ( th /\ ch ) ) ;
	step 13 : wff = def df-nand () |- ( ( th -/\ ch ) <-> -. ( th /\ ch ) ) ;
	step 14 : wff = thm bitr4i (step 12, step 13) |- ( ( th -> -. ch ) <-> ( th -/\ ch ) ) ;
	step 15 : wff = thm syl5ibr (step 11, step 14) |- ( ( ph -> ch ) -> ( ( th -/\ ch ) -> ( ph -/\ th ) ) ) ;
	step 16 : wff = thm nic-justim () |- ( ( ( th -/\ ch ) -> ( ph -/\ th ) ) <-> ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ;
	step 17 : wff = thm sylib (step 15, step 16) |- ( ( ph -> ch ) -> ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ;
	step 18 : wff = thm 3syl (step 2, step 4, step 17) |- ( ( ph -/\ ( ch -/\ ps ) ) -> ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ;
	step 19 : wff = thm pm4_24 () |- ( ta <-> ( ta /\ ta ) ) ;
	step 20 : wff = thm biimpi (step 19) |- ( ta -> ( ta /\ ta ) ) ;
	step 21 : wff = thm nic-justlem () |- ( ( ta -/\ ( ta -/\ ta ) ) <-> ( ta -> ( ta /\ ta ) ) ) ;
	step 22 : wff = thm mpbir (step 20, step 21) |- ( ta -/\ ( ta -/\ ta ) ) ;
	step 23 : wff = thm jctil (step 18, step 22) |- ( ( ph -/\ ( ch -/\ ps ) ) -> ( ( ta -/\ ( ta -/\ ta ) ) /\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	step 24 : wff = thm nic-justlem () |- ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) <-> ( ( ph -/\ ( ch -/\ ps ) ) -> ( ( ta -/\ ( ta -/\ ta ) ) /\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ) ;
	step 25 : wff = thm mpbir (step 23, step 24) |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	qed prop 1 = step 25 ;
}

theorem nic-axALT (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
}

proof of nic-axALT {
	step 1 : wff = thm pm3_26 () |- ( ( ch /\ ps ) -> ch ) ;
	step 2 : wff = thm imim2i (step 1) |- ( ( ph -> ( ch /\ ps ) ) -> ( ph -> ch ) ) ;
	step 3 : wff = thm con3 () |- ( ( ph -> ch ) -> ( -. ch -> -. ph ) ) ;
	step 4 : wff = thm imim2d (step 3) |- ( ( ph -> ch ) -> ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ;
	step 5 : wff = thm syl (step 2, step 4) |- ( ( ph -> ( ch /\ ps ) ) -> ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ;
	step 6 : wff = thm anidm () |- ( ( ta /\ ta ) <-> ta ) ;
	step 7 : wff = thm biimpri (step 6) |- ( ta -> ( ta /\ ta ) ) ;
	step 8 : wff = thm jctil (step 5, step 7) |- ( ( ph -> ( ch /\ ps ) ) -> ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ;
	step 9 : wff = def df-nand () |- ( ( ch -/\ ps ) <-> -. ( ch /\ ps ) ) ;
	step 10 : wff = thm anbi2i (step 9) |- ( ( ph /\ ( ch -/\ ps ) ) <-> ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 11 : wff = thm notbii (step 10) |- ( -. ( ph /\ ( ch -/\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 12 : wff = def df-nand () |- ( ( ph -/\ ( ch -/\ ps ) ) <-> -. ( ph /\ ( ch -/\ ps ) ) ) ;
	step 13 : wff = thm iman () |- ( ( ph -> ( ch /\ ps ) ) <-> -. ( ph /\ -. ( ch /\ ps ) ) ) ;
	step 14 : wff = thm 3bitr4i (step 11, step 12, step 13) |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) ;
	step 15 : wff = def df-nand () |- ( ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) <-> -. ( ( ta -/\ ( ta -/\ ta ) ) /\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	step 16 : wff = def df-nand () |- ( ( ta -/\ ta ) <-> -. ( ta /\ ta ) ) ;
	step 17 : wff = thm anbi2i (step 16) |- ( ( ta /\ ( ta -/\ ta ) ) <-> ( ta /\ -. ( ta /\ ta ) ) ) ;
	step 18 : wff = thm notbii (step 17) |- ( -. ( ta /\ ( ta -/\ ta ) ) <-> -. ( ta /\ -. ( ta /\ ta ) ) ) ;
	step 19 : wff = def df-nand () |- ( ( ta -/\ ( ta -/\ ta ) ) <-> -. ( ta /\ ( ta -/\ ta ) ) ) ;
	step 20 : wff = thm iman () |- ( ( ta -> ( ta /\ ta ) ) <-> -. ( ta /\ -. ( ta /\ ta ) ) ) ;
	step 21 : wff = thm 3bitr4i (step 18, step 19, step 20) |- ( ( ta -/\ ( ta -/\ ta ) ) <-> ( ta -> ( ta /\ ta ) ) ) ;
	step 22 : wff = def df-nand () |- ( ( th -/\ ch ) <-> -. ( th /\ ch ) ) ;
	step 23 : wff = thm imnan () |- ( ( th -> -. ch ) <-> -. ( th /\ ch ) ) ;
	step 24 : wff = thm bitr4i (step 22, step 23) |- ( ( th -/\ ch ) <-> ( th -> -. ch ) ) ;
	step 25 : wff = def df-nand () |- ( ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) <-> -. ( ( ph -/\ th ) /\ ( ph -/\ th ) ) ) ;
	step 26 : wff = thm anidm () |- ( ( ( ph -/\ th ) /\ ( ph -/\ th ) ) <-> ( ph -/\ th ) ) ;
	step 27 : wff = def df-nand () |- ( ( ph -/\ th ) <-> -. ( ph /\ th ) ) ;
	step 28 : wff = thm imnan () |- ( ( ph -> -. th ) <-> -. ( ph /\ th ) ) ;
	step 29 : wff = thm con2b () |- ( ( ph -> -. th ) <-> ( th -> -. ph ) ) ;
	step 30 : wff = thm bitr3i (step 28, step 29) |- ( -. ( ph /\ th ) <-> ( th -> -. ph ) ) ;
	step 31 : wff = thm 3bitri (step 26, step 27, step 30) |- ( ( ( ph -/\ th ) /\ ( ph -/\ th ) ) <-> ( th -> -. ph ) ) ;
	step 32 : wff = thm notbii (step 31) |- ( -. ( ( ph -/\ th ) /\ ( ph -/\ th ) ) <-> -. ( th -> -. ph ) ) ;
	step 33 : wff = thm bitri (step 25, step 32) |- ( ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) <-> -. ( th -> -. ph ) ) ;
	step 34 : wff = thm anbi12i (step 24, step 33) |- ( ( ( th -/\ ch ) /\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) <-> ( ( th -> -. ch ) /\ -. ( th -> -. ph ) ) ) ;
	step 35 : wff = thm notbii (step 34) |- ( -. ( ( th -/\ ch ) /\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) <-> -. ( ( th -> -. ch ) /\ -. ( th -> -. ph ) ) ) ;
	step 36 : wff = def df-nand () |- ( ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) <-> -. ( ( th -/\ ch ) /\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ;
	step 37 : wff = thm iman () |- ( ( ( th -> -. ch ) -> ( th -> -. ph ) ) <-> -. ( ( th -> -. ch ) /\ -. ( th -> -. ph ) ) ) ;
	step 38 : wff = thm 3bitr4i (step 35, step 36, step 37) |- ( ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) <-> ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ;
	step 39 : wff = thm anbi12i (step 21, step 38) |- ( ( ( ta -/\ ( ta -/\ ta ) ) /\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) <-> ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ;
	step 40 : wff = thm notbii (step 39) |- ( -. ( ( ta -/\ ( ta -/\ ta ) ) /\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) <-> -. ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ;
	step 41 : wff = thm bitri (step 15, step 40) |- ( ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) <-> -. ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ;
	step 42 : wff = thm anbi12i (step 14, step 41) |- ( ( ( ph -/\ ( ch -/\ ps ) ) /\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) <-> ( ( ph -> ( ch /\ ps ) ) /\ -. ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ) ;
	step 43 : wff = thm notbii (step 42) |- ( -. ( ( ph -/\ ( ch -/\ ps ) ) /\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) <-> -. ( ( ph -> ( ch /\ ps ) ) /\ -. ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ) ;
	step 44 : wff = thm iman () |- ( ( ( ph -> ( ch /\ ps ) ) -> ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) <-> -. ( ( ph -> ( ch /\ ps ) ) /\ -. ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ) ;
	step 45 : wff = thm bitr4i (step 43, step 44) |- ( -. ( ( ph -/\ ( ch -/\ ps ) ) /\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) <-> ( ( ph -> ( ch /\ ps ) ) -> ( ( ta -> ( ta /\ ta ) ) /\ ( ( th -> -. ch ) -> ( th -> -. ph ) ) ) ) ) ;
	step 46 : wff = thm mpbir (step 8, step 45) |- -. ( ( ph -/\ ( ch -/\ ps ) ) /\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	step 47 : wff = def df-nand () |- ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) <-> -. ( ( ph -/\ ( ch -/\ ps ) ) /\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ) ;
	step 48 : wff = thm mpbir (step 46, step 47) |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	qed prop 1 = step 48 ;
}

theorem nic-imp (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -/\ ( ch -/\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ;
}

proof of nic-imp {
	var ta : wff;
	step 1 : wff = thm nic-ax () |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	step 2 : wff = thm nic-mp (hyp 1, step 1) |- ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem nic-idlem1 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff)  {
	prop 1 : wff = |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ) ;
}

proof of nic-idlem1 {
	step 1 : wff = thm nic-ax () |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( ph -/\ ch ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ) ) ;
	step 2 : wff = thm nic-imp (step 1) |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ) ;
	qed prop 1 = step 2 ;
}

theorem nic-idlem2 (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, et : wff)  {
	hyp 1 : wff = |- ( et -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) ;
}

proof of nic-idlem2 {
	step 1 : wff = thm nic-ax () |- ( ( ph -/\ ( ch -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( ph -/\ ch ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ) ) ;
	step 2 : wff = thm nic-imp (step 1) |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ ( ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) ) ;
	step 3 : wff = thm nic-imp (step 2) |- ( ( et -/\ ( ( ph -/\ ( ch -/\ ps ) ) -/\ th ) ) -/\ ( ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) -/\ ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) ) ) ;
	step 4 : wff = thm nic-mp (hyp 1, step 3) |- ( ( th -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ et ) ;
	qed prop 1 = step 4 ;
}

theorem nic-id (ta : wff)  {
	prop 1 : wff = |- ( ta -/\ ( ta -/\ ta ) ) ;
}

proof of nic-id {
	var ph : wff, ps : wff, ch : wff, th : wff;
	step 1 : wff = thm nic-ax () |- ( ( ps -/\ ( ps -/\ ps ) ) -/\ ( ( th -/\ ( th -/\ th ) ) -/\ ( ( ph -/\ ps ) -/\ ( ( ps -/\ ph ) -/\ ( ps -/\ ph ) ) ) ) ) ;
	step 2 : wff = thm nic-idlem2 (step 1) |- ( ( ( ( ph -/\ ps ) -/\ ( ( ps -/\ ph ) -/\ ( ps -/\ ph ) ) ) -/\ ( ch -/\ ( ch -/\ ch ) ) ) -/\ ( ps -/\ ( ps -/\ ps ) ) ) ;
	step 3 : wff = thm nic-idlem1 () |- ( ( ( ch -/\ ( ch -/\ ch ) ) -/\ ( ta -/\ ( ta -/\ ta ) ) ) -/\ ( ( ( ( ph -/\ ps ) -/\ ( ( ps -/\ ph ) -/\ ( ps -/\ ph ) ) ) -/\ ( ch -/\ ( ch -/\ ch ) ) ) -/\ ( ( ( ph -/\ ps ) -/\ ( ( ps -/\ ph ) -/\ ( ps -/\ ph ) ) ) -/\ ( ch -/\ ( ch -/\ ch ) ) ) ) ) ;
	step 4 : wff = thm nic-idlem2 (step 3) |- ( ( ( ( ( ph -/\ ps ) -/\ ( ( ps -/\ ph ) -/\ ( ps -/\ ph ) ) ) -/\ ( ch -/\ ( ch -/\ ch ) ) ) -/\ ( ps -/\ ( ps -/\ ps ) ) ) -/\ ( ( ch -/\ ( ch -/\ ch ) ) -/\ ( ta -/\ ( ta -/\ ta ) ) ) ) ;
	step 5 : wff = thm nic-mp (step 2, step 4) |- ( ta -/\ ( ta -/\ ta ) ) ;
	qed prop 1 = step 5 ;
}

theorem nic-swap (ph : wff, th : wff)  {
	prop 1 : wff = |- ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ;
}

proof of nic-swap {
	var ta : wff;
	step 1 : wff = thm nic-id () |- ( ph -/\ ( ph -/\ ph ) ) ;
	step 2 : wff = thm nic-ax () |- ( ( ph -/\ ( ph -/\ ph ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ) ) ;
	step 3 : wff = thm nic-mp (step 1, step 2) |- ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem nic-isw1 (ph : wff, th : wff)  {
	hyp 1 : wff = |- ( th -/\ ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph -/\ th ) ;
}

proof of nic-isw1 {
	step 1 : wff = thm nic-swap () |- ( ( th -/\ ph ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ;
	step 2 : wff = thm nic-mp (hyp 1, step 1) |- ( ph -/\ th ) ;
	qed prop 1 = step 2 ;
}

theorem nic-isw2 (ph : wff, ps : wff, th : wff)  {
	hyp 1 : wff = |- ( ps -/\ ( th -/\ ph ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -/\ ( ph -/\ th ) ) ;
}

proof of nic-isw2 {
	step 1 : wff = thm nic-swap () |- ( ( ph -/\ th ) -/\ ( ( th -/\ ph ) -/\ ( th -/\ ph ) ) ) ;
	step 2 : wff = thm nic-imp (step 1) |- ( ( ps -/\ ( th -/\ ph ) ) -/\ ( ( ( ph -/\ th ) -/\ ps ) -/\ ( ( ph -/\ th ) -/\ ps ) ) ) ;
	step 3 : wff = thm nic-mp (hyp 1, step 2) |- ( ( ph -/\ th ) -/\ ps ) ;
	step 4 : wff = thm nic-isw1 (step 3) |- ( ps -/\ ( ph -/\ th ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-iimp1 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ph -/\ ( ch -/\ ps ) ) ;
	hyp 2 : wff = |- ( th -/\ ch ) ;
	-----------------------
	prop 1 : wff = |- ( th -/\ ph ) ;
}

proof of nic-iimp1 {
	step 1 : wff = thm nic-imp (hyp 1) |- ( ( th -/\ ch ) -/\ ( ( ph -/\ th ) -/\ ( ph -/\ th ) ) ) ;
	step 2 : wff = thm nic-mp (hyp 2, step 1) |- ( ph -/\ th ) ;
	step 3 : wff = thm nic-isw1 (step 2) |- ( th -/\ ph ) ;
	qed prop 1 = step 3 ;
}

theorem nic-iimp2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	hyp 1 : wff = |- ( ( ph -/\ ps ) -/\ ( ch -/\ ch ) ) ;
	hyp 2 : wff = |- ( th -/\ ph ) ;
	-----------------------
	prop 1 : wff = |- ( th -/\ ( ch -/\ ch ) ) ;
}

proof of nic-iimp2 {
	step 1 : wff = thm nic-isw1 (hyp 1) |- ( ( ch -/\ ch ) -/\ ( ph -/\ ps ) ) ;
	step 2 : wff = thm nic-iimp1 (step 1, hyp 2) |- ( th -/\ ( ch -/\ ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem nic-idel (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -/\ ( ch -/\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -/\ ( ch -/\ ch ) ) ;
}

proof of nic-idel {
	step 1 : wff = thm nic-id () |- ( ch -/\ ( ch -/\ ch ) ) ;
	step 2 : wff = thm nic-isw1 (step 1) |- ( ( ch -/\ ch ) -/\ ch ) ;
	step 3 : wff = thm nic-imp (hyp 1) |- ( ( ( ch -/\ ch ) -/\ ch ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) ;
	step 4 : wff = thm nic-mp (step 2, step 3) |- ( ph -/\ ( ch -/\ ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-ich (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph -/\ ( ps -/\ ps ) ) ;
	hyp 2 : wff = |- ( ps -/\ ( ch -/\ ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -/\ ( ch -/\ ch ) ) ;
}

proof of nic-ich {
	step 1 : wff = thm nic-isw1 (hyp 2) |- ( ( ch -/\ ch ) -/\ ps ) ;
	step 2 : wff = thm nic-imp (hyp 1) |- ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) ;
	step 3 : wff = thm nic-mp (step 1, step 2) |- ( ph -/\ ( ch -/\ ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem nic-idbl (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ph -/\ ( ps -/\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ;
}

proof of nic-idbl {
	step 1 : wff = thm nic-imp (hyp 1) |- ( ( ps -/\ ps ) -/\ ( ( ph -/\ ps ) -/\ ( ph -/\ ps ) ) ) ;
	step 2 : wff = thm nic-imp (hyp 1) |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ;
	step 3 : wff = thm nic-ich (step 1, step 2) |- ( ( ps -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem nic-bijust (ta : wff)  {
	prop 1 : wff = |- ( ( ta -/\ ta ) -/\ ( ( ta -/\ ta ) -/\ ( ta -/\ ta ) ) ) ;
}

proof of nic-bijust {
	step 1 : wff = thm nic-id () |- ( ( ta -/\ ta ) -/\ ( ( ta -/\ ta ) -/\ ( ta -/\ ta ) ) ) ;
	qed prop 1 = step 1 ;
}

theorem nic-bi1 (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -/\ ( ps -/\ ps ) ) ;
}

proof of nic-bi1 {
	step 1 : wff = thm nic-id () |- ( ph -/\ ( ph -/\ ph ) ) ;
	step 2 : wff = thm nic-iimp1 (hyp 1, step 1) |- ( ph -/\ ( ph -/\ ps ) ) ;
	step 3 : wff = thm nic-isw2 (step 2) |- ( ph -/\ ( ps -/\ ph ) ) ;
	step 4 : wff = thm nic-idel (step 3) |- ( ph -/\ ( ps -/\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-bi2 (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -/\ ( ph -/\ ph ) ) ;
}

proof of nic-bi2 {
	step 1 : wff = thm nic-isw2 (hyp 1) |- ( ( ph -/\ ps ) -/\ ( ( ps -/\ ps ) -/\ ( ph -/\ ph ) ) ) ;
	step 2 : wff = thm nic-id () |- ( ps -/\ ( ps -/\ ps ) ) ;
	step 3 : wff = thm nic-iimp1 (step 1, step 2) |- ( ps -/\ ( ph -/\ ps ) ) ;
	step 4 : wff = thm nic-idel (step 3) |- ( ps -/\ ( ph -/\ ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem nic-stdmp (ph : wff, ps : wff)  {
	hyp 1 : wff = |- ph ;
	hyp 2 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of nic-stdmp {
	step 1 : wff = thm nic-dfim () |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\ ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) -/\ ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) ;
	step 2 : wff = thm nic-bi2 (step 1) |- ( ( ph -> ps ) -/\ ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) ) ;
	step 3 : wff = thm nic-mp (hyp 2, step 2) |- ( ph -/\ ( ps -/\ ps ) ) ;
	step 4 : wff = thm nic-mp (hyp 1, step 3) |- ps ;
	qed prop 1 = step 4 ;
}

theorem nic-luk1 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
}

proof of nic-luk1 {
	var ta : wff;
	step 1 : wff = thm nic-dfim () |- ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -> ps ) ) -/\ ( ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) -/\ ( ( ph -> ps ) -/\ ( ph -> ps ) ) ) ) ;
	step 2 : wff = thm nic-bi2 (step 1) |- ( ( ph -> ps ) -/\ ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ph -/\ ( ps -/\ ps ) ) ) ) ;
	step 3 : wff = thm nic-ax () |- ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ( ta -/\ ( ta -/\ ta ) ) -/\ ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) ) ) ;
	step 4 : wff = thm nic-isw2 (step 3) |- ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) -/\ ( ta -/\ ( ta -/\ ta ) ) ) ) ;
	step 5 : wff = thm nic-idel (step 4) |- ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) -/\ ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) ) ) ;
	step 6 : wff = thm nic-dfim () |- ( ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -> ch ) ) -/\ ( ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) ) ;
	step 7 : wff = thm nic-bi1 (step 6) |- ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) ;
	step 8 : wff = thm nic-idbl (step 7) |- ( ( ( ph -> ch ) -/\ ( ph -> ch ) ) -/\ ( ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) ) ;
	step 9 : wff = thm nic-imp (step 8) |- ( ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) -/\ ( ( ( ( ph -> ch ) -/\ ( ph -> ch ) ) -/\ ( ( ch -/\ ch ) -/\ ps ) ) -/\ ( ( ( ph -> ch ) -/\ ( ph -> ch ) ) -/\ ( ( ch -/\ ch ) -/\ ps ) ) ) ) ;
	step 10 : wff = thm nic-dfim () |- ( ( ( ps -/\ ( ch -/\ ch ) ) -/\ ( ps -> ch ) ) -/\ ( ( ( ps -/\ ( ch -/\ ch ) ) -/\ ( ps -/\ ( ch -/\ ch ) ) ) -/\ ( ( ps -> ch ) -/\ ( ps -> ch ) ) ) ) ;
	step 11 : wff = thm nic-bi2 (step 10) |- ( ( ps -> ch ) -/\ ( ( ps -/\ ( ch -/\ ch ) ) -/\ ( ps -/\ ( ch -/\ ch ) ) ) ) ;
	step 12 : wff = thm nic-swap () |- ( ( ps -/\ ( ch -/\ ch ) ) -/\ ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ch -/\ ch ) -/\ ps ) ) ) ;
	step 13 : wff = thm nic-ich (step 11, step 12) |- ( ( ps -> ch ) -/\ ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ch -/\ ch ) -/\ ps ) ) ) ;
	step 14 : wff = thm nic-imp (step 13) |- ( ( ( ( ph -> ch ) -/\ ( ph -> ch ) ) -/\ ( ( ch -/\ ch ) -/\ ps ) ) -/\ ( ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) -/\ ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) ) ) ;
	step 15 : wff = thm nic-ich (step 9, step 14) |- ( ( ( ( ch -/\ ch ) -/\ ps ) -/\ ( ( ph -/\ ( ch -/\ ch ) ) -/\ ( ph -/\ ( ch -/\ ch ) ) ) ) -/\ ( ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) -/\ ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) ) ) ;
	step 16 : wff = thm nic-ich (step 5, step 15) |- ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) -/\ ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) ) ) ;
	step 17 : wff = thm nic-dfim () |- ( ( ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) -/\ ( ( ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) -/\ ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ) ;
	step 18 : wff = thm nic-bi1 (step 17) |- ( ( ( ps -> ch ) -/\ ( ( ph -> ch ) -/\ ( ph -> ch ) ) ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ;
	step 19 : wff = thm nic-ich (step 16, step 18) |- ( ( ph -/\ ( ps -/\ ps ) ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ;
	step 20 : wff = thm nic-ich (step 2, step 19) |- ( ( ph -> ps ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ;
	step 21 : wff = thm nic-dfim () |- ( ( ( ( ph -> ps ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) -/\ ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) -/\ ( ( ( ( ph -> ps ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) -/\ ( ( ph -> ps ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ) -/\ ( ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) -/\ ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ) ) ;
	step 22 : wff = thm nic-bi1 (step 21) |- ( ( ( ph -> ps ) -/\ ( ( ( ps -> ch ) -> ( ph -> ch ) ) -/\ ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) -/\ ( ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) -/\ ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ) ) ;
	step 23 : wff = thm nic-mp (step 20, step 22) |- ( ( ph -> ps ) -> ( ( ps -> ch ) -> ( ph -> ch ) ) ) ;
	qed prop 1 = step 23 ;
}

theorem nic-luk2 (ph : wff)  {
	prop 1 : wff = |- ( ( -. ph -> ph ) -> ph ) ;
}

proof of nic-luk2 {
	step 1 : wff = thm nic-dfim () |- ( ( ( -. ph -/\ ( ph -/\ ph ) ) -/\ ( -. ph -> ph ) ) -/\ ( ( ( -. ph -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ ( ph -/\ ph ) ) ) -/\ ( ( -. ph -> ph ) -/\ ( -. ph -> ph ) ) ) ) ;
	step 2 : wff = thm nic-bi2 (step 1) |- ( ( -. ph -> ph ) -/\ ( ( -. ph -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ ( ph -/\ ph ) ) ) ) ;
	step 3 : wff = thm nic-dfneg () |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\ ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ -. ph ) ) ) ;
	step 4 : wff = thm nic-id () |- ( ( ph -/\ ph ) -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ;
	step 5 : wff = thm nic-iimp1 (step 3, step 4) |- ( ( ph -/\ ph ) -/\ ( ( ph -/\ ph ) -/\ -. ph ) ) ;
	step 6 : wff = thm nic-isw2 (step 5) |- ( ( ph -/\ ph ) -/\ ( -. ph -/\ ( ph -/\ ph ) ) ) ;
	step 7 : wff = thm nic-iimp1 (step 2, step 6) |- ( ( ph -/\ ph ) -/\ ( -. ph -> ph ) ) ;
	step 8 : wff = thm nic-isw1 (step 7) |- ( ( -. ph -> ph ) -/\ ( ph -/\ ph ) ) ;
	step 9 : wff = thm nic-dfim () |- ( ( ( ( -. ph -> ph ) -/\ ( ph -/\ ph ) ) -/\ ( ( -. ph -> ph ) -> ph ) ) -/\ ( ( ( ( -. ph -> ph ) -/\ ( ph -/\ ph ) ) -/\ ( ( -. ph -> ph ) -/\ ( ph -/\ ph ) ) ) -/\ ( ( ( -. ph -> ph ) -> ph ) -/\ ( ( -. ph -> ph ) -> ph ) ) ) ) ;
	step 10 : wff = thm nic-bi1 (step 9) |- ( ( ( -. ph -> ph ) -/\ ( ph -/\ ph ) ) -/\ ( ( ( -. ph -> ph ) -> ph ) -/\ ( ( -. ph -> ph ) -> ph ) ) ) ;
	step 11 : wff = thm nic-mp (step 8, step 10) |- ( ( -. ph -> ph ) -> ph ) ;
	qed prop 1 = step 11 ;
}

theorem nic-luk3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph -> ( -. ph -> ps ) ) ;
}

proof of nic-luk3 {
	step 1 : wff = thm nic-dfim () |- ( ( ( -. ph -/\ ( ps -/\ ps ) ) -/\ ( -. ph -> ps ) ) -/\ ( ( ( -. ph -/\ ( ps -/\ ps ) ) -/\ ( -. ph -/\ ( ps -/\ ps ) ) ) -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) ) ;
	step 2 : wff = thm nic-bi1 (step 1) |- ( ( -. ph -/\ ( ps -/\ ps ) ) -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) ;
	step 3 : wff = thm nic-dfneg () |- ( ( ( ph -/\ ph ) -/\ -. ph ) -/\ ( ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) -/\ ( -. ph -/\ -. ph ) ) ) ;
	step 4 : wff = thm nic-bi2 (step 3) |- ( -. ph -/\ ( ( ph -/\ ph ) -/\ ( ph -/\ ph ) ) ) ;
	step 5 : wff = thm nic-id () |- ( ph -/\ ( ph -/\ ph ) ) ;
	step 6 : wff = thm nic-iimp1 (step 4, step 5) |- ( ph -/\ -. ph ) ;
	step 7 : wff = thm nic-iimp2 (step 2, step 6) |- ( ph -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) ;
	step 8 : wff = thm nic-dfim () |- ( ( ( ph -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) -/\ ( ph -> ( -. ph -> ps ) ) ) -/\ ( ( ( ph -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) -/\ ( ph -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) ) -/\ ( ( ph -> ( -. ph -> ps ) ) -/\ ( ph -> ( -. ph -> ps ) ) ) ) ) ;
	step 9 : wff = thm nic-bi1 (step 8) |- ( ( ph -/\ ( ( -. ph -> ps ) -/\ ( -. ph -> ps ) ) ) -/\ ( ( ph -> ( -. ph -> ps ) ) -/\ ( ph -> ( -. ph -> ps ) ) ) ) ;
	step 10 : wff = thm nic-mp (step 7, step 9) |- ( ph -> ( -. ph -> ps ) ) ;
	qed prop 1 = step 10 ;
}

constant {
	symbol A. ;
}

type class;

type set : class;

rule wal (ph : wff, x : set) {
	term : wff = # A. x ph ;
}

constant {
	symbol = ;
}

rule wceq (A : class, B : class) {
	term : wff = # A = B ;
}

constant {
	symbol e. ;
}

rule wcel (A : class, B : class) {
	term : wff = # A e. B ;
}

axiom ax-5 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
}

axiom ax-6 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x ph -> A. x -. A. x ph ) ;
}

axiom ax-7 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ph -> A. y A. x ph ) ;
}

axiom ax-gen (ph : wff, x : set)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- A. x ph ;
}

axiom ax-8 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( x = z -> y = z ) ) ;
}

axiom ax-9 (x : set, y : set)  {
	prop 1 : wff = |- -. A. x -. x = y ;
}

axiom ax-10 (x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> A. y y = x ) ;
}

axiom ax-11 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ;
}

axiom ax-12 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
}

axiom ax-13 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( x e. z -> y e. z ) ) ;
}

axiom ax-14 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( z e. x -> z e. y ) ) ;
}

theorem hbequid (x : set, y : set)  {
	prop 1 : wff = |- ( x = x -> A. y x = x ) ;
}

proof of hbequid {
	step 1 : wff = axm ax-12 () |- ( -. A. y y = x -> ( -. A. y y = x -> ( x = x -> A. y x = x ) ) ) ;
	step 2 : wff = axm ax-8 () |- ( y = x -> ( y = x -> x = x ) ) ;
	step 3 : wff = thm pm2_43i (step 2) |- ( y = x -> x = x ) ;
	step 4 : wff = axm ax-gen (step 3) |- A. y ( y = x -> x = x ) ;
	step 5 : wff = axm ax-5 () |- ( A. y ( y = x -> x = x ) -> ( A. y y = x -> A. y x = x ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( A. y y = x -> A. y x = x ) ;
	step 7 : wff = thm a1d (step 6) |- ( A. y y = x -> ( x = x -> A. y x = x ) ) ;
	step 8 : wff = axm ax-8 () |- ( y = x -> ( y = x -> x = x ) ) ;
	step 9 : wff = thm pm2_43i (step 8) |- ( y = x -> x = x ) ;
	step 10 : wff = axm ax-gen (step 9) |- A. y ( y = x -> x = x ) ;
	step 11 : wff = axm ax-5 () |- ( A. y ( y = x -> x = x ) -> ( A. y y = x -> A. y x = x ) ) ;
	step 12 : wff = axm ax-mp (step 10, step 11) |- ( A. y y = x -> A. y x = x ) ;
	step 13 : wff = thm a1d (step 12) |- ( A. y y = x -> ( x = x -> A. y x = x ) ) ;
	step 14 : wff = thm pm2_61ii (step 1, step 7, step 13) |- ( x = x -> A. y x = x ) ;
	qed prop 1 = step 14 ;
}

theorem equidqe (x : set, y : set)  {
	prop 1 : wff = |- -. A. y -. x = x ;
}

proof of equidqe {
	step 1 : wff = axm ax-9 () |- -. A. y -. y = x ;
	step 2 : wff = axm ax-8 () |- ( y = x -> ( y = x -> x = x ) ) ;
	step 3 : wff = thm pm2_43i (step 2) |- ( y = x -> x = x ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. x = x -> -. y = x ) ;
	step 5 : wff = axm ax-gen (step 4) |- A. y ( -. x = x -> -. y = x ) ;
	step 6 : wff = axm ax-5 () |- ( A. y ( -. x = x -> -. y = x ) -> ( A. y -. x = x -> A. y -. y = x ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( A. y -. x = x -> A. y -. y = x ) ;
	step 8 : wff = thm mto (step 1, step 7) |- -. A. y -. x = x ;
	qed prop 1 = step 8 ;
}

theorem equidq (x : set, y : set)  {
	prop 1 : wff = |- A. y x = x ;
}

proof of equidq {
	step 1 : wff = thm equidqe () |- -. A. y -. x = x ;
	step 2 : wff = axm ax-6 () |- ( -. A. y x = x -> A. y -. A. y x = x ) ;
	step 3 : wff = thm hbequid () |- ( x = x -> A. y x = x ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. A. y x = x -> -. x = x ) ;
	step 5 : wff = axm ax-gen (step 4) |- A. y ( -. A. y x = x -> -. x = x ) ;
	step 6 : wff = axm ax-5 () |- ( A. y ( -. A. y x = x -> -. x = x ) -> ( A. y -. A. y x = x -> A. y -. x = x ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- ( A. y -. A. y x = x -> A. y -. x = x ) ;
	step 8 : wff = thm syl (step 2, step 7) |- ( -. A. y x = x -> A. y -. x = x ) ;
	step 9 : wff = thm mt3 (step 1, step 8) |- A. y x = x ;
	qed prop 1 = step 9 ;
}

theorem ax4sp1 (x : set, y : set)  {
	prop 1 : wff = |- ( A. y -. x = x -> -. x = x ) ;
}

proof of ax4sp1 {
	step 1 : wff = thm equidqe () |- -. A. y -. x = x ;
	step 2 : wff = thm pm2_21i (step 1) |- ( A. y -. x = x -> -. x = x ) ;
	qed prop 1 = step 2 ;
}

axiom ax-17 (ph : wff, x : set)  {
	prop 1 : wff = |- ( ph -> A. x ph ) ;
}

theorem ax4 (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ph -> ph ) ;
}

proof of ax4 {
	var y : set;
	step 1 : wff = axm ax-9 () |- -. A. y -. y = x ;
	step 2 : wff = axm ax-17 () |- ( -. ( A. x ph -> ph ) -> A. y -. ( A. x ph -> ph ) ) ;
	step 3 : wff = axm ax-9 () |- -. A. x -. x = y ;
	step 4 : wff = axm ax-17 () |- ( -. y = y -> A. x -. y = y ) ;
	step 5 : wff = axm ax-8 () |- ( x = y -> ( x = y -> y = y ) ) ;
	step 6 : wff = thm pm2_43i (step 5) |- ( x = y -> y = y ) ;
	step 7 : wff = thm con3i (step 6) |- ( -. y = y -> -. x = y ) ;
	step 8 : wff = axm ax-gen (step 7) |- A. x ( -. y = y -> -. x = y ) ;
	step 9 : wff = axm ax-5 () |- ( A. x ( -. y = y -> -. x = y ) -> ( A. x -. y = y -> A. x -. x = y ) ) ;
	step 10 : wff = axm ax-mp (step 8, step 9) |- ( A. x -. y = y -> A. x -. x = y ) ;
	step 11 : wff = thm syl (step 4, step 10) |- ( -. y = y -> A. x -. x = y ) ;
	step 12 : wff = thm mt3 (step 3, step 11) |- y = y ;
	step 13 : wff = axm ax-8 () |- ( y = x -> ( y = y -> x = y ) ) ;
	step 14 : wff = thm mpi (step 12, step 13) |- ( y = x -> x = y ) ;
	step 15 : wff = axm ax-11 () |- ( x = y -> ( A. y -. ph -> A. x ( x = y -> -. ph ) ) ) ;
	step 16 : wff = thm syl (step 14, step 15) |- ( y = x -> ( A. y -. ph -> A. x ( x = y -> -. ph ) ) ) ;
	step 17 : wff = axm ax-17 () |- ( -. ph -> A. y -. ph ) ;
	step 18 : wff = thm syl5 (step 16, step 17) |- ( y = x -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ;
	step 19 : wff = thm con2 () |- ( ( x = y -> -. ph ) -> ( ph -> -. x = y ) ) ;
	step 20 : wff = axm ax-gen (step 19) |- A. x ( ( x = y -> -. ph ) -> ( ph -> -. x = y ) ) ;
	step 21 : wff = axm ax-5 () |- ( A. x ( ( x = y -> -. ph ) -> ( ph -> -. x = y ) ) -> ( A. x ( x = y -> -. ph ) -> A. x ( ph -> -. x = y ) ) ) ;
	step 22 : wff = axm ax-mp (step 20, step 21) |- ( A. x ( x = y -> -. ph ) -> A. x ( ph -> -. x = y ) ) ;
	step 23 : wff = thm syl6 (step 18, step 22) |- ( y = x -> ( -. ph -> A. x ( ph -> -. x = y ) ) ) ;
	step 24 : wff = axm ax-5 () |- ( A. x ( ph -> -. x = y ) -> ( A. x ph -> A. x -. x = y ) ) ;
	step 25 : wff = thm syl6 (step 23, step 24) |- ( y = x -> ( -. ph -> ( A. x ph -> A. x -. x = y ) ) ) ;
	step 26 : wff = axm ax-9 () |- -. A. x -. x = y ;
	step 27 : wff = thm con3 () |- ( ( A. x ph -> A. x -. x = y ) -> ( -. A. x -. x = y -> -. A. x ph ) ) ;
	step 28 : wff = thm mpi (step 26, step 27) |- ( ( A. x ph -> A. x -. x = y ) -> -. A. x ph ) ;
	step 29 : wff = thm syl6 (step 25, step 28) |- ( y = x -> ( -. ph -> -. A. x ph ) ) ;
	step 30 : wff = thm con4d (step 29) |- ( y = x -> ( A. x ph -> ph ) ) ;
	step 31 : wff = thm con3i (step 30) |- ( -. ( A. x ph -> ph ) -> -. y = x ) ;
	step 32 : wff = axm ax-gen (step 31) |- A. y ( -. ( A. x ph -> ph ) -> -. y = x ) ;
	step 33 : wff = axm ax-5 () |- ( A. y ( -. ( A. x ph -> ph ) -> -. y = x ) -> ( A. y -. ( A. x ph -> ph ) -> A. y -. y = x ) ) ;
	step 34 : wff = axm ax-mp (step 32, step 33) |- ( A. y -. ( A. x ph -> ph ) -> A. y -. y = x ) ;
	step 35 : wff = thm syl (step 2, step 34) |- ( -. ( A. x ph -> ph ) -> A. y -. y = x ) ;
	step 36 : wff = thm mt3 (step 1, step 35) |- ( A. x ph -> ph ) ;
	qed prop 1 = step 36 ;
}

axiom ax-4 (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ph -> ph ) ;
}

theorem ax5o (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
}

proof of ax5o {
	step 1 : wff = axm ax-5 () |- ( A. x ( A. x ph -> ps ) -> ( A. x A. x ph -> A. x ps ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x -. A. x ph -> -. A. x ph ) ;
	step 3 : wff = thm con2i (step 2) |- ( A. x ph -> -. A. x -. A. x ph ) ;
	step 4 : wff = axm ax-6 () |- ( -. A. x -. A. x ph -> A. x -. A. x -. A. x ph ) ;
	step 5 : wff = axm ax-6 () |- ( -. A. x ph -> A. x -. A. x ph ) ;
	step 6 : wff = thm con1i (step 5) |- ( -. A. x -. A. x ph -> A. x ph ) ;
	step 7 : wff = axm ax-gen (step 6) |- A. x ( -. A. x -. A. x ph -> A. x ph ) ;
	step 8 : wff = axm ax-5 () |- ( A. x ( -. A. x -. A. x ph -> A. x ph ) -> ( A. x -. A. x -. A. x ph -> A. x A. x ph ) ) ;
	step 9 : wff = axm ax-mp (step 7, step 8) |- ( A. x -. A. x -. A. x ph -> A. x A. x ph ) ;
	step 10 : wff = thm 3syl (step 3, step 4, step 9) |- ( A. x ph -> A. x A. x ph ) ;
	step 11 : wff = thm syl5 (step 1, step 10) |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	qed prop 1 = step 11 ;
}

axiom ax-5o (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
}

theorem ax5 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
}

proof of ax5 {
	step 1 : wff = axm ax-4 () |- ( A. x ( ph -> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A. x ( ph -> ps ) -> ( A. x ph -> ps ) ) ;
	step 4 : wff = axm ax-gen (step 3) |- A. x ( A. x ( ph -> ps ) -> ( A. x ph -> ps ) ) ;
	step 5 : wff = axm ax-5o () |- ( A. x ( A. x ( ph -> ps ) -> ( A. x ph -> ps ) ) -> ( A. x ( ph -> ps ) -> A. x ( A. x ph -> ps ) ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( A. x ( ph -> ps ) -> A. x ( A. x ph -> ps ) ) ;
	step 7 : wff = axm ax-5o () |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	step 8 : wff = thm syl (step 6, step 7) |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem ax6o (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x -. A. x ph -> ph ) ;
}

proof of ax6o {
	step 1 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 2 : wff = axm ax-6 () |- ( -. A. x ph -> A. x -. A. x ph ) ;
	step 3 : wff = thm nsyl4 (step 1, step 2) |- ( -. A. x -. A. x ph -> ph ) ;
	qed prop 1 = step 3 ;
}

axiom ax-6o (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x -. A. x ph -> ph ) ;
}

theorem ax6 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x ph -> A. x -. A. x ph ) ;
}

proof of ax6 {
	step 1 : wff = axm ax-4 () |- ( A. x -. A. x A. x ph -> -. A. x A. x ph ) ;
	step 2 : wff = thm id () |- ( A. x ph -> A. x ph ) ;
	step 3 : wff = axm ax-gen (step 2) |- A. x ( A. x ph -> A. x ph ) ;
	step 4 : wff = axm ax-5o () |- ( A. x ( A. x ph -> A. x ph ) -> ( A. x ph -> A. x A. x ph ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( A. x ph -> A. x A. x ph ) ;
	step 6 : wff = thm nsyl (step 1, step 5) |- ( A. x -. A. x A. x ph -> -. A. x ph ) ;
	step 7 : wff = axm ax-gen (step 6) |- A. x ( A. x -. A. x A. x ph -> -. A. x ph ) ;
	step 8 : wff = axm ax-5o () |- ( A. x ( A. x -. A. x A. x ph -> -. A. x ph ) -> ( A. x -. A. x A. x ph -> A. x -. A. x ph ) ) ;
	step 9 : wff = axm ax-mp (step 7, step 8) |- ( A. x -. A. x A. x ph -> A. x -. A. x ph ) ;
	step 10 : wff = axm ax-6o () |- ( -. A. x -. A. x A. x ph -> A. x ph ) ;
	step 11 : wff = thm nsyl4 (step 9, step 10) |- ( -. A. x ph -> A. x -. A. x ph ) ;
	qed prop 1 = step 11 ;
}

constant {
	symbol E. ;
}

rule wex (ph : wff, x : set) {
	term : wff = # E. x ph ;
}

definition df-ex (ph : wff, x : set)  {
	defiendum : wff = # E. x ph ;
	definiens : wff = # -. A. x -. ph ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem a4i (ph : wff, x : set)  {
	hyp 1 : wff = |- A. x ph ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of a4i {
	step 1 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem gen2 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- A. x A. y ph ;
}

proof of gen2 {
	step 1 : wff = axm ax-gen (hyp 1) |- A. y ph ;
	step 2 : wff = axm ax-gen (step 1) |- A. x A. y ph ;
	qed prop 1 = step 2 ;
}

theorem a4s (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of a4s {
	step 1 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem a4sd (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x ps -> ch ) ) ;
}

proof of a4sd {
	step 1 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 2 : wff = thm syl5 (hyp 1, step 1) |- ( ph -> ( A. x ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem mpg (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( A. x ph -> ps ) ;
	hyp 2 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of mpg {
	step 1 : wff = axm ax-gen (hyp 2) |- A. x ph ;
	step 2 : wff = axm ax-mp (step 1, hyp 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem mpgbi (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( A. x ph <-> ps ) ;
	hyp 2 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of mpgbi {
	step 1 : wff = axm ax-gen (hyp 2) |- A. x ph ;
	step 2 : wff = thm mpbi (step 1, hyp 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem mpgbir (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph <-> A. x ps ) ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of mpgbir {
	step 1 : wff = axm ax-gen (hyp 2) |- A. x ps ;
	step 2 : wff = thm mpbir (step 1, hyp 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem a5i (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( A. x ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> A. x ps ) ;
}

proof of a5i {
	step 1 : wff = axm ax-5o () |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( A. x ph -> A. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem a6e (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x A. x ph -> ph ) ;
}

proof of a6e {
	step 1 : wff = def df-ex () |- ( E. x A. x ph <-> -. A. x -. A. x ph ) ;
	step 2 : wff = axm ax-6o () |- ( -. A. x -. A. x ph -> ph ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( E. x A. x ph -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem a7s (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( A. x A. y ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. y A. x ph -> ps ) ;
}

proof of a7s {
	step 1 : wff = axm ax-7 () |- ( A. y A. x ph -> A. x A. y ph ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( A. y A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_20i (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> A. x ps ) ;
}

proof of 19_20i {
	step 1 : wff = thm a4s (hyp 1) |- ( A. x ph -> ps ) ;
	step 2 : wff = thm a5i (step 1) |- ( A. x ph -> A. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_20i2 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ph -> A. x A. y ps ) ;
}

proof of 19_20i2 {
	step 1 : wff = thm 19_20i (hyp 1) |- ( A. y ph -> A. y ps ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x A. y ph -> A. x A. y ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_20 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
}

proof of 19_20 {
	step 1 : wff = thm id () |- ( ( ph -> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm a4sd (step 1) |- ( ( ph -> ps ) -> ( A. x ph -> ps ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x ( ph -> ps ) -> A. x ( A. x ph -> ps ) ) ;
	step 4 : wff = axm ax-5o () |- ( A. x ( A. x ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem 19_20ii (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ( A. x ps -> A. x ch ) ) ;
}

proof of 19_20ii {
	step 1 : wff = thm 19_20i (hyp 1) |- ( A. x ph -> A. x ( ps -> ch ) ) ;
	step 2 : wff = thm 19_20 () |- ( A. x ( ps -> ch ) -> ( A. x ps -> A. x ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A. x ph -> ( A. x ps -> A. x ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_20d (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x ps -> A. x ch ) ) ;
}

proof of 19_20d {
	step 1 : wff = thm 19_20ii (hyp 2) |- ( A. x ph -> ( A. x ps -> A. x ch ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A. x ps -> A. x ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_15 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) ;
}

proof of 19_15 {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm 19_20ii (step 1) |- ( A. x ( ph <-> ps ) -> ( A. x ph -> A. x ps ) ) ;
	step 3 : wff = thm bi2 () |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
	step 4 : wff = thm 19_20ii (step 3) |- ( A. x ( ph <-> ps ) -> ( A. x ps -> A. x ph ) ) ;
	step 5 : wff = thm impbid (step 2, step 4) |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem 19_21ai (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x ps ) ;
}

proof of 19_21ai {
	step 1 : wff = thm 19_20i (hyp 2) |- ( A. x ph -> A. x ps ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> A. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem albii (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph <-> A. x ps ) ;
}

proof of albii {
	step 1 : wff = thm 19_15 () |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( A. x ph <-> A. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 2albii (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ph <-> A. x A. y ps ) ;
}

proof of 2albii {
	step 1 : wff = thm albii (hyp 1) |- ( A. y ph <-> A. y ps ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x A. y ph <-> A. x A. y ps ) ;
	qed prop 1 = step 2 ;
}

theorem hbth (ph : wff, x : set)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x ph ) ;
}

proof of hbth {
	step 1 : wff = axm ax-gen (hyp 1) |- A. x ph ;
	step 2 : wff = thm a1i (step 1) |- ( ph -> A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem hbnt (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) ;
}

proof of hbnt {
	step 1 : wff = thm con3 () |- ( ( ph -> A. x ph ) -> ( -. A. x ph -> -. ph ) ) ;
	step 2 : wff = thm 19_20ii (step 1) |- ( A. x ( ph -> A. x ph ) -> ( A. x -. A. x ph -> A. x -. ph ) ) ;
	step 3 : wff = axm ax-6o () |- ( -. A. x -. A. x ph -> ph ) ;
	step 4 : wff = thm con1i (step 3) |- ( -. ph -> A. x -. A. x ph ) ;
	step 5 : wff = thm syl5 (step 2, step 4) |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem hba1 (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ph -> A. x A. x ph ) ;
}

proof of hba1 {
	step 1 : wff = thm id () |- ( A. x ph -> A. x ph ) ;
	step 2 : wff = thm a5i (step 1) |- ( A. x ph -> A. x A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem hbn (ph : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph -> A. x -. ph ) ;
}

proof of hbn {
	step 1 : wff = thm hbnt () |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( -. ph -> A. x -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem hbal (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. y ph -> A. x A. y ph ) ;
}

proof of hbal {
	step 1 : wff = thm 19_20i (hyp 1) |- ( A. y ph -> A. y A. x ph ) ;
	step 2 : wff = axm ax-7 () |- ( A. y A. x ph -> A. x A. y ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A. y ph -> A. x A. y ph ) ;
	qed prop 1 = step 3 ;
}

theorem hbex (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. y ph -> A. x E. y ph ) ;
}

proof of hbex {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 2 : wff = thm hbal (step 1) |- ( A. y -. ph -> A. x A. y -. ph ) ;
	step 3 : wff = thm hbn (step 2) |- ( -. A. y -. ph -> A. x -. A. y -. ph ) ;
	step 4 : wff = def df-ex () |- ( E. y ph <-> -. A. y -. ph ) ;
	step 5 : wff = def df-ex () |- ( E. y ph <-> -. A. y -. ph ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x E. y ph <-> A. x -. A. y -. ph ) ;
	step 7 : wff = thm 3imtr4i (step 3, step 4, step 6) |- ( E. y ph -> A. x E. y ph ) ;
	qed prop 1 = step 7 ;
}

theorem hbim (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) ;
}

proof of hbim {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 2 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 3 : wff = thm 19_21ai (step 1, step 2) |- ( -. ph -> A. x ( ph -> ps ) ) ;
	step 4 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 5 : wff = thm 19_21ai (hyp 2, step 4) |- ( ps -> A. x ( ph -> ps ) ) ;
	step 6 : wff = thm ja (step 3, step 5) |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem hbor (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ps ) -> A. x ( ph \/ ps ) ) ;
}

proof of hbor {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 2 : wff = thm hbim (step 1, hyp 2) |- ( ( -. ph -> ps ) -> A. x ( -. ph -> ps ) ) ;
	step 3 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 4 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( ph \/ ps ) <-> A. x ( -. ph -> ps ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( ( ph \/ ps ) -> A. x ( ph \/ ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem hban (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) ;
}

proof of hban {
	step 1 : wff = thm hbn (hyp 2) |- ( -. ps -> A. x -. ps ) ;
	step 2 : wff = thm hbim (hyp 1, step 1) |- ( ( ph -> -. ps ) -> A. x ( ph -> -. ps ) ) ;
	step 3 : wff = thm hbn (step 2) |- ( -. ( ph -> -. ps ) -> A. x -. ( ph -> -. ps ) ) ;
	step 4 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 5 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x ( ph /\ ps ) <-> A. x -. ( ph -> -. ps ) ) ;
	step 7 : wff = thm 3imtr4i (step 3, step 4, step 6) |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem hbbi (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph <-> ps ) -> A. x ( ph <-> ps ) ) ;
}

proof of hbbi {
	step 1 : wff = thm hbim (hyp 1, hyp 2) |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) ;
	step 2 : wff = thm hbim (hyp 2, hyp 1) |- ( ( ps -> ph ) -> A. x ( ps -> ph ) ) ;
	step 3 : wff = thm hban (step 1, step 2) |- ( ( ( ph -> ps ) /\ ( ps -> ph ) ) -> A. x ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 4 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 5 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x ( ph <-> ps ) <-> A. x ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 7 : wff = thm 3imtr4i (step 3, step 4, step 6) |- ( ( ph <-> ps ) -> A. x ( ph <-> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem hb3or (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( ch -> A. x ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph \/ ps \/ ch ) -> A. x ( ph \/ ps \/ ch ) ) ;
}

proof of hb3or {
	step 1 : wff = thm hbor (hyp 1, hyp 2) |- ( ( ph \/ ps ) -> A. x ( ph \/ ps ) ) ;
	step 2 : wff = thm hbor (step 1, hyp 3) |- ( ( ( ph \/ ps ) \/ ch ) -> A. x ( ( ph \/ ps ) \/ ch ) ) ;
	step 3 : wff = def df-3or () |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) ;
	step 4 : wff = def df-3or () |- ( ( ph \/ ps \/ ch ) <-> ( ( ph \/ ps ) \/ ch ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( ph \/ ps \/ ch ) <-> A. x ( ( ph \/ ps ) \/ ch ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( ( ph \/ ps \/ ch ) -> A. x ( ph \/ ps \/ ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem hb3an (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( ch -> A. x ch ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> A. x ( ph /\ ps /\ ch ) ) ;
}

proof of hb3an {
	step 1 : wff = thm hban (hyp 1, hyp 2) |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) ;
	step 2 : wff = thm hban (step 1, hyp 3) |- ( ( ( ph /\ ps ) /\ ch ) -> A. x ( ( ph /\ ps ) /\ ch ) ) ;
	step 3 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 4 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( ph /\ ps /\ ch ) <-> A. x ( ( ph /\ ps ) /\ ch ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( ( ph /\ ps /\ ch ) -> A. x ( ph /\ ps /\ ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem hba2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. y A. x ph -> A. x A. y A. x ph ) ;
}

proof of hba2 {
	step 1 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 2 : wff = thm hbal (step 1) |- ( A. y A. x ph -> A. x A. y A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem hbia1 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( A. x ph -> A. x ps ) -> A. x ( A. x ph -> A. x ps ) ) ;
}

proof of hbia1 {
	step 1 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 2 : wff = thm hba1 () |- ( A. x ps -> A. x A. x ps ) ;
	step 3 : wff = thm hbim (step 1, step 2) |- ( ( A. x ph -> A. x ps ) -> A. x ( A. x ph -> A. x ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem hbn1 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x ph -> A. x -. A. x ph ) ;
}

proof of hbn1 {
	step 1 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 2 : wff = thm hbn (step 1) |- ( -. A. x ph -> A. x -. A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem hbe1 (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x ph -> A. x E. x ph ) ;
}

proof of hbe1 {
	step 1 : wff = thm hbn1 () |- ( -. A. x -. ph -> A. x -. A. x -. ph ) ;
	step 2 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 3 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x E. x ph <-> A. x -. A. x -. ph ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( E. x ph -> A. x E. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem ax46 (ph : wff, x : set)  {
	prop 1 : wff = |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) ;
}

proof of ax46 {
	step 1 : wff = axm ax-6o () |- ( -. A. x -. A. x ph -> ph ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 3 : wff = thm ja (step 1, step 2) |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem ax46to4 (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ph -> ph ) ;
}

proof of ax46to4 {
	step 1 : wff = axm ax-1 () |- ( A. x ph -> ( A. x -. A. x ph -> A. x ph ) ) ;
	step 2 : wff = thm ax46 () |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A. x ph -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem ax46to6 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x -. A. x ph -> ph ) ;
}

proof of ax46to6 {
	step 1 : wff = thm pm2_21 () |- ( -. A. x -. A. x ph -> ( A. x -. A. x ph -> A. x ph ) ) ;
	step 2 : wff = thm ax46 () |- ( ( A. x -. A. x ph -> A. x ph ) -> ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( -. A. x -. A. x ph -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem ax67 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x -. A. y A. x ph -> A. y ph ) ;
}

proof of ax67 {
	step 1 : wff = axm ax-7 () |- ( A. y A. x ph -> A. x A. y ph ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. A. x A. y ph -> -. A. y A. x ph ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x -. A. x A. y ph -> A. x -. A. y A. x ph ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. A. x -. A. y A. x ph -> -. A. x -. A. x A. y ph ) ;
	step 5 : wff = axm ax-6o () |- ( -. A. x -. A. x A. y ph -> A. y ph ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( -. A. x -. A. y A. x ph -> A. y ph ) ;
	qed prop 1 = step 6 ;
}

theorem ax67to6 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x -. A. x ph -> ph ) ;
}

proof of ax67to6 {
	step 1 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 2 : wff = thm con3i (step 1) |- ( -. A. x A. x ph -> -. A. x ph ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x -. A. x A. x ph -> A. x -. A. x ph ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. A. x -. A. x ph -> -. A. x -. A. x A. x ph ) ;
	step 5 : wff = thm ax67 () |- ( -. A. x -. A. x A. x ph -> A. x ph ) ;
	step 6 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 7 : wff = thm 3syl (step 4, step 5, step 6) |- ( -. A. x -. A. x ph -> ph ) ;
	qed prop 1 = step 7 ;
}

theorem ax67to7 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ph -> A. y A. x ph ) ;
}

proof of ax67to7 {
	step 1 : wff = thm ax67to6 () |- ( -. A. y -. A. y -. A. x A. y ph -> -. A. x A. y ph ) ;
	step 2 : wff = thm con4i (step 1) |- ( A. x A. y ph -> A. y -. A. y -. A. x A. y ph ) ;
	step 3 : wff = thm ax67 () |- ( -. A. y -. A. x A. y ph -> A. x ph ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. y -. A. y -. A. x A. y ph -> A. y A. x ph ) ;
	step 5 : wff = thm syl (step 2, step 4) |- ( A. x A. y ph -> A. y A. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem ax467 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( A. x A. y -. A. x A. y ph -> A. x ph ) -> ph ) ;
}

proof of ax467 {
	step 1 : wff = axm ax-4 () |- ( A. y ph -> ph ) ;
	step 2 : wff = thm hbn1 () |- ( -. A. y ph -> A. y -. A. y ph ) ;
	step 3 : wff = axm ax-6o () |- ( -. A. x -. A. x A. y ph -> A. y ph ) ;
	step 4 : wff = thm con1i (step 3) |- ( -. A. y ph -> A. x -. A. x A. y ph ) ;
	step 5 : wff = thm 19_20i (step 4) |- ( A. y -. A. y ph -> A. y A. x -. A. x A. y ph ) ;
	step 6 : wff = axm ax-7 () |- ( A. y A. x -. A. x A. y ph -> A. x A. y -. A. x A. y ph ) ;
	step 7 : wff = thm 3syl (step 2, step 5, step 6) |- ( -. A. y ph -> A. x A. y -. A. x A. y ph ) ;
	step 8 : wff = thm nsyl4 (step 1, step 7) |- ( -. A. x A. y -. A. x A. y ph -> ph ) ;
	step 9 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 10 : wff = thm ja (step 8, step 9) |- ( ( A. x A. y -. A. x A. y ph -> A. x ph ) -> ph ) ;
	qed prop 1 = step 10 ;
}

theorem ax467to4 (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ph -> ph ) ;
}

proof of ax467to4 {
	step 1 : wff = axm ax-1 () |- ( A. x ph -> ( A. x A. x -. A. x A. x ph -> A. x ph ) ) ;
	step 2 : wff = thm ax467 () |- ( ( A. x A. x -. A. x A. x ph -> A. x ph ) -> ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A. x ph -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem ax467to6 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x -. A. x ph -> ph ) ;
}

proof of ax467to6 {
	step 1 : wff = thm ax467to4 () |- ( A. x A. x -. A. x A. x ph -> A. x -. A. x A. x ph ) ;
	step 2 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 3 : wff = thm con3i (step 2) |- ( -. A. x A. x ph -> -. A. x ph ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x -. A. x A. x ph -> A. x -. A. x ph ) ;
	step 5 : wff = thm syl (step 1, step 4) |- ( A. x A. x -. A. x A. x ph -> A. x -. A. x ph ) ;
	step 6 : wff = thm con3i (step 5) |- ( -. A. x -. A. x ph -> -. A. x A. x -. A. x A. x ph ) ;
	step 7 : wff = thm pm2_21 () |- ( -. A. x A. x -. A. x A. x ph -> ( A. x A. x -. A. x A. x ph -> A. x ph ) ) ;
	step 8 : wff = thm ax467 () |- ( ( A. x A. x -. A. x A. x ph -> A. x ph ) -> ph ) ;
	step 9 : wff = thm 3syl (step 6, step 7, step 8) |- ( -. A. x -. A. x ph -> ph ) ;
	qed prop 1 = step 9 ;
}

theorem ax467to7 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ph -> A. y A. x ph ) ;
}

proof of ax467to7 {
	step 1 : wff = thm ax467to6 () |- ( -. A. y -. A. y -. A. x A. y ph -> -. A. x A. y ph ) ;
	step 2 : wff = thm con4i (step 1) |- ( A. x A. y ph -> A. y -. A. y -. A. x A. y ph ) ;
	step 3 : wff = thm pm2_21 () |- ( -. A. x A. y -. A. x A. y ph -> ( A. x A. y -. A. x A. y ph -> A. x ph ) ) ;
	step 4 : wff = thm ax467 () |- ( ( A. x A. y -. A. x A. y ph -> A. x ph ) -> ph ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( -. A. x A. y -. A. x A. y ph -> ph ) ;
	step 6 : wff = thm 19_20i (step 5) |- ( A. x -. A. x A. y -. A. x A. y ph -> A. x ph ) ;
	step 7 : wff = thm ax467to6 () |- ( -. A. x -. A. x A. y -. A. x A. y ph -> A. y -. A. x A. y ph ) ;
	step 8 : wff = thm nsyl4 (step 6, step 7) |- ( -. A. y -. A. x A. y ph -> A. x ph ) ;
	step 9 : wff = thm 19_20i (step 8) |- ( A. y -. A. y -. A. x A. y ph -> A. y A. x ph ) ;
	step 10 : wff = thm syl (step 2, step 9) |- ( A. x A. y ph -> A. y A. x ph ) ;
	qed prop 1 = step 10 ;
}

theorem modal-5 (ph : wff, x : set)  {
	prop 1 : wff = |- ( -. A. x -. ph -> A. x -. A. x -. ph ) ;
}

proof of modal-5 {
	step 1 : wff = thm hbn1 () |- ( -. A. x -. ph -> A. x -. A. x -. ph ) ;
	qed prop 1 = step 1 ;
}

theorem modal-b (ph : wff, x : set)  {
	prop 1 : wff = |- ( ph -> A. x -. A. x -. ph ) ;
}

proof of modal-b {
	step 1 : wff = axm ax-6o () |- ( -. A. x -. A. x -. ph -> -. ph ) ;
	step 2 : wff = thm con4i (step 1) |- ( ph -> A. x -. A. x -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem 19_8a (ph : wff, x : set)  {
	prop 1 : wff = |- ( ph -> E. x ph ) ;
}

proof of 19_8a {
	step 1 : wff = axm ax-4 () |- ( A. x -. ph -> -. ph ) ;
	step 2 : wff = thm con2i (step 1) |- ( ph -> -. A. x -. ph ) ;
	step 3 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( ph -> E. x ph ) ;
	qed prop 1 = step 4 ;
}

theorem 19_2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ph -> E. y ph ) ;
}

proof of 19_2 {
	step 1 : wff = thm 19_8a () |- ( ph -> E. y ph ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. x ph -> E. y ph ) ;
	qed prop 1 = step 2 ;
}

theorem 19_3 (ph : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph <-> ph ) ;
}

proof of 19_3 {
	step 1 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 2 : wff = thm impbii (step 1, hyp 1) |- ( A. x ph <-> ph ) ;
	qed prop 1 = step 2 ;
}

theorem alcom (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ph <-> A. y A. x ph ) ;
}

proof of alcom {
	step 1 : wff = axm ax-7 () |- ( A. x A. y ph -> A. y A. x ph ) ;
	step 2 : wff = axm ax-7 () |- ( A. y A. x ph -> A. x A. y ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( A. x A. y ph <-> A. y A. x ph ) ;
	qed prop 1 = step 3 ;
}

theorem alnex (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x -. ph <-> -. E. x ph ) ;
}

proof of alnex {
	step 1 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 2 : wff = thm con2bii (step 1) |- ( A. x -. ph <-> -. E. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem alex (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ph <-> -. E. x -. ph ) ;
}

proof of alex {
	step 1 : wff = thm notnot () |- ( ph <-> -. -. ph ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ph <-> A. x -. -. ph ) ;
	step 3 : wff = thm alnex () |- ( A. x -. -. ph <-> -. E. x -. ph ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x ph <-> -. E. x -. ph ) ;
	qed prop 1 = step 4 ;
}

theorem 19_9t (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) ;
}

proof of 19_9t {
	step 1 : wff = thm hbnt () |- ( A. x ( ph -> A. x ph ) -> ( -. ph -> A. x -. ph ) ) ;
	step 2 : wff = thm con1d (step 1) |- ( A. x ( ph -> A. x ph ) -> ( -. A. x -. ph -> ph ) ) ;
	step 3 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 4 : wff = thm syl5ib (step 2, step 3) |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_9 (ph : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph <-> ph ) ;
}

proof of 19_9 {
	step 1 : wff = thm 19_9t () |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( E. x ph -> ph ) ;
	step 3 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 4 : wff = thm impbii (step 2, step 3) |- ( E. x ph <-> ph ) ;
	qed prop 1 = step 4 ;
}

theorem 19_9d (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( ps -> ( ph -> A. x ph ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> ( E. x ph -> ph ) ) ;
}

proof of 19_9d {
	step 1 : wff = thm 19_20i (hyp 2) |- ( A. x ps -> A. x ( ph -> A. x ph ) ) ;
	step 2 : wff = thm 19_9t () |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) ;
	step 3 : wff = thm 3syl (hyp 1, step 1, step 2) |- ( ps -> ( E. x ph -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem exnal (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x -. ph <-> -. A. x ph ) ;
}

proof of exnal {
	step 1 : wff = thm alex () |- ( A. x ph <-> -. E. x -. ph ) ;
	step 2 : wff = thm con2bii (step 1) |- ( E. x -. ph <-> -. A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem 19_22 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) ;
}

proof of 19_22 {
	step 1 : wff = thm con3 () |- ( ( ph -> ps ) -> ( -. ps -> -. ph ) ) ;
	step 2 : wff = thm 19_20ii (step 1) |- ( A. x ( ph -> ps ) -> ( A. x -. ps -> A. x -. ph ) ) ;
	step 3 : wff = thm con3d (step 2) |- ( A. x ( ph -> ps ) -> ( -. A. x -. ph -> -. A. x -. ps ) ) ;
	step 4 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 5 : wff = def df-ex () |- ( E. x ps <-> -. A. x -. ps ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem 19_22i (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph -> E. x ps ) ;
}

proof of 19_22i {
	step 1 : wff = thm 19_22 () |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( E. x ph -> E. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_22i2 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ph -> E. x E. y ps ) ;
}

proof of 19_22i2 {
	step 1 : wff = thm 19_22i (hyp 1) |- ( E. y ph -> E. y ps ) ;
	step 2 : wff = thm 19_22i (step 1) |- ( E. x E. y ph -> E. x E. y ps ) ;
	qed prop 1 = step 2 ;
}

theorem alinexa (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> -. ps ) <-> -. E. x ( ph /\ ps ) ) ;
}

proof of alinexa {
	step 1 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( ph -> -. ps ) <-> A. x -. ( ph /\ ps ) ) ;
	step 3 : wff = thm alnex () |- ( A. x -. ( ph /\ ps ) <-> -. E. x ( ph /\ ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x ( ph -> -. ps ) <-> -. E. x ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem exanali (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) ;
}

proof of exanali {
	step 1 : wff = thm iman () |- ( ( ph -> ps ) <-> -. ( ph /\ -. ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( ph -> ps ) <-> A. x -. ( ph /\ -. ps ) ) ;
	step 3 : wff = thm alnex () |- ( A. x -. ( ph /\ -. ps ) <-> -. E. x ( ph /\ -. ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x ( ph -> ps ) <-> -. E. x ( ph /\ -. ps ) ) ;
	step 5 : wff = thm con2bii (step 4) |- ( E. x ( ph /\ -. ps ) <-> -. A. x ( ph -> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem alexn (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x E. y -. ph <-> -. E. x A. y ph ) ;
}

proof of alexn {
	step 1 : wff = thm exnal () |- ( E. y -. ph <-> -. A. y ph ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x E. y -. ph <-> A. x -. A. y ph ) ;
	step 3 : wff = thm alnex () |- ( A. x -. A. y ph <-> -. E. x A. y ph ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x E. y -. ph <-> -. E. x A. y ph ) ;
	qed prop 1 = step 4 ;
}

theorem excomim (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x E. y ph -> E. y E. x ph ) ;
}

proof of excomim {
	step 1 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 2 : wff = thm 19_22i2 (step 1) |- ( E. x E. y ph -> E. x E. y E. x ph ) ;
	step 3 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 4 : wff = thm hbex (step 3) |- ( E. y E. x ph -> A. x E. y E. x ph ) ;
	step 5 : wff = thm 19_9 (step 4) |- ( E. x E. y E. x ph <-> E. y E. x ph ) ;
	step 6 : wff = thm sylib (step 2, step 5) |- ( E. x E. y ph -> E. y E. x ph ) ;
	qed prop 1 = step 6 ;
}

theorem excom (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x E. y ph <-> E. y E. x ph ) ;
}

proof of excom {
	step 1 : wff = thm excomim () |- ( E. x E. y ph -> E. y E. x ph ) ;
	step 2 : wff = thm excomim () |- ( E. y E. x ph -> E. x E. y ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( E. x E. y ph <-> E. y E. x ph ) ;
	qed prop 1 = step 3 ;
}

theorem 19_12 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x A. y ph -> A. y E. x ph ) ;
}

proof of 19_12 {
	step 1 : wff = thm hba1 () |- ( A. y ph -> A. y A. y ph ) ;
	step 2 : wff = thm hbex (step 1) |- ( E. x A. y ph -> A. y E. x A. y ph ) ;
	step 3 : wff = axm ax-4 () |- ( A. y ph -> ph ) ;
	step 4 : wff = thm 19_22i (step 3) |- ( E. x A. y ph -> E. x ph ) ;
	step 5 : wff = thm 19_21ai (step 2, step 4) |- ( E. x A. y ph -> A. y E. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem 19_16 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph <-> ps ) -> ( ph <-> A. x ps ) ) ;
}

proof of 19_16 {
	step 1 : wff = thm 19_15 () |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) ;
	step 2 : wff = thm 19_3 (hyp 1) |- ( A. x ph <-> ph ) ;
	step 3 : wff = thm syl5bbr (step 1, step 2) |- ( A. x ( ph <-> ps ) -> ( ph <-> A. x ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_17 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> ps ) ) ;
}

proof of 19_17 {
	step 1 : wff = thm 19_15 () |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> A. x ps ) ) ;
	step 2 : wff = thm 19_3 (hyp 1) |- ( A. x ps <-> ps ) ;
	step 3 : wff = thm syl6bb (step 1, step 2) |- ( A. x ( ph <-> ps ) -> ( A. x ph <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_18 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) ;
}

proof of 19_18 {
	step 1 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ( ph <-> ps ) -> A. x ( ph -> ps ) ) ;
	step 3 : wff = thm 19_22 () |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) ;
	step 4 : wff = thm syl (step 2, step 3) |- ( A. x ( ph <-> ps ) -> ( E. x ph -> E. x ps ) ) ;
	step 5 : wff = thm bi2 () |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
	step 6 : wff = thm 19_20i (step 5) |- ( A. x ( ph <-> ps ) -> A. x ( ps -> ph ) ) ;
	step 7 : wff = thm 19_22 () |- ( A. x ( ps -> ph ) -> ( E. x ps -> E. x ph ) ) ;
	step 8 : wff = thm syl (step 6, step 7) |- ( A. x ( ph <-> ps ) -> ( E. x ps -> E. x ph ) ) ;
	step 9 : wff = thm impbid (step 4, step 8) |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem exbii (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph <-> E. x ps ) ;
}

proof of exbii {
	step 1 : wff = thm 19_18 () |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( E. x ph <-> E. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 2exbii (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ph <-> E. x E. y ps ) ;
}

proof of 2exbii {
	step 1 : wff = thm exbii (hyp 1) |- ( E. y ph <-> E. y ps ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y ph <-> E. x E. y ps ) ;
	qed prop 1 = step 2 ;
}

theorem 3exbii (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y E. z ph <-> E. x E. y E. z ps ) ;
}

proof of 3exbii {
	step 1 : wff = thm exbii (hyp 1) |- ( E. z ph <-> E. z ps ) ;
	step 2 : wff = thm 2exbii (step 1) |- ( E. x E. y E. z ph <-> E. x E. y E. z ps ) ;
	qed prop 1 = step 2 ;
}

theorem exancom (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) ;
}

proof of exancom {
	step 1 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_19 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph <-> ps ) -> ( ph <-> E. x ps ) ) ;
}

proof of 19_19 {
	step 1 : wff = thm 19_18 () |- ( A. x ( ph <-> ps ) -> ( E. x ph <-> E. x ps ) ) ;
	step 2 : wff = thm 19_9 (hyp 1) |- ( E. x ph <-> ph ) ;
	step 3 : wff = thm syl5bbr (step 1, step 2) |- ( A. x ( ph <-> ps ) -> ( ph <-> E. x ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_21 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
}

proof of 19_21 {
	step 1 : wff = thm 19_20 () |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	step 2 : wff = thm syl5 (step 1, hyp 1) |- ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) ;
	step 3 : wff = thm hba1 () |- ( A. x ps -> A. x A. x ps ) ;
	step 4 : wff = thm hbim (hyp 1, step 3) |- ( ( ph -> A. x ps ) -> A. x ( ph -> A. x ps ) ) ;
	step 5 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 6 : wff = thm imim2i (step 5) |- ( ( ph -> A. x ps ) -> ( ph -> ps ) ) ;
	step 7 : wff = thm 19_21ai (step 4, step 6) |- ( ( ph -> A. x ps ) -> A. x ( ph -> ps ) ) ;
	step 8 : wff = thm impbii (step 2, step 7) |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem 19_21-2 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ( ph -> ps ) <-> ( ph -> A. x A. y ps ) ) ;
}

proof of 19_21-2 {
	step 1 : wff = thm 19_21 (hyp 2) |- ( A. y ( ph -> ps ) <-> ( ph -> A. y ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x A. y ( ph -> ps ) <-> A. x ( ph -> A. y ps ) ) ;
	step 3 : wff = thm 19_21 (hyp 1) |- ( A. x ( ph -> A. y ps ) <-> ( ph -> A. x A. y ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x A. y ( ph -> ps ) <-> ( ph -> A. x A. y ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem stdpc5 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) ;
}

proof of stdpc5 {
	step 1 : wff = thm 19_21 (hyp 1) |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_21ad (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x ch ) ) ;
}

proof of 19_21ad {
	step 1 : wff = thm hban (hyp 1, hyp 2) |- ( ( ph /\ ps ) -> A. x ( ph /\ ps ) ) ;
	step 2 : wff = thm imp (hyp 3) |- ( ( ph /\ ps ) -> ch ) ;
	step 3 : wff = thm 19_21ai (step 1, step 2) |- ( ( ph /\ ps ) -> A. x ch ) ;
	step 4 : wff = thm ex (step 3) |- ( ph -> ( ps -> A. x ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_21bi (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of 19_21bi {
	step 1 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_21bbi (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x A. y ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of 19_21bbi {
	step 1 : wff = thm 19_21bi (hyp 1) |- ( ph -> A. y ps ) ;
	step 2 : wff = thm 19_21bi (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_22d (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps -> E. x ch ) ) ;
}

proof of 19_22d {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps -> ch ) ) ;
	step 2 : wff = thm 19_22 () |- ( A. x ( ps -> ch ) -> ( E. x ps -> E. x ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ( E. x ps -> E. x ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_23 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ;
}

proof of 19_23 {
	step 1 : wff = thm 19_22 () |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ps ) ) ;
	step 2 : wff = thm 19_9 (hyp 1) |- ( E. x ps <-> ps ) ;
	step 3 : wff = thm syl6ib (step 1, step 2) |- ( A. x ( ph -> ps ) -> ( E. x ph -> ps ) ) ;
	step 4 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 5 : wff = thm hbim (step 4, hyp 1) |- ( ( E. x ph -> ps ) -> A. x ( E. x ph -> ps ) ) ;
	step 6 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 7 : wff = thm imim1i (step 6) |- ( ( E. x ph -> ps ) -> ( ph -> ps ) ) ;
	step 8 : wff = thm 19_21ai (step 5, step 7) |- ( ( E. x ph -> ps ) -> A. x ( ph -> ps ) ) ;
	step 9 : wff = thm impbii (step 3, step 8) |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem 19_23ai (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph -> ps ) ;
}

proof of 19_23ai {
	step 1 : wff = thm 19_22i (hyp 2) |- ( E. x ph -> E. x ps ) ;
	step 2 : wff = thm 19_9 (hyp 1) |- ( E. x ps <-> ps ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( E. x ph -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem 19_23bi (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( E. x ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of 19_23bi {
	step 1 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_23ad (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ch -> A. x ch ) ;
	hyp 3 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps -> ch ) ) ;
}

proof of 19_23ad {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 3) |- ( ph -> A. x ( ps -> ch ) ) ;
	step 2 : wff = thm 19_23 (hyp 2) |- ( A. x ( ps -> ch ) <-> ( E. x ps -> ch ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( ph -> ( E. x ps -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_26 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) ;
}

proof of 19_26 {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ( ph /\ ps ) -> A. x ph ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x ( ph /\ ps ) -> A. x ps ) ;
	step 5 : wff = thm jca (step 2, step 4) |- ( A. x ( ph /\ ps ) -> ( A. x ph /\ A. x ps ) ) ;
	step 6 : wff = thm pm3_2 () |- ( ph -> ( ps -> ( ph /\ ps ) ) ) ;
	step 7 : wff = thm 19_20ii (step 6) |- ( A. x ph -> ( A. x ps -> A. x ( ph /\ ps ) ) ) ;
	step 8 : wff = thm imp (step 7) |- ( ( A. x ph /\ A. x ps ) -> A. x ( ph /\ ps ) ) ;
	step 9 : wff = thm impbii (step 5, step 8) |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem 19_26-2 (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ( ph /\ ps ) <-> ( A. x A. y ph /\ A. x A. y ps ) ) ;
}

proof of 19_26-2 {
	step 1 : wff = thm 19_26 () |- ( A. y ( ph /\ ps ) <-> ( A. y ph /\ A. y ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x A. y ( ph /\ ps ) <-> A. x ( A. y ph /\ A. y ps ) ) ;
	step 3 : wff = thm 19_26 () |- ( A. x ( A. y ph /\ A. y ps ) <-> ( A. x A. y ph /\ A. x A. y ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x A. y ( ph /\ ps ) <-> ( A. x A. y ph /\ A. x A. y ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_27 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) ;
}

proof of 19_27 {
	step 1 : wff = thm 19_26 () |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) ;
	step 2 : wff = thm 19_3 (hyp 1) |- ( A. x ps <-> ps ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( A. x ph /\ A. x ps ) <-> ( A. x ph /\ ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_28 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) ;
}

proof of 19_28 {
	step 1 : wff = thm 19_26 () |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ A. x ps ) ) ;
	step 2 : wff = thm 19_3 (hyp 1) |- ( A. x ph <-> ph ) ;
	step 3 : wff = thm anbi1i (step 2) |- ( ( A. x ph /\ A. x ps ) <-> ( ph /\ A. x ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_29 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( A. x ph /\ E. x ps ) -> E. x ( ph /\ ps ) ) ;
}

proof of 19_29 {
	step 1 : wff = thm 19_20 () |- ( A. x ( ph -> -. ps ) -> ( A. x ph -> A. x -. ps ) ) ;
	step 2 : wff = thm alnex () |- ( A. x -. ps <-> -. E. x ps ) ;
	step 3 : wff = thm syl6ib (step 1, step 2) |- ( A. x ( ph -> -. ps ) -> ( A. x ph -> -. E. x ps ) ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. ( A. x ph -> -. E. x ps ) -> -. A. x ( ph -> -. ps ) ) ;
	step 5 : wff = def df-an () |- ( ( A. x ph /\ E. x ps ) <-> -. ( A. x ph -> -. E. x ps ) ) ;
	step 6 : wff = thm exnal () |- ( E. x -. ( ph -> -. ps ) <-> -. A. x ( ph -> -. ps ) ) ;
	step 7 : wff = thm 3imtr4i (step 4, step 5, step 6) |- ( ( A. x ph /\ E. x ps ) -> E. x -. ( ph -> -. ps ) ) ;
	step 8 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 9 : wff = thm exbii (step 8) |- ( E. x ( ph /\ ps ) <-> E. x -. ( ph -> -. ps ) ) ;
	step 10 : wff = thm sylibr (step 7, step 9) |- ( ( A. x ph /\ E. x ps ) -> E. x ( ph /\ ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem 19_29r (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E. x ph /\ A. x ps ) -> E. x ( ph /\ ps ) ) ;
}

proof of 19_29r {
	step 1 : wff = thm 19_29 () |- ( ( A. x ps /\ E. x ph ) -> E. x ( ps /\ ph ) ) ;
	step 2 : wff = thm ancom () |- ( ( E. x ph /\ A. x ps ) <-> ( A. x ps /\ E. x ph ) ) ;
	step 3 : wff = thm exancom () |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) ;
	step 4 : wff = thm 3imtr4i (step 1, step 2, step 3) |- ( ( E. x ph /\ A. x ps ) -> E. x ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_29r2 (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( E. x E. y ph /\ A. x A. y ps ) -> E. x E. y ( ph /\ ps ) ) ;
}

proof of 19_29r2 {
	step 1 : wff = thm 19_29r () |- ( ( E. x E. y ph /\ A. x A. y ps ) -> E. x ( E. y ph /\ A. y ps ) ) ;
	step 2 : wff = thm 19_29r () |- ( ( E. y ph /\ A. y ps ) -> E. y ( ph /\ ps ) ) ;
	step 3 : wff = thm 19_22i (step 2) |- ( E. x ( E. y ph /\ A. y ps ) -> E. x E. y ( ph /\ ps ) ) ;
	step 4 : wff = thm syl (step 1, step 3) |- ( ( E. x E. y ph /\ A. x A. y ps ) -> E. x E. y ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_29x (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( E. x A. y ph /\ A. x E. y ps ) -> E. x E. y ( ph /\ ps ) ) ;
}

proof of 19_29x {
	step 1 : wff = thm 19_29r () |- ( ( E. x A. y ph /\ A. x E. y ps ) -> E. x ( A. y ph /\ E. y ps ) ) ;
	step 2 : wff = thm 19_29 () |- ( ( A. y ph /\ E. y ps ) -> E. y ( ph /\ ps ) ) ;
	step 3 : wff = thm 19_22i (step 2) |- ( E. x ( A. y ph /\ E. y ps ) -> E. x E. y ( ph /\ ps ) ) ;
	step 4 : wff = thm syl (step 1, step 3) |- ( ( E. x A. y ph /\ A. x E. y ps ) -> E. x E. y ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_35 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
}

proof of 19_35 {
	step 1 : wff = thm 19_26 () |- ( A. x ( ph /\ -. ps ) <-> ( A. x ph /\ A. x -. ps ) ) ;
	step 2 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( ph /\ -. ps ) <-> A. x -. ( ph -> ps ) ) ;
	step 4 : wff = def df-an () |- ( ( A. x ph /\ A. x -. ps ) <-> -. ( A. x ph -> -. A. x -. ps ) ) ;
	step 5 : wff = thm 3bitr3i (step 1, step 3, step 4) |- ( A. x -. ( ph -> ps ) <-> -. ( A. x ph -> -. A. x -. ps ) ) ;
	step 6 : wff = thm con2bii (step 5) |- ( ( A. x ph -> -. A. x -. ps ) <-> -. A. x -. ( ph -> ps ) ) ;
	step 7 : wff = def df-ex () |- ( E. x ps <-> -. A. x -. ps ) ;
	step 8 : wff = thm imbi2i (step 7) |- ( ( A. x ph -> E. x ps ) <-> ( A. x ph -> -. A. x -. ps ) ) ;
	step 9 : wff = def df-ex () |- ( E. x ( ph -> ps ) <-> -. A. x -. ( ph -> ps ) ) ;
	step 10 : wff = thm 3bitr4ri (step 6, step 8, step 9) |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem 19_35i (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- E. x ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> E. x ps ) ;
}

proof of 19_35i {
	step 1 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( A. x ph -> E. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_35ri (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( A. x ph -> E. x ps ) ;
	-----------------------
	prop 1 : wff = |- E. x ( ph -> ps ) ;
}

proof of 19_35ri {
	step 1 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- E. x ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_36 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
}

proof of 19_36 {
	step 1 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 2 : wff = thm 19_9 (hyp 1) |- ( E. x ps <-> ps ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( A. x ph -> E. x ps ) <-> ( A. x ph -> ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_36i (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- E. x ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of 19_36i {
	step 1 : wff = thm 19_36 (hyp 1) |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
	step 2 : wff = thm mpbi (hyp 2, step 1) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_37 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) ;
}

proof of 19_37 {
	step 1 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 2 : wff = thm 19_3 (hyp 1) |- ( A. x ph <-> ph ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( A. x ph -> E. x ps ) <-> ( ph -> E. x ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_38 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E. x ph -> A. x ps ) -> A. x ( ph -> ps ) ) ;
}

proof of 19_38 {
	step 1 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 2 : wff = thm hba1 () |- ( A. x ps -> A. x A. x ps ) ;
	step 3 : wff = thm hbim (step 1, step 2) |- ( ( E. x ph -> A. x ps ) -> A. x ( E. x ph -> A. x ps ) ) ;
	step 4 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 5 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 6 : wff = thm imim12i (step 4, step 5) |- ( ( E. x ph -> A. x ps ) -> ( ph -> ps ) ) ;
	step 7 : wff = thm 19_21ai (step 3, step 6) |- ( ( E. x ph -> A. x ps ) -> A. x ( ph -> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem 19_39 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E. x ph -> E. x ps ) -> E. x ( ph -> ps ) ) ;
}

proof of 19_39 {
	step 1 : wff = thm 19_2 () |- ( A. x ph -> E. x ph ) ;
	step 2 : wff = thm imim1i (step 1) |- ( ( E. x ph -> E. x ps ) -> ( A. x ph -> E. x ps ) ) ;
	step 3 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( ( E. x ph -> E. x ps ) -> E. x ( ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_24 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( A. x ph -> A. x ps ) -> E. x ( ph -> ps ) ) ;
}

proof of 19_24 {
	step 1 : wff = thm 19_2 () |- ( A. x ps -> E. x ps ) ;
	step 2 : wff = thm imim2i (step 1) |- ( ( A. x ph -> A. x ps ) -> ( A. x ph -> E. x ps ) ) ;
	step 3 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( ( A. x ph -> A. x ps ) -> E. x ( ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_25 (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. y E. x ( ph -> ps ) -> ( E. y A. x ph -> E. y E. x ps ) ) ;
}

proof of 19_25 {
	step 1 : wff = thm 19_35 () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> E. x ps ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( E. x ( ph -> ps ) -> ( A. x ph -> E. x ps ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. y E. x ( ph -> ps ) -> A. y ( A. x ph -> E. x ps ) ) ;
	step 4 : wff = thm 19_22 () |- ( A. y ( A. x ph -> E. x ps ) -> ( E. y A. x ph -> E. y E. x ps ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A. y E. x ( ph -> ps ) -> ( E. y A. x ph -> E. y E. x ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem 19_30 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph \/ ps ) -> ( A. x ph \/ E. x ps ) ) ;
}

proof of 19_30 {
	step 1 : wff = thm 19_20 () |- ( A. x ( -. ps -> ph ) -> ( A. x -. ps -> A. x ph ) ) ;
	step 2 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 3 : wff = def df-or () |- ( ( ps \/ ph ) <-> ( -. ps -> ph ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ( ph \/ ps ) <-> ( -. ps -> ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( ph \/ ps ) <-> A. x ( -. ps -> ph ) ) ;
	step 6 : wff = thm orcom () |- ( ( A. x ph \/ -. A. x -. ps ) <-> ( -. A. x -. ps \/ A. x ph ) ) ;
	step 7 : wff = def df-ex () |- ( E. x ps <-> -. A. x -. ps ) ;
	step 8 : wff = thm orbi2i (step 7) |- ( ( A. x ph \/ E. x ps ) <-> ( A. x ph \/ -. A. x -. ps ) ) ;
	step 9 : wff = thm imor () |- ( ( A. x -. ps -> A. x ph ) <-> ( -. A. x -. ps \/ A. x ph ) ) ;
	step 10 : wff = thm 3bitr4i (step 6, step 8, step 9) |- ( ( A. x ph \/ E. x ps ) <-> ( A. x -. ps -> A. x ph ) ) ;
	step 11 : wff = thm 3imtr4i (step 1, step 5, step 10) |- ( A. x ( ph \/ ps ) -> ( A. x ph \/ E. x ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem 19_32 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph \/ ps ) <-> ( ph \/ A. x ps ) ) ;
}

proof of 19_32 {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 2 : wff = thm 19_21 (step 1) |- ( A. x ( -. ph -> ps ) <-> ( -. ph -> A. x ps ) ) ;
	step 3 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x ( ph \/ ps ) <-> A. x ( -. ph -> ps ) ) ;
	step 5 : wff = def df-or () |- ( ( ph \/ A. x ps ) <-> ( -. ph -> A. x ps ) ) ;
	step 6 : wff = thm 3bitr4i (step 2, step 4, step 5) |- ( A. x ( ph \/ ps ) <-> ( ph \/ A. x ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem 19_31 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ph \/ ps ) <-> ( A. x ph \/ ps ) ) ;
}

proof of 19_31 {
	step 1 : wff = thm 19_32 (hyp 1) |- ( A. x ( ps \/ ph ) <-> ( ps \/ A. x ph ) ) ;
	step 2 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( ph \/ ps ) <-> A. x ( ps \/ ph ) ) ;
	step 4 : wff = thm orcom () |- ( ( A. x ph \/ ps ) <-> ( ps \/ A. x ph ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 3, step 4) |- ( A. x ( ph \/ ps ) <-> ( A. x ph \/ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem 19_43 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) ;
}

proof of 19_43 {
	step 1 : wff = thm ioran () |- ( -. ( ph \/ ps ) <-> ( -. ph /\ -. ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x -. ( ph \/ ps ) <-> A. x ( -. ph /\ -. ps ) ) ;
	step 3 : wff = thm 19_26 () |- ( A. x ( -. ph /\ -. ps ) <-> ( A. x -. ph /\ A. x -. ps ) ) ;
	step 4 : wff = thm alnex () |- ( A. x -. ph <-> -. E. x ph ) ;
	step 5 : wff = thm alnex () |- ( A. x -. ps <-> -. E. x ps ) ;
	step 6 : wff = thm anbi12i (step 4, step 5) |- ( ( A. x -. ph /\ A. x -. ps ) <-> ( -. E. x ph /\ -. E. x ps ) ) ;
	step 7 : wff = thm 3bitri (step 2, step 3, step 6) |- ( A. x -. ( ph \/ ps ) <-> ( -. E. x ph /\ -. E. x ps ) ) ;
	step 8 : wff = thm notbii (step 7) |- ( -. A. x -. ( ph \/ ps ) <-> -. ( -. E. x ph /\ -. E. x ps ) ) ;
	step 9 : wff = def df-ex () |- ( E. x ( ph \/ ps ) <-> -. A. x -. ( ph \/ ps ) ) ;
	step 10 : wff = thm oran () |- ( ( E. x ph \/ E. x ps ) <-> -. ( -. E. x ph /\ -. E. x ps ) ) ;
	step 11 : wff = thm 3bitr4i (step 8, step 9, step 10) |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem 19_44 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ ps ) ) ;
}

proof of 19_44 {
	step 1 : wff = thm 19_43 () |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) ;
	step 2 : wff = thm 19_9 (hyp 1) |- ( E. x ps <-> ps ) ;
	step 3 : wff = thm orbi2i (step 2) |- ( ( E. x ph \/ E. x ps ) <-> ( E. x ph \/ ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_45 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ph \/ ps ) <-> ( ph \/ E. x ps ) ) ;
}

proof of 19_45 {
	step 1 : wff = thm 19_43 () |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) ;
	step 2 : wff = thm 19_9 (hyp 1) |- ( E. x ph <-> ph ) ;
	step 3 : wff = thm orbi1i (step 2) |- ( ( E. x ph \/ E. x ps ) <-> ( ph \/ E. x ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E. x ( ph \/ ps ) <-> ( ph \/ E. x ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_33 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( A. x ph \/ A. x ps ) -> A. x ( ph \/ ps ) ) ;
}

proof of 19_33 {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ph -> A. x ( ph \/ ps ) ) ;
	step 3 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x ps -> A. x ( ph \/ ps ) ) ;
	step 5 : wff = thm jaoi (step 2, step 4) |- ( ( A. x ph \/ A. x ps ) -> A. x ( ph \/ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem 19_33b (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( -. ( E. x ph /\ E. x ps ) -> ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) ;
}

proof of 19_33b {
	step 1 : wff = thm ianor () |- ( -. ( E. x ph /\ E. x ps ) <-> ( -. E. x ph \/ -. E. x ps ) ) ;
	step 2 : wff = thm alnex () |- ( A. x -. ph <-> -. E. x ph ) ;
	step 3 : wff = thm alnex () |- ( A. x -. ps <-> -. E. x ps ) ;
	step 4 : wff = thm orbi12i (step 2, step 3) |- ( ( A. x -. ph \/ A. x -. ps ) <-> ( -. E. x ph \/ -. E. x ps ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( -. ( E. x ph /\ E. x ps ) <-> ( A. x -. ph \/ A. x -. ps ) ) ;
	step 6 : wff = thm biorf () |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) ;
	step 7 : wff = thm 19_20i (step 6) |- ( A. x -. ph -> A. x ( ps <-> ( ph \/ ps ) ) ) ;
	step 8 : wff = thm 19_15 () |- ( A. x ( ps <-> ( ph \/ ps ) ) -> ( A. x ps <-> A. x ( ph \/ ps ) ) ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( A. x -. ph -> ( A. x ps <-> A. x ( ph \/ ps ) ) ) ;
	step 10 : wff = thm olc () |- ( A. x ps -> ( A. x ph \/ A. x ps ) ) ;
	step 11 : wff = thm syl6bir (step 9, step 10) |- ( A. x -. ph -> ( A. x ( ph \/ ps ) -> ( A. x ph \/ A. x ps ) ) ) ;
	step 12 : wff = thm biorf () |- ( -. ps -> ( ph <-> ( ps \/ ph ) ) ) ;
	step 13 : wff = thm orcom () |- ( ( ps \/ ph ) <-> ( ph \/ ps ) ) ;
	step 14 : wff = thm syl6bb (step 12, step 13) |- ( -. ps -> ( ph <-> ( ph \/ ps ) ) ) ;
	step 15 : wff = thm 19_20i (step 14) |- ( A. x -. ps -> A. x ( ph <-> ( ph \/ ps ) ) ) ;
	step 16 : wff = thm 19_15 () |- ( A. x ( ph <-> ( ph \/ ps ) ) -> ( A. x ph <-> A. x ( ph \/ ps ) ) ) ;
	step 17 : wff = thm syl (step 15, step 16) |- ( A. x -. ps -> ( A. x ph <-> A. x ( ph \/ ps ) ) ) ;
	step 18 : wff = thm orc () |- ( A. x ph -> ( A. x ph \/ A. x ps ) ) ;
	step 19 : wff = thm syl6bir (step 17, step 18) |- ( A. x -. ps -> ( A. x ( ph \/ ps ) -> ( A. x ph \/ A. x ps ) ) ) ;
	step 20 : wff = thm jaoi (step 11, step 19) |- ( ( A. x -. ph \/ A. x -. ps ) -> ( A. x ( ph \/ ps ) -> ( A. x ph \/ A. x ps ) ) ) ;
	step 21 : wff = thm sylbi (step 5, step 20) |- ( -. ( E. x ph /\ E. x ps ) -> ( A. x ( ph \/ ps ) -> ( A. x ph \/ A. x ps ) ) ) ;
	step 22 : wff = thm 19_33 () |- ( ( A. x ph \/ A. x ps ) -> A. x ( ph \/ ps ) ) ;
	step 23 : wff = thm impbid1 (step 21, step 22) |- ( -. ( E. x ph /\ E. x ps ) -> ( A. x ( ph \/ ps ) <-> ( A. x ph \/ A. x ps ) ) ) ;
	qed prop 1 = step 23 ;
}

theorem 19_34 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( A. x ph \/ E. x ps ) -> E. x ( ph \/ ps ) ) ;
}

proof of 19_34 {
	step 1 : wff = thm 19_2 () |- ( A. x ph -> E. x ph ) ;
	step 2 : wff = thm orim1i (step 1) |- ( ( A. x ph \/ E. x ps ) -> ( E. x ph \/ E. x ps ) ) ;
	step 3 : wff = thm 19_43 () |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( ( A. x ph \/ E. x ps ) -> E. x ( ph \/ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_40 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph /\ ps ) -> ( E. x ph /\ E. x ps ) ) ;
}

proof of 19_40 {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm 19_22i (step 1) |- ( E. x ( ph /\ ps ) -> E. x ph ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 4 : wff = thm 19_22i (step 3) |- ( E. x ( ph /\ ps ) -> E. x ps ) ;
	step 5 : wff = thm jca (step 2, step 4) |- ( E. x ( ph /\ ps ) -> ( E. x ph /\ E. x ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem 19_41 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) ;
}

proof of 19_41 {
	step 1 : wff = def df-ex () |- ( E. x ( ph /\ ps ) <-> -. A. x -. ( ph /\ ps ) ) ;
	step 2 : wff = thm hbn (hyp 1) |- ( -. ps -> A. x -. ps ) ;
	step 3 : wff = thm 19_31 (step 2) |- ( A. x ( -. ph \/ -. ps ) <-> ( A. x -. ph \/ -. ps ) ) ;
	step 4 : wff = thm ianor () |- ( -. ( ph /\ ps ) <-> ( -. ph \/ -. ps ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x -. ( ph /\ ps ) <-> A. x ( -. ph \/ -. ps ) ) ;
	step 6 : wff = thm ianor () |- ( -. ( E. x ph /\ ps ) <-> ( -. E. x ph \/ -. ps ) ) ;
	step 7 : wff = thm alnex () |- ( A. x -. ph <-> -. E. x ph ) ;
	step 8 : wff = thm orbi1i (step 7) |- ( ( A. x -. ph \/ -. ps ) <-> ( -. E. x ph \/ -. ps ) ) ;
	step 9 : wff = thm bitr4i (step 6, step 8) |- ( -. ( E. x ph /\ ps ) <-> ( A. x -. ph \/ -. ps ) ) ;
	step 10 : wff = thm 3bitr4i (step 3, step 5, step 9) |- ( A. x -. ( ph /\ ps ) <-> -. ( E. x ph /\ ps ) ) ;
	step 11 : wff = thm con2bii (step 10) |- ( ( E. x ph /\ ps ) <-> -. A. x -. ( ph /\ ps ) ) ;
	step 12 : wff = thm bitr4i (step 1, step 11) |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) ;
	qed prop 1 = step 12 ;
}

theorem 19_42 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) ;
}

proof of 19_42 {
	step 1 : wff = thm 19_41 (hyp 1) |- ( E. x ( ps /\ ph ) <-> ( E. x ps /\ ph ) ) ;
	step 2 : wff = thm exancom () |- ( E. x ( ph /\ ps ) <-> E. x ( ps /\ ph ) ) ;
	step 3 : wff = thm ancom () |- ( ( ph /\ E. x ps ) <-> ( E. x ps /\ ph ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem alrot4 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) ;
}

proof of alrot4 {
	step 1 : wff = thm alcom () |- ( A. y A. z A. w ph <-> A. z A. y A. w ph ) ;
	step 2 : wff = thm alcom () |- ( A. y A. w ph <-> A. w A. y ph ) ;
	step 3 : wff = thm albii (step 2) |- ( A. z A. y A. w ph <-> A. z A. w A. y ph ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A. y A. z A. w ph <-> A. z A. w A. y ph ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x A. y A. z A. w ph <-> A. x A. z A. w A. y ph ) ;
	step 6 : wff = thm alcom () |- ( A. x A. z A. w A. y ph <-> A. z A. x A. w A. y ph ) ;
	step 7 : wff = thm alcom () |- ( A. x A. w A. y ph <-> A. w A. x A. y ph ) ;
	step 8 : wff = thm albii (step 7) |- ( A. z A. x A. w A. y ph <-> A. z A. w A. x A. y ph ) ;
	step 9 : wff = thm 3bitri (step 5, step 6, step 8) |- ( A. x A. y A. z A. w ph <-> A. z A. w A. x A. y ph ) ;
	qed prop 1 = step 9 ;
}

theorem excom13 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. x E. y E. z ph <-> E. z E. y E. x ph ) ;
}

proof of excom13 {
	step 1 : wff = thm excom () |- ( E. x E. y E. z ph <-> E. y E. x E. z ph ) ;
	step 2 : wff = thm excom () |- ( E. x E. z ph <-> E. z E. x ph ) ;
	step 3 : wff = thm exbii (step 2) |- ( E. y E. x E. z ph <-> E. y E. z E. x ph ) ;
	step 4 : wff = thm excom () |- ( E. y E. z E. x ph <-> E. z E. y E. x ph ) ;
	step 5 : wff = thm 3bitri (step 1, step 3, step 4) |- ( E. x E. y E. z ph <-> E. z E. y E. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem exrot3 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. x E. y E. z ph <-> E. y E. z E. x ph ) ;
}

proof of exrot3 {
	step 1 : wff = thm excom13 () |- ( E. x E. y E. z ph <-> E. z E. y E. x ph ) ;
	step 2 : wff = thm excom () |- ( E. z E. y E. x ph <-> E. y E. z E. x ph ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( E. x E. y E. z ph <-> E. y E. z E. x ph ) ;
	qed prop 1 = step 3 ;
}

theorem exrot4 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( E. x E. y E. z E. w ph <-> E. z E. w E. x E. y ph ) ;
}

proof of exrot4 {
	step 1 : wff = thm excom13 () |- ( E. y E. z E. w ph <-> E. w E. z E. y ph ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y E. z E. w ph <-> E. x E. w E. z E. y ph ) ;
	step 3 : wff = thm excom13 () |- ( E. x E. w E. z E. y ph <-> E. z E. w E. x E. y ph ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x E. y E. z E. w ph <-> E. z E. w E. x E. y ph ) ;
	qed prop 1 = step 4 ;
}

theorem nexr (ph : wff, x : set)  {
	hyp 1 : wff = |- -. E. x ph ;
	-----------------------
	prop 1 : wff = |- -. ph ;
}

proof of nexr {
	step 1 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 2 : wff = thm mto (hyp 1, step 1) |- -. ph ;
	qed prop 1 = step 2 ;
}

theorem nex (ph : wff, x : set)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- -. E. x ph ;
}

proof of nex {
	step 1 : wff = thm alnex () |- ( A. x -. ph <-> -. E. x ph ) ;
	step 2 : wff = thm mpgbi (step 1, hyp 1) |- -. E. x ph ;
	qed prop 1 = step 2 ;
}

theorem nexd (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. E. x ps ) ;
}

proof of nexd {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x -. ps ) ;
	step 2 : wff = thm alnex () |- ( A. x -. ps <-> -. E. x ps ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( ph -> -. E. x ps ) ;
	qed prop 1 = step 3 ;
}

theorem hbim1 (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) ;
}

proof of hbim1 {
	step 1 : wff = thm a2i (hyp 2) |- ( ( ph -> ps ) -> ( ph -> A. x ps ) ) ;
	step 2 : wff = thm 19_21 (hyp 1) |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ( ph -> ps ) -> A. x ( ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem albid (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x ps <-> A. x ch ) ) ;
}

proof of albid {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps <-> ch ) ) ;
	step 2 : wff = thm 19_15 () |- ( A. x ( ps <-> ch ) -> ( A. x ps <-> A. x ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ( A. x ps <-> A. x ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem exbid (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps <-> E. x ch ) ) ;
}

proof of exbid {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps <-> ch ) ) ;
	step 2 : wff = thm 19_18 () |- ( A. x ( ps <-> ch ) -> ( E. x ps <-> E. x ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ( E. x ps <-> E. x ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem exan (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( E. x ph /\ ps ) ;
	-----------------------
	prop 1 : wff = |- E. x ( ph /\ ps ) ;
}

proof of exan {
	step 1 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 2 : wff = thm 19_27 (step 1) |- ( A. x ( ps /\ E. x ph ) <-> ( A. x ps /\ E. x ph ) ) ;
	step 3 : wff = thm ancom () |- ( ( E. x ph /\ ps ) <-> ( ps /\ E. x ph ) ) ;
	step 4 : wff = thm mpbi (hyp 1, step 3) |- ( ps /\ E. x ph ) ;
	step 5 : wff = thm mpgbi (step 2, step 4) |- ( A. x ps /\ E. x ph ) ;
	step 6 : wff = thm 19_29 () |- ( ( A. x ps /\ E. x ph ) -> E. x ( ps /\ ph ) ) ;
	step 7 : wff = axm ax-mp (step 5, step 6) |- E. x ( ps /\ ph ) ;
	step 8 : wff = thm exancom () |- ( E. x ( ps /\ ph ) <-> E. x ( ph /\ ps ) ) ;
	step 9 : wff = thm mpbi (step 7, step 8) |- E. x ( ph /\ ps ) ;
	qed prop 1 = step 9 ;
}

theorem albi (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph <-> ps ) <-> ( A. x ( ph -> ps ) /\ A. x ( ps -> ph ) ) ) ;
}

proof of albi {
	step 1 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( ph <-> ps ) <-> A. x ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 3 : wff = thm 19_26 () |- ( A. x ( ( ph -> ps ) /\ ( ps -> ph ) ) <-> ( A. x ( ph -> ps ) /\ A. x ( ps -> ph ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x ( ph <-> ps ) <-> ( A. x ( ph -> ps ) /\ A. x ( ps -> ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem 2albi (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ( ph <-> ps ) <-> ( A. x A. y ( ph -> ps ) /\ A. x A. y ( ps -> ph ) ) ) ;
}

proof of 2albi {
	step 1 : wff = thm albi () |- ( A. y ( ph <-> ps ) <-> ( A. y ( ph -> ps ) /\ A. y ( ps -> ph ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x A. y ( ph <-> ps ) <-> A. x ( A. y ( ph -> ps ) /\ A. y ( ps -> ph ) ) ) ;
	step 3 : wff = thm 19_26 () |- ( A. x ( A. y ( ph -> ps ) /\ A. y ( ps -> ph ) ) <-> ( A. x A. y ( ph -> ps ) /\ A. x A. y ( ps -> ph ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x A. y ( ph <-> ps ) <-> ( A. x A. y ( ph -> ps ) /\ A. x A. y ( ps -> ph ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem hbnd (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps -> A. x -. ps ) ) ;
}

proof of hbnd {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps -> A. x ps ) ) ;
	step 2 : wff = thm hbnt () |- ( A. x ( ps -> A. x ps ) -> ( -. ps -> A. x -. ps ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ( -. ps -> A. x -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem hbimd (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( ch -> A. x ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) ;
}

proof of hbimd {
	step 1 : wff = thm hbnd (hyp 1, hyp 2) |- ( ph -> ( -. ps -> A. x -. ps ) ) ;
	step 2 : wff = thm pm2_21 () |- ( -. ps -> ( ps -> ch ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x -. ps -> A. x ( ps -> ch ) ) ;
	step 4 : wff = thm syl6com (step 1, step 3) |- ( -. ps -> ( ph -> A. x ( ps -> ch ) ) ) ;
	step 5 : wff = axm ax-1 () |- ( ch -> ( ps -> ch ) ) ;
	step 6 : wff = thm 19_20i (step 5) |- ( A. x ch -> A. x ( ps -> ch ) ) ;
	step 7 : wff = thm syl6com (hyp 3, step 6) |- ( ch -> ( ph -> A. x ( ps -> ch ) ) ) ;
	step 8 : wff = thm ja (step 4, step 7) |- ( ( ps -> ch ) -> ( ph -> A. x ( ps -> ch ) ) ) ;
	step 9 : wff = thm com12 (step 8) |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem hband (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> A. x ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps /\ ch ) -> A. x ( ps /\ ch ) ) ) ;
}

proof of hband {
	step 1 : wff = thm anim12d (hyp 1, hyp 2) |- ( ph -> ( ( ps /\ ch ) -> ( A. x ps /\ A. x ch ) ) ) ;
	step 2 : wff = thm 19_26 () |- ( A. x ( ps /\ ch ) <-> ( A. x ps /\ A. x ch ) ) ;
	step 3 : wff = thm syl6ibr (step 1, step 2) |- ( ph -> ( ( ps /\ ch ) -> A. x ( ps /\ ch ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem hbbid (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( ch -> A. x ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ( ps <-> ch ) -> A. x ( ps <-> ch ) ) ) ;
}

proof of hbbid {
	step 1 : wff = thm hbimd (hyp 1, hyp 2, hyp 3) |- ( ph -> ( ( ps -> ch ) -> A. x ( ps -> ch ) ) ) ;
	step 2 : wff = thm hbimd (hyp 1, hyp 3, hyp 2) |- ( ph -> ( ( ch -> ps ) -> A. x ( ch -> ps ) ) ) ;
	step 3 : wff = thm anim12d (step 1, step 2) |- ( ph -> ( ( ( ps -> ch ) /\ ( ch -> ps ) ) -> ( A. x ( ps -> ch ) /\ A. x ( ch -> ps ) ) ) ) ;
	step 4 : wff = thm dfbi2 () |- ( ( ps <-> ch ) <-> ( ( ps -> ch ) /\ ( ch -> ps ) ) ) ;
	step 5 : wff = thm albi () |- ( A. x ( ps <-> ch ) <-> ( A. x ( ps -> ch ) /\ A. x ( ch -> ps ) ) ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( ph -> ( ( ps <-> ch ) -> A. x ( ps <-> ch ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem hbald (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. y ps -> A. x A. y ps ) ) ;
}

proof of hbald {
	step 1 : wff = thm 19_20d (hyp 1, hyp 2) |- ( ph -> ( A. y ps -> A. y A. x ps ) ) ;
	step 2 : wff = axm ax-7 () |- ( A. y A. x ps -> A. x A. y ps ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ph -> ( A. y ps -> A. x A. y ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem hbexd (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. y ps -> A. x E. y ps ) ) ;
}

proof of hbexd {
	step 1 : wff = thm 19_22d (hyp 1, hyp 2) |- ( ph -> ( E. y ps -> E. y A. x ps ) ) ;
	step 2 : wff = thm 19_12 () |- ( E. y A. x ps -> A. x E. y ps ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( ph -> ( E. y ps -> A. x E. y ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_21t (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> A. x ph ) -> ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ) ;
}

proof of 19_21t {
	step 1 : wff = thm 19_20 () |- ( A. x ( ph -> ps ) -> ( A. x ph -> A. x ps ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( A. x ( ph -> ps ) -> ( ( ph -> A. x ph ) -> ( ph -> A. x ps ) ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ( ph -> A. x ph ) -> ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) ) ;
	step 4 : wff = thm a4s (step 3) |- ( A. x ( ph -> A. x ph ) -> ( A. x ( ph -> ps ) -> ( ph -> A. x ps ) ) ) ;
	step 5 : wff = thm hba1 () |- ( A. x ( ph -> A. x ph ) -> A. x A. x ( ph -> A. x ph ) ) ;
	step 6 : wff = axm ax-4 () |- ( A. x ( ph -> A. x ph ) -> ( ph -> A. x ph ) ) ;
	step 7 : wff = thm hba1 () |- ( A. x ps -> A. x A. x ps ) ;
	step 8 : wff = thm a1i (step 7) |- ( A. x ( ph -> A. x ph ) -> ( A. x ps -> A. x A. x ps ) ) ;
	step 9 : wff = thm hbimd (step 5, step 6, step 8) |- ( A. x ( ph -> A. x ph ) -> ( ( ph -> A. x ps ) -> A. x ( ph -> A. x ps ) ) ) ;
	step 10 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 11 : wff = thm imim2i (step 10) |- ( ( ph -> A. x ps ) -> ( ph -> ps ) ) ;
	step 12 : wff = thm 19_20i (step 11) |- ( A. x ( ph -> A. x ps ) -> A. x ( ph -> ps ) ) ;
	step 13 : wff = thm syl6 (step 9, step 12) |- ( A. x ( ph -> A. x ph ) -> ( ( ph -> A. x ps ) -> A. x ( ph -> ps ) ) ) ;
	step 14 : wff = thm impbid (step 4, step 13) |- ( A. x ( ph -> A. x ph ) -> ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem 19_23t (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ps -> A. x ps ) -> ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ) ;
}

proof of 19_23t {
	step 1 : wff = thm hba1 () |- ( A. x ( ps -> A. x ps ) -> A. x A. x ( ps -> A. x ps ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 3 : wff = axm ax-4 () |- ( A. x ( ps -> A. x ps ) -> ( ps -> A. x ps ) ) ;
	step 4 : wff = thm impbid2 (step 2, step 3) |- ( A. x ( ps -> A. x ps ) -> ( A. x ps <-> ps ) ) ;
	step 5 : wff = thm imbi2d (step 4) |- ( A. x ( ps -> A. x ps ) -> ( ( ph -> A. x ps ) <-> ( ph -> ps ) ) ) ;
	step 6 : wff = thm albid (step 1, step 5) |- ( A. x ( ps -> A. x ps ) -> ( A. x ( ph -> A. x ps ) <-> A. x ( ph -> ps ) ) ) ;
	step 7 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 8 : wff = axm ax-4 () |- ( A. x ( ps -> A. x ps ) -> ( ps -> A. x ps ) ) ;
	step 9 : wff = thm impbid2 (step 7, step 8) |- ( A. x ( ps -> A. x ps ) -> ( A. x ps <-> ps ) ) ;
	step 10 : wff = thm imbi2d (step 9) |- ( A. x ( ps -> A. x ps ) -> ( ( E. x ph -> A. x ps ) <-> ( E. x ph -> ps ) ) ) ;
	step 11 : wff = thm hba1 () |- ( A. x ps -> A. x A. x ps ) ;
	step 12 : wff = thm 19_23 (step 11) |- ( A. x ( ph -> A. x ps ) <-> ( E. x ph -> A. x ps ) ) ;
	step 13 : wff = thm syl5bb (step 10, step 12) |- ( A. x ( ps -> A. x ps ) -> ( A. x ( ph -> A. x ps ) <-> ( E. x ph -> ps ) ) ) ;
	step 14 : wff = thm bitr3d (step 6, step 13) |- ( A. x ( ps -> A. x ps ) -> ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem exintr (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ( ph /\ ps ) ) ) ;
}

proof of exintr {
	step 1 : wff = thm hba1 () |- ( A. x ( ph -> ps ) -> A. x A. x ( ph -> ps ) ) ;
	step 2 : wff = thm ancl () |- ( ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) ;
	step 3 : wff = thm a4s (step 2) |- ( A. x ( ph -> ps ) -> ( ph -> ( ph /\ ps ) ) ) ;
	step 4 : wff = thm 19_22d (step 1, step 3) |- ( A. x ( ph -> ps ) -> ( E. x ph -> E. x ( ph /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem exintrbi (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( E. x ph <-> E. x ( ph /\ ps ) ) ) ;
}

proof of exintrbi {
	step 1 : wff = thm pm4_71 () |- ( ( ph -> ps ) <-> ( ph <-> ( ph /\ ps ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( ph -> ps ) <-> A. x ( ph <-> ( ph /\ ps ) ) ) ;
	step 3 : wff = thm 19_18 () |- ( A. x ( ph <-> ( ph /\ ps ) ) -> ( E. x ph <-> E. x ( ph /\ ps ) ) ) ;
	step 4 : wff = thm sylbi (step 2, step 3) |- ( A. x ( ph -> ps ) -> ( E. x ph <-> E. x ( ph /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem aaan (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ( ph /\ ps ) <-> ( A. x ph /\ A. y ps ) ) ;
}

proof of aaan {
	step 1 : wff = thm 19_28 (hyp 1) |- ( A. y ( ph /\ ps ) <-> ( ph /\ A. y ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x A. y ( ph /\ ps ) <-> A. x ( ph /\ A. y ps ) ) ;
	step 3 : wff = thm hbal (hyp 2) |- ( A. y ps -> A. x A. y ps ) ;
	step 4 : wff = thm 19_27 (step 3) |- ( A. x ( ph /\ A. y ps ) <-> ( A. x ph /\ A. y ps ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( A. x A. y ( ph /\ ps ) <-> ( A. x ph /\ A. y ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem eeor (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ( ph \/ ps ) <-> ( E. x ph \/ E. y ps ) ) ;
}

proof of eeor {
	step 1 : wff = thm 19_45 (hyp 1) |- ( E. y ( ph \/ ps ) <-> ( ph \/ E. y ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y ( ph \/ ps ) <-> E. x ( ph \/ E. y ps ) ) ;
	step 3 : wff = thm hbex (hyp 2) |- ( E. y ps -> A. x E. y ps ) ;
	step 4 : wff = thm 19_44 (step 3) |- ( E. x ( ph \/ E. y ps ) <-> ( E. x ph \/ E. y ps ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( E. x E. y ( ph \/ ps ) <-> ( E. x ph \/ E. y ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem qexmid (ph : wff, x : set)  {
	prop 1 : wff = |- E. x ( ph -> A. x ph ) ;
}

proof of qexmid {
	step 1 : wff = thm 19_8a () |- ( A. x ph -> E. x A. x ph ) ;
	step 2 : wff = thm 19_35ri (step 1) |- E. x ( ph -> A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem ax9o (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( x = y -> A. x ph ) -> ph ) ;
}

proof of ax9o {
	step 1 : wff = axm ax-9 () |- -. A. x -. x = y ;
	step 2 : wff = def df-ex () |- ( E. x x = y <-> -. A. x -. x = y ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- E. x x = y ;
	step 4 : wff = thm 19_22 () |- ( A. x ( x = y -> A. x ph ) -> ( E. x x = y -> E. x A. x ph ) ) ;
	step 5 : wff = thm mpi (step 3, step 4) |- ( A. x ( x = y -> A. x ph ) -> E. x A. x ph ) ;
	step 6 : wff = thm a6e () |- ( E. x A. x ph -> ph ) ;
	step 7 : wff = thm syl (step 5, step 6) |- ( A. x ( x = y -> A. x ph ) -> ph ) ;
	qed prop 1 = step 7 ;
}

axiom ax-9o (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( x = y -> A. x ph ) -> ph ) ;
}

theorem ax9 (x : set, y : set)  {
	prop 1 : wff = |- -. A. x -. x = y ;
}

proof of ax9 {
	step 1 : wff = axm ax-9o () |- ( A. x ( x = y -> A. x -. A. x -. x = y ) -> -. A. x -. x = y ) ;
	step 2 : wff = thm modal-b () |- ( x = y -> A. x -. A. x -. x = y ) ;
	step 3 : wff = thm mpg (step 1, step 2) |- -. A. x -. x = y ;
	qed prop 1 = step 3 ;
}

theorem a9e (x : set, y : set)  {
	prop 1 : wff = |- E. x x = y ;
}

proof of a9e {
	step 1 : wff = axm ax-9 () |- -. A. x -. x = y ;
	step 2 : wff = def df-ex () |- ( E. x x = y <-> -. A. x -. x = y ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- E. x x = y ;
	qed prop 1 = step 3 ;
}

theorem equid (x : set)  {
	prop 1 : wff = |- x = x ;
}

proof of equid {
	step 1 : wff = axm ax-12 () |- ( -. A. x x = x -> ( -. A. x x = x -> ( x = x -> A. x x = x ) ) ) ;
	step 2 : wff = thm pm2_43i (step 1) |- ( -. A. x x = x -> ( x = x -> A. x x = x ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x -. A. x x = x -> A. x ( x = x -> A. x x = x ) ) ;
	step 4 : wff = axm ax-9o () |- ( A. x ( x = x -> A. x x = x ) -> x = x ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A. x -. A. x x = x -> x = x ) ;
	step 6 : wff = axm ax-6o () |- ( -. A. x -. A. x x = x -> x = x ) ;
	step 7 : wff = thm pm2_61i (step 5, step 6) |- x = x ;
	qed prop 1 = step 7 ;
}

theorem equidALT (x : set)  {
	prop 1 : wff = |- x = x ;
}

proof of equidALT {
	step 1 : wff = axm ax-9 () |- -. A. x -. x = x ;
	step 2 : wff = thm hbn1 () |- ( -. A. x x = x -> A. x -. A. x x = x ) ;
	step 3 : wff = axm ax-12 () |- ( -. A. x x = x -> ( -. A. x x = x -> ( x = x -> A. x x = x ) ) ) ;
	step 4 : wff = thm pm2_43i (step 3) |- ( -. A. x x = x -> ( x = x -> A. x x = x ) ) ;
	step 5 : wff = thm con3d (step 4) |- ( -. A. x x = x -> ( -. A. x x = x -> -. x = x ) ) ;
	step 6 : wff = thm pm2_43i (step 5) |- ( -. A. x x = x -> -. x = x ) ;
	step 7 : wff = thm 19_21ai (step 2, step 6) |- ( -. A. x x = x -> A. x -. x = x ) ;
	step 8 : wff = thm mt3 (step 1, step 7) |- A. x x = x ;
	step 9 : wff = thm a4i (step 8) |- x = x ;
	qed prop 1 = step 9 ;
}

theorem stdpc6 (x : set)  {
	prop 1 : wff = |- A. x x = x ;
}

proof of stdpc6 {
	step 1 : wff = thm equid () |- x = x ;
	step 2 : wff = axm ax-gen (step 1) |- A. x x = x ;
	qed prop 1 = step 2 ;
}

theorem equcomi (x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> y = x ) ;
}

proof of equcomi {
	step 1 : wff = thm equid () |- x = x ;
	step 2 : wff = axm ax-8 () |- ( x = y -> ( x = x -> y = x ) ) ;
	step 3 : wff = thm mpi (step 1, step 2) |- ( x = y -> y = x ) ;
	qed prop 1 = step 3 ;
}

theorem equcom (x : set, y : set)  {
	prop 1 : wff = |- ( x = y <-> y = x ) ;
}

proof of equcom {
	step 1 : wff = thm equcomi () |- ( x = y -> y = x ) ;
	step 2 : wff = thm equcomi () |- ( y = x -> x = y ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( x = y <-> y = x ) ;
	qed prop 1 = step 3 ;
}

theorem equcoms (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( y = x -> ph ) ;
}

proof of equcoms {
	step 1 : wff = thm equcomi () |- ( y = x -> x = y ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( y = x -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem equtr (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( y = z -> x = z ) ) ;
}

proof of equtr {
	step 1 : wff = axm ax-8 () |- ( y = x -> ( y = z -> x = z ) ) ;
	step 2 : wff = thm equcoms (step 1) |- ( x = y -> ( y = z -> x = z ) ) ;
	qed prop 1 = step 2 ;
}

theorem equtrr (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( z = x -> z = y ) ) ;
}

proof of equtrr {
	step 1 : wff = thm equtr () |- ( z = x -> ( x = y -> z = y ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( x = y -> ( z = x -> z = y ) ) ;
	qed prop 1 = step 2 ;
}

theorem equtr2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( ( x = z /\ y = z ) -> x = y ) ;
}

proof of equtr2 {
	step 1 : wff = thm equtr () |- ( x = z -> ( z = y -> x = y ) ) ;
	step 2 : wff = thm equcomi () |- ( y = z -> z = y ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( x = z -> ( y = z -> x = y ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( x = z /\ y = z ) -> x = y ) ;
	qed prop 1 = step 4 ;
}

theorem equequ1 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( x = z <-> y = z ) ) ;
}

proof of equequ1 {
	step 1 : wff = axm ax-8 () |- ( x = y -> ( x = z -> y = z ) ) ;
	step 2 : wff = thm equtr () |- ( x = y -> ( y = z -> x = z ) ) ;
	step 3 : wff = thm impbid (step 1, step 2) |- ( x = y -> ( x = z <-> y = z ) ) ;
	qed prop 1 = step 3 ;
}

theorem equequ2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( z = x <-> z = y ) ) ;
}

proof of equequ2 {
	step 1 : wff = thm equtrr () |- ( x = y -> ( z = x -> z = y ) ) ;
	step 2 : wff = thm equtrr () |- ( y = x -> ( z = y -> z = x ) ) ;
	step 3 : wff = thm equcoms (step 2) |- ( x = y -> ( z = y -> z = x ) ) ;
	step 4 : wff = thm impbid (step 1, step 3) |- ( x = y -> ( z = x <-> z = y ) ) ;
	qed prop 1 = step 4 ;
}

theorem elequ1 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( x e. z <-> y e. z ) ) ;
}

proof of elequ1 {
	step 1 : wff = axm ax-13 () |- ( x = y -> ( x e. z -> y e. z ) ) ;
	step 2 : wff = axm ax-13 () |- ( y = x -> ( y e. z -> x e. z ) ) ;
	step 3 : wff = thm equcoms (step 2) |- ( x = y -> ( y e. z -> x e. z ) ) ;
	step 4 : wff = thm impbid (step 1, step 3) |- ( x = y -> ( x e. z <-> y e. z ) ) ;
	qed prop 1 = step 4 ;
}

theorem elequ2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( z e. x <-> z e. y ) ) ;
}

proof of elequ2 {
	step 1 : wff = axm ax-14 () |- ( x = y -> ( z e. x -> z e. y ) ) ;
	step 2 : wff = axm ax-14 () |- ( y = x -> ( z e. y -> z e. x ) ) ;
	step 3 : wff = thm equcoms (step 2) |- ( x = y -> ( z e. y -> z e. x ) ) ;
	step 4 : wff = thm impbid (step 1, step 3) |- ( x = y -> ( z e. x <-> z e. y ) ) ;
	qed prop 1 = step 4 ;
}

theorem ax11i (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ;
}

proof of ax11i {
	step 1 : wff = thm biimprcd (hyp 1) |- ( ps -> ( x = y -> ph ) ) ;
	step 2 : wff = thm 19_21ai (hyp 2, step 1) |- ( ps -> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm syl6bi (hyp 1, step 2) |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ax10o (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) ;
}

proof of ax10o {
	step 1 : wff = axm ax-11 () |- ( y = x -> ( A. x ph -> A. y ( y = x -> ph ) ) ) ;
	step 2 : wff = thm equcoms (step 1) |- ( x = y -> ( A. x ph -> A. y ( y = x -> ph ) ) ) ;
	step 3 : wff = thm a4s (step 2) |- ( A. x x = y -> ( A. x ph -> A. y ( y = x -> ph ) ) ) ;
	step 4 : wff = axm ax-10 () |- ( A. x x = y -> A. y y = x ) ;
	step 5 : wff = thm pm2_27 () |- ( y = x -> ( ( y = x -> ph ) -> ph ) ) ;
	step 6 : wff = thm 19_20ii (step 5) |- ( A. y y = x -> ( A. y ( y = x -> ph ) -> A. y ph ) ) ;
	step 7 : wff = thm syl (step 4, step 6) |- ( A. x x = y -> ( A. y ( y = x -> ph ) -> A. y ph ) ) ;
	step 8 : wff = thm syld (step 3, step 7) |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) ;
	qed prop 1 = step 8 ;
}

axiom ax-10o (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( A. x ph -> A. y ph ) ) ;
}

theorem ax10 (x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> A. y y = x ) ;
}

proof of ax10 {
	step 1 : wff = axm ax-10o () |- ( A. x x = y -> ( A. x x = y -> A. y x = y ) ) ;
	step 2 : wff = thm pm2_43i (step 1) |- ( A. x x = y -> A. y x = y ) ;
	step 3 : wff = thm equcomi () |- ( x = y -> y = x ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. y x = y -> A. y y = x ) ;
	step 5 : wff = thm syl (step 2, step 4) |- ( A. x x = y -> A. y y = x ) ;
	qed prop 1 = step 5 ;
}

theorem alequcom (x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> A. y y = x ) ;
}

proof of alequcom {
	step 1 : wff = axm ax-10 () |- ( A. x x = y -> A. y y = x ) ;
	qed prop 1 = step 1 ;
}

theorem alequcoms (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( A. x x = y -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. y y = x -> ph ) ;
}

proof of alequcoms {
	step 1 : wff = thm alequcom () |- ( A. y y = x -> A. x x = y ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( A. y y = x -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem nalequcoms (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( -. A. x x = y -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. y y = x -> ph ) ;
}

proof of nalequcoms {
	step 1 : wff = thm alequcom () |- ( A. x x = y -> A. y y = x ) ;
	step 2 : wff = thm nsyl4 (step 1, hyp 1) |- ( -. ph -> A. y y = x ) ;
	step 3 : wff = thm con1i (step 2) |- ( -. A. y y = x -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem hbae (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x x = y -> A. z A. x x = y ) ;
}

proof of hbae {
	step 1 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x x = y -> x = y ) ;
	step 3 : wff = thm syl7 (step 1, step 2) |- ( -. A. z z = x -> ( -. A. z z = y -> ( A. x x = y -> A. z x = y ) ) ) ;
	step 4 : wff = axm ax-10o () |- ( A. x x = z -> ( A. x x = y -> A. z x = y ) ) ;
	step 5 : wff = thm alequcoms (step 4) |- ( A. z z = x -> ( A. x x = y -> A. z x = y ) ) ;
	step 6 : wff = axm ax-10o () |- ( A. y y = z -> ( A. y x = y -> A. z x = y ) ) ;
	step 7 : wff = axm ax-10o () |- ( A. x x = y -> ( A. x x = y -> A. y x = y ) ) ;
	step 8 : wff = thm pm2_43i (step 7) |- ( A. x x = y -> A. y x = y ) ;
	step 9 : wff = thm syl5 (step 6, step 8) |- ( A. y y = z -> ( A. x x = y -> A. z x = y ) ) ;
	step 10 : wff = thm alequcoms (step 9) |- ( A. z z = y -> ( A. x x = y -> A. z x = y ) ) ;
	step 11 : wff = thm pm2_61ii (step 3, step 5, step 10) |- ( A. x x = y -> A. z x = y ) ;
	step 12 : wff = thm a5i (step 11) |- ( A. x x = y -> A. x A. z x = y ) ;
	step 13 : wff = axm ax-7 () |- ( A. x A. z x = y -> A. z A. x x = y ) ;
	step 14 : wff = thm syl (step 12, step 13) |- ( A. x x = y -> A. z A. x x = y ) ;
	qed prop 1 = step 14 ;
}

theorem hbaes (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( A. z A. x x = y -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x x = y -> ph ) ;
}

proof of hbaes {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( A. x x = y -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem hbnae (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
}

proof of hbnae {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = thm hbn (step 1) |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	qed prop 1 = step 2 ;
}

theorem hbnaes (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( A. z -. A. x x = y -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ph ) ;
}

proof of hbnaes {
	step 1 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 2 : wff = thm syl (step 1, hyp 1) |- ( -. A. x x = y -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem equs3 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) ;
}

proof of equs3 {
	step 1 : wff = thm alinexa () |- ( A. x ( x = y -> -. ph ) <-> -. E. x ( x = y /\ ph ) ) ;
	step 2 : wff = thm con2bii (step 1) |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem equs4 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) ;
}

proof of equs4 {
	step 1 : wff = thm pm3_27 () |- ( ( A. x ( x = y -> ph ) /\ x = y ) -> x = y ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ( x = y -> ph ) -> ( x = y -> ph ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( A. x ( x = y -> ph ) /\ x = y ) -> ph ) ;
	step 4 : wff = thm jc (step 1, step 3) |- ( ( A. x ( x = y -> ph ) /\ x = y ) -> -. ( x = y -> -. ph ) ) ;
	step 5 : wff = axm ax-4 () |- ( A. x ( x = y -> -. ph ) -> ( x = y -> -. ph ) ) ;
	step 6 : wff = thm nsyl (step 4, step 5) |- ( ( A. x ( x = y -> ph ) /\ x = y ) -> -. A. x ( x = y -> -. ph ) ) ;
	step 7 : wff = thm ex (step 6) |- ( A. x ( x = y -> ph ) -> ( x = y -> -. A. x ( x = y -> -. ph ) ) ) ;
	step 8 : wff = thm hbn1 () |- ( -. A. x ( x = y -> -. ph ) -> A. x -. A. x ( x = y -> -. ph ) ) ;
	step 9 : wff = thm syl6 (step 7, step 8) |- ( A. x ( x = y -> ph ) -> ( x = y -> A. x -. A. x ( x = y -> -. ph ) ) ) ;
	step 10 : wff = thm a5i (step 9) |- ( A. x ( x = y -> ph ) -> A. x ( x = y -> A. x -. A. x ( x = y -> -. ph ) ) ) ;
	step 11 : wff = axm ax-9o () |- ( A. x ( x = y -> A. x -. A. x ( x = y -> -. ph ) ) -> -. A. x ( x = y -> -. ph ) ) ;
	step 12 : wff = thm syl (step 10, step 11) |- ( A. x ( x = y -> ph ) -> -. A. x ( x = y -> -. ph ) ) ;
	step 13 : wff = thm equs3 () |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) ;
	step 14 : wff = thm sylibr (step 12, step 13) |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) ;
	qed prop 1 = step 14 ;
}

theorem equsal (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( x = y -> ph ) <-> ps ) ;
}

proof of equsal {
	step 1 : wff = thm 19_3 (hyp 1) |- ( A. x ps <-> ps ) ;
	step 2 : wff = thm syl6bbr (hyp 2, step 1) |- ( x = y -> ( ph <-> A. x ps ) ) ;
	step 3 : wff = thm pm5_74i (step 2) |- ( ( x = y -> ph ) <-> ( x = y -> A. x ps ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x ( x = y -> ph ) <-> A. x ( x = y -> A. x ps ) ) ;
	step 5 : wff = axm ax-1 () |- ( A. x ps -> ( x = y -> A. x ps ) ) ;
	step 6 : wff = thm a5i (step 5) |- ( A. x ps -> A. x ( x = y -> A. x ps ) ) ;
	step 7 : wff = thm syl (hyp 1, step 6) |- ( ps -> A. x ( x = y -> A. x ps ) ) ;
	step 8 : wff = axm ax-9o () |- ( A. x ( x = y -> A. x ps ) -> ps ) ;
	step 9 : wff = thm impbii (step 7, step 8) |- ( ps <-> A. x ( x = y -> A. x ps ) ) ;
	step 10 : wff = thm bitr4i (step 4, step 9) |- ( A. x ( x = y -> ph ) <-> ps ) ;
	qed prop 1 = step 10 ;
}

theorem equsex (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( x = y /\ ph ) <-> ps ) ;
}

proof of equsex {
	step 1 : wff = thm exnal () |- ( E. x -. ( x = y -> -. ph ) <-> -. A. x ( x = y -> -. ph ) ) ;
	step 2 : wff = def df-an () |- ( ( x = y /\ ph ) <-> -. ( x = y -> -. ph ) ) ;
	step 3 : wff = thm exbii (step 2) |- ( E. x ( x = y /\ ph ) <-> E. x -. ( x = y -> -. ph ) ) ;
	step 4 : wff = thm hbn (hyp 1) |- ( -. ps -> A. x -. ps ) ;
	step 5 : wff = thm notbid (hyp 2) |- ( x = y -> ( -. ph <-> -. ps ) ) ;
	step 6 : wff = thm equsal (step 4, step 5) |- ( A. x ( x = y -> -. ph ) <-> -. ps ) ;
	step 7 : wff = thm con2bii (step 6) |- ( ps <-> -. A. x ( x = y -> -. ph ) ) ;
	step 8 : wff = thm 3bitr4i (step 1, step 3, step 7) |- ( E. x ( x = y /\ ph ) <-> ps ) ;
	qed prop 1 = step 8 ;
}

theorem dvelimfALT (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. z ps ) ;
	hyp 3 : wff = |- ( z = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
}

proof of dvelimfALT {
	step 1 : wff = axm ax-10o () |- ( A. z z = x -> ( A. z A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ;
	step 2 : wff = thm alequcoms (step 1) |- ( A. x x = z -> ( A. z A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ;
	step 3 : wff = thm hba1 () |- ( A. z ( z = y -> ph ) -> A. z A. z ( z = y -> ph ) ) ;
	step 4 : wff = thm syl5 (step 2, step 3) |- ( A. x x = z -> ( A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ;
	step 5 : wff = thm a1d (step 4) |- ( A. x x = z -> ( -. A. x x = y -> ( A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ) ;
	step 6 : wff = thm hbnae () |- ( -. A. x x = z -> A. z -. A. x x = z ) ;
	step 7 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 8 : wff = thm hban (step 6, step 7) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> A. z ( -. A. x x = z /\ -. A. x x = y ) ) ;
	step 9 : wff = thm hbnae () |- ( -. A. x x = z -> A. x -. A. x x = z ) ;
	step 10 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 11 : wff = thm hban (step 9, step 10) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> A. x ( -. A. x x = z /\ -. A. x x = y ) ) ;
	step 12 : wff = axm ax-12 () |- ( -. A. x x = z -> ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ) ;
	step 13 : wff = thm imp (step 12) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( z = y -> A. x z = y ) ) ;
	step 14 : wff = thm a1i (hyp 1) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( ph -> A. x ph ) ) ;
	step 15 : wff = thm hbimd (step 11, step 13, step 14) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( ( z = y -> ph ) -> A. x ( z = y -> ph ) ) ) ;
	step 16 : wff = thm hbald (step 8, step 15) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ;
	step 17 : wff = thm ex (step 16) |- ( -. A. x x = z -> ( -. A. x x = y -> ( A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ) ;
	step 18 : wff = thm pm2_61i (step 5, step 17) |- ( -. A. x x = y -> ( A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ;
	step 19 : wff = thm equsal (hyp 2, hyp 3) |- ( A. z ( z = y -> ph ) <-> ps ) ;
	step 20 : wff = thm equsal (hyp 2, hyp 3) |- ( A. z ( z = y -> ph ) <-> ps ) ;
	step 21 : wff = thm albii (step 20) |- ( A. x A. z ( z = y -> ph ) <-> A. x ps ) ;
	step 22 : wff = thm 3imtr3g (step 18, step 19, step 21) |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
	qed prop 1 = step 22 ;
}

theorem dral1 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( A. x x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) ;
}

proof of dral1 {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. x A. x x = y ) ;
	step 2 : wff = thm biimpd (hyp 1) |- ( A. x x = y -> ( ph -> ps ) ) ;
	step 3 : wff = thm 19_20d (step 1, step 2) |- ( A. x x = y -> ( A. x ph -> A. x ps ) ) ;
	step 4 : wff = axm ax-10o () |- ( A. x x = y -> ( A. x ps -> A. y ps ) ) ;
	step 5 : wff = thm syld (step 3, step 4) |- ( A. x x = y -> ( A. x ph -> A. y ps ) ) ;
	step 6 : wff = thm hbae () |- ( A. x x = y -> A. y A. x x = y ) ;
	step 7 : wff = thm biimprd (hyp 1) |- ( A. x x = y -> ( ps -> ph ) ) ;
	step 8 : wff = thm 19_20d (step 6, step 7) |- ( A. x x = y -> ( A. y ps -> A. y ph ) ) ;
	step 9 : wff = axm ax-10o () |- ( A. y y = x -> ( A. y ph -> A. x ph ) ) ;
	step 10 : wff = thm alequcoms (step 9) |- ( A. x x = y -> ( A. y ph -> A. x ph ) ) ;
	step 11 : wff = thm syld (step 8, step 10) |- ( A. x x = y -> ( A. y ps -> A. x ph ) ) ;
	step 12 : wff = thm impbid (step 5, step 11) |- ( A. x x = y -> ( A. x ph <-> A. y ps ) ) ;
	qed prop 1 = step 12 ;
}

theorem dral2 (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( A. x x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) ;
}

proof of dral2 {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = thm albid (step 1, hyp 1) |- ( A. x x = y -> ( A. z ph <-> A. z ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem drex1 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( A. x x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x x = y -> ( E. x ph <-> E. y ps ) ) ;
}

proof of drex1 {
	step 1 : wff = thm notbid (hyp 1) |- ( A. x x = y -> ( -. ph <-> -. ps ) ) ;
	step 2 : wff = thm dral1 (step 1) |- ( A. x x = y -> ( A. x -. ph <-> A. y -. ps ) ) ;
	step 3 : wff = thm notbid (step 2) |- ( A. x x = y -> ( -. A. x -. ph <-> -. A. y -. ps ) ) ;
	step 4 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 5 : wff = def df-ex () |- ( E. y ps <-> -. A. y -. ps ) ;
	step 6 : wff = thm 3bitr4g (step 3, step 4, step 5) |- ( A. x x = y -> ( E. x ph <-> E. y ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem drex2 (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( A. x x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x x = y -> ( E. z ph <-> E. z ps ) ) ;
}

proof of drex2 {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = thm exbid (step 1, hyp 1) |- ( A. x x = y -> ( E. z ph <-> E. z ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem a4imt (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) -> ( A. x ph -> ps ) ) ;
}

proof of a4imt {
	step 1 : wff = thm imim2 () |- ( ( ps -> A. x ps ) -> ( ( ph -> ps ) -> ( ph -> A. x ps ) ) ) ;
	step 2 : wff = thm imim2d (step 1) |- ( ( ps -> A. x ps ) -> ( ( x = y -> ( ph -> ps ) ) -> ( x = y -> ( ph -> A. x ps ) ) ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) -> ( x = y -> ( ph -> A. x ps ) ) ) ;
	step 4 : wff = thm com23 (step 3) |- ( ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) -> ( ph -> ( x = y -> A. x ps ) ) ) ;
	step 5 : wff = thm 19_20ii (step 4) |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) -> ( A. x ph -> A. x ( x = y -> A. x ps ) ) ) ;
	step 6 : wff = axm ax-9o () |- ( A. x ( x = y -> A. x ps ) -> ps ) ;
	step 7 : wff = thm syl6 (step 5, step 6) |- ( A. x ( ( ps -> A. x ps ) /\ ( x = y -> ( ph -> ps ) ) ) -> ( A. x ph -> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem a4im (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = y -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of a4im {
	step 1 : wff = thm syl6com (hyp 2, hyp 1) |- ( ph -> ( x = y -> A. x ps ) ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ph -> A. x ( x = y -> A. x ps ) ) ;
	step 3 : wff = axm ax-9o () |- ( A. x ( x = y -> A. x ps ) -> ps ) ;
	step 4 : wff = thm syl (step 2, step 3) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 4 ;
}

theorem a4ime (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( x = y -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> E. x ps ) ;
}

proof of a4ime {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 2 : wff = thm con3d (hyp 2) |- ( x = y -> ( -. ps -> -. ph ) ) ;
	step 3 : wff = thm a4im (step 1, step 2) |- ( A. x -. ps -> -. ph ) ;
	step 4 : wff = thm con2i (step 3) |- ( ph -> -. A. x -. ps ) ;
	step 5 : wff = def df-ex () |- ( E. x ps <-> -. A. x -. ps ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( ph -> E. x ps ) ;
	qed prop 1 = step 6 ;
}

theorem a4imed (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ch -> A. x ch ) ;
	hyp 2 : wff = |- ( ch -> ( ph -> A. x ph ) ) ;
	hyp 3 : wff = |- ( x = y -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ch -> ( ph -> E. x ps ) ) ;
}

proof of a4imed {
	step 1 : wff = thm 19_26 () |- ( A. x ( ch /\ ph ) <-> ( A. x ch /\ A. x ph ) ) ;
	step 2 : wff = thm adantr (hyp 1) |- ( ( ch /\ ph ) -> A. x ch ) ;
	step 3 : wff = thm imp (hyp 2) |- ( ( ch /\ ph ) -> A. x ph ) ;
	step 4 : wff = thm sylanbrc (step 1, step 2, step 3) |- ( ( ch /\ ph ) -> A. x ( ch /\ ph ) ) ;
	step 5 : wff = thm adantld (hyp 3) |- ( x = y -> ( ( ch /\ ph ) -> ps ) ) ;
	step 6 : wff = thm a4ime (step 4, step 5) |- ( ( ch /\ ph ) -> E. x ps ) ;
	step 7 : wff = thm ex (step 6) |- ( ch -> ( ph -> E. x ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem cbv1 (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> A. y ps ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> A. x ch ) ) ;
	hyp 3 : wff = |- ( ph -> ( x = y -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) ;
}

proof of cbv1 {
	step 1 : wff = thm a4s (hyp 1) |- ( A. y ph -> ( ps -> A. y ps ) ) ;
	step 2 : wff = thm 19_20ii (step 1) |- ( A. x A. y ph -> ( A. x ps -> A. x A. y ps ) ) ;
	step 3 : wff = axm ax-7 () |- ( A. x A. y ps -> A. y A. x ps ) ;
	step 4 : wff = thm syl6 (step 2, step 3) |- ( A. x A. y ph -> ( A. x ps -> A. y A. x ps ) ) ;
	step 5 : wff = thm com23 (hyp 3) |- ( ph -> ( ps -> ( x = y -> ch ) ) ) ;
	step 6 : wff = thm syl6d (step 5, hyp 2) |- ( ph -> ( ps -> ( x = y -> A. x ch ) ) ) ;
	step 7 : wff = thm 19_20ii (step 6) |- ( A. x ph -> ( A. x ps -> A. x ( x = y -> A. x ch ) ) ) ;
	step 8 : wff = axm ax-9o () |- ( A. x ( x = y -> A. x ch ) -> ch ) ;
	step 9 : wff = thm syl6 (step 7, step 8) |- ( A. x ph -> ( A. x ps -> ch ) ) ;
	step 10 : wff = thm 19_20ii (step 9) |- ( A. y A. x ph -> ( A. y A. x ps -> A. y ch ) ) ;
	step 11 : wff = thm a7s (step 10) |- ( A. x A. y ph -> ( A. y A. x ps -> A. y ch ) ) ;
	step 12 : wff = thm syld (step 4, step 11) |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) ;
	qed prop 1 = step 12 ;
}

theorem cbv2 (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> A. y ps ) ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> A. x ch ) ) ;
	hyp 3 : wff = |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ph -> ( A. x ps <-> A. y ch ) ) ;
}

proof of cbv2 {
	step 1 : wff = thm bi1 () |- ( ( ps <-> ch ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl6 (hyp 3, step 1) |- ( ph -> ( x = y -> ( ps -> ch ) ) ) ;
	step 3 : wff = thm cbv1 (hyp 1, hyp 2, step 2) |- ( A. x A. y ph -> ( A. x ps -> A. y ch ) ) ;
	step 4 : wff = thm bi2 () |- ( ( ps <-> ch ) -> ( ch -> ps ) ) ;
	step 5 : wff = thm syl6 (hyp 3, step 4) |- ( ph -> ( x = y -> ( ch -> ps ) ) ) ;
	step 6 : wff = thm equcomi () |- ( y = x -> x = y ) ;
	step 7 : wff = thm syl5 (step 5, step 6) |- ( ph -> ( y = x -> ( ch -> ps ) ) ) ;
	step 8 : wff = thm cbv1 (hyp 2, hyp 1, step 7) |- ( A. y A. x ph -> ( A. y ch -> A. x ps ) ) ;
	step 9 : wff = thm a7s (step 8) |- ( A. x A. y ph -> ( A. y ch -> A. x ps ) ) ;
	step 10 : wff = thm impbid (step 3, step 9) |- ( A. x A. y ph -> ( A. x ps <-> A. y ch ) ) ;
	qed prop 1 = step 10 ;
}

theorem cbv3 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> A. y ps ) ;
}

proof of cbv3 {
	step 1 : wff = thm imim2i (hyp 1) |- ( ( ph -> ph ) -> ( ph -> A. y ph ) ) ;
	step 2 : wff = thm a1i (hyp 2) |- ( ( ph -> ph ) -> ( ps -> A. x ps ) ) ;
	step 3 : wff = thm a1i (hyp 3) |- ( ( ph -> ph ) -> ( x = y -> ( ph -> ps ) ) ) ;
	step 4 : wff = thm cbv1 (step 1, step 2, step 3) |- ( A. x A. y ( ph -> ph ) -> ( A. x ph -> A. y ps ) ) ;
	step 5 : wff = thm id () |- ( ph -> ph ) ;
	step 6 : wff = axm ax-gen (step 5) |- A. y ( ph -> ph ) ;
	step 7 : wff = thm mpg (step 4, step 6) |- ( A. x ph -> A. y ps ) ;
	qed prop 1 = step 7 ;
}

theorem cbval (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph <-> A. y ps ) ;
}

proof of cbval {
	step 1 : wff = thm imim2i (hyp 1) |- ( ( ph -> ph ) -> ( ph -> A. y ph ) ) ;
	step 2 : wff = thm a1i (hyp 2) |- ( ( ph -> ph ) -> ( ps -> A. x ps ) ) ;
	step 3 : wff = thm a1i (hyp 3) |- ( ( ph -> ph ) -> ( x = y -> ( ph <-> ps ) ) ) ;
	step 4 : wff = thm cbv2 (step 1, step 2, step 3) |- ( A. x A. y ( ph -> ph ) -> ( A. x ph <-> A. y ps ) ) ;
	step 5 : wff = thm id () |- ( ph -> ph ) ;
	step 6 : wff = axm ax-gen (step 5) |- A. y ( ph -> ph ) ;
	step 7 : wff = thm mpg (step 4, step 6) |- ( A. x ph <-> A. y ps ) ;
	qed prop 1 = step 7 ;
}

theorem cbvex (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph <-> E. y ps ) ;
}

proof of cbvex {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. y -. ph ) ;
	step 2 : wff = thm hbn (hyp 2) |- ( -. ps -> A. x -. ps ) ;
	step 3 : wff = thm notbid (hyp 3) |- ( x = y -> ( -. ph <-> -. ps ) ) ;
	step 4 : wff = thm cbval (step 1, step 2, step 3) |- ( A. x -. ph <-> A. y -. ps ) ;
	step 5 : wff = thm notbii (step 4) |- ( -. A. x -. ph <-> -. A. y -. ps ) ;
	step 6 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 7 : wff = def df-ex () |- ( E. y ps <-> -. A. y -. ps ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( E. x ph <-> E. y ps ) ;
	qed prop 1 = step 8 ;
}

theorem chvar (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of chvar {
	step 1 : wff = thm biimpd (hyp 2) |- ( x = y -> ( ph -> ps ) ) ;
	step 2 : wff = thm a4im (hyp 1, step 1) |- ( A. x ph -> ps ) ;
	step 3 : wff = thm mpg (step 2, hyp 3) |- ps ;
	qed prop 1 = step 3 ;
}

theorem equvini (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> E. z ( x = z /\ z = y ) ) ;
}

proof of equvini {
	step 1 : wff = thm a9e () |- E. z z = y ;
	step 2 : wff = thm equid () |- z = z ;
	step 3 : wff = thm jctl (step 2) |- ( z = y -> ( z = z /\ z = y ) ) ;
	step 4 : wff = thm 19_22i (step 3) |- ( E. z z = y -> E. z ( z = z /\ z = y ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- E. z ( z = z /\ z = y ) ;
	step 6 : wff = thm hbae () |- ( A. z z = x -> A. z A. z z = x ) ;
	step 7 : wff = axm ax-8 () |- ( z = x -> ( z = z -> x = z ) ) ;
	step 8 : wff = thm a4s (step 7) |- ( A. z z = x -> ( z = z -> x = z ) ) ;
	step 9 : wff = thm anim1d (step 8) |- ( A. z z = x -> ( ( z = z /\ z = y ) -> ( x = z /\ z = y ) ) ) ;
	step 10 : wff = thm 19_22d (step 6, step 9) |- ( A. z z = x -> ( E. z ( z = z /\ z = y ) -> E. z ( x = z /\ z = y ) ) ) ;
	step 11 : wff = thm mpi (step 5, step 10) |- ( A. z z = x -> E. z ( x = z /\ z = y ) ) ;
	step 12 : wff = thm a9e () |- E. z z = x ;
	step 13 : wff = thm equcomi () |- ( z = x -> x = z ) ;
	step 14 : wff = thm equid () |- z = z ;
	step 15 : wff = thm jctir (step 13, step 14) |- ( z = x -> ( x = z /\ z = z ) ) ;
	step 16 : wff = thm 19_22i (step 15) |- ( E. z z = x -> E. z ( x = z /\ z = z ) ) ;
	step 17 : wff = axm ax-mp (step 12, step 16) |- E. z ( x = z /\ z = z ) ;
	step 18 : wff = thm hbae () |- ( A. z z = y -> A. z A. z z = y ) ;
	step 19 : wff = thm equtrr () |- ( z = y -> ( z = z -> z = y ) ) ;
	step 20 : wff = thm a4s (step 19) |- ( A. z z = y -> ( z = z -> z = y ) ) ;
	step 21 : wff = thm anim2d (step 20) |- ( A. z z = y -> ( ( x = z /\ z = z ) -> ( x = z /\ z = y ) ) ) ;
	step 22 : wff = thm 19_22d (step 18, step 21) |- ( A. z z = y -> ( E. z ( x = z /\ z = z ) -> E. z ( x = z /\ z = y ) ) ) ;
	step 23 : wff = thm mpi (step 17, step 22) |- ( A. z z = y -> E. z ( x = z /\ z = y ) ) ;
	step 24 : wff = thm jaoi (step 11, step 23) |- ( ( A. z z = x \/ A. z z = y ) -> E. z ( x = z /\ z = y ) ) ;
	step 25 : wff = thm a1d (step 24) |- ( ( A. z z = x \/ A. z z = y ) -> ( x = y -> E. z ( x = z /\ z = y ) ) ) ;
	step 26 : wff = thm ioran () |- ( -. ( A. z z = x \/ A. z z = y ) <-> ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 27 : wff = thm hbnae () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 28 : wff = thm hbnae () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 29 : wff = thm hban (step 27, step 28) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 30 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 31 : wff = thm imp (step 30) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 32 : wff = axm ax-8 () |- ( x = z -> ( x = y -> z = y ) ) ;
	step 33 : wff = thm anc2li (step 32) |- ( x = z -> ( x = y -> ( x = z /\ z = y ) ) ) ;
	step 34 : wff = thm equcoms (step 33) |- ( z = x -> ( x = y -> ( x = z /\ z = y ) ) ) ;
	step 35 : wff = thm a4imed (step 29, step 31, step 34) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> E. z ( x = z /\ z = y ) ) ) ;
	step 36 : wff = thm sylbi (step 26, step 35) |- ( -. ( A. z z = x \/ A. z z = y ) -> ( x = y -> E. z ( x = z /\ z = y ) ) ) ;
	step 37 : wff = thm pm2_61i (step 25, step 36) |- ( x = y -> E. z ( x = z /\ z = y ) ) ;
	qed prop 1 = step 37 ;
}

theorem hbequid2 (x : set)  {
	prop 1 : wff = |- ( x = x -> A. x x = x ) ;
}

proof of hbequid2 {
	step 1 : wff = axm ax-12 () |- ( -. A. x x = x -> ( -. A. x x = x -> ( x = x -> A. x x = x ) ) ) ;
	step 2 : wff = axm ax-1 () |- ( A. x x = x -> ( x = x -> A. x x = x ) ) ;
	step 3 : wff = axm ax-1 () |- ( A. x x = x -> ( x = x -> A. x x = x ) ) ;
	step 4 : wff = thm pm2_61ii (step 1, step 2, step 3) |- ( x = x -> A. x x = x ) ;
	qed prop 1 = step 4 ;
}

constant {
	symbol [ ;
}

constant {
	symbol / ;
}

constant {
	symbol ] ;
}

rule wsbc (ph : wff, x : set, A : class) {
	term : wff = # [ A / x ] ph ;
}

definition df-sb (ph : wff, x : set, y : set)  {
	defiendum : wff = # [ y / x ] ph ;
	definiens : wff = # ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem sbimi (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph -> [ y / x ] ps ) ;
}

proof of sbimi {
	step 1 : wff = thm imim2i (hyp 1) |- ( ( x = y -> ph ) -> ( x = y -> ps ) ) ;
	step 2 : wff = thm anim2i (hyp 1) |- ( ( x = y /\ ph ) -> ( x = y /\ ps ) ) ;
	step 3 : wff = thm 19_22i (step 2) |- ( E. x ( x = y /\ ph ) -> E. x ( x = y /\ ps ) ) ;
	step 4 : wff = thm anim12i (step 1, step 3) |- ( ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) -> ( ( x = y -> ps ) /\ E. x ( x = y /\ ps ) ) ) ;
	step 5 : wff = def df-sb () |- ( [ y / x ] ph <-> ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) ;
	step 6 : wff = def df-sb () |- ( [ y / x ] ps <-> ( ( x = y -> ps ) /\ E. x ( x = y /\ ps ) ) ) ;
	step 7 : wff = thm 3imtr4i (step 4, step 5, step 6) |- ( [ y / x ] ph -> [ y / x ] ps ) ;
	qed prop 1 = step 7 ;
}

theorem sbbii (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> [ y / x ] ps ) ;
}

proof of sbbii {
	step 1 : wff = thm biimpi (hyp 1) |- ( ph -> ps ) ;
	step 2 : wff = thm sbimi (step 1) |- ( [ y / x ] ph -> [ y / x ] ps ) ;
	step 3 : wff = thm biimpri (hyp 1) |- ( ps -> ph ) ;
	step 4 : wff = thm sbimi (step 3) |- ( [ y / x ] ps -> [ y / x ] ph ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( [ y / x ] ph <-> [ y / x ] ps ) ;
	qed prop 1 = step 5 ;
}

theorem drsb1 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( [ z / x ] ph <-> [ z / y ] ph ) ) ;
}

proof of drsb1 {
	step 1 : wff = thm equequ1 () |- ( x = y -> ( x = z <-> y = z ) ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. x x = y -> ( x = z <-> y = z ) ) ;
	step 3 : wff = thm imbi1d (step 2) |- ( A. x x = y -> ( ( x = z -> ph ) <-> ( y = z -> ph ) ) ) ;
	step 4 : wff = thm equequ1 () |- ( x = y -> ( x = z <-> y = z ) ) ;
	step 5 : wff = thm a4s (step 4) |- ( A. x x = y -> ( x = z <-> y = z ) ) ;
	step 6 : wff = thm anbi1d (step 5) |- ( A. x x = y -> ( ( x = z /\ ph ) <-> ( y = z /\ ph ) ) ) ;
	step 7 : wff = thm drex1 (step 6) |- ( A. x x = y -> ( E. x ( x = z /\ ph ) <-> E. y ( y = z /\ ph ) ) ) ;
	step 8 : wff = thm anbi12d (step 3, step 7) |- ( A. x x = y -> ( ( ( x = z -> ph ) /\ E. x ( x = z /\ ph ) ) <-> ( ( y = z -> ph ) /\ E. y ( y = z /\ ph ) ) ) ) ;
	step 9 : wff = def df-sb () |- ( [ z / x ] ph <-> ( ( x = z -> ph ) /\ E. x ( x = z /\ ph ) ) ) ;
	step 10 : wff = def df-sb () |- ( [ z / y ] ph <-> ( ( y = z -> ph ) /\ E. y ( y = z /\ ph ) ) ) ;
	step 11 : wff = thm 3bitr4g (step 8, step 9, step 10) |- ( A. x x = y -> ( [ z / x ] ph <-> [ z / y ] ph ) ) ;
	qed prop 1 = step 11 ;
}

theorem sb1 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
}

proof of sb1 {
	step 1 : wff = def df-sb () |- ( [ y / x ] ph <-> ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) ;
	step 2 : wff = thm pm3_27bi (step 1) |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem sb2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
}

proof of sb2 {
	step 1 : wff = def df-sb () |- ( [ y / x ] ph <-> ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ( x = y -> ph ) -> ( x = y -> ph ) ) ;
	step 3 : wff = thm equs4 () |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) ;
	step 4 : wff = thm sylanbrc (step 1, step 2, step 3) |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	qed prop 1 = step 4 ;
}

theorem sbequ1 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
}

proof of sbequ1 {
	step 1 : wff = def df-sb () |- ( [ y / x ] ph <-> ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) ;
	step 2 : wff = thm pm3_4 () |- ( ( x = y /\ ph ) -> ( x = y -> ph ) ) ;
	step 3 : wff = thm 19_8a () |- ( ( x = y /\ ph ) -> E. x ( x = y /\ ph ) ) ;
	step 4 : wff = thm sylanbrc (step 1, step 2, step 3) |- ( ( x = y /\ ph ) -> [ y / x ] ph ) ;
	step 5 : wff = thm ex (step 4) |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbequ2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
}

proof of sbequ2 {
	step 1 : wff = thm pm3_26 () |- ( ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) -> ( x = y -> ph ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( x = y -> ( ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) -> ph ) ) ;
	step 3 : wff = def df-sb () |- ( [ y / x ] ph <-> ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) ;
	step 4 : wff = thm syl5ib (step 2, step 3) |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem stdpc7 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( [ x / y ] ph -> ph ) ) ;
}

proof of stdpc7 {
	step 1 : wff = thm sbequ2 () |- ( y = x -> ( [ x / y ] ph -> ph ) ) ;
	step 2 : wff = thm equcoms (step 1) |- ( x = y -> ( [ x / y ] ph -> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem sbequ12 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
}

proof of sbequ12 {
	step 1 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 2 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 3 : wff = thm impbid (step 1, step 2) |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbequ12r (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( [ x / y ] ph <-> ph ) ) ;
}

proof of sbequ12r {
	step 1 : wff = thm sbequ12 () |- ( y = x -> ( ph <-> [ x / y ] ph ) ) ;
	step 2 : wff = thm equcom () |- ( x = y <-> y = x ) ;
	step 3 : wff = thm bicom () |- ( ( [ x / y ] ph <-> ph ) <-> ( ph <-> [ x / y ] ph ) ) ;
	step 4 : wff = thm 3imtr4i (step 1, step 2, step 3) |- ( x = y -> ( [ x / y ] ph <-> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbequ12a (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( [ y / x ] ph <-> [ x / y ] ph ) ) ;
}

proof of sbequ12a {
	step 1 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 2 : wff = thm sbequ12 () |- ( y = x -> ( ph <-> [ x / y ] ph ) ) ;
	step 3 : wff = thm equcoms (step 2) |- ( x = y -> ( ph <-> [ x / y ] ph ) ) ;
	step 4 : wff = thm bitr3d (step 1, step 3) |- ( x = y -> ( [ y / x ] ph <-> [ x / y ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbid (ph : wff, x : set)  {
	prop 1 : wff = |- ( [ x / x ] ph <-> ph ) ;
}

proof of sbid {
	step 1 : wff = thm equid () |- x = x ;
	step 2 : wff = thm sbequ12 () |- ( x = x -> ( ph <-> [ x / x ] ph ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ph <-> [ x / x ] ph ) ;
	step 4 : wff = thm bicomi (step 3) |- ( [ x / x ] ph <-> ph ) ;
	qed prop 1 = step 4 ;
}

theorem stdpc4 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ph -> [ y / x ] ph ) ;
}

proof of stdpc4 {
	step 1 : wff = axm ax-1 () |- ( ph -> ( x = y -> ph ) ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ph -> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 4 : wff = thm syl (step 2, step 3) |- ( A. x ph -> [ y / x ] ph ) ;
	qed prop 1 = step 4 ;
}

theorem sbf (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> ph ) ;
}

proof of sbf {
	step 1 : wff = thm sb1 () |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
	step 2 : wff = thm 19_41 (hyp 1) |- ( E. x ( x = y /\ ph ) <-> ( E. x x = y /\ ph ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( [ y / x ] ph -> ( E. x x = y /\ ph ) ) ;
	step 4 : wff = thm pm3_27d (step 3) |- ( [ y / x ] ph -> ph ) ;
	step 5 : wff = thm stdpc4 () |- ( A. x ph -> [ y / x ] ph ) ;
	step 6 : wff = thm syl (hyp 1, step 5) |- ( ph -> [ y / x ] ph ) ;
	step 7 : wff = thm impbii (step 4, step 6) |- ( [ y / x ] ph <-> ph ) ;
	qed prop 1 = step 7 ;
}

theorem sbf2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] A. x ph <-> A. x ph ) ;
}

proof of sbf2 {
	step 1 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 2 : wff = thm sbf (step 1) |- ( [ y / x ] A. x ph <-> A. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem sb6x (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
}

proof of sb6x {
	step 1 : wff = thm sbf (hyp 1) |- ( [ y / x ] ph <-> ph ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( x = y -> ph ) ) ;
	step 3 : wff = thm 19_21ai (hyp 1, step 2) |- ( ph -> A. x ( x = y -> ph ) ) ;
	step 4 : wff = thm sylbi (step 1, step 3) |- ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ;
	step 5 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 6 : wff = thm impbii (step 4, step 5) |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem hbs1f (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
}

proof of hbs1f {
	step 1 : wff = thm sb1 () |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
	step 2 : wff = thm 19_41 (hyp 1) |- ( E. x ( x = y /\ ph ) <-> ( E. x x = y /\ ph ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( [ y / x ] ph -> ( E. x x = y /\ ph ) ) ;
	step 4 : wff = thm pm3_27d (step 3) |- ( [ y / x ] ph -> ph ) ;
	step 5 : wff = thm stdpc4 () |- ( A. x ph -> [ y / x ] ph ) ;
	step 6 : wff = thm a5i (step 5) |- ( A. x ph -> A. x [ y / x ] ph ) ;
	step 7 : wff = thm 3syl (step 4, hyp 1, step 6) |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	qed prop 1 = step 7 ;
}

theorem sbequ5 (x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( [ w / z ] A. x x = y <-> A. x x = y ) ;
}

proof of sbequ5 {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = thm sbf (step 1) |- ( [ w / z ] A. x x = y <-> A. x x = y ) ;
	qed prop 1 = step 2 ;
}

theorem sbequ6 (x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( [ w / z ] -. A. x x = y <-> -. A. x x = y ) ;
}

proof of sbequ6 {
	step 1 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 2 : wff = thm sbf (step 1) |- ( [ w / z ] -. A. x x = y <-> -. A. x x = y ) ;
	qed prop 1 = step 2 ;
}

theorem sbt (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- [ y / x ] ph ;
}

proof of sbt {
	step 1 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 2 : wff = thm a1i (hyp 1) |- ( x = y -> ph ) ;
	step 3 : wff = thm mpg (step 1, step 2) |- [ y / x ] ph ;
	qed prop 1 = step 3 ;
}

theorem equsb1 (x : set, y : set)  {
	prop 1 : wff = |- [ y / x ] x = y ;
}

proof of equsb1 {
	step 1 : wff = thm sb2 () |- ( A. x ( x = y -> x = y ) -> [ y / x ] x = y ) ;
	step 2 : wff = thm id () |- ( x = y -> x = y ) ;
	step 3 : wff = thm mpg (step 1, step 2) |- [ y / x ] x = y ;
	qed prop 1 = step 3 ;
}

theorem equsb2 (x : set, y : set)  {
	prop 1 : wff = |- [ y / x ] y = x ;
}

proof of equsb2 {
	step 1 : wff = thm sb2 () |- ( A. x ( x = y -> y = x ) -> [ y / x ] y = x ) ;
	step 2 : wff = thm equcomi () |- ( x = y -> y = x ) ;
	step 3 : wff = thm mpg (step 1, step 2) |- [ y / x ] y = x ;
	qed prop 1 = step 3 ;
}

theorem sbied (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ch -> A. x ch ) ) ;
	hyp 3 : wff = |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( [ y / x ] ps <-> ch ) ) ;
}

proof of sbied {
	step 1 : wff = thm bi1 () |- ( ( ps <-> ch ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm syl6 (hyp 3, step 1) |- ( ph -> ( x = y -> ( ps -> ch ) ) ) ;
	step 3 : wff = thm imp3a (step 2) |- ( ph -> ( ( x = y /\ ps ) -> ch ) ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x ph -> A. x ( ( x = y /\ ps ) -> ch ) ) ;
	step 5 : wff = thm 19_22 () |- ( A. x ( ( x = y /\ ps ) -> ch ) -> ( E. x ( x = y /\ ps ) -> E. x ch ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( A. x ph -> ( E. x ( x = y /\ ps ) -> E. x ch ) ) ;
	step 7 : wff = thm sb1 () |- ( [ y / x ] ps -> E. x ( x = y /\ ps ) ) ;
	step 8 : wff = thm syl5 (step 6, step 7) |- ( A. x ph -> ( [ y / x ] ps -> E. x ch ) ) ;
	step 9 : wff = thm 19_20i (hyp 2) |- ( A. x ph -> A. x ( ch -> A. x ch ) ) ;
	step 10 : wff = thm hba1 () |- ( A. x ch -> A. x A. x ch ) ;
	step 11 : wff = thm 19_23 (step 10) |- ( A. x ( ch -> A. x ch ) <-> ( E. x ch -> A. x ch ) ) ;
	step 12 : wff = thm sylib (step 9, step 11) |- ( A. x ph -> ( E. x ch -> A. x ch ) ) ;
	step 13 : wff = axm ax-4 () |- ( A. x ch -> ch ) ;
	step 14 : wff = thm syl6 (step 12, step 13) |- ( A. x ph -> ( E. x ch -> ch ) ) ;
	step 15 : wff = thm syld (step 8, step 14) |- ( A. x ph -> ( [ y / x ] ps -> ch ) ) ;
	step 16 : wff = thm syl (hyp 1, step 15) |- ( ph -> ( [ y / x ] ps -> ch ) ) ;
	step 17 : wff = thm a4s (hyp 2) |- ( A. x ph -> ( ch -> A. x ch ) ) ;
	step 18 : wff = thm bi2 () |- ( ( ps <-> ch ) -> ( ch -> ps ) ) ;
	step 19 : wff = thm syl6 (hyp 3, step 18) |- ( ph -> ( x = y -> ( ch -> ps ) ) ) ;
	step 20 : wff = thm com23 (step 19) |- ( ph -> ( ch -> ( x = y -> ps ) ) ) ;
	step 21 : wff = thm 19_20ii (step 20) |- ( A. x ph -> ( A. x ch -> A. x ( x = y -> ps ) ) ) ;
	step 22 : wff = thm sb2 () |- ( A. x ( x = y -> ps ) -> [ y / x ] ps ) ;
	step 23 : wff = thm syl6 (step 21, step 22) |- ( A. x ph -> ( A. x ch -> [ y / x ] ps ) ) ;
	step 24 : wff = thm syld (step 17, step 23) |- ( A. x ph -> ( ch -> [ y / x ] ps ) ) ;
	step 25 : wff = thm syl (hyp 1, step 24) |- ( ph -> ( ch -> [ y / x ] ps ) ) ;
	step 26 : wff = thm impbid (step 16, step 25) |- ( ph -> ( [ y / x ] ps <-> ch ) ) ;
	qed prop 1 = step 26 ;
}

theorem sbie (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> ps ) ;
}

proof of sbie {
	step 1 : wff = thm id () |- ( ph -> ph ) ;
	step 2 : wff = thm id () |- ( ph -> ph ) ;
	step 3 : wff = thm hbth (step 2) |- ( ( ph -> ph ) -> A. x ( ph -> ph ) ) ;
	step 4 : wff = thm a1i (hyp 1) |- ( ( ph -> ph ) -> ( ps -> A. x ps ) ) ;
	step 5 : wff = thm a1i (hyp 2) |- ( ( ph -> ph ) -> ( x = y -> ( ph <-> ps ) ) ) ;
	step 6 : wff = thm sbied (step 3, step 4, step 5) |- ( ( ph -> ph ) -> ( [ y / x ] ph <-> ps ) ) ;
	step 7 : wff = axm ax-mp (step 1, step 6) |- ( [ y / x ] ph <-> ps ) ;
	qed prop 1 = step 7 ;
}

theorem equs5a (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) ;
}

proof of equs5a {
	step 1 : wff = thm hba1 () |- ( A. x ( x = y -> ph ) -> A. x A. x ( x = y -> ph ) ) ;
	step 2 : wff = axm ax-11 () |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) ;
	step 4 : wff = thm 19_23ai (step 1, step 3) |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem equs5e (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> E. y ph ) ) ;
}

proof of equs5e {
	step 1 : wff = thm equs3 () |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) ;
	step 2 : wff = thm hbn1 () |- ( -. A. x ( x = y -> -. ph ) -> A. x -. A. x ( x = y -> -. ph ) ) ;
	step 3 : wff = axm ax-11 () |- ( x = y -> ( A. y -. ph -> A. x ( x = y -> -. ph ) ) ) ;
	step 4 : wff = thm con3d (step 3) |- ( x = y -> ( -. A. x ( x = y -> -. ph ) -> -. A. y -. ph ) ) ;
	step 5 : wff = thm com12 (step 4) |- ( -. A. x ( x = y -> -. ph ) -> ( x = y -> -. A. y -. ph ) ) ;
	step 6 : wff = def df-ex () |- ( E. y ph <-> -. A. y -. ph ) ;
	step 7 : wff = thm syl6ibr (step 5, step 6) |- ( -. A. x ( x = y -> -. ph ) -> ( x = y -> E. y ph ) ) ;
	step 8 : wff = thm 19_21ai (step 2, step 7) |- ( -. A. x ( x = y -> -. ph ) -> A. x ( x = y -> E. y ph ) ) ;
	step 9 : wff = thm sylbi (step 1, step 8) |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> E. y ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem sb4a (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) ;
}

proof of sb4a {
	step 1 : wff = thm sb1 () |- ( [ y / x ] A. y ph -> E. x ( x = y /\ A. y ph ) ) ;
	step 2 : wff = thm equs5a () |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem equs45f (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
}

proof of equs45f {
	step 1 : wff = thm anim2i (hyp 1) |- ( ( x = y /\ ph ) -> ( x = y /\ A. y ph ) ) ;
	step 2 : wff = thm 19_22i (step 1) |- ( E. x ( x = y /\ ph ) -> E. x ( x = y /\ A. y ph ) ) ;
	step 3 : wff = thm equs5a () |- ( E. x ( x = y /\ A. y ph ) -> A. x ( x = y -> ph ) ) ;
	step 4 : wff = thm syl (step 2, step 3) |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ;
	step 5 : wff = thm equs4 () |- ( A. x ( x = y -> ph ) -> E. x ( x = y /\ ph ) ) ;
	step 6 : wff = thm impbii (step 4, step 5) |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem sb6f (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
}

proof of sb6f {
	step 1 : wff = thm sbimi (hyp 1) |- ( [ y / x ] ph -> [ y / x ] A. y ph ) ;
	step 2 : wff = thm sb4a () |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ;
	step 4 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 5 : wff = thm impbii (step 3, step 4) |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem sb5f (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) ;
}

proof of sb5f {
	step 1 : wff = thm sb6f (hyp 1) |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	step 2 : wff = thm equs45f (hyp 1) |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem sb4e (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph -> A. x ( x = y -> E. y ph ) ) ;
}

proof of sb4e {
	step 1 : wff = thm sb1 () |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
	step 2 : wff = thm equs5e () |- ( E. x ( x = y /\ ph ) -> A. x ( x = y -> E. y ph ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( [ y / x ] ph -> A. x ( x = y -> E. y ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem hbsb2a (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] A. y ph -> A. x [ y / x ] ph ) ;
}

proof of hbsb2a {
	step 1 : wff = thm sb4a () |- ( [ y / x ] A. y ph -> A. x ( x = y -> ph ) ) ;
	step 2 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 3 : wff = thm a5i (step 2) |- ( A. x ( x = y -> ph ) -> A. x [ y / x ] ph ) ;
	step 4 : wff = thm syl (step 1, step 3) |- ( [ y / x ] A. y ph -> A. x [ y / x ] ph ) ;
	qed prop 1 = step 4 ;
}

theorem hbsb2e (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph -> A. x [ y / x ] E. y ph ) ;
}

proof of hbsb2e {
	step 1 : wff = thm sb4e () |- ( [ y / x ] ph -> A. x ( x = y -> E. y ph ) ) ;
	step 2 : wff = thm sb2 () |- ( A. x ( x = y -> E. y ph ) -> [ y / x ] E. y ph ) ;
	step 3 : wff = thm a5i (step 2) |- ( A. x ( x = y -> E. y ph ) -> A. x [ y / x ] E. y ph ) ;
	step 4 : wff = thm syl (step 1, step 3) |- ( [ y / x ] ph -> A. x [ y / x ] E. y ph ) ;
	qed prop 1 = step 4 ;
}

theorem hbsb3 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
}

proof of hbsb3 {
	step 1 : wff = thm sbimi (hyp 1) |- ( [ y / x ] ph -> [ y / x ] A. y ph ) ;
	step 2 : wff = thm hbsb2a () |- ( [ y / x ] A. y ph -> A. x [ y / x ] ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	qed prop 1 = step 3 ;
}

theorem a4imv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of a4imv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm a4im (step 1, hyp 1) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem aev (x : set, y : set, z : set, w : set, v : set)  {
	prop 1 : wff = |- ( A. x x = y -> A. z w = v ) ;
}

proof of aev {
	var u : set, f : set;
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = thm hbae () |- ( A. x x = y -> A. x A. x x = y ) ;
	step 3 : wff = thm alequcom () |- ( A. x x = y -> A. y y = x ) ;
	step 4 : wff = axm ax-8 () |- ( y = u -> ( y = x -> u = x ) ) ;
	step 5 : wff = thm a4imv (step 4) |- ( A. y y = x -> u = x ) ;
	step 6 : wff = thm equcomi () |- ( u = x -> x = u ) ;
	step 7 : wff = thm 3syl (step 3, step 5, step 6) |- ( A. x x = y -> x = u ) ;
	step 8 : wff = thm 19_20i (step 7) |- ( A. x A. x x = y -> A. x x = u ) ;
	step 9 : wff = thm alequcom () |- ( A. x x = u -> A. u u = x ) ;
	step 10 : wff = thm alequcom () |- ( A. u u = x -> A. x x = u ) ;
	step 11 : wff = axm ax-8 () |- ( x = f -> ( x = u -> f = u ) ) ;
	step 12 : wff = thm a4imv (step 11) |- ( A. x x = u -> f = u ) ;
	step 13 : wff = thm equcomi () |- ( f = u -> u = f ) ;
	step 14 : wff = thm 3syl (step 10, step 12, step 13) |- ( A. u u = x -> u = f ) ;
	step 15 : wff = thm a5i (step 14) |- ( A. u u = x -> A. u u = f ) ;
	step 16 : wff = thm hbae () |- ( A. u u = f -> A. u A. u u = f ) ;
	step 17 : wff = thm alequcom () |- ( A. u u = f -> A. f f = u ) ;
	step 18 : wff = axm ax-8 () |- ( f = v -> ( f = u -> v = u ) ) ;
	step 19 : wff = thm a4imv (step 18) |- ( A. f f = u -> v = u ) ;
	step 20 : wff = thm equcomi () |- ( v = u -> u = v ) ;
	step 21 : wff = thm 3syl (step 17, step 19, step 20) |- ( A. u u = f -> u = v ) ;
	step 22 : wff = thm 19_20i (step 21) |- ( A. u A. u u = f -> A. u u = v ) ;
	step 23 : wff = thm alequcom () |- ( A. u u = v -> A. v v = u ) ;
	step 24 : wff = thm alequcom () |- ( A. v v = u -> A. u u = v ) ;
	step 25 : wff = axm ax-8 () |- ( u = w -> ( u = v -> w = v ) ) ;
	step 26 : wff = thm a4imv (step 25) |- ( A. u u = v -> w = v ) ;
	step 27 : wff = thm equcomi () |- ( w = v -> v = w ) ;
	step 28 : wff = thm 3syl (step 24, step 26, step 27) |- ( A. v v = u -> v = w ) ;
	step 29 : wff = thm a5i (step 28) |- ( A. v v = u -> A. v v = w ) ;
	step 30 : wff = thm alequcom () |- ( A. v v = w -> A. w w = v ) ;
	step 31 : wff = thm 3syl (step 23, step 29, step 30) |- ( A. u u = v -> A. w w = v ) ;
	step 32 : wff = thm 3syl (step 16, step 22, step 31) |- ( A. u u = f -> A. w w = v ) ;
	step 33 : wff = thm 3syl (step 9, step 15, step 32) |- ( A. x x = u -> A. w w = v ) ;
	step 34 : wff = thm 3syl (step 2, step 8, step 33) |- ( A. x x = y -> A. w w = v ) ;
	step 35 : wff = thm 19_21bi (step 34) |- ( A. x x = y -> w = v ) ;
	step 36 : wff = thm 19_21ai (step 1, step 35) |- ( A. x x = y -> A. z w = v ) ;
	qed prop 1 = step 36 ;
}

theorem ax16 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
}

proof of ax16 {
	var z : set;
	step 1 : wff = thm aev () |- ( A. x x = y -> A. z x = z ) ;
	step 2 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 3 : wff = thm sbequ12 () |- ( x = z -> ( ph <-> [ z / x ] ph ) ) ;
	step 4 : wff = thm biimpcd (step 3) |- ( ph -> ( x = z -> [ z / x ] ph ) ) ;
	step 5 : wff = thm 19_20d (step 2, step 4) |- ( ph -> ( A. z x = z -> A. z [ z / x ] ph ) ) ;
	step 6 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 7 : wff = thm hbsb3 (step 6) |- ( [ z / x ] ph -> A. x [ z / x ] ph ) ;
	step 8 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 9 : wff = thm stdpc7 () |- ( z = x -> ( [ z / x ] ph -> ph ) ) ;
	step 10 : wff = thm cbv3 (step 7, step 8, step 9) |- ( A. z [ z / x ] ph -> A. x ph ) ;
	step 11 : wff = thm syl6com (step 5, step 10) |- ( A. z x = z -> ( ph -> A. x ph ) ) ;
	step 12 : wff = thm syl (step 1, step 11) |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
	qed prop 1 = step 12 ;
}

axiom ax-16 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
}

theorem ax17eq (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> A. z x = y ) ;
}

proof of ax17eq {
	step 1 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 2 : wff = axm ax-16 () |- ( A. z z = x -> ( x = y -> A. z x = y ) ) ;
	step 3 : wff = axm ax-16 () |- ( A. z z = y -> ( x = y -> A. z x = y ) ) ;
	step 4 : wff = thm pm2_61ii (step 1, step 2, step 3) |- ( x = y -> A. z x = y ) ;
	qed prop 1 = step 4 ;
}

theorem dveeq2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ;
}

proof of dveeq2 {
	var w : set;
	step 1 : wff = axm ax-17 () |- ( z = w -> A. x z = w ) ;
	step 2 : wff = axm ax-17 () |- ( z = y -> A. w z = y ) ;
	step 3 : wff = thm equequ2 () |- ( w = y -> ( z = w <-> z = y ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ;
	qed prop 1 = step 4 ;
}

theorem dveeq2ALT (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ;
}

proof of dveeq2ALT {
	var w : set;
	step 1 : wff = thm ax17eq () |- ( z = w -> A. x z = w ) ;
	step 2 : wff = thm ax17eq () |- ( z = y -> A. w z = y ) ;
	step 3 : wff = thm equequ2 () |- ( w = y -> ( z = w <-> z = y ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_23adv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps -> ch ) ) ;
}

proof of 19_23adv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = axm ax-17 () |- ( ch -> A. x ch ) ;
	step 3 : wff = thm 19_23ad (step 1, step 2, hyp 1) |- ( ph -> ( E. x ps -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem ax11v2 (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( x = z -> ( ph -> A. x ( x = z -> ph ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
}

proof of ax11v2 {
	step 1 : wff = thm a9e () |- E. z z = y ;
	step 2 : wff = thm equequ2 () |- ( z = y -> ( x = z <-> x = y ) ) ;
	step 3 : wff = thm adantl (step 2) |- ( ( -. A. x x = y /\ z = y ) -> ( x = z <-> x = y ) ) ;
	step 4 : wff = thm dveeq2 () |- ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( -. A. x x = y /\ z = y ) -> A. x z = y ) ;
	step 6 : wff = thm hba1 () |- ( A. x z = y -> A. x A. x z = y ) ;
	step 7 : wff = thm equequ2 () |- ( z = y -> ( x = z <-> x = y ) ) ;
	step 8 : wff = thm imbi1d (step 7) |- ( z = y -> ( ( x = z -> ph ) <-> ( x = y -> ph ) ) ) ;
	step 9 : wff = thm a4s (step 8) |- ( A. x z = y -> ( ( x = z -> ph ) <-> ( x = y -> ph ) ) ) ;
	step 10 : wff = thm albid (step 6, step 9) |- ( A. x z = y -> ( A. x ( x = z -> ph ) <-> A. x ( x = y -> ph ) ) ) ;
	step 11 : wff = thm syl (step 5, step 10) |- ( ( -. A. x x = y /\ z = y ) -> ( A. x ( x = z -> ph ) <-> A. x ( x = y -> ph ) ) ) ;
	step 12 : wff = thm imbi2d (step 11) |- ( ( -. A. x x = y /\ z = y ) -> ( ( ph -> A. x ( x = z -> ph ) ) <-> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 13 : wff = thm imbi12d (step 3, step 12) |- ( ( -. A. x x = y /\ z = y ) -> ( ( x = z -> ( ph -> A. x ( x = z -> ph ) ) ) <-> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ) ;
	step 14 : wff = thm mpbii (hyp 1, step 13) |- ( ( -. A. x x = y /\ z = y ) -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 15 : wff = thm ex (step 14) |- ( -. A. x x = y -> ( z = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ) ;
	step 16 : wff = thm 19_23adv (step 15) |- ( -. A. x x = y -> ( E. z z = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ) ;
	step 17 : wff = thm mpi (step 1, step 16) |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	qed prop 1 = step 17 ;
}

theorem ax11a2 (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( x = z -> ( A. z ph -> A. x ( x = z -> ph ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
}

proof of ax11a2 {
	step 1 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 2 : wff = thm syl5 (hyp 1, step 1) |- ( x = z -> ( ph -> A. x ( x = z -> ph ) ) ) ;
	step 3 : wff = thm ax11v2 (step 2) |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ax11o (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
}

proof of ax11o {
	var z : set;
	step 1 : wff = axm ax-11 () |- ( x = z -> ( A. z ph -> A. x ( x = z -> ph ) ) ) ;
	step 2 : wff = thm ax11a2 (step 1) |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	qed prop 1 = step 2 ;
}

axiom ax-11o (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
}

theorem ax11 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ;
}

proof of ax11 {
	step 1 : wff = thm biidd () |- ( A. x x = y -> ( ph <-> ph ) ) ;
	step 2 : wff = thm dral1 (step 1) |- ( A. x x = y -> ( A. x ph <-> A. y ph ) ) ;
	step 3 : wff = axm ax-1 () |- ( ph -> ( x = y -> ph ) ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x ph -> A. x ( x = y -> ph ) ) ;
	step 5 : wff = thm syl6bir (step 2, step 4) |- ( A. x x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ;
	step 6 : wff = thm a1d (step 5) |- ( A. x x = y -> ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 7 : wff = axm ax-11o () |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 8 : wff = axm ax-4 () |- ( A. y ph -> ph ) ;
	step 9 : wff = thm syl7 (step 7, step 8) |- ( -. A. x x = y -> ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 10 : wff = thm pm2_61i (step 6, step 9) |- ( x = y -> ( A. y ph -> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 10 ;
}

theorem ax11b (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( -. A. x x = y /\ x = y ) -> ( ph <-> A. x ( x = y -> ph ) ) ) ;
}

proof of ax11b {
	step 1 : wff = axm ax-11o () |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( -. A. x x = y /\ x = y ) -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 3 : wff = axm ax-4 () |- ( A. x ( x = y -> ph ) -> ( x = y -> ph ) ) ;
	step 4 : wff = thm com12 (step 3) |- ( x = y -> ( A. x ( x = y -> ph ) -> ph ) ) ;
	step 5 : wff = thm adantl (step 4) |- ( ( -. A. x x = y /\ x = y ) -> ( A. x ( x = y -> ph ) -> ph ) ) ;
	step 6 : wff = thm impbid (step 2, step 5) |- ( ( -. A. x x = y /\ x = y ) -> ( ph <-> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem equs5 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
}

proof of equs5 {
	step 1 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 2 : wff = thm hba1 () |- ( A. x ( x = y -> ph ) -> A. x A. x ( x = y -> ph ) ) ;
	step 3 : wff = axm ax-11o () |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 4 : wff = thm imp3a (step 3) |- ( -. A. x x = y -> ( ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
	step 5 : wff = thm 19_23ad (step 1, step 2, step 4) |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem sb3 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> [ y / x ] ph ) ) ;
}

proof of sb3 {
	step 1 : wff = thm equs5 () |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
	step 2 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> [ y / x ] ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem sb4 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
}

proof of sb4 {
	step 1 : wff = thm equs5 () |- ( -. A. x x = y -> ( E. x ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
	step 2 : wff = thm sb1 () |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem sb4b (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) ;
}

proof of sb4b {
	step 1 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
	step 2 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 3 : wff = thm impbid1 (step 1, step 2) |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem dfsb2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ;
}

proof of dfsb2 {
	step 1 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. x x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 3 : wff = axm ax-4 () |- ( A. x x = y -> x = y ) ;
	step 4 : wff = thm jctild (step 2, step 3) |- ( A. x x = y -> ( [ y / x ] ph -> ( x = y /\ ph ) ) ) ;
	step 5 : wff = thm orc () |- ( ( x = y /\ ph ) -> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ;
	step 6 : wff = thm syl6 (step 4, step 5) |- ( A. x x = y -> ( [ y / x ] ph -> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ) ;
	step 7 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
	step 8 : wff = thm olc () |- ( A. x ( x = y -> ph ) -> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ;
	step 9 : wff = thm syl6 (step 7, step 8) |- ( -. A. x x = y -> ( [ y / x ] ph -> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ) ;
	step 10 : wff = thm pm2_61i (step 6, step 9) |- ( [ y / x ] ph -> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ;
	step 11 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 12 : wff = thm imp (step 11) |- ( ( x = y /\ ph ) -> [ y / x ] ph ) ;
	step 13 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 14 : wff = thm jaoi (step 12, step 13) |- ( ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) -> [ y / x ] ph ) ;
	step 15 : wff = thm impbii (step 10, step 14) |- ( [ y / x ] ph <-> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 15 ;
}

theorem dfsb3 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> ( ( x = y -> -. ph ) -> A. x ( x = y -> ph ) ) ) ;
}

proof of dfsb3 {
	step 1 : wff = def df-or () |- ( ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) <-> ( -. ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
	step 2 : wff = thm dfsb2 () |- ( [ y / x ] ph <-> ( ( x = y /\ ph ) \/ A. x ( x = y -> ph ) ) ) ;
	step 3 : wff = thm imnan () |- ( ( x = y -> -. ph ) <-> -. ( x = y /\ ph ) ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( ( x = y -> -. ph ) -> A. x ( x = y -> ph ) ) <-> ( -. ( x = y /\ ph ) -> A. x ( x = y -> ph ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( [ y / x ] ph <-> ( ( x = y -> -. ph ) -> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem hbsb2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
}

proof of hbsb2 {
	step 1 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
	step 2 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 3 : wff = thm a5i (step 2) |- ( A. x ( x = y -> ph ) -> A. x [ y / x ] ph ) ;
	step 4 : wff = thm syl6 (step 1, step 3) |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbequi (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ;
}

proof of sbequi {
	step 1 : wff = thm hbsb2 () |- ( -. A. z z = x -> ( [ x / z ] ph -> A. z [ x / z ] ph ) ) ;
	step 2 : wff = thm equvini () |- ( x = y -> E. z ( x = z /\ z = y ) ) ;
	step 3 : wff = thm stdpc7 () |- ( x = z -> ( [ x / z ] ph -> ph ) ) ;
	step 4 : wff = thm sbequ1 () |- ( z = y -> ( ph -> [ y / z ] ph ) ) ;
	step 5 : wff = thm sylan9 (step 3, step 4) |- ( ( x = z /\ z = y ) -> ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	step 6 : wff = thm 19_22i (step 5) |- ( E. z ( x = z /\ z = y ) -> E. z ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	step 7 : wff = thm syl (step 2, step 6) |- ( x = y -> E. z ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	step 8 : wff = thm 19_35 () |- ( E. z ( [ x / z ] ph -> [ y / z ] ph ) <-> ( A. z [ x / z ] ph -> E. z [ y / z ] ph ) ) ;
	step 9 : wff = thm sylib (step 7, step 8) |- ( x = y -> ( A. z [ x / z ] ph -> E. z [ y / z ] ph ) ) ;
	step 10 : wff = thm sylan9 (step 1, step 9) |- ( ( -. A. z z = x /\ x = y ) -> ( [ x / z ] ph -> E. z [ y / z ] ph ) ) ;
	step 11 : wff = thm hbnae () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 12 : wff = thm hbsb2 () |- ( -. A. z z = y -> ( [ y / z ] ph -> A. z [ y / z ] ph ) ) ;
	step 13 : wff = thm 19_9d (step 11, step 12) |- ( -. A. z z = y -> ( E. z [ y / z ] ph -> [ y / z ] ph ) ) ;
	step 14 : wff = thm syl9 (step 10, step 13) |- ( ( -. A. z z = x /\ x = y ) -> ( -. A. z z = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ) ;
	step 15 : wff = thm ex (step 14) |- ( -. A. z z = x -> ( x = y -> ( -. A. z z = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ) ) ;
	step 16 : wff = thm com23 (step 15) |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ) ) ;
	step 17 : wff = thm sbequ2 () |- ( z = x -> ( [ x / z ] ph -> ph ) ) ;
	step 18 : wff = thm a4s (step 17) |- ( A. z z = x -> ( [ x / z ] ph -> ph ) ) ;
	step 19 : wff = thm adantr (step 18) |- ( ( A. z z = x /\ x = y ) -> ( [ x / z ] ph -> ph ) ) ;
	step 20 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 21 : wff = thm drsb1 () |- ( A. x x = z -> ( [ y / x ] ph <-> [ y / z ] ph ) ) ;
	step 22 : wff = thm biimpd (step 21) |- ( A. x x = z -> ( [ y / x ] ph -> [ y / z ] ph ) ) ;
	step 23 : wff = thm alequcoms (step 22) |- ( A. z z = x -> ( [ y / x ] ph -> [ y / z ] ph ) ) ;
	step 24 : wff = thm sylan9r (step 20, step 23) |- ( ( A. z z = x /\ x = y ) -> ( ph -> [ y / z ] ph ) ) ;
	step 25 : wff = thm syld (step 19, step 24) |- ( ( A. z z = x /\ x = y ) -> ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	step 26 : wff = thm ex (step 25) |- ( A. z z = x -> ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ) ;
	step 27 : wff = thm drsb1 () |- ( A. z z = y -> ( [ x / z ] ph <-> [ x / y ] ph ) ) ;
	step 28 : wff = thm biimpd (step 27) |- ( A. z z = y -> ( [ x / z ] ph -> [ x / y ] ph ) ) ;
	step 29 : wff = thm stdpc7 () |- ( x = y -> ( [ x / y ] ph -> ph ) ) ;
	step 30 : wff = thm sylan9 (step 28, step 29) |- ( ( A. z z = y /\ x = y ) -> ( [ x / z ] ph -> ph ) ) ;
	step 31 : wff = thm sbequ1 () |- ( z = y -> ( ph -> [ y / z ] ph ) ) ;
	step 32 : wff = thm a4s (step 31) |- ( A. z z = y -> ( ph -> [ y / z ] ph ) ) ;
	step 33 : wff = thm adantr (step 32) |- ( ( A. z z = y /\ x = y ) -> ( ph -> [ y / z ] ph ) ) ;
	step 34 : wff = thm syld (step 30, step 33) |- ( ( A. z z = y /\ x = y ) -> ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	step 35 : wff = thm ex (step 34) |- ( A. z z = y -> ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ) ;
	step 36 : wff = thm pm2_61ii (step 16, step 26, step 35) |- ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	qed prop 1 = step 36 ;
}

theorem sbequ (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) ;
}

proof of sbequ {
	step 1 : wff = thm sbequi () |- ( x = y -> ( [ x / z ] ph -> [ y / z ] ph ) ) ;
	step 2 : wff = thm sbequi () |- ( y = x -> ( [ y / z ] ph -> [ x / z ] ph ) ) ;
	step 3 : wff = thm equcoms (step 2) |- ( x = y -> ( [ y / z ] ph -> [ x / z ] ph ) ) ;
	step 4 : wff = thm impbid (step 1, step 3) |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem drsb2 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) ;
}

proof of drsb2 {
	step 1 : wff = thm sbequ () |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. x x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem sbn (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
}

proof of sbn {
	step 1 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] -. ph -> -. ph ) ) ;
	step 2 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 3 : wff = thm nsyld (step 1, step 2) |- ( x = y -> ( [ y / x ] -. ph -> -. [ y / x ] ph ) ) ;
	step 4 : wff = thm a4s (step 3) |- ( A. x x = y -> ( [ y / x ] -. ph -> -. [ y / x ] ph ) ) ;
	step 5 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] -. ph -> A. x ( x = y -> -. ph ) ) ) ;
	step 6 : wff = thm sb1 () |- ( [ y / x ] ph -> E. x ( x = y /\ ph ) ) ;
	step 7 : wff = thm equs3 () |- ( E. x ( x = y /\ ph ) <-> -. A. x ( x = y -> -. ph ) ) ;
	step 8 : wff = thm sylib (step 6, step 7) |- ( [ y / x ] ph -> -. A. x ( x = y -> -. ph ) ) ;
	step 9 : wff = thm con2i (step 8) |- ( A. x ( x = y -> -. ph ) -> -. [ y / x ] ph ) ;
	step 10 : wff = thm syl6 (step 5, step 9) |- ( -. A. x x = y -> ( [ y / x ] -. ph -> -. [ y / x ] ph ) ) ;
	step 11 : wff = thm pm2_61i (step 4, step 10) |- ( [ y / x ] -. ph -> -. [ y / x ] ph ) ;
	step 12 : wff = def df-sb () |- ( [ y / x ] -. ph <-> ( ( x = y -> -. ph ) /\ E. x ( x = y /\ -. ph ) ) ) ;
	step 13 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 14 : wff = thm con3d (step 13) |- ( x = y -> ( -. [ y / x ] ph -> -. ph ) ) ;
	step 15 : wff = thm com12 (step 14) |- ( -. [ y / x ] ph -> ( x = y -> -. ph ) ) ;
	step 16 : wff = thm sb2 () |- ( A. x ( x = y -> -. -. ph ) -> [ y / x ] -. -. ph ) ;
	step 17 : wff = thm notnot () |- ( ph <-> -. -. ph ) ;
	step 18 : wff = thm sbbii (step 17) |- ( [ y / x ] ph <-> [ y / x ] -. -. ph ) ;
	step 19 : wff = thm sylibr (step 16, step 18) |- ( A. x ( x = y -> -. -. ph ) -> [ y / x ] ph ) ;
	step 20 : wff = thm con3i (step 19) |- ( -. [ y / x ] ph -> -. A. x ( x = y -> -. -. ph ) ) ;
	step 21 : wff = thm equs3 () |- ( E. x ( x = y /\ -. ph ) <-> -. A. x ( x = y -> -. -. ph ) ) ;
	step 22 : wff = thm sylibr (step 20, step 21) |- ( -. [ y / x ] ph -> E. x ( x = y /\ -. ph ) ) ;
	step 23 : wff = thm sylanbrc (step 12, step 15, step 22) |- ( -. [ y / x ] ph -> [ y / x ] -. ph ) ;
	step 24 : wff = thm impbii (step 11, step 23) |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
	qed prop 1 = step 24 ;
}

theorem sbi1 (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
}

proof of sbi1 {
	step 1 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ( ph -> ps ) -> ( ph -> ps ) ) ) ;
	step 2 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 3 : wff = thm syl5d (step 1, step 2) |- ( x = y -> ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> ps ) ) ) ;
	step 4 : wff = thm sbequ1 () |- ( x = y -> ( ps -> [ y / x ] ps ) ) ;
	step 5 : wff = thm syl6d (step 3, step 4) |- ( x = y -> ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ) ;
	step 6 : wff = thm a4s (step 5) |- ( A. x x = y -> ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ) ;
	step 7 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ;
	step 8 : wff = axm ax-2 () |- ( ( x = y -> ( ph -> ps ) ) -> ( ( x = y -> ph ) -> ( x = y -> ps ) ) ) ;
	step 9 : wff = thm 19_20ii (step 8) |- ( A. x ( x = y -> ( ph -> ps ) ) -> ( A. x ( x = y -> ph ) -> A. x ( x = y -> ps ) ) ) ;
	step 10 : wff = thm sb2 () |- ( A. x ( x = y -> ps ) -> [ y / x ] ps ) ;
	step 11 : wff = thm syl6 (step 9, step 10) |- ( A. x ( x = y -> ( ph -> ps ) ) -> ( A. x ( x = y -> ph ) -> [ y / x ] ps ) ) ;
	step 12 : wff = thm syl6 (step 7, step 11) |- ( -. A. x x = y -> ( [ y / x ] ( ph -> ps ) -> ( A. x ( x = y -> ph ) -> [ y / x ] ps ) ) ) ;
	step 13 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
	step 14 : wff = thm syl5d (step 12, step 13) |- ( -. A. x x = y -> ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ) ;
	step 15 : wff = thm pm2_61i (step 6, step 14) |- ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	qed prop 1 = step 15 ;
}

theorem sbi2 (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( [ y / x ] ph -> [ y / x ] ps ) -> [ y / x ] ( ph -> ps ) ) ;
}

proof of sbi2 {
	step 1 : wff = thm sbn () |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
	step 2 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 3 : wff = thm sbimi (step 2) |- ( [ y / x ] -. ph -> [ y / x ] ( ph -> ps ) ) ;
	step 4 : wff = thm sylbir (step 1, step 3) |- ( -. [ y / x ] ph -> [ y / x ] ( ph -> ps ) ) ;
	step 5 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 6 : wff = thm sbimi (step 5) |- ( [ y / x ] ps -> [ y / x ] ( ph -> ps ) ) ;
	step 7 : wff = thm ja (step 4, step 6) |- ( ( [ y / x ] ph -> [ y / x ] ps ) -> [ y / x ] ( ph -> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem sbim (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
}

proof of sbim {
	step 1 : wff = thm sbi1 () |- ( [ y / x ] ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 2 : wff = thm sbi2 () |- ( ( [ y / x ] ph -> [ y / x ] ps ) -> [ y / x ] ( ph -> ps ) ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbor (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) ;
}

proof of sbor {
	step 1 : wff = thm sbim () |- ( [ y / x ] ( -. ph -> ps ) <-> ( [ y / x ] -. ph -> [ y / x ] ps ) ) ;
	step 2 : wff = thm sbn () |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( [ y / x ] -. ph -> [ y / x ] ps ) <-> ( -. [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( [ y / x ] ( -. ph -> ps ) <-> ( -. [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 5 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 6 : wff = thm sbbii (step 5) |- ( [ y / x ] ( ph \/ ps ) <-> [ y / x ] ( -. ph -> ps ) ) ;
	step 7 : wff = def df-or () |- ( ( [ y / x ] ph \/ [ y / x ] ps ) <-> ( -. [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 8 : wff = thm 3bitr4i (step 4, step 6, step 7) |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem sb19_21 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ( ph -> ps ) <-> ( ph -> [ y / x ] ps ) ) ;
}

proof of sb19_21 {
	step 1 : wff = thm sbim () |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 2 : wff = thm sbf (hyp 1) |- ( [ y / x ] ph <-> ph ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( [ y / x ] ph -> [ y / x ] ps ) <-> ( ph -> [ y / x ] ps ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( [ y / x ] ( ph -> ps ) <-> ( ph -> [ y / x ] ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem sban (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
}

proof of sban {
	step 1 : wff = thm sbn () |- ( [ y / x ] -. ( ph -> -. ps ) <-> -. [ y / x ] ( ph -> -. ps ) ) ;
	step 2 : wff = thm sbim () |- ( [ y / x ] ( ph -> -. ps ) <-> ( [ y / x ] ph -> [ y / x ] -. ps ) ) ;
	step 3 : wff = thm sbn () |- ( [ y / x ] -. ps <-> -. [ y / x ] ps ) ;
	step 4 : wff = thm imbi2i (step 3) |- ( ( [ y / x ] ph -> [ y / x ] -. ps ) <-> ( [ y / x ] ph -> -. [ y / x ] ps ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( [ y / x ] ( ph -> -. ps ) <-> ( [ y / x ] ph -> -. [ y / x ] ps ) ) ;
	step 6 : wff = thm notbii (step 5) |- ( -. [ y / x ] ( ph -> -. ps ) <-> -. ( [ y / x ] ph -> -. [ y / x ] ps ) ) ;
	step 7 : wff = thm bitri (step 1, step 6) |- ( [ y / x ] -. ( ph -> -. ps ) <-> -. ( [ y / x ] ph -> -. [ y / x ] ps ) ) ;
	step 8 : wff = def df-an () |- ( ( ph /\ ps ) <-> -. ( ph -> -. ps ) ) ;
	step 9 : wff = thm sbbii (step 8) |- ( [ y / x ] ( ph /\ ps ) <-> [ y / x ] -. ( ph -> -. ps ) ) ;
	step 10 : wff = def df-an () |- ( ( [ y / x ] ph /\ [ y / x ] ps ) <-> -. ( [ y / x ] ph -> -. [ y / x ] ps ) ) ;
	step 11 : wff = thm 3bitr4i (step 7, step 9, step 10) |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem sb3an (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ( ph /\ ps /\ ch ) <-> ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) ) ;
}

proof of sb3an {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm sbbii (step 1) |- ( [ y / x ] ( ph /\ ps /\ ch ) <-> [ y / x ] ( ( ph /\ ps ) /\ ch ) ) ;
	step 3 : wff = thm sban () |- ( [ y / x ] ( ( ph /\ ps ) /\ ch ) <-> ( [ y / x ] ( ph /\ ps ) /\ [ y / x ] ch ) ) ;
	step 4 : wff = thm sban () |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	step 5 : wff = thm anbi1i (step 4) |- ( ( [ y / x ] ( ph /\ ps ) /\ [ y / x ] ch ) <-> ( ( [ y / x ] ph /\ [ y / x ] ps ) /\ [ y / x ] ch ) ) ;
	step 6 : wff = def df-3an () |- ( ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) <-> ( ( [ y / x ] ph /\ [ y / x ] ps ) /\ [ y / x ] ch ) ) ;
	step 7 : wff = thm bitr4i (step 5, step 6) |- ( ( [ y / x ] ( ph /\ ps ) /\ [ y / x ] ch ) <-> ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) ) ;
	step 8 : wff = thm 3bitri (step 2, step 3, step 7) |- ( [ y / x ] ( ph /\ ps /\ ch ) <-> ( [ y / x ] ph /\ [ y / x ] ps /\ [ y / x ] ch ) ) ;
	qed prop 1 = step 8 ;
}

theorem sbbi (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ( ph <-> ps ) <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
}

proof of sbbi {
	step 1 : wff = thm dfbi2 () |- ( ( ph <-> ps ) <-> ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 2 : wff = thm sbbii (step 1) |- ( [ y / x ] ( ph <-> ps ) <-> [ y / x ] ( ( ph -> ps ) /\ ( ps -> ph ) ) ) ;
	step 3 : wff = thm sbim () |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 4 : wff = thm sbim () |- ( [ y / x ] ( ps -> ph ) <-> ( [ y / x ] ps -> [ y / x ] ph ) ) ;
	step 5 : wff = thm anbi12i (step 3, step 4) |- ( ( [ y / x ] ( ph -> ps ) /\ [ y / x ] ( ps -> ph ) ) <-> ( ( [ y / x ] ph -> [ y / x ] ps ) /\ ( [ y / x ] ps -> [ y / x ] ph ) ) ) ;
	step 6 : wff = thm sban () |- ( [ y / x ] ( ( ph -> ps ) /\ ( ps -> ph ) ) <-> ( [ y / x ] ( ph -> ps ) /\ [ y / x ] ( ps -> ph ) ) ) ;
	step 7 : wff = thm dfbi2 () |- ( ( [ y / x ] ph <-> [ y / x ] ps ) <-> ( ( [ y / x ] ph -> [ y / x ] ps ) /\ ( [ y / x ] ps -> [ y / x ] ph ) ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( [ y / x ] ( ( ph -> ps ) /\ ( ps -> ph ) ) <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
	step 9 : wff = thm bitri (step 2, step 8) |- ( [ y / x ] ( ph <-> ps ) <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem sblbis (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( [ y / x ] ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ( ch <-> ph ) <-> ( [ y / x ] ch <-> ps ) ) ;
}

proof of sblbis {
	step 1 : wff = thm sbbi () |- ( [ y / x ] ( ch <-> ph ) <-> ( [ y / x ] ch <-> [ y / x ] ph ) ) ;
	step 2 : wff = thm bibi2i (hyp 1) |- ( ( [ y / x ] ch <-> [ y / x ] ph ) <-> ( [ y / x ] ch <-> ps ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( [ y / x ] ( ch <-> ph ) <-> ( [ y / x ] ch <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbrbis (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( [ y / x ] ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> [ y / x ] ch ) ) ;
}

proof of sbrbis {
	step 1 : wff = thm sbbi () |- ( [ y / x ] ( ph <-> ch ) <-> ( [ y / x ] ph <-> [ y / x ] ch ) ) ;
	step 2 : wff = thm bibi1i (hyp 1) |- ( ( [ y / x ] ph <-> [ y / x ] ch ) <-> ( ps <-> [ y / x ] ch ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> [ y / x ] ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbrbif (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ch -> A. x ch ) ;
	hyp 2 : wff = |- ( [ y / x ] ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> ch ) ) ;
}

proof of sbrbif {
	step 1 : wff = thm sbrbis (hyp 2) |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> [ y / x ] ch ) ) ;
	step 2 : wff = thm sbf (hyp 1) |- ( [ y / x ] ch <-> ch ) ;
	step 3 : wff = thm bibi2i (step 2) |- ( ( ps <-> [ y / x ] ch ) <-> ( ps <-> ch ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( [ y / x ] ( ph <-> ch ) <-> ( ps <-> ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem a4sbe (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph -> E. x ph ) ;
}

proof of a4sbe {
	step 1 : wff = thm stdpc4 () |- ( A. x -. ph -> [ y / x ] -. ph ) ;
	step 2 : wff = thm sbn () |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( A. x -. ph -> -. [ y / x ] ph ) ;
	step 4 : wff = thm con2i (step 3) |- ( [ y / x ] ph -> -. A. x -. ph ) ;
	step 5 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( [ y / x ] ph -> E. x ph ) ;
	qed prop 1 = step 6 ;
}

theorem a4sbim (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
}

proof of a4sbim {
	step 1 : wff = thm stdpc4 () |- ( A. x ( ph -> ps ) -> [ y / x ] ( ph -> ps ) ) ;
	step 2 : wff = thm sbim () |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( A. x ( ph -> ps ) -> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem a4sbbi (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( ph <-> ps ) -> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
}

proof of a4sbbi {
	step 1 : wff = thm stdpc4 () |- ( A. x ( ph <-> ps ) -> [ y / x ] ( ph <-> ps ) ) ;
	step 2 : wff = thm sbbi () |- ( [ y / x ] ( ph <-> ps ) <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( A. x ( ph <-> ps ) -> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbbid (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( [ y / x ] ps <-> [ y / x ] ch ) ) ;
}

proof of sbbid {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps <-> ch ) ) ;
	step 2 : wff = thm a4sbbi () |- ( A. x ( ps <-> ch ) -> ( [ y / x ] ps <-> [ y / x ] ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ( [ y / x ] ps <-> [ y / x ] ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbequ8 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> [ y / x ] ( x = y -> ph ) ) ;
}

proof of sbequ8 {
	step 1 : wff = thm equsb1 () |- [ y / x ] x = y ;
	step 2 : wff = thm a1bi (step 1) |- ( [ y / x ] ph <-> ( [ y / x ] x = y -> [ y / x ] ph ) ) ;
	step 3 : wff = thm sbim () |- ( [ y / x ] ( x = y -> ph ) <-> ( [ y / x ] x = y -> [ y / x ] ph ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( [ y / x ] ph <-> [ y / x ] ( x = y -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbf3t (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph <-> ph ) ) ;
}

proof of sbf3t {
	step 1 : wff = thm a4sbim () |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph -> [ y / x ] A. x ph ) ) ;
	step 2 : wff = thm sbf2 () |- ( [ y / x ] A. x ph <-> A. x ph ) ;
	step 3 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 4 : wff = thm sylbi (step 2, step 3) |- ( [ y / x ] A. x ph -> ph ) ;
	step 5 : wff = thm syl6 (step 1, step 4) |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph -> ph ) ) ;
	step 6 : wff = thm stdpc4 () |- ( A. x ph -> [ y / x ] ph ) ;
	step 7 : wff = thm imim2i (step 6) |- ( ( ph -> A. x ph ) -> ( ph -> [ y / x ] ph ) ) ;
	step 8 : wff = thm a4s (step 7) |- ( A. x ( ph -> A. x ph ) -> ( ph -> [ y / x ] ph ) ) ;
	step 9 : wff = thm impbid (step 5, step 8) |- ( A. x ( ph -> A. x ph ) -> ( [ y / x ] ph <-> ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem hbsb4 (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
}

proof of hbsb4 {
	step 1 : wff = thm equequ1 () |- ( z = x -> ( z = y <-> x = y ) ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. z z = x -> ( z = y <-> x = y ) ) ;
	step 3 : wff = thm dral1 (step 2) |- ( A. z z = x -> ( A. z z = y <-> A. x x = y ) ) ;
	step 4 : wff = thm notbid (step 3) |- ( A. z z = x -> ( -. A. z z = y <-> -. A. x x = y ) ) ;
	step 5 : wff = thm hbsb2 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
	step 6 : wff = axm ax-10o () |- ( A. x x = z -> ( A. x [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 7 : wff = thm alequcoms (step 6) |- ( A. z z = x -> ( A. x [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 8 : wff = thm syl9r (step 5, step 7) |- ( A. z z = x -> ( -. A. x x = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
	step 9 : wff = thm sylbid (step 4, step 8) |- ( A. z z = x -> ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
	step 10 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 11 : wff = axm ax-4 () |- ( A. x x = y -> x = y ) ;
	step 12 : wff = thm 19_20i (step 11) |- ( A. z A. x x = y -> A. z x = y ) ;
	step 13 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 14 : wff = thm a4s (step 13) |- ( A. z x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 15 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 16 : wff = thm 19_20ii (step 15) |- ( A. z x = y -> ( A. z ph -> A. z [ y / x ] ph ) ) ;
	step 17 : wff = thm syl5 (step 16, hyp 1) |- ( A. z x = y -> ( ph -> A. z [ y / x ] ph ) ) ;
	step 18 : wff = thm syld (step 14, step 17) |- ( A. z x = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 19 : wff = thm 3syl (step 10, step 12, step 18) |- ( A. x x = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 20 : wff = thm a1d (step 19) |- ( A. x x = y -> ( ( -. A. z z = x /\ -. A. z z = y ) -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
	step 21 : wff = thm sb4 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x ( x = y -> ph ) ) ) ;
	step 22 : wff = thm hbnae () |- ( -. A. z z = x -> A. x -. A. z z = x ) ;
	step 23 : wff = thm hbnae () |- ( -. A. z z = y -> A. x -. A. z z = y ) ;
	step 24 : wff = thm hban (step 22, step 23) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. x ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 25 : wff = thm hbnae () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 26 : wff = thm hbnae () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 27 : wff = thm hban (step 25, step 26) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 28 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 29 : wff = thm imp (step 28) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 30 : wff = thm a1i (hyp 1) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( ph -> A. z ph ) ) ;
	step 31 : wff = thm hbimd (step 27, step 29, step 30) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( ( x = y -> ph ) -> A. z ( x = y -> ph ) ) ) ;
	step 32 : wff = thm 19_20d (step 24, step 31) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( A. x ( x = y -> ph ) -> A. x A. z ( x = y -> ph ) ) ) ;
	step 33 : wff = thm sb2 () |- ( A. x ( x = y -> ph ) -> [ y / x ] ph ) ;
	step 34 : wff = thm 19_20i (step 33) |- ( A. z A. x ( x = y -> ph ) -> A. z [ y / x ] ph ) ;
	step 35 : wff = thm a7s (step 34) |- ( A. x A. z ( x = y -> ph ) -> A. z [ y / x ] ph ) ;
	step 36 : wff = thm syl6 (step 32, step 35) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( A. x ( x = y -> ph ) -> A. z [ y / x ] ph ) ) ;
	step 37 : wff = thm syl9 (step 21, step 36) |- ( -. A. x x = y -> ( ( -. A. z z = x /\ -. A. z z = y ) -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
	step 38 : wff = thm pm2_61i (step 20, step 37) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 39 : wff = thm ex (step 38) |- ( -. A. z z = x -> ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
	step 40 : wff = thm pm2_61i (step 9, step 39) |- ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	qed prop 1 = step 40 ;
}

theorem hbsb4t (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x A. z ( ph -> A. z ph ) -> ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
}

proof of hbsb4t {
	step 1 : wff = axm ax-4 () |- ( A. z ph -> ph ) ;
	step 2 : wff = thm biantru (step 1) |- ( ( ph -> A. z ph ) <-> ( ( ph -> A. z ph ) /\ ( A. z ph -> ph ) ) ) ;
	step 3 : wff = thm dfbi2 () |- ( ( ph <-> A. z ph ) <-> ( ( ph -> A. z ph ) /\ ( A. z ph -> ph ) ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( ( ph -> A. z ph ) <-> ( ph <-> A. z ph ) ) ;
	step 5 : wff = thm 2albii (step 4) |- ( A. x A. z ( ph -> A. z ph ) <-> A. x A. z ( ph <-> A. z ph ) ) ;
	step 6 : wff = thm a4sbbi () |- ( A. x ( ph <-> A. z ph ) -> ( [ y / x ] ph <-> [ y / x ] A. z ph ) ) ;
	step 7 : wff = thm a4s (step 6) |- ( A. z A. x ( ph <-> A. z ph ) -> ( [ y / x ] ph <-> [ y / x ] A. z ph ) ) ;
	step 8 : wff = thm hba1 () |- ( A. z A. x ( ph <-> A. z ph ) -> A. z A. z A. x ( ph <-> A. z ph ) ) ;
	step 9 : wff = thm a4sbbi () |- ( A. x ( ph <-> A. z ph ) -> ( [ y / x ] ph <-> [ y / x ] A. z ph ) ) ;
	step 10 : wff = thm a4s (step 9) |- ( A. z A. x ( ph <-> A. z ph ) -> ( [ y / x ] ph <-> [ y / x ] A. z ph ) ) ;
	step 11 : wff = thm albid (step 8, step 10) |- ( A. z A. x ( ph <-> A. z ph ) -> ( A. z [ y / x ] ph <-> A. z [ y / x ] A. z ph ) ) ;
	step 12 : wff = thm imbi12d (step 7, step 11) |- ( A. z A. x ( ph <-> A. z ph ) -> ( ( [ y / x ] ph -> A. z [ y / x ] ph ) <-> ( [ y / x ] A. z ph -> A. z [ y / x ] A. z ph ) ) ) ;
	step 13 : wff = thm a7s (step 12) |- ( A. x A. z ( ph <-> A. z ph ) -> ( ( [ y / x ] ph -> A. z [ y / x ] ph ) <-> ( [ y / x ] A. z ph -> A. z [ y / x ] A. z ph ) ) ) ;
	step 14 : wff = thm sylbi (step 5, step 13) |- ( A. x A. z ( ph -> A. z ph ) -> ( ( [ y / x ] ph -> A. z [ y / x ] ph ) <-> ( [ y / x ] A. z ph -> A. z [ y / x ] A. z ph ) ) ) ;
	step 15 : wff = thm hba1 () |- ( A. z ph -> A. z A. z ph ) ;
	step 16 : wff = thm hbsb4 (step 15) |- ( -. A. z z = y -> ( [ y / x ] A. z ph -> A. z [ y / x ] A. z ph ) ) ;
	step 17 : wff = thm syl5bir (step 14, step 16) |- ( A. x A. z ( ph -> A. z ph ) -> ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ) ;
	qed prop 1 = step 17 ;
}

theorem dvelimf (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. z ps ) ;
	hyp 3 : wff = |- ( z = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
}

proof of dvelimf {
	step 1 : wff = thm hbsb4 (hyp 1) |- ( -. A. x x = y -> ( [ y / z ] ph -> A. x [ y / z ] ph ) ) ;
	step 2 : wff = thm sbie (hyp 2, hyp 3) |- ( [ y / z ] ph <-> ps ) ;
	step 3 : wff = thm sbie (hyp 2, hyp 3) |- ( [ y / z ] ph <-> ps ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x [ y / z ] ph <-> A. x ps ) ;
	step 5 : wff = thm 3imtr3g (step 1, step 2, step 4) |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem dvelimdf (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> A. z ph ) ;
	hyp 3 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	hyp 4 : wff = |- ( ph -> ( ch -> A. z ch ) ) ;
	hyp 5 : wff = |- ( ph -> ( z = y -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. A. x x = y -> ( ch -> A. x ch ) ) ) ;
}

proof of dvelimdf {
	step 1 : wff = thm 19_21ai (hyp 2, hyp 1) |- ( ph -> A. z A. x ph ) ;
	step 2 : wff = thm 19_20i2 (hyp 3) |- ( A. z A. x ph -> A. z A. x ( ps -> A. x ps ) ) ;
	step 3 : wff = thm hbsb4t () |- ( A. z A. x ( ps -> A. x ps ) -> ( -. A. x x = y -> ( [ y / z ] ps -> A. x [ y / z ] ps ) ) ) ;
	step 4 : wff = thm 3syl (step 1, step 2, step 3) |- ( ph -> ( -. A. x x = y -> ( [ y / z ] ps -> A. x [ y / z ] ps ) ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( ph /\ -. A. x x = y ) -> ( [ y / z ] ps -> A. x [ y / z ] ps ) ) ;
	step 6 : wff = thm sbied (hyp 2, hyp 4, hyp 5) |- ( ph -> ( [ y / z ] ps <-> ch ) ) ;
	step 7 : wff = thm adantr (step 6) |- ( ( ph /\ -. A. x x = y ) -> ( [ y / z ] ps <-> ch ) ) ;
	step 8 : wff = thm sbied (hyp 2, hyp 4, hyp 5) |- ( ph -> ( [ y / z ] ps <-> ch ) ) ;
	step 9 : wff = thm albid (hyp 1, step 8) |- ( ph -> ( A. x [ y / z ] ps <-> A. x ch ) ) ;
	step 10 : wff = thm adantr (step 9) |- ( ( ph /\ -. A. x x = y ) -> ( A. x [ y / z ] ps <-> A. x ch ) ) ;
	step 11 : wff = thm 3imtr3d (step 5, step 7, step 10) |- ( ( ph /\ -. A. x x = y ) -> ( ch -> A. x ch ) ) ;
	step 12 : wff = thm ex (step 11) |- ( ph -> ( -. A. x x = y -> ( ch -> A. x ch ) ) ) ;
	qed prop 1 = step 12 ;
}

theorem sbco (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) ;
}

proof of sbco {
	step 1 : wff = thm equsb2 () |- [ y / x ] y = x ;
	step 2 : wff = thm sbequ12 () |- ( y = x -> ( ph <-> [ x / y ] ph ) ) ;
	step 3 : wff = thm bicomd (step 2) |- ( y = x -> ( [ x / y ] ph <-> ph ) ) ;
	step 4 : wff = thm sbimi (step 3) |- ( [ y / x ] y = x -> [ y / x ] ( [ x / y ] ph <-> ph ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- [ y / x ] ( [ x / y ] ph <-> ph ) ;
	step 6 : wff = thm sbbi () |- ( [ y / x ] ( [ x / y ] ph <-> ph ) <-> ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) ) ;
	step 7 : wff = thm mpbi (step 5, step 6) |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) ;
	qed prop 1 = step 7 ;
}

theorem sbid2 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] [ x / y ] ph <-> ph ) ;
}

proof of sbid2 {
	step 1 : wff = thm sbco () |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) ;
	step 2 : wff = thm sbf (hyp 1) |- ( [ y / x ] ph <-> ph ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( [ y / x ] [ x / y ] ph <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem sbidm (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) ;
}

proof of sbidm {
	step 1 : wff = thm sbequ12 () |- ( x = y -> ( [ y / x ] ph <-> [ y / x ] [ y / x ] ph ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( x = y -> ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) ) ;
	step 3 : wff = thm a4s (step 2) |- ( A. x x = y -> ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) ) ;
	step 4 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 5 : wff = thm hbsb2 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
	step 6 : wff = thm biidd () |- ( x = y -> ( [ y / x ] ph <-> [ y / x ] ph ) ) ;
	step 7 : wff = thm a1i (step 6) |- ( -. A. x x = y -> ( x = y -> ( [ y / x ] ph <-> [ y / x ] ph ) ) ) ;
	step 8 : wff = thm sbied (step 4, step 5, step 7) |- ( -. A. x x = y -> ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) ) ;
	step 9 : wff = thm pm2_61i (step 3, step 8) |- ( [ y / x ] [ y / x ] ph <-> [ y / x ] ph ) ;
	qed prop 1 = step 9 ;
}

theorem sbco2 (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ;
}

proof of sbco2 {
	step 1 : wff = thm sbequ () |- ( x = y -> ( [ x / z ] [ z / x ] ph <-> [ y / z ] [ z / x ] ph ) ) ;
	step 2 : wff = thm sbid2 (hyp 1) |- ( [ x / z ] [ z / x ] ph <-> ph ) ;
	step 3 : wff = thm syl5bbr (step 1, step 2) |- ( x = y -> ( ph <-> [ y / z ] [ z / x ] ph ) ) ;
	step 4 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 5 : wff = thm bitr3d (step 3, step 4) |- ( x = y -> ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ) ;
	step 6 : wff = thm a4s (step 5) |- ( A. x x = y -> ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ) ;
	step 7 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 8 : wff = thm hbsb3 (hyp 1) |- ( [ z / x ] ph -> A. x [ z / x ] ph ) ;
	step 9 : wff = thm hbsb4 (step 8) |- ( -. A. x x = y -> ( [ y / z ] [ z / x ] ph -> A. x [ y / z ] [ z / x ] ph ) ) ;
	step 10 : wff = thm sbequ () |- ( x = y -> ( [ x / z ] [ z / x ] ph <-> [ y / z ] [ z / x ] ph ) ) ;
	step 11 : wff = thm sbid2 (hyp 1) |- ( [ x / z ] [ z / x ] ph <-> ph ) ;
	step 12 : wff = thm syl5bbr (step 10, step 11) |- ( x = y -> ( ph <-> [ y / z ] [ z / x ] ph ) ) ;
	step 13 : wff = thm a1i (step 12) |- ( -. A. x x = y -> ( x = y -> ( ph <-> [ y / z ] [ z / x ] ph ) ) ) ;
	step 14 : wff = thm sbied (step 7, step 9, step 13) |- ( -. A. x x = y -> ( [ y / x ] ph <-> [ y / z ] [ z / x ] ph ) ) ;
	step 15 : wff = thm bicomd (step 14) |- ( -. A. x x = y -> ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ) ;
	step 16 : wff = thm pm2_61i (step 6, step 15) |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ;
	qed prop 1 = step 16 ;
}

theorem sbco2d (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> A. z ph ) ;
	hyp 3 : wff = |- ( ph -> ( ps -> A. z ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( [ y / z ] [ z / x ] ps <-> [ y / x ] ps ) ) ;
}

proof of sbco2d {
	step 1 : wff = thm hbim1 (hyp 2, hyp 3) |- ( ( ph -> ps ) -> A. z ( ph -> ps ) ) ;
	step 2 : wff = thm sbco2 (step 1) |- ( [ y / z ] [ z / x ] ( ph -> ps ) <-> [ y / x ] ( ph -> ps ) ) ;
	step 3 : wff = thm sb19_21 (hyp 1) |- ( [ z / x ] ( ph -> ps ) <-> ( ph -> [ z / x ] ps ) ) ;
	step 4 : wff = thm sbbii (step 3) |- ( [ y / z ] [ z / x ] ( ph -> ps ) <-> [ y / z ] ( ph -> [ z / x ] ps ) ) ;
	step 5 : wff = thm sb19_21 (hyp 2) |- ( [ y / z ] ( ph -> [ z / x ] ps ) <-> ( ph -> [ y / z ] [ z / x ] ps ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( [ y / z ] [ z / x ] ( ph -> ps ) <-> ( ph -> [ y / z ] [ z / x ] ps ) ) ;
	step 7 : wff = thm sb19_21 (hyp 1) |- ( [ y / x ] ( ph -> ps ) <-> ( ph -> [ y / x ] ps ) ) ;
	step 8 : wff = thm 3bitr3i (step 2, step 6, step 7) |- ( ( ph -> [ y / z ] [ z / x ] ps ) <-> ( ph -> [ y / x ] ps ) ) ;
	step 9 : wff = thm pm5_74ri (step 8) |- ( ph -> ( [ y / z ] [ z / x ] ps <-> [ y / x ] ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem sbco3 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ;
}

proof of sbco3 {
	step 1 : wff = thm drsb1 () |- ( A. x x = y -> ( [ z / x ] [ y / x ] ph <-> [ z / y ] [ y / x ] ph ) ) ;
	step 2 : wff = thm sbequ12a () |- ( x = y -> ( [ y / x ] ph <-> [ x / y ] ph ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x x = y -> A. x ( [ y / x ] ph <-> [ x / y ] ph ) ) ;
	step 4 : wff = thm a4sbbi () |- ( A. x ( [ y / x ] ph <-> [ x / y ] ph ) -> ( [ z / x ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A. x x = y -> ( [ z / x ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ) ;
	step 6 : wff = thm bitr3d (step 1, step 5) |- ( A. x x = y -> ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ) ;
	step 7 : wff = thm hbnae () |- ( -. A. x x = y -> A. y -. A. x x = y ) ;
	step 8 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 9 : wff = thm hbsb2 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
	step 10 : wff = thm sbco2d (step 7, step 8, step 9) |- ( -. A. x x = y -> ( [ z / x ] [ x / y ] [ y / x ] ph <-> [ z / y ] [ y / x ] ph ) ) ;
	step 11 : wff = thm sbco () |- ( [ x / y ] [ y / x ] ph <-> [ x / y ] ph ) ;
	step 12 : wff = thm sbbii (step 11) |- ( [ z / x ] [ x / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ;
	step 13 : wff = thm syl5rbbr (step 10, step 12) |- ( -. A. x x = y -> ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ) ;
	step 14 : wff = thm pm2_61i (step 6, step 13) |- ( [ z / y ] [ y / x ] ph <-> [ z / x ] [ x / y ] ph ) ;
	qed prop 1 = step 14 ;
}

theorem sbcom (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ;
}

proof of sbcom {
	step 1 : wff = thm drsb1 () |- ( A. x x = z -> ( [ y / x ] [ y / x ] ph <-> [ y / z ] [ y / x ] ph ) ) ;
	step 2 : wff = thm hbae () |- ( A. x x = z -> A. x A. x x = z ) ;
	step 3 : wff = thm drsb1 () |- ( A. x x = z -> ( [ y / x ] ph <-> [ y / z ] ph ) ) ;
	step 4 : wff = thm sbbid (step 2, step 3) |- ( A. x x = z -> ( [ y / x ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 5 : wff = thm bitr3d (step 1, step 4) |- ( A. x x = z -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 6 : wff = thm adantr (step 5) |- ( ( A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 7 : wff = thm hbnae () |- ( -. A. x x = z -> A. z -. A. x x = z ) ;
	step 8 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 9 : wff = thm hban (step 7, step 8) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> A. z ( -. A. x x = z /\ -. A. x x = y ) ) ;
	step 10 : wff = thm hbnae () |- ( -. A. x x = z -> A. x -. A. x x = z ) ;
	step 11 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 12 : wff = thm hban (step 10, step 11) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> A. x ( -. A. x x = z /\ -. A. x x = y ) ) ;
	step 13 : wff = axm ax-12 () |- ( -. A. x x = z -> ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ) ;
	step 14 : wff = thm imp (step 13) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( z = y -> A. x z = y ) ) ;
	step 15 : wff = thm 19_20i (step 14) |- ( A. x ( -. A. x x = z /\ -. A. x x = y ) -> A. x ( z = y -> A. x z = y ) ) ;
	step 16 : wff = thm 19_21t () |- ( A. x ( z = y -> A. x z = y ) -> ( A. x ( z = y -> ( x = y -> ph ) ) <-> ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 17 : wff = thm 3syl (step 12, step 15, step 16) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( A. x ( z = y -> ( x = y -> ph ) ) <-> ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 18 : wff = thm albid (step 9, step 17) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( A. z A. x ( z = y -> ( x = y -> ph ) ) <-> A. z ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 19 : wff = thm adantrr (step 18) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( A. z A. x ( z = y -> ( x = y -> ph ) ) <-> A. z ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 20 : wff = thm hbnae () |- ( -. A. x x = z -> A. x -. A. x x = z ) ;
	step 21 : wff = thm hbnae () |- ( -. A. z z = y -> A. x -. A. z z = y ) ;
	step 22 : wff = thm hban (step 20, step 21) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> A. x ( -. A. x x = z /\ -. A. z z = y ) ) ;
	step 23 : wff = thm hbnae () |- ( -. A. x x = z -> A. z -. A. x x = z ) ;
	step 24 : wff = thm hbnae () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 25 : wff = thm hban (step 23, step 24) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> A. z ( -. A. x x = z /\ -. A. z z = y ) ) ;
	step 26 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 27 : wff = thm nalequcoms (step 26) |- ( -. A. x x = z -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 28 : wff = thm imp (step 27) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 29 : wff = thm 19_20i (step 28) |- ( A. z ( -. A. x x = z /\ -. A. z z = y ) -> A. z ( x = y -> A. z x = y ) ) ;
	step 30 : wff = thm 19_21t () |- ( A. z ( x = y -> A. z x = y ) -> ( A. z ( x = y -> ( z = y -> ph ) ) <-> ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 31 : wff = thm 3syl (step 25, step 29, step 30) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> ( A. z ( x = y -> ( z = y -> ph ) ) <-> ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 32 : wff = thm bi2_04 () |- ( ( z = y -> ( x = y -> ph ) ) <-> ( x = y -> ( z = y -> ph ) ) ) ;
	step 33 : wff = thm albii (step 32) |- ( A. z ( z = y -> ( x = y -> ph ) ) <-> A. z ( x = y -> ( z = y -> ph ) ) ) ;
	step 34 : wff = thm syl5bb (step 31, step 33) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> ( A. z ( z = y -> ( x = y -> ph ) ) <-> ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 35 : wff = thm albid (step 22, step 34) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> ( A. x A. z ( z = y -> ( x = y -> ph ) ) <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 36 : wff = thm alcom () |- ( A. z A. x ( z = y -> ( x = y -> ph ) ) <-> A. x A. z ( z = y -> ( x = y -> ph ) ) ) ;
	step 37 : wff = thm syl5bb (step 35, step 36) |- ( ( -. A. x x = z /\ -. A. z z = y ) -> ( A. z A. x ( z = y -> ( x = y -> ph ) ) <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 38 : wff = thm adantrl (step 37) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( A. z A. x ( z = y -> ( x = y -> ph ) ) <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 39 : wff = thm bitr3d (step 19, step 38) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( A. z ( z = y -> A. x ( x = y -> ph ) ) <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 40 : wff = thm sb4b () |- ( -. A. z z = y -> ( [ y / z ] [ y / x ] ph <-> A. z ( z = y -> [ y / x ] ph ) ) ) ;
	step 41 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 42 : wff = thm sb4b () |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) ;
	step 43 : wff = thm imbi2d (step 42) |- ( -. A. x x = y -> ( ( z = y -> [ y / x ] ph ) <-> ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 44 : wff = thm albid (step 41, step 43) |- ( -. A. x x = y -> ( A. z ( z = y -> [ y / x ] ph ) <-> A. z ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 45 : wff = thm sylan9bbr (step 40, step 44) |- ( ( -. A. x x = y /\ -. A. z z = y ) -> ( [ y / z ] [ y / x ] ph <-> A. z ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 46 : wff = thm adantl (step 45) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( [ y / z ] [ y / x ] ph <-> A. z ( z = y -> A. x ( x = y -> ph ) ) ) ) ;
	step 47 : wff = thm sb4b () |- ( -. A. x x = y -> ( [ y / x ] [ y / z ] ph <-> A. x ( x = y -> [ y / z ] ph ) ) ) ;
	step 48 : wff = thm hbnae () |- ( -. A. z z = y -> A. x -. A. z z = y ) ;
	step 49 : wff = thm sb4b () |- ( -. A. z z = y -> ( [ y / z ] ph <-> A. z ( z = y -> ph ) ) ) ;
	step 50 : wff = thm imbi2d (step 49) |- ( -. A. z z = y -> ( ( x = y -> [ y / z ] ph ) <-> ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 51 : wff = thm albid (step 48, step 50) |- ( -. A. z z = y -> ( A. x ( x = y -> [ y / z ] ph ) <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 52 : wff = thm sylan9bb (step 47, step 51) |- ( ( -. A. x x = y /\ -. A. z z = y ) -> ( [ y / x ] [ y / z ] ph <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 53 : wff = thm adantl (step 52) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( [ y / x ] [ y / z ] ph <-> A. x ( x = y -> A. z ( z = y -> ph ) ) ) ) ;
	step 54 : wff = thm 3bitr4d (step 39, step 46, step 53) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ -. A. z z = y ) ) -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 55 : wff = thm pm2_61ian (step 6, step 54) |- ( ( -. A. x x = y /\ -. A. z z = y ) -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 56 : wff = thm ex (step 55) |- ( -. A. x x = y -> ( -. A. z z = y -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ) ;
	step 57 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 58 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 59 : wff = thm a4s (step 58) |- ( A. x x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 60 : wff = thm sbbid (step 57, step 59) |- ( A. x x = y -> ( [ y / z ] ph <-> [ y / z ] [ y / x ] ph ) ) ;
	step 61 : wff = thm sbequ12 () |- ( x = y -> ( [ y / z ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 62 : wff = thm a4s (step 61) |- ( A. x x = y -> ( [ y / z ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 63 : wff = thm bitr3d (step 60, step 62) |- ( A. x x = y -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 64 : wff = thm sbequ12 () |- ( z = y -> ( [ y / x ] ph <-> [ y / z ] [ y / x ] ph ) ) ;
	step 65 : wff = thm a4s (step 64) |- ( A. z z = y -> ( [ y / x ] ph <-> [ y / z ] [ y / x ] ph ) ) ;
	step 66 : wff = thm hbae () |- ( A. z z = y -> A. x A. z z = y ) ;
	step 67 : wff = thm sbequ12 () |- ( z = y -> ( ph <-> [ y / z ] ph ) ) ;
	step 68 : wff = thm a4s (step 67) |- ( A. z z = y -> ( ph <-> [ y / z ] ph ) ) ;
	step 69 : wff = thm sbbid (step 66, step 68) |- ( A. z z = y -> ( [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 70 : wff = thm bitr3d (step 65, step 69) |- ( A. z z = y -> ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ) ;
	step 71 : wff = thm pm2_61ii (step 56, step 63, step 70) |- ( [ y / z ] [ y / x ] ph <-> [ y / x ] [ y / z ] ph ) ;
	qed prop 1 = step 71 ;
}

theorem sb5rf (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> E. y ( y = x /\ [ y / x ] ph ) ) ;
}

proof of sb5rf {
	step 1 : wff = thm sbid2 (hyp 1) |- ( [ x / y ] [ y / x ] ph <-> ph ) ;
	step 2 : wff = thm sb1 () |- ( [ x / y ] [ y / x ] ph -> E. y ( y = x /\ [ y / x ] ph ) ) ;
	step 3 : wff = thm sylbir (step 1, step 2) |- ( ph -> E. y ( y = x /\ [ y / x ] ph ) ) ;
	step 4 : wff = thm sbequ12r () |- ( y = x -> ( [ y / x ] ph <-> ph ) ) ;
	step 5 : wff = thm biimpa (step 4) |- ( ( y = x /\ [ y / x ] ph ) -> ph ) ;
	step 6 : wff = thm 19_23ai (hyp 1, step 5) |- ( E. y ( y = x /\ [ y / x ] ph ) -> ph ) ;
	step 7 : wff = thm impbii (step 3, step 6) |- ( ph <-> E. y ( y = x /\ [ y / x ] ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem sb6rf (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> A. y ( y = x -> [ y / x ] ph ) ) ;
}

proof of sb6rf {
	step 1 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 2 : wff = thm equcoms (step 1) |- ( y = x -> ( ph -> [ y / x ] ph ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ph -> ( y = x -> [ y / x ] ph ) ) ;
	step 4 : wff = thm 19_21ai (hyp 1, step 3) |- ( ph -> A. y ( y = x -> [ y / x ] ph ) ) ;
	step 5 : wff = thm sb2 () |- ( A. y ( y = x -> [ y / x ] ph ) -> [ x / y ] [ y / x ] ph ) ;
	step 6 : wff = thm sbco () |- ( [ x / y ] [ y / x ] ph <-> [ x / y ] ph ) ;
	step 7 : wff = thm sylib (step 5, step 6) |- ( A. y ( y = x -> [ y / x ] ph ) -> [ x / y ] ph ) ;
	step 8 : wff = thm sbf (hyp 1) |- ( [ x / y ] ph <-> ph ) ;
	step 9 : wff = thm sylib (step 7, step 8) |- ( A. y ( y = x -> [ y / x ] ph ) -> ph ) ;
	step 10 : wff = thm impbii (step 4, step 9) |- ( ph <-> A. y ( y = x -> [ y / x ] ph ) ) ;
	qed prop 1 = step 10 ;
}

theorem sb8 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph <-> A. y [ y / x ] ph ) ;
}

proof of sb8 {
	step 1 : wff = thm hbal (hyp 1) |- ( A. x ph -> A. y A. x ph ) ;
	step 2 : wff = thm stdpc4 () |- ( A. x ph -> [ y / x ] ph ) ;
	step 3 : wff = thm 19_21ai (step 1, step 2) |- ( A. x ph -> A. y [ y / x ] ph ) ;
	step 4 : wff = thm hbsb3 (hyp 1) |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 5 : wff = thm hbal (step 4) |- ( A. y [ y / x ] ph -> A. x A. y [ y / x ] ph ) ;
	step 6 : wff = thm stdpc4 () |- ( A. y [ y / x ] ph -> [ x / y ] [ y / x ] ph ) ;
	step 7 : wff = thm sbid2 (hyp 1) |- ( [ x / y ] [ y / x ] ph <-> ph ) ;
	step 8 : wff = thm sylib (step 6, step 7) |- ( A. y [ y / x ] ph -> ph ) ;
	step 9 : wff = thm 19_21ai (step 5, step 8) |- ( A. y [ y / x ] ph -> A. x ph ) ;
	step 10 : wff = thm impbii (step 3, step 9) |- ( A. x ph <-> A. y [ y / x ] ph ) ;
	qed prop 1 = step 10 ;
}

theorem sb8e (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph <-> E. y [ y / x ] ph ) ;
}

proof of sb8e {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. y -. ph ) ;
	step 2 : wff = thm sb8 (step 1) |- ( A. x -. ph <-> A. y [ y / x ] -. ph ) ;
	step 3 : wff = thm sbn () |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
	step 4 : wff = thm albii (step 3) |- ( A. y [ y / x ] -. ph <-> A. y -. [ y / x ] ph ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( A. x -. ph <-> A. y -. [ y / x ] ph ) ;
	step 6 : wff = thm notbii (step 5) |- ( -. A. x -. ph <-> -. A. y -. [ y / x ] ph ) ;
	step 7 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 8 : wff = def df-ex () |- ( E. y [ y / x ] ph <-> -. A. y -. [ y / x ] ph ) ;
	step 9 : wff = thm 3bitr4i (step 6, step 7, step 8) |- ( E. x ph <-> E. y [ y / x ] ph ) ;
	qed prop 1 = step 9 ;
}

theorem sb9i (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) ;
}

proof of sb9i {
	step 1 : wff = thm drsb1 () |- ( A. y y = x -> ( [ y / y ] ph <-> [ y / x ] ph ) ) ;
	step 2 : wff = thm drsb2 () |- ( A. y y = x -> ( [ y / y ] ph <-> [ x / y ] ph ) ) ;
	step 3 : wff = thm bitr3d (step 1, step 2) |- ( A. y y = x -> ( [ y / x ] ph <-> [ x / y ] ph ) ) ;
	step 4 : wff = thm dral1 (step 3) |- ( A. y y = x -> ( A. y [ y / x ] ph <-> A. x [ x / y ] ph ) ) ;
	step 5 : wff = thm biimprd (step 4) |- ( A. y y = x -> ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) ) ;
	step 6 : wff = thm hbsb2 () |- ( -. A. y y = x -> ( [ x / y ] ph -> A. y [ x / y ] ph ) ) ;
	step 7 : wff = thm 19_20ii (step 6) |- ( A. x -. A. y y = x -> ( A. x [ x / y ] ph -> A. x A. y [ x / y ] ph ) ) ;
	step 8 : wff = thm hbnaes (step 7) |- ( -. A. y y = x -> ( A. x [ x / y ] ph -> A. x A. y [ x / y ] ph ) ) ;
	step 9 : wff = thm stdpc4 () |- ( A. x [ x / y ] ph -> [ y / x ] [ x / y ] ph ) ;
	step 10 : wff = thm sbco () |- ( [ y / x ] [ x / y ] ph <-> [ y / x ] ph ) ;
	step 11 : wff = thm sylib (step 9, step 10) |- ( A. x [ x / y ] ph -> [ y / x ] ph ) ;
	step 12 : wff = thm 19_20i (step 11) |- ( A. y A. x [ x / y ] ph -> A. y [ y / x ] ph ) ;
	step 13 : wff = thm a7s (step 12) |- ( A. x A. y [ x / y ] ph -> A. y [ y / x ] ph ) ;
	step 14 : wff = thm syl6 (step 8, step 13) |- ( -. A. y y = x -> ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) ) ;
	step 15 : wff = thm pm2_61i (step 5, step 14) |- ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) ;
	qed prop 1 = step 15 ;
}

theorem sb9 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x [ x / y ] ph <-> A. y [ y / x ] ph ) ;
}

proof of sb9 {
	step 1 : wff = thm sb9i () |- ( A. x [ x / y ] ph -> A. y [ y / x ] ph ) ;
	step 2 : wff = thm sb9i () |- ( A. y [ y / x ] ph -> A. x [ x / y ] ph ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( A. x [ x / y ] ph <-> A. y [ y / x ] ph ) ;
	qed prop 1 = step 3 ;
}

theorem ax11v (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ;
}

proof of ax11v {
	step 1 : wff = axm ax-16 () |- ( A. x x = y -> ( ( x = y -> ph ) -> A. x ( x = y -> ph ) ) ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( x = y -> ph ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A. x x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 4 : wff = thm a1d (step 3) |- ( A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 5 : wff = axm ax-11o () |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	step 6 : wff = thm pm2_61i (step 4, step 5) |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem sb56 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
}

proof of sb56 {
	step 1 : wff = thm hba1 () |- ( A. x ( x = y -> ph ) -> A. x A. x ( x = y -> ph ) ) ;
	step 2 : wff = thm ax11v () |- ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 3 : wff = axm ax-4 () |- ( A. x ( x = y -> ph ) -> ( x = y -> ph ) ) ;
	step 4 : wff = thm com12 (step 3) |- ( x = y -> ( A. x ( x = y -> ph ) -> ph ) ) ;
	step 5 : wff = thm impbid (step 2, step 4) |- ( x = y -> ( ph <-> A. x ( x = y -> ph ) ) ) ;
	step 6 : wff = thm equsex (step 1, step 5) |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem sb6 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
}

proof of sb6 {
	step 1 : wff = thm sb56 () |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) <-> ( ( x = y -> ph ) /\ A. x ( x = y -> ph ) ) ) ;
	step 3 : wff = def df-sb () |- ( [ y / x ] ph <-> ( ( x = y -> ph ) /\ E. x ( x = y /\ ph ) ) ) ;
	step 4 : wff = axm ax-4 () |- ( A. x ( x = y -> ph ) -> ( x = y -> ph ) ) ;
	step 5 : wff = thm pm4_71ri (step 4) |- ( A. x ( x = y -> ph ) <-> ( ( x = y -> ph ) /\ A. x ( x = y -> ph ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 2, step 3, step 5) |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem sb5 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) ;
}

proof of sb5 {
	step 1 : wff = thm sb6 () |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	step 2 : wff = thm sb56 () |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( [ y / x ] ph <-> E. x ( x = y /\ ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem equid1 (x : set)  {
	prop 1 : wff = |- x = x ;
}

proof of equid1 {
	var y : set;
	step 1 : wff = thm a9e () |- E. y y = x ;
	step 2 : wff = axm ax-17 () |- ( x = x -> A. y x = x ) ;
	step 3 : wff = axm ax-8 () |- ( y = x -> ( y = x -> x = x ) ) ;
	step 4 : wff = thm pm2_43i (step 3) |- ( y = x -> x = x ) ;
	step 5 : wff = thm 19_23ai (step 2, step 4) |- ( E. y y = x -> x = x ) ;
	step 6 : wff = axm ax-mp (step 1, step 5) |- x = x ;
	qed prop 1 = step 6 ;
}

theorem ax16i (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( x = z -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
}

proof of ax16i {
	step 1 : wff = axm ax-17 () |- ( x = y -> A. z x = y ) ;
	step 2 : wff = axm ax-17 () |- ( z = y -> A. x z = y ) ;
	step 3 : wff = axm ax-8 () |- ( x = z -> ( x = y -> z = y ) ) ;
	step 4 : wff = thm cbv3 (step 1, step 2, step 3) |- ( A. x x = y -> A. z z = y ) ;
	step 5 : wff = axm ax-8 () |- ( z = x -> ( z = y -> x = y ) ) ;
	step 6 : wff = thm a4imv (step 5) |- ( A. z z = y -> x = y ) ;
	step 7 : wff = axm ax-17 () |- ( x = y -> A. z x = y ) ;
	step 8 : wff = thm equid1 () |- z = z ;
	step 9 : wff = axm ax-8 () |- ( z = y -> ( z = z -> y = z ) ) ;
	step 10 : wff = thm mpi (step 8, step 9) |- ( z = y -> y = z ) ;
	step 11 : wff = axm ax-8 () |- ( y = z -> ( y = x -> z = x ) ) ;
	step 12 : wff = thm syl (step 10, step 11) |- ( z = y -> ( y = x -> z = x ) ) ;
	step 13 : wff = thm equid1 () |- x = x ;
	step 14 : wff = axm ax-8 () |- ( x = y -> ( x = x -> y = x ) ) ;
	step 15 : wff = thm mpi (step 13, step 14) |- ( x = y -> y = x ) ;
	step 16 : wff = thm syl5com (step 12, step 15) |- ( x = y -> ( z = y -> z = x ) ) ;
	step 17 : wff = thm 19_20d (step 7, step 16) |- ( x = y -> ( A. z z = y -> A. z z = x ) ) ;
	step 18 : wff = thm mpcom (step 6, step 17) |- ( A. z z = y -> A. z z = x ) ;
	step 19 : wff = thm equid1 () |- z = z ;
	step 20 : wff = axm ax-8 () |- ( z = x -> ( z = z -> x = z ) ) ;
	step 21 : wff = thm mpi (step 19, step 20) |- ( z = x -> x = z ) ;
	step 22 : wff = thm 19_20i (step 21) |- ( A. z z = x -> A. z x = z ) ;
	step 23 : wff = thm syl (step 18, step 22) |- ( A. z z = y -> A. z x = z ) ;
	step 24 : wff = thm syl (step 4, step 23) |- ( A. x x = y -> A. z x = z ) ;
	step 25 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 26 : wff = thm biimpcd (hyp 1) |- ( ph -> ( x = z -> ps ) ) ;
	step 27 : wff = thm 19_20d (step 25, step 26) |- ( ph -> ( A. z x = z -> A. z ps ) ) ;
	step 28 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 29 : wff = thm equid1 () |- z = z ;
	step 30 : wff = axm ax-8 () |- ( z = x -> ( z = z -> x = z ) ) ;
	step 31 : wff = thm mpi (step 29, step 30) |- ( z = x -> x = z ) ;
	step 32 : wff = thm biimprd (hyp 1) |- ( x = z -> ( ps -> ph ) ) ;
	step 33 : wff = thm syl (step 31, step 32) |- ( z = x -> ( ps -> ph ) ) ;
	step 34 : wff = thm cbv3 (hyp 2, step 28, step 33) |- ( A. z ps -> A. x ph ) ;
	step 35 : wff = thm syl6com (step 27, step 34) |- ( A. z x = z -> ( ph -> A. x ph ) ) ;
	step 36 : wff = thm syl (step 24, step 35) |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
	qed prop 1 = step 36 ;
}

theorem ax16ALT (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
}

proof of ax16ALT {
	var z : set;
	step 1 : wff = thm sbequ12 () |- ( x = z -> ( ph <-> [ z / x ] ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 3 : wff = thm hbsb3 (step 2) |- ( [ z / x ] ph -> A. x [ z / x ] ph ) ;
	step 4 : wff = thm ax16i (step 1, step 3) |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem a4v (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of a4v {
	step 1 : wff = thm biimpd (hyp 1) |- ( x = y -> ( ph -> ps ) ) ;
	step 2 : wff = thm a4imv (step 1) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem a4imev (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> E. x ps ) ;
}

proof of a4imev {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm a4ime (step 1, hyp 1) |- ( ph -> E. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem a4eiv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- E. x ph ;
}

proof of a4eiv {
	step 1 : wff = thm biimprd (hyp 1) |- ( x = y -> ( ps -> ph ) ) ;
	step 2 : wff = thm a4imev (step 1) |- ( ps -> E. x ph ) ;
	step 3 : wff = axm ax-mp (hyp 2, step 2) |- E. x ph ;
	qed prop 1 = step 3 ;
}

theorem equvin (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y <-> E. z ( x = z /\ z = y ) ) ;
}

proof of equvin {
	step 1 : wff = thm equvini () |- ( x = y -> E. z ( x = z /\ z = y ) ) ;
	step 2 : wff = axm ax-17 () |- ( x = y -> A. z x = y ) ;
	step 3 : wff = thm equtr () |- ( x = z -> ( z = y -> x = y ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( x = z /\ z = y ) -> x = y ) ;
	step 5 : wff = thm 19_23ai (step 2, step 4) |- ( E. z ( x = z /\ z = y ) -> x = y ) ;
	step 6 : wff = thm impbii (step 1, step 5) |- ( x = y <-> E. z ( x = z /\ z = y ) ) ;
	qed prop 1 = step 6 ;
}

theorem a16g (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( ph -> A. z ph ) ) ;
}

proof of a16g {
	step 1 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 2 : wff = axm ax-9 () |- -. A. x -. x = z ;
	step 3 : wff = axm ax-16 () |- ( A. x x = y -> ( -. x = z -> A. x -. x = z ) ) ;
	step 4 : wff = thm mt3i (step 2, step 3) |- ( A. x x = y -> x = z ) ;
	step 5 : wff = thm equcomi () |- ( x = z -> z = x ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( A. x x = y -> z = x ) ;
	step 7 : wff = thm 19_21ai (step 1, step 6) |- ( A. x x = y -> A. z z = x ) ;
	step 8 : wff = axm ax-16 () |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
	step 9 : wff = thm biidd () |- ( A. z z = x -> ( ph <-> ph ) ) ;
	step 10 : wff = thm dral1 (step 9) |- ( A. z z = x -> ( A. z ph <-> A. x ph ) ) ;
	step 11 : wff = thm biimprd (step 10) |- ( A. z z = x -> ( A. x ph -> A. z ph ) ) ;
	step 12 : wff = thm syl9r (step 8, step 11) |- ( A. z z = x -> ( A. x x = y -> ( ph -> A. z ph ) ) ) ;
	step 13 : wff = thm mpcom (step 7, step 12) |- ( A. x x = y -> ( ph -> A. z ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem a16gb (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x x = y -> ( ph <-> A. z ph ) ) ;
}

proof of a16gb {
	step 1 : wff = thm a16g () |- ( A. x x = y -> ( ph -> A. z ph ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. z ph -> ph ) ;
	step 3 : wff = thm impbid1 (step 1, step 2) |- ( A. x x = y -> ( ph <-> A. z ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem albidv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x ps <-> A. x ch ) ) ;
}

proof of albidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm albid (step 1, hyp 1) |- ( ph -> ( A. x ps <-> A. x ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem exbidv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps <-> E. x ch ) ) ;
}

proof of exbidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm exbid (step 1, hyp 1) |- ( ph -> ( E. x ps <-> E. x ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 2albidv (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x A. y ps <-> A. x A. y ch ) ) ;
}

proof of 2albidv {
	step 1 : wff = thm albidv (hyp 1) |- ( ph -> ( A. y ps <-> A. y ch ) ) ;
	step 2 : wff = thm albidv (step 1) |- ( ph -> ( A. x A. y ps <-> A. x A. y ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 2exbidv (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x E. y ps <-> E. x E. y ch ) ) ;
}

proof of 2exbidv {
	step 1 : wff = thm exbidv (hyp 1) |- ( ph -> ( E. y ps <-> E. y ch ) ) ;
	step 2 : wff = thm exbidv (step 1) |- ( ph -> ( E. x E. y ps <-> E. x E. y ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3exbidv (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x E. y E. z ps <-> E. x E. y E. z ch ) ) ;
}

proof of 3exbidv {
	step 1 : wff = thm exbidv (hyp 1) |- ( ph -> ( E. z ps <-> E. z ch ) ) ;
	step 2 : wff = thm 2exbidv (step 1) |- ( ph -> ( E. x E. y E. z ps <-> E. x E. y E. z ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 4exbidv (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x E. y E. z E. w ps <-> E. x E. y E. z E. w ch ) ) ;
}

proof of 4exbidv {
	step 1 : wff = thm 2exbidv (hyp 1) |- ( ph -> ( E. z E. w ps <-> E. z E. w ch ) ) ;
	step 2 : wff = thm 2exbidv (step 1) |- ( ph -> ( E. x E. y E. z E. w ps <-> E. x E. y E. z E. w ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_9v (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x ph <-> ph ) ;
}

proof of 19_9v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_9 (step 1) |- ( E. x ph <-> ph ) ;
	qed prop 1 = step 2 ;
}

theorem 19_21v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
}

proof of 19_21v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_21 (step 1) |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_21aiv (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x ps ) ;
}

proof of 19_21aiv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_21ai (step 1, hyp 1) |- ( ph -> A. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_21aivv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x A. y ps ) ;
}

proof of 19_21aivv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. y ps ) ;
	step 2 : wff = thm 19_21aiv (step 1) |- ( ph -> A. x A. y ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_21adv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x ch ) ) ;
}

proof of 19_21adv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm 19_21ad (step 1, step 2, hyp 1) |- ( ph -> ( ps -> A. x ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 19_20dv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x ps -> A. x ch ) ) ;
}

proof of 19_20dv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_20d (step 1, hyp 1) |- ( ph -> ( A. x ps -> A. x ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_22dv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps -> E. x ch ) ) ;
}

proof of 19_22dv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_22d (step 1, hyp 1) |- ( ph -> ( E. x ps -> E. x ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_20dvv (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x A. y ps -> A. x A. y ch ) ) ;
}

proof of 19_20dvv {
	step 1 : wff = thm 19_20dv (hyp 1) |- ( ph -> ( A. y ps -> A. y ch ) ) ;
	step 2 : wff = thm 19_20dv (step 1) |- ( ph -> ( A. x A. y ps -> A. x A. y ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_22dvv (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x E. y ps -> E. x E. y ch ) ) ;
}

proof of 19_22dvv {
	step 1 : wff = thm 19_22dv (hyp 1) |- ( ph -> ( E. y ps -> E. y ch ) ) ;
	step 2 : wff = thm 19_22dv (step 1) |- ( ph -> ( E. x E. y ps -> E. x E. y ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_23v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ;
}

proof of 19_23v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm 19_23 (step 1) |- ( A. x ( ph -> ps ) <-> ( E. x ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_23vv (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ( ph -> ps ) <-> ( E. x E. y ph -> ps ) ) ;
}

proof of 19_23vv {
	step 1 : wff = thm 19_23v () |- ( A. y ( ph -> ps ) <-> ( E. y ph -> ps ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x A. y ( ph -> ps ) <-> A. x ( E. y ph -> ps ) ) ;
	step 3 : wff = thm 19_23v () |- ( A. x ( E. y ph -> ps ) <-> ( E. x E. y ph -> ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x A. y ( ph -> ps ) <-> ( E. x E. y ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_23aiv (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph -> ps ) ;
}

proof of 19_23aiv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm 19_23ai (step 1, hyp 1) |- ( E. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_23aivv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ph -> ps ) ;
}

proof of 19_23aivv {
	step 1 : wff = thm 19_23aiv (hyp 1) |- ( E. y ph -> ps ) ;
	step 2 : wff = thm 19_23aiv (step 1) |- ( E. x E. y ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_23advv (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x E. y ps -> ch ) ) ;
}

proof of 19_23advv {
	step 1 : wff = thm 19_23adv (hyp 1) |- ( ph -> ( E. y ps -> ch ) ) ;
	step 2 : wff = thm 19_23adv (step 1) |- ( ph -> ( E. x E. y ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_27v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) ;
}

proof of 19_27v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm 19_27 (step 1) |- ( A. x ( ph /\ ps ) <-> ( A. x ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_28v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) ;
}

proof of 19_28v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_28 (step 1) |- ( A. x ( ph /\ ps ) <-> ( ph /\ A. x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_36v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
}

proof of 19_36v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm 19_36 (step 1) |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_36aiv (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- E. x ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of 19_36aiv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm 19_36i (step 1, hyp 1) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_12vv (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x A. y ( ph -> ps ) <-> A. y E. x ( ph -> ps ) ) ;
}

proof of 19_12vv {
	step 1 : wff = thm 19_21v () |- ( A. y ( ph -> ps ) <-> ( ph -> A. y ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x A. y ( ph -> ps ) <-> E. x ( ph -> A. y ps ) ) ;
	step 3 : wff = thm 19_36v () |- ( E. x ( ph -> A. y ps ) <-> ( A. x ph -> A. y ps ) ) ;
	step 4 : wff = thm 19_36v () |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. y E. x ( ph -> ps ) <-> A. y ( A. x ph -> ps ) ) ;
	step 6 : wff = thm 19_21v () |- ( A. y ( A. x ph -> ps ) <-> ( A. x ph -> A. y ps ) ) ;
	step 7 : wff = thm bitr2i (step 5, step 6) |- ( ( A. x ph -> A. y ps ) <-> A. y E. x ( ph -> ps ) ) ;
	step 8 : wff = thm 3bitri (step 2, step 3, step 7) |- ( E. x A. y ( ph -> ps ) <-> A. y E. x ( ph -> ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem 19_37v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) ;
}

proof of 19_37v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_37 (step 1) |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_37aiv (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- E. x ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> E. x ps ) ;
}

proof of 19_37aiv {
	step 1 : wff = thm 19_37v () |- ( E. x ( ph -> ps ) <-> ( ph -> E. x ps ) ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- ( ph -> E. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem 19_41v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) ;
}

proof of 19_41v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm 19_41 (step 1) |- ( E. x ( ph /\ ps ) <-> ( E. x ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_41vv (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x E. y ( ph /\ ps ) <-> ( E. x E. y ph /\ ps ) ) ;
}

proof of 19_41vv {
	step 1 : wff = thm 19_41v () |- ( E. y ( ph /\ ps ) <-> ( E. y ph /\ ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y ( ph /\ ps ) <-> E. x ( E. y ph /\ ps ) ) ;
	step 3 : wff = thm 19_41v () |- ( E. x ( E. y ph /\ ps ) <-> ( E. x E. y ph /\ ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x E. y ( ph /\ ps ) <-> ( E. x E. y ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_41vvv (ph : wff, ps : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. x E. y E. z ( ph /\ ps ) <-> ( E. x E. y E. z ph /\ ps ) ) ;
}

proof of 19_41vvv {
	step 1 : wff = thm 19_41vv () |- ( E. y E. z ( ph /\ ps ) <-> ( E. y E. z ph /\ ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y E. z ( ph /\ ps ) <-> E. x ( E. y E. z ph /\ ps ) ) ;
	step 3 : wff = thm 19_41v () |- ( E. x ( E. y E. z ph /\ ps ) <-> ( E. x E. y E. z ph /\ ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x E. y E. z ( ph /\ ps ) <-> ( E. x E. y E. z ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem 19_42v (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) ;
}

proof of 19_42v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm 19_42 (step 1) |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem exdistr (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) ;
}

proof of exdistr {
	step 1 : wff = thm 19_42v () |- ( E. y ( ph /\ ps ) <-> ( ph /\ E. y ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 19_42vv (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x E. y ( ph /\ ps ) <-> ( ph /\ E. x E. y ps ) ) ;
}

proof of 19_42vv {
	step 1 : wff = thm exdistr () |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) ;
	step 2 : wff = thm 19_42v () |- ( E. x ( ph /\ E. y ps ) <-> ( ph /\ E. x E. y ps ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( E. x E. y ( ph /\ ps ) <-> ( ph /\ E. x E. y ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem exdistr2 (ph : wff, ps : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. x E. y E. z ( ph /\ ps ) <-> E. x ( ph /\ E. y E. z ps ) ) ;
}

proof of exdistr2 {
	step 1 : wff = thm 19_42vv () |- ( E. y E. z ( ph /\ ps ) <-> ( ph /\ E. y E. z ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y E. z ( ph /\ ps ) <-> E. x ( ph /\ E. y E. z ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 3exdistr (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <-> E. x ( ph /\ E. y ( ps /\ E. z ch ) ) ) ;
}

proof of 3exdistr {
	step 1 : wff = thm 3anass () |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. z ( ph /\ ps /\ ch ) <-> E. z ( ph /\ ( ps /\ ch ) ) ) ;
	step 3 : wff = thm 19_42v () |- ( E. z ( ph /\ ( ps /\ ch ) ) <-> ( ph /\ E. z ( ps /\ ch ) ) ) ;
	step 4 : wff = thm 19_42v () |- ( E. z ( ps /\ ch ) <-> ( ps /\ E. z ch ) ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( ph /\ E. z ( ps /\ ch ) ) <-> ( ph /\ ( ps /\ E. z ch ) ) ) ;
	step 6 : wff = thm 3bitri (step 2, step 3, step 5) |- ( E. z ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ E. z ch ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. y E. z ( ph /\ ps /\ ch ) <-> E. y ( ph /\ ( ps /\ E. z ch ) ) ) ;
	step 8 : wff = thm 19_42v () |- ( E. y ( ph /\ ( ps /\ E. z ch ) ) <-> ( ph /\ E. y ( ps /\ E. z ch ) ) ) ;
	step 9 : wff = thm bitri (step 7, step 8) |- ( E. y E. z ( ph /\ ps /\ ch ) <-> ( ph /\ E. y ( ps /\ E. z ch ) ) ) ;
	step 10 : wff = thm exbii (step 9) |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <-> E. x ( ph /\ E. y ( ps /\ E. z ch ) ) ) ;
	qed prop 1 = step 10 ;
}

theorem 4exdistr (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( E. x E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> E. x ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
}

proof of 4exdistr {
	step 1 : wff = thm anass () |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ph /\ ( ps /\ ( ch /\ th ) ) ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> E. w ( ph /\ ( ps /\ ( ch /\ th ) ) ) ) ;
	step 3 : wff = thm 19_42v () |- ( E. w ( ph /\ ( ps /\ ( ch /\ th ) ) ) <-> ( ph /\ E. w ( ps /\ ( ch /\ th ) ) ) ) ;
	step 4 : wff = thm 19_42v () |- ( E. w ( ps /\ ( ch /\ th ) ) <-> ( ps /\ E. w ( ch /\ th ) ) ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( ph /\ E. w ( ps /\ ( ch /\ th ) ) ) <-> ( ph /\ ( ps /\ E. w ( ch /\ th ) ) ) ) ;
	step 6 : wff = thm 19_42v () |- ( E. w ( ch /\ th ) <-> ( ch /\ E. w th ) ) ;
	step 7 : wff = thm anbi2i (step 6) |- ( ( ps /\ E. w ( ch /\ th ) ) <-> ( ps /\ ( ch /\ E. w th ) ) ) ;
	step 8 : wff = thm anbi2i (step 7) |- ( ( ph /\ ( ps /\ E. w ( ch /\ th ) ) ) <-> ( ph /\ ( ps /\ ( ch /\ E. w th ) ) ) ) ;
	step 9 : wff = thm 3bitri (step 3, step 5, step 8) |- ( E. w ( ph /\ ( ps /\ ( ch /\ th ) ) ) <-> ( ph /\ ( ps /\ ( ch /\ E. w th ) ) ) ) ;
	step 10 : wff = thm bitri (step 2, step 9) |- ( E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ph /\ ( ps /\ ( ch /\ E. w th ) ) ) ) ;
	step 11 : wff = thm exbii (step 10) |- ( E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> E. z ( ph /\ ( ps /\ ( ch /\ E. w th ) ) ) ) ;
	step 12 : wff = thm 19_42v () |- ( E. z ( ph /\ ( ps /\ ( ch /\ E. w th ) ) ) <-> ( ph /\ E. z ( ps /\ ( ch /\ E. w th ) ) ) ) ;
	step 13 : wff = thm 19_42v () |- ( E. z ( ps /\ ( ch /\ E. w th ) ) <-> ( ps /\ E. z ( ch /\ E. w th ) ) ) ;
	step 14 : wff = thm anbi2i (step 13) |- ( ( ph /\ E. z ( ps /\ ( ch /\ E. w th ) ) ) <-> ( ph /\ ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
	step 15 : wff = thm 3bitri (step 11, step 12, step 14) |- ( E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ph /\ ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
	step 16 : wff = thm exbii (step 15) |- ( E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> E. y ( ph /\ ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
	step 17 : wff = thm 19_42v () |- ( E. y ( ph /\ ( ps /\ E. z ( ch /\ E. w th ) ) ) <-> ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
	step 18 : wff = thm bitri (step 16, step 17) |- ( E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
	step 19 : wff = thm exbii (step 18) |- ( E. x E. y E. z E. w ( ( ph /\ ps ) /\ ( ch /\ th ) ) <-> E. x ( ph /\ E. y ( ps /\ E. z ( ch /\ E. w th ) ) ) ) ;
	qed prop 1 = step 19 ;
}

theorem cbvalv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph <-> A. y ps ) ;
}

proof of cbvalv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cbval (step 1, step 2, hyp 1) |- ( A. x ph <-> A. y ps ) ;
	qed prop 1 = step 3 ;
}

theorem cbvexv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ph <-> E. y ps ) ;
}

proof of cbvexv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cbvex (step 1, step 2, hyp 1) |- ( E. x ph <-> E. y ps ) ;
	qed prop 1 = step 3 ;
}

theorem cbval2 (ph : wff, ps : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	hyp 2 : wff = |- ( ph -> A. w ph ) ;
	hyp 3 : wff = |- ( ps -> A. x ps ) ;
	hyp 4 : wff = |- ( ps -> A. y ps ) ;
	hyp 5 : wff = |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ph <-> A. z A. w ps ) ;
}

proof of cbval2 {
	step 1 : wff = thm hbal (hyp 1) |- ( A. y ph -> A. z A. y ph ) ;
	step 2 : wff = thm hbal (hyp 3) |- ( A. w ps -> A. x A. w ps ) ;
	step 3 : wff = axm ax-17 () |- ( x = z -> A. w x = z ) ;
	step 4 : wff = thm hban (step 3, hyp 2) |- ( ( x = z /\ ph ) -> A. w ( x = z /\ ph ) ) ;
	step 5 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 6 : wff = thm hban (step 5, hyp 4) |- ( ( x = z /\ ps ) -> A. y ( x = z /\ ps ) ) ;
	step 7 : wff = thm expcom (hyp 5) |- ( y = w -> ( x = z -> ( ph <-> ps ) ) ) ;
	step 8 : wff = thm pm5_32d (step 7) |- ( y = w -> ( ( x = z /\ ph ) <-> ( x = z /\ ps ) ) ) ;
	step 9 : wff = thm cbval (step 4, step 6, step 8) |- ( A. y ( x = z /\ ph ) <-> A. w ( x = z /\ ps ) ) ;
	step 10 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 11 : wff = thm 19_28 (step 10) |- ( A. y ( x = z /\ ph ) <-> ( x = z /\ A. y ph ) ) ;
	step 12 : wff = axm ax-17 () |- ( x = z -> A. w x = z ) ;
	step 13 : wff = thm 19_28 (step 12) |- ( A. w ( x = z /\ ps ) <-> ( x = z /\ A. w ps ) ) ;
	step 14 : wff = thm 3bitr3i (step 9, step 11, step 13) |- ( ( x = z /\ A. y ph ) <-> ( x = z /\ A. w ps ) ) ;
	step 15 : wff = thm pm5_32 () |- ( ( x = z -> ( A. y ph <-> A. w ps ) ) <-> ( ( x = z /\ A. y ph ) <-> ( x = z /\ A. w ps ) ) ) ;
	step 16 : wff = thm mpbir (step 14, step 15) |- ( x = z -> ( A. y ph <-> A. w ps ) ) ;
	step 17 : wff = thm cbval (step 1, step 2, step 16) |- ( A. x A. y ph <-> A. z A. w ps ) ;
	qed prop 1 = step 17 ;
}

theorem cbvex2 (ph : wff, ps : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	hyp 2 : wff = |- ( ph -> A. w ph ) ;
	hyp 3 : wff = |- ( ps -> A. x ps ) ;
	hyp 4 : wff = |- ( ps -> A. y ps ) ;
	hyp 5 : wff = |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ph <-> E. z E. w ps ) ;
}

proof of cbvex2 {
	step 1 : wff = thm hbex (hyp 1) |- ( E. y ph -> A. z E. y ph ) ;
	step 2 : wff = thm hbex (hyp 3) |- ( E. w ps -> A. x E. w ps ) ;
	step 3 : wff = axm ax-17 () |- ( x = z -> A. w x = z ) ;
	step 4 : wff = thm hban (step 3, hyp 2) |- ( ( x = z /\ ph ) -> A. w ( x = z /\ ph ) ) ;
	step 5 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 6 : wff = thm hban (step 5, hyp 4) |- ( ( x = z /\ ps ) -> A. y ( x = z /\ ps ) ) ;
	step 7 : wff = thm expcom (hyp 5) |- ( y = w -> ( x = z -> ( ph <-> ps ) ) ) ;
	step 8 : wff = thm pm5_32d (step 7) |- ( y = w -> ( ( x = z /\ ph ) <-> ( x = z /\ ps ) ) ) ;
	step 9 : wff = thm cbvex (step 4, step 6, step 8) |- ( E. y ( x = z /\ ph ) <-> E. w ( x = z /\ ps ) ) ;
	step 10 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 11 : wff = thm 19_42 (step 10) |- ( E. y ( x = z /\ ph ) <-> ( x = z /\ E. y ph ) ) ;
	step 12 : wff = axm ax-17 () |- ( x = z -> A. w x = z ) ;
	step 13 : wff = thm 19_42 (step 12) |- ( E. w ( x = z /\ ps ) <-> ( x = z /\ E. w ps ) ) ;
	step 14 : wff = thm 3bitr3i (step 9, step 11, step 13) |- ( ( x = z /\ E. y ph ) <-> ( x = z /\ E. w ps ) ) ;
	step 15 : wff = thm pm5_32 () |- ( ( x = z -> ( E. y ph <-> E. w ps ) ) <-> ( ( x = z /\ E. y ph ) <-> ( x = z /\ E. w ps ) ) ) ;
	step 16 : wff = thm mpbir (step 14, step 15) |- ( x = z -> ( E. y ph <-> E. w ps ) ) ;
	step 17 : wff = thm cbvex (step 1, step 2, step 16) |- ( E. x E. y ph <-> E. z E. w ps ) ;
	qed prop 1 = step 17 ;
}

theorem cbval2v (ph : wff, ps : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ph <-> A. z A. w ps ) ;
}

proof of cbval2v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 2 : wff = axm ax-17 () |- ( ph -> A. w ph ) ;
	step 3 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 4 : wff = axm ax-17 () |- ( ps -> A. y ps ) ;
	step 5 : wff = thm cbval2 (step 1, step 2, step 3, step 4, hyp 1) |- ( A. x A. y ph <-> A. z A. w ps ) ;
	qed prop 1 = step 5 ;
}

theorem cbvex2v (ph : wff, ps : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ph <-> E. z E. w ps ) ;
}

proof of cbvex2v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 2 : wff = axm ax-17 () |- ( ph -> A. w ph ) ;
	step 3 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 4 : wff = axm ax-17 () |- ( ps -> A. y ps ) ;
	step 5 : wff = thm cbvex2 (step 1, step 2, step 3, step 4, hyp 1) |- ( E. x E. y ph <-> E. z E. w ps ) ;
	qed prop 1 = step 5 ;
}

theorem cbvald (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. y ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x ps <-> A. y ch ) ) ;
}

proof of cbvald {
	step 1 : wff = thm hbim1 (hyp 1, hyp 2) |- ( ( ph -> ps ) -> A. y ( ph -> ps ) ) ;
	step 2 : wff = axm ax-17 () |- ( ( ph -> ch ) -> A. x ( ph -> ch ) ) ;
	step 3 : wff = thm com12 (hyp 3) |- ( x = y -> ( ph -> ( ps <-> ch ) ) ) ;
	step 4 : wff = thm pm5_74d (step 3) |- ( x = y -> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 5 : wff = thm cbval (step 1, step 2, step 4) |- ( A. x ( ph -> ps ) <-> A. y ( ph -> ch ) ) ;
	step 6 : wff = thm 19_21v () |- ( A. x ( ph -> ps ) <-> ( ph -> A. x ps ) ) ;
	step 7 : wff = thm 19_21 (hyp 1) |- ( A. y ( ph -> ch ) <-> ( ph -> A. y ch ) ) ;
	step 8 : wff = thm 3bitr3i (step 5, step 6, step 7) |- ( ( ph -> A. x ps ) <-> ( ph -> A. y ch ) ) ;
	step 9 : wff = thm pm5_74ri (step 8) |- ( ph -> ( A. x ps <-> A. y ch ) ) ;
	qed prop 1 = step 9 ;
}

theorem cbvexd (ph : wff, ps : wff, ch : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. y ps ) ) ;
	hyp 3 : wff = |- ( ph -> ( x = y -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x ps <-> E. y ch ) ) ;
}

proof of cbvexd {
	step 1 : wff = thm hbnd (hyp 1, hyp 2) |- ( ph -> ( -. ps -> A. y -. ps ) ) ;
	step 2 : wff = thm notbi () |- ( ( ps <-> ch ) <-> ( -. ps <-> -. ch ) ) ;
	step 3 : wff = thm syl6ib (hyp 3, step 2) |- ( ph -> ( x = y -> ( -. ps <-> -. ch ) ) ) ;
	step 4 : wff = thm cbvald (hyp 1, step 1, step 3) |- ( ph -> ( A. x -. ps <-> A. y -. ch ) ) ;
	step 5 : wff = thm notbid (step 4) |- ( ph -> ( -. A. x -. ps <-> -. A. y -. ch ) ) ;
	step 6 : wff = def df-ex () |- ( E. x ps <-> -. A. x -. ps ) ;
	step 7 : wff = def df-ex () |- ( E. y ch <-> -. A. y -. ch ) ;
	step 8 : wff = thm 3bitr4g (step 5, step 6, step 7) |- ( ph -> ( E. x ps <-> E. y ch ) ) ;
	qed prop 1 = step 8 ;
}

theorem cbvex4v (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set, w : set, v : set, u : set, f : set, g : set)  {
	hyp 1 : wff = |- ( ( x = v /\ y = u ) -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( ( z = f /\ w = g ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y E. z E. w ph <-> E. v E. u E. f E. g ch ) ;
}

proof of cbvex4v {
	step 1 : wff = thm 2exbidv (hyp 1) |- ( ( x = v /\ y = u ) -> ( E. z E. w ph <-> E. z E. w ps ) ) ;
	step 2 : wff = thm cbvex2v (step 1) |- ( E. x E. y E. z E. w ph <-> E. v E. u E. z E. w ps ) ;
	step 3 : wff = thm cbvex2v (hyp 2) |- ( E. z E. w ps <-> E. f E. g ch ) ;
	step 4 : wff = thm 2exbii (step 3) |- ( E. v E. u E. z E. w ps <-> E. v E. u E. f E. g ch ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( E. x E. y E. z E. w ph <-> E. v E. u E. f E. g ch ) ;
	qed prop 1 = step 5 ;
}

theorem eean (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) ;
}

proof of eean {
	step 1 : wff = thm 19_42 (hyp 1) |- ( E. y ( ph /\ ps ) <-> ( ph /\ E. y ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y ( ph /\ ps ) <-> E. x ( ph /\ E. y ps ) ) ;
	step 3 : wff = thm hbex (hyp 2) |- ( E. y ps -> A. x E. y ps ) ;
	step 4 : wff = thm 19_41 (step 3) |- ( E. x ( ph /\ E. y ps ) <-> ( E. x ph /\ E. y ps ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem eeanv (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) ;
}

proof of eeanv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm eean (step 1, step 2) |- ( E. x E. y ( ph /\ ps ) <-> ( E. x ph /\ E. y ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem eeeanv (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <-> ( E. x ph /\ E. y ps /\ E. z ch ) ) ;
}

proof of eeeanv {
	step 1 : wff = thm 19_42vv () |- ( E. y E. z ( ph /\ ( ps /\ ch ) ) <-> ( ph /\ E. y E. z ( ps /\ ch ) ) ) ;
	step 2 : wff = thm eeanv () |- ( E. y E. z ( ps /\ ch ) <-> ( E. y ps /\ E. z ch ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( ph /\ E. y E. z ( ps /\ ch ) ) <-> ( ph /\ ( E. y ps /\ E. z ch ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E. y E. z ( ph /\ ( ps /\ ch ) ) <-> ( ph /\ ( E. y ps /\ E. z ch ) ) ) ;
	step 5 : wff = thm exbii (step 4) |- ( E. x E. y E. z ( ph /\ ( ps /\ ch ) ) <-> E. x ( ph /\ ( E. y ps /\ E. z ch ) ) ) ;
	step 6 : wff = thm 19_41v () |- ( E. x ( ph /\ ( E. y ps /\ E. z ch ) ) <-> ( E. x ph /\ ( E. y ps /\ E. z ch ) ) ) ;
	step 7 : wff = thm bitri (step 5, step 6) |- ( E. x E. y E. z ( ph /\ ( ps /\ ch ) ) <-> ( E. x ph /\ ( E. y ps /\ E. z ch ) ) ) ;
	step 8 : wff = thm 3anass () |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 9 : wff = thm 3exbii (step 8) |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <-> E. x E. y E. z ( ph /\ ( ps /\ ch ) ) ) ;
	step 10 : wff = thm 3anass () |- ( ( E. x ph /\ E. y ps /\ E. z ch ) <-> ( E. x ph /\ ( E. y ps /\ E. z ch ) ) ) ;
	step 11 : wff = thm 3bitr4i (step 7, step 9, step 10) |- ( E. x E. y E. z ( ph /\ ps /\ ch ) <-> ( E. x ph /\ E. y ps /\ E. z ch ) ) ;
	qed prop 1 = step 11 ;
}

theorem ee4anv (ph : wff, ps : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( E. x E. y E. z E. w ( ph /\ ps ) <-> ( E. x E. y ph /\ E. z E. w ps ) ) ;
}

proof of ee4anv {
	step 1 : wff = thm excom () |- ( E. y E. z E. w ( ph /\ ps ) <-> E. z E. y E. w ( ph /\ ps ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y E. z E. w ( ph /\ ps ) <-> E. x E. z E. y E. w ( ph /\ ps ) ) ;
	step 3 : wff = thm eeanv () |- ( E. y E. w ( ph /\ ps ) <-> ( E. y ph /\ E. w ps ) ) ;
	step 4 : wff = thm 2exbii (step 3) |- ( E. x E. z E. y E. w ( ph /\ ps ) <-> E. x E. z ( E. y ph /\ E. w ps ) ) ;
	step 5 : wff = thm eeanv () |- ( E. x E. z ( E. y ph /\ E. w ps ) <-> ( E. x E. y ph /\ E. z E. w ps ) ) ;
	step 6 : wff = thm 3bitri (step 2, step 4, step 5) |- ( E. x E. y E. z E. w ( ph /\ ps ) <-> ( E. x E. y ph /\ E. z E. w ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem nexdv (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. E. x ps ) ;
}

proof of nexdv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm nexd (step 1, hyp 1) |- ( ph -> -. E. x ps ) ;
	qed prop 1 = step 2 ;
}

theorem chvarv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of chvarv {
	step 1 : wff = thm a4v (hyp 1) |- ( A. x ph -> ps ) ;
	step 2 : wff = thm mpg (step 1, hyp 2) |- ps ;
	qed prop 1 = step 2 ;
}

theorem cleljust (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x e. y <-> E. z ( z = x /\ z e. y ) ) ;
}

proof of cleljust {
	step 1 : wff = axm ax-17 () |- ( x e. y -> A. z x e. y ) ;
	step 2 : wff = thm elequ1 () |- ( z = x -> ( z e. y <-> x e. y ) ) ;
	step 3 : wff = thm equsex (step 1, step 2) |- ( E. z ( z = x /\ z e. y ) <-> x e. y ) ;
	step 4 : wff = thm bicomi (step 3) |- ( x e. y <-> E. z ( z = x /\ z e. y ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbhb (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( ph -> A. x ph ) <-> A. y ( ph -> [ y / x ] ph ) ) ;
}

proof of sbhb {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm sb8 (step 1) |- ( A. x ph <-> A. y [ y / x ] ph ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( ph -> A. x ph ) <-> ( ph -> A. y [ y / x ] ph ) ) ;
	step 4 : wff = thm 19_21v () |- ( A. y ( ph -> [ y / x ] ph ) <-> ( ph -> A. y [ y / x ] ph ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( ph -> A. x ph ) <-> A. y ( ph -> [ y / x ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem equsb3lem (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ x / y ] y = z <-> x = z ) ;
}

proof of equsb3lem {
	step 1 : wff = thm equsb2 () |- [ x / y ] x = y ;
	step 2 : wff = thm equequ1 () |- ( x = y -> ( x = z <-> y = z ) ) ;
	step 3 : wff = thm sbimi (step 2) |- ( [ x / y ] x = y -> [ x / y ] ( x = z <-> y = z ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- [ x / y ] ( x = z <-> y = z ) ;
	step 5 : wff = thm sbbi () |- ( [ x / y ] ( x = z <-> y = z ) <-> ( [ x / y ] x = z <-> [ x / y ] y = z ) ) ;
	step 6 : wff = thm mpbi (step 4, step 5) |- ( [ x / y ] x = z <-> [ x / y ] y = z ) ;
	step 7 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 8 : wff = thm sbf (step 7) |- ( [ x / y ] x = z <-> x = z ) ;
	step 9 : wff = thm bitr3i (step 6, step 8) |- ( [ x / y ] y = z <-> x = z ) ;
	qed prop 1 = step 9 ;
}

theorem equsb3 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ x / y ] y = z <-> x = z ) ;
}

proof of equsb3 {
	var w : set;
	step 1 : wff = thm equsb3lem () |- ( [ w / y ] y = z <-> w = z ) ;
	step 2 : wff = thm sbbii (step 1) |- ( [ x / w ] [ w / y ] y = z <-> [ x / w ] w = z ) ;
	step 3 : wff = axm ax-17 () |- ( y = z -> A. w y = z ) ;
	step 4 : wff = thm sbco2 (step 3) |- ( [ x / w ] [ w / y ] y = z <-> [ x / y ] y = z ) ;
	step 5 : wff = thm equsb3lem () |- ( [ x / w ] w = z <-> x = z ) ;
	step 6 : wff = thm 3bitr3i (step 2, step 4, step 5) |- ( [ x / y ] y = z <-> x = z ) ;
	qed prop 1 = step 6 ;
}

theorem elsb3 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ x / y ] y e. z <-> x e. z ) ;
}

proof of elsb3 {
	var w : set;
	step 1 : wff = thm equsb2 () |- [ w / y ] w = y ;
	step 2 : wff = thm elequ1 () |- ( w = y -> ( w e. z <-> y e. z ) ) ;
	step 3 : wff = thm sbimi (step 2) |- ( [ w / y ] w = y -> [ w / y ] ( w e. z <-> y e. z ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- [ w / y ] ( w e. z <-> y e. z ) ;
	step 5 : wff = thm sbbi () |- ( [ w / y ] ( w e. z <-> y e. z ) <-> ( [ w / y ] w e. z <-> [ w / y ] y e. z ) ) ;
	step 6 : wff = thm mpbi (step 4, step 5) |- ( [ w / y ] w e. z <-> [ w / y ] y e. z ) ;
	step 7 : wff = axm ax-17 () |- ( w e. z -> A. y w e. z ) ;
	step 8 : wff = thm sbf (step 7) |- ( [ w / y ] w e. z <-> w e. z ) ;
	step 9 : wff = thm bitr3i (step 6, step 8) |- ( [ w / y ] y e. z <-> w e. z ) ;
	step 10 : wff = thm sbbii (step 9) |- ( [ x / w ] [ w / y ] y e. z <-> [ x / w ] w e. z ) ;
	step 11 : wff = axm ax-17 () |- ( y e. z -> A. w y e. z ) ;
	step 12 : wff = thm sbco2 (step 11) |- ( [ x / w ] [ w / y ] y e. z <-> [ x / y ] y e. z ) ;
	step 13 : wff = thm equsb2 () |- [ x / w ] x = w ;
	step 14 : wff = thm elequ1 () |- ( x = w -> ( x e. z <-> w e. z ) ) ;
	step 15 : wff = thm sbimi (step 14) |- ( [ x / w ] x = w -> [ x / w ] ( x e. z <-> w e. z ) ) ;
	step 16 : wff = axm ax-mp (step 13, step 15) |- [ x / w ] ( x e. z <-> w e. z ) ;
	step 17 : wff = thm sbbi () |- ( [ x / w ] ( x e. z <-> w e. z ) <-> ( [ x / w ] x e. z <-> [ x / w ] w e. z ) ) ;
	step 18 : wff = thm mpbi (step 16, step 17) |- ( [ x / w ] x e. z <-> [ x / w ] w e. z ) ;
	step 19 : wff = axm ax-17 () |- ( x e. z -> A. w x e. z ) ;
	step 20 : wff = thm sbf (step 19) |- ( [ x / w ] x e. z <-> x e. z ) ;
	step 21 : wff = thm bitr3i (step 18, step 20) |- ( [ x / w ] w e. z <-> x e. z ) ;
	step 22 : wff = thm 3bitr3i (step 10, step 12, step 21) |- ( [ x / y ] y e. z <-> x e. z ) ;
	qed prop 1 = step 22 ;
}

theorem elsb4 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ x / y ] z e. y <-> z e. x ) ;
}

proof of elsb4 {
	var w : set;
	step 1 : wff = thm equsb2 () |- [ w / y ] w = y ;
	step 2 : wff = thm elequ2 () |- ( w = y -> ( z e. w <-> z e. y ) ) ;
	step 3 : wff = thm sbimi (step 2) |- ( [ w / y ] w = y -> [ w / y ] ( z e. w <-> z e. y ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- [ w / y ] ( z e. w <-> z e. y ) ;
	step 5 : wff = thm sbbi () |- ( [ w / y ] ( z e. w <-> z e. y ) <-> ( [ w / y ] z e. w <-> [ w / y ] z e. y ) ) ;
	step 6 : wff = thm mpbi (step 4, step 5) |- ( [ w / y ] z e. w <-> [ w / y ] z e. y ) ;
	step 7 : wff = axm ax-17 () |- ( z e. w -> A. y z e. w ) ;
	step 8 : wff = thm sbf (step 7) |- ( [ w / y ] z e. w <-> z e. w ) ;
	step 9 : wff = thm bitr3i (step 6, step 8) |- ( [ w / y ] z e. y <-> z e. w ) ;
	step 10 : wff = thm sbbii (step 9) |- ( [ x / w ] [ w / y ] z e. y <-> [ x / w ] z e. w ) ;
	step 11 : wff = axm ax-17 () |- ( z e. y -> A. w z e. y ) ;
	step 12 : wff = thm sbco2 (step 11) |- ( [ x / w ] [ w / y ] z e. y <-> [ x / y ] z e. y ) ;
	step 13 : wff = thm equsb2 () |- [ x / w ] x = w ;
	step 14 : wff = thm elequ2 () |- ( x = w -> ( z e. x <-> z e. w ) ) ;
	step 15 : wff = thm sbimi (step 14) |- ( [ x / w ] x = w -> [ x / w ] ( z e. x <-> z e. w ) ) ;
	step 16 : wff = axm ax-mp (step 13, step 15) |- [ x / w ] ( z e. x <-> z e. w ) ;
	step 17 : wff = thm sbbi () |- ( [ x / w ] ( z e. x <-> z e. w ) <-> ( [ x / w ] z e. x <-> [ x / w ] z e. w ) ) ;
	step 18 : wff = thm mpbi (step 16, step 17) |- ( [ x / w ] z e. x <-> [ x / w ] z e. w ) ;
	step 19 : wff = axm ax-17 () |- ( z e. x -> A. w z e. x ) ;
	step 20 : wff = thm sbf (step 19) |- ( [ x / w ] z e. x <-> z e. x ) ;
	step 21 : wff = thm bitr3i (step 18, step 20) |- ( [ x / w ] z e. w <-> z e. x ) ;
	step 22 : wff = thm 3bitr3i (step 10, step 12, step 21) |- ( [ x / y ] z e. y <-> z e. x ) ;
	qed prop 1 = step 22 ;
}

theorem hbs1 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
}

proof of hbs1 {
	step 1 : wff = axm ax-16 () |- ( A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
	step 2 : wff = thm hbsb2 () |- ( -. A. x x = y -> ( [ y / x ] ph -> A. x [ y / x ] ph ) ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	qed prop 1 = step 3 ;
}

theorem hbsb (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph -> A. z [ y / x ] ph ) ;
}

proof of hbsb {
	step 1 : wff = axm ax-16 () |- ( A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 2 : wff = thm hbsb4 (hyp 1) |- ( -. A. z z = y -> ( [ y / x ] ph -> A. z [ y / x ] ph ) ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ( [ y / x ] ph -> A. z [ y / x ] ph ) ;
	qed prop 1 = step 3 ;
}

theorem sbcom2 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ;
}

proof of sbcom2 {
	step 1 : wff = thm alcom () |- ( A. z A. x ( x = y -> ( z = w -> ph ) ) <-> A. x A. z ( x = y -> ( z = w -> ph ) ) ) ;
	step 2 : wff = thm bi2_04 () |- ( ( x = y -> ( z = w -> ph ) ) <-> ( z = w -> ( x = y -> ph ) ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( x = y -> ( z = w -> ph ) ) <-> A. x ( z = w -> ( x = y -> ph ) ) ) ;
	step 4 : wff = thm 19_21v () |- ( A. x ( z = w -> ( x = y -> ph ) ) <-> ( z = w -> A. x ( x = y -> ph ) ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( A. x ( x = y -> ( z = w -> ph ) ) <-> ( z = w -> A. x ( x = y -> ph ) ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. z A. x ( x = y -> ( z = w -> ph ) ) <-> A. z ( z = w -> A. x ( x = y -> ph ) ) ) ;
	step 7 : wff = thm 19_21v () |- ( A. z ( x = y -> ( z = w -> ph ) ) <-> ( x = y -> A. z ( z = w -> ph ) ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x A. z ( x = y -> ( z = w -> ph ) ) <-> A. x ( x = y -> A. z ( z = w -> ph ) ) ) ;
	step 9 : wff = thm 3bitr3i (step 1, step 6, step 8) |- ( A. z ( z = w -> A. x ( x = y -> ph ) ) <-> A. x ( x = y -> A. z ( z = w -> ph ) ) ) ;
	step 10 : wff = thm a1i (step 9) |- ( ( -. A. x x = y /\ -. A. z z = w ) -> ( A. z ( z = w -> A. x ( x = y -> ph ) ) <-> A. x ( x = y -> A. z ( z = w -> ph ) ) ) ) ;
	step 11 : wff = thm sb4b () |- ( -. A. z z = w -> ( [ w / z ] [ y / x ] ph <-> A. z ( z = w -> [ y / x ] ph ) ) ) ;
	step 12 : wff = thm sb4b () |- ( -. A. x x = y -> ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ) ;
	step 13 : wff = thm imbi2d (step 12) |- ( -. A. x x = y -> ( ( z = w -> [ y / x ] ph ) <-> ( z = w -> A. x ( x = y -> ph ) ) ) ) ;
	step 14 : wff = thm albidv (step 13) |- ( -. A. x x = y -> ( A. z ( z = w -> [ y / x ] ph ) <-> A. z ( z = w -> A. x ( x = y -> ph ) ) ) ) ;
	step 15 : wff = thm sylan9bbr (step 11, step 14) |- ( ( -. A. x x = y /\ -. A. z z = w ) -> ( [ w / z ] [ y / x ] ph <-> A. z ( z = w -> A. x ( x = y -> ph ) ) ) ) ;
	step 16 : wff = thm sb4b () |- ( -. A. x x = y -> ( [ y / x ] [ w / z ] ph <-> A. x ( x = y -> [ w / z ] ph ) ) ) ;
	step 17 : wff = thm sb4b () |- ( -. A. z z = w -> ( [ w / z ] ph <-> A. z ( z = w -> ph ) ) ) ;
	step 18 : wff = thm imbi2d (step 17) |- ( -. A. z z = w -> ( ( x = y -> [ w / z ] ph ) <-> ( x = y -> A. z ( z = w -> ph ) ) ) ) ;
	step 19 : wff = thm albidv (step 18) |- ( -. A. z z = w -> ( A. x ( x = y -> [ w / z ] ph ) <-> A. x ( x = y -> A. z ( z = w -> ph ) ) ) ) ;
	step 20 : wff = thm sylan9bb (step 16, step 19) |- ( ( -. A. x x = y /\ -. A. z z = w ) -> ( [ y / x ] [ w / z ] ph <-> A. x ( x = y -> A. z ( z = w -> ph ) ) ) ) ;
	step 21 : wff = thm 3bitr4d (step 10, step 15, step 20) |- ( ( -. A. x x = y /\ -. A. z z = w ) -> ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ) ;
	step 22 : wff = thm ex (step 21) |- ( -. A. x x = y -> ( -. A. z z = w -> ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ) ) ;
	step 23 : wff = thm hbae () |- ( A. x x = y -> A. z A. x x = y ) ;
	step 24 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 25 : wff = thm a4s (step 24) |- ( A. x x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 26 : wff = thm sbbid (step 23, step 25) |- ( A. x x = y -> ( [ w / z ] ph <-> [ w / z ] [ y / x ] ph ) ) ;
	step 27 : wff = thm sbequ12 () |- ( x = y -> ( [ w / z ] ph <-> [ y / x ] [ w / z ] ph ) ) ;
	step 28 : wff = thm a4s (step 27) |- ( A. x x = y -> ( [ w / z ] ph <-> [ y / x ] [ w / z ] ph ) ) ;
	step 29 : wff = thm bitr3d (step 26, step 28) |- ( A. x x = y -> ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ) ;
	step 30 : wff = thm sbequ12 () |- ( z = w -> ( [ y / x ] ph <-> [ w / z ] [ y / x ] ph ) ) ;
	step 31 : wff = thm a4s (step 30) |- ( A. z z = w -> ( [ y / x ] ph <-> [ w / z ] [ y / x ] ph ) ) ;
	step 32 : wff = thm hbae () |- ( A. z z = w -> A. x A. z z = w ) ;
	step 33 : wff = thm sbequ12 () |- ( z = w -> ( ph <-> [ w / z ] ph ) ) ;
	step 34 : wff = thm a4s (step 33) |- ( A. z z = w -> ( ph <-> [ w / z ] ph ) ) ;
	step 35 : wff = thm sbbid (step 32, step 34) |- ( A. z z = w -> ( [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ) ;
	step 36 : wff = thm bitr3d (step 31, step 35) |- ( A. z z = w -> ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ) ;
	step 37 : wff = thm pm2_61ii (step 22, step 29, step 36) |- ( [ w / z ] [ y / x ] ph <-> [ y / x ] [ w / z ] ph ) ;
	qed prop 1 = step 37 ;
}

theorem 2sb5 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( [ z / x ] [ w / y ] ph <-> E. x E. y ( ( x = z /\ y = w ) /\ ph ) ) ;
}

proof of 2sb5 {
	step 1 : wff = thm sb5 () |- ( [ z / x ] [ w / y ] ph <-> E. x ( x = z /\ [ w / y ] ph ) ) ;
	step 2 : wff = thm 19_42v () |- ( E. y ( x = z /\ ( y = w /\ ph ) ) <-> ( x = z /\ E. y ( y = w /\ ph ) ) ) ;
	step 3 : wff = thm anass () |- ( ( ( x = z /\ y = w ) /\ ph ) <-> ( x = z /\ ( y = w /\ ph ) ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. y ( ( x = z /\ y = w ) /\ ph ) <-> E. y ( x = z /\ ( y = w /\ ph ) ) ) ;
	step 5 : wff = thm sb5 () |- ( [ w / y ] ph <-> E. y ( y = w /\ ph ) ) ;
	step 6 : wff = thm anbi2i (step 5) |- ( ( x = z /\ [ w / y ] ph ) <-> ( x = z /\ E. y ( y = w /\ ph ) ) ) ;
	step 7 : wff = thm 3bitr4ri (step 2, step 4, step 6) |- ( ( x = z /\ [ w / y ] ph ) <-> E. y ( ( x = z /\ y = w ) /\ ph ) ) ;
	step 8 : wff = thm exbii (step 7) |- ( E. x ( x = z /\ [ w / y ] ph ) <-> E. x E. y ( ( x = z /\ y = w ) /\ ph ) ) ;
	step 9 : wff = thm bitri (step 1, step 8) |- ( [ z / x ] [ w / y ] ph <-> E. x E. y ( ( x = z /\ y = w ) /\ ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem 2sb6 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( [ z / x ] [ w / y ] ph <-> A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
}

proof of 2sb6 {
	step 1 : wff = thm sb6 () |- ( [ z / x ] [ w / y ] ph <-> A. x ( x = z -> [ w / y ] ph ) ) ;
	step 2 : wff = thm 19_21v () |- ( A. y ( x = z -> ( y = w -> ph ) ) <-> ( x = z -> A. y ( y = w -> ph ) ) ) ;
	step 3 : wff = thm impexp () |- ( ( ( x = z /\ y = w ) -> ph ) <-> ( x = z -> ( y = w -> ph ) ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. y ( ( x = z /\ y = w ) -> ph ) <-> A. y ( x = z -> ( y = w -> ph ) ) ) ;
	step 5 : wff = thm sb6 () |- ( [ w / y ] ph <-> A. y ( y = w -> ph ) ) ;
	step 6 : wff = thm imbi2i (step 5) |- ( ( x = z -> [ w / y ] ph ) <-> ( x = z -> A. y ( y = w -> ph ) ) ) ;
	step 7 : wff = thm 3bitr4ri (step 2, step 4, step 6) |- ( ( x = z -> [ w / y ] ph ) <-> A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x ( x = z -> [ w / y ] ph ) <-> A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 9 : wff = thm bitri (step 1, step 8) |- ( [ z / x ] [ w / y ] ph <-> A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem sb6a (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> A. x ( x = y -> [ x / y ] ph ) ) ;
}

proof of sb6a {
	step 1 : wff = thm sb6 () |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	step 2 : wff = thm sbequ12 () |- ( y = x -> ( ph <-> [ x / y ] ph ) ) ;
	step 3 : wff = thm equcoms (step 2) |- ( x = y -> ( ph <-> [ x / y ] ph ) ) ;
	step 4 : wff = thm pm5_74i (step 3) |- ( ( x = y -> ph ) <-> ( x = y -> [ x / y ] ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x = y -> ph ) <-> A. x ( x = y -> [ x / y ] ph ) ) ;
	step 6 : wff = thm bitri (step 1, step 5) |- ( [ y / x ] ph <-> A. x ( x = y -> [ x / y ] ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem 2sb5rf (ph : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	hyp 2 : wff = |- ( ph -> A. w ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> E. z E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) ;
}

proof of 2sb5rf {
	step 1 : wff = thm sb5rf (hyp 1) |- ( ph <-> E. z ( z = x /\ [ z / x ] ph ) ) ;
	step 2 : wff = thm 19_42v () |- ( E. w ( z = x /\ ( w = y /\ [ w / y ] [ z / x ] ph ) ) <-> ( z = x /\ E. w ( w = y /\ [ w / y ] [ z / x ] ph ) ) ) ;
	step 3 : wff = thm sbcom2 () |- ( [ z / x ] [ w / y ] ph <-> [ w / y ] [ z / x ] ph ) ;
	step 4 : wff = thm anbi2i (step 3) |- ( ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) <-> ( ( z = x /\ w = y ) /\ [ w / y ] [ z / x ] ph ) ) ;
	step 5 : wff = thm anass () |- ( ( ( z = x /\ w = y ) /\ [ w / y ] [ z / x ] ph ) <-> ( z = x /\ ( w = y /\ [ w / y ] [ z / x ] ph ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) <-> ( z = x /\ ( w = y /\ [ w / y ] [ z / x ] ph ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) <-> E. w ( z = x /\ ( w = y /\ [ w / y ] [ z / x ] ph ) ) ) ;
	step 8 : wff = thm hbsb (hyp 2) |- ( [ z / x ] ph -> A. w [ z / x ] ph ) ;
	step 9 : wff = thm sb5rf (step 8) |- ( [ z / x ] ph <-> E. w ( w = y /\ [ w / y ] [ z / x ] ph ) ) ;
	step 10 : wff = thm anbi2i (step 9) |- ( ( z = x /\ [ z / x ] ph ) <-> ( z = x /\ E. w ( w = y /\ [ w / y ] [ z / x ] ph ) ) ) ;
	step 11 : wff = thm 3bitr4ri (step 2, step 7, step 10) |- ( ( z = x /\ [ z / x ] ph ) <-> E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) ;
	step 12 : wff = thm exbii (step 11) |- ( E. z ( z = x /\ [ z / x ] ph ) <-> E. z E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) ;
	step 13 : wff = thm bitri (step 1, step 12) |- ( ph <-> E. z E. w ( ( z = x /\ w = y ) /\ [ z / x ] [ w / y ] ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem 2sb6rf (ph : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	hyp 2 : wff = |- ( ph -> A. w ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> A. z A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) ;
}

proof of 2sb6rf {
	step 1 : wff = thm sb6rf (hyp 1) |- ( ph <-> A. z ( z = x -> [ z / x ] ph ) ) ;
	step 2 : wff = thm 19_21v () |- ( A. w ( z = x -> ( w = y -> [ w / y ] [ z / x ] ph ) ) <-> ( z = x -> A. w ( w = y -> [ w / y ] [ z / x ] ph ) ) ) ;
	step 3 : wff = thm sbcom2 () |- ( [ z / x ] [ w / y ] ph <-> [ w / y ] [ z / x ] ph ) ;
	step 4 : wff = thm imbi2i (step 3) |- ( ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) <-> ( ( z = x /\ w = y ) -> [ w / y ] [ z / x ] ph ) ) ;
	step 5 : wff = thm impexp () |- ( ( ( z = x /\ w = y ) -> [ w / y ] [ z / x ] ph ) <-> ( z = x -> ( w = y -> [ w / y ] [ z / x ] ph ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) <-> ( z = x -> ( w = y -> [ w / y ] [ z / x ] ph ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) <-> A. w ( z = x -> ( w = y -> [ w / y ] [ z / x ] ph ) ) ) ;
	step 8 : wff = thm hbsb (hyp 2) |- ( [ z / x ] ph -> A. w [ z / x ] ph ) ;
	step 9 : wff = thm sb6rf (step 8) |- ( [ z / x ] ph <-> A. w ( w = y -> [ w / y ] [ z / x ] ph ) ) ;
	step 10 : wff = thm imbi2i (step 9) |- ( ( z = x -> [ z / x ] ph ) <-> ( z = x -> A. w ( w = y -> [ w / y ] [ z / x ] ph ) ) ) ;
	step 11 : wff = thm 3bitr4ri (step 2, step 7, step 10) |- ( ( z = x -> [ z / x ] ph ) <-> A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) ;
	step 12 : wff = thm albii (step 11) |- ( A. z ( z = x -> [ z / x ] ph ) <-> A. z A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) ;
	step 13 : wff = thm bitri (step 1, step 12) |- ( ph <-> A. z A. w ( ( z = x /\ w = y ) -> [ z / x ] [ w / y ] ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem dfsb7 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
}

proof of dfsb7 {
	step 1 : wff = thm sb5 () |- ( [ z / x ] ph <-> E. x ( x = z /\ ph ) ) ;
	step 2 : wff = thm sbbii (step 1) |- ( [ y / z ] [ z / x ] ph <-> [ y / z ] E. x ( x = z /\ ph ) ) ;
	step 3 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 4 : wff = thm sbco2 (step 3) |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ;
	step 5 : wff = thm sb5 () |- ( [ y / z ] E. x ( x = z /\ ph ) <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
	step 6 : wff = thm 3bitr3i (step 2, step 4, step 5) |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem sb7f (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. z ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
}

proof of sb7f {
	var w : set;
	step 1 : wff = thm dfsb7 () |- ( [ y / x ] ph <-> E. w ( w = y /\ E. x ( x = w /\ ph ) ) ) ;
	step 2 : wff = axm ax-17 () |- ( w = y -> A. z w = y ) ;
	step 3 : wff = axm ax-17 () |- ( x = w -> A. z x = w ) ;
	step 4 : wff = thm hban (step 3, hyp 1) |- ( ( x = w /\ ph ) -> A. z ( x = w /\ ph ) ) ;
	step 5 : wff = thm hbex (step 4) |- ( E. x ( x = w /\ ph ) -> A. z E. x ( x = w /\ ph ) ) ;
	step 6 : wff = thm hban (step 2, step 5) |- ( ( w = y /\ E. x ( x = w /\ ph ) ) -> A. z ( w = y /\ E. x ( x = w /\ ph ) ) ) ;
	step 7 : wff = axm ax-17 () |- ( ( z = y /\ E. x ( x = z /\ ph ) ) -> A. w ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
	step 8 : wff = thm equequ1 () |- ( w = z -> ( w = y <-> z = y ) ) ;
	step 9 : wff = thm equequ2 () |- ( w = z -> ( x = w <-> x = z ) ) ;
	step 10 : wff = thm anbi1d (step 9) |- ( w = z -> ( ( x = w /\ ph ) <-> ( x = z /\ ph ) ) ) ;
	step 11 : wff = thm exbidv (step 10) |- ( w = z -> ( E. x ( x = w /\ ph ) <-> E. x ( x = z /\ ph ) ) ) ;
	step 12 : wff = thm anbi12d (step 8, step 11) |- ( w = z -> ( ( w = y /\ E. x ( x = w /\ ph ) ) <-> ( z = y /\ E. x ( x = z /\ ph ) ) ) ) ;
	step 13 : wff = thm cbvex (step 6, step 7, step 12) |- ( E. w ( w = y /\ E. x ( x = w /\ ph ) ) <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
	step 14 : wff = thm bitri (step 1, step 13) |- ( [ y / x ] ph <-> E. z ( z = y /\ E. x ( x = z /\ ph ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem sb10f (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / z ] ph <-> E. x ( x = y /\ [ x / z ] ph ) ) ;
}

proof of sb10f {
	step 1 : wff = thm hbsb (hyp 1) |- ( [ y / z ] ph -> A. x [ y / z ] ph ) ;
	step 2 : wff = thm sbequ () |- ( x = y -> ( [ x / z ] ph <-> [ y / z ] ph ) ) ;
	step 3 : wff = thm equsex (step 1, step 2) |- ( E. x ( x = y /\ [ x / z ] ph ) <-> [ y / z ] ph ) ;
	step 4 : wff = thm bicomi (step 3) |- ( [ y / z ] ph <-> E. x ( x = y /\ [ x / z ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbid2v (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( [ y / x ] [ x / y ] ph <-> ph ) ;
}

proof of sbid2v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm sbid2 (step 1) |- ( [ y / x ] [ x / y ] ph <-> ph ) ;
	qed prop 1 = step 2 ;
}

theorem sbelx (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ph <-> E. x ( x = y /\ [ x / y ] ph ) ) ;
}

proof of sbelx {
	step 1 : wff = thm sbid2v () |- ( [ y / x ] [ x / y ] ph <-> ph ) ;
	step 2 : wff = thm sb5 () |- ( [ y / x ] [ x / y ] ph <-> E. x ( x = y /\ [ x / y ] ph ) ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( ph <-> E. x ( x = y /\ [ x / y ] ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbel2x (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( ph <-> E. x E. y ( ( x = z /\ y = w ) /\ [ y / w ] [ x / z ] ph ) ) ;
}

proof of sbel2x {
	step 1 : wff = thm sbelx () |- ( [ x / z ] ph <-> E. y ( y = w /\ [ y / w ] [ x / z ] ph ) ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( x = z /\ [ x / z ] ph ) <-> ( x = z /\ E. y ( y = w /\ [ y / w ] [ x / z ] ph ) ) ) ;
	step 3 : wff = thm exbii (step 2) |- ( E. x ( x = z /\ [ x / z ] ph ) <-> E. x ( x = z /\ E. y ( y = w /\ [ y / w ] [ x / z ] ph ) ) ) ;
	step 4 : wff = thm sbelx () |- ( ph <-> E. x ( x = z /\ [ x / z ] ph ) ) ;
	step 5 : wff = thm exdistr () |- ( E. x E. y ( x = z /\ ( y = w /\ [ y / w ] [ x / z ] ph ) ) <-> E. x ( x = z /\ E. y ( y = w /\ [ y / w ] [ x / z ] ph ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 3, step 4, step 5) |- ( ph <-> E. x E. y ( x = z /\ ( y = w /\ [ y / w ] [ x / z ] ph ) ) ) ;
	step 7 : wff = thm anass () |- ( ( ( x = z /\ y = w ) /\ [ y / w ] [ x / z ] ph ) <-> ( x = z /\ ( y = w /\ [ y / w ] [ x / z ] ph ) ) ) ;
	step 8 : wff = thm 2exbii (step 7) |- ( E. x E. y ( ( x = z /\ y = w ) /\ [ y / w ] [ x / z ] ph ) <-> E. x E. y ( x = z /\ ( y = w /\ [ y / w ] [ x / z ] ph ) ) ) ;
	step 9 : wff = thm bitr4i (step 6, step 8) |- ( ph <-> E. x E. y ( ( x = z /\ y = w ) /\ [ y / w ] [ x / z ] ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem sbal1 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
}

proof of sbal1 {
	step 1 : wff = thm sbequ12 () |- ( y = z -> ( A. x ph <-> [ z / y ] A. x ph ) ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. y y = z -> ( A. x ph <-> [ z / y ] A. x ph ) ) ;
	step 3 : wff = thm sbequ12 () |- ( y = z -> ( ph <-> [ z / y ] ph ) ) ;
	step 4 : wff = thm a4s (step 3) |- ( A. y y = z -> ( ph <-> [ z / y ] ph ) ) ;
	step 5 : wff = thm dral2 (step 4) |- ( A. y y = z -> ( A. x ph <-> A. x [ z / y ] ph ) ) ;
	step 6 : wff = thm bitr3d (step 2, step 5) |- ( A. y y = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
	step 7 : wff = thm a1d (step 6) |- ( A. y y = z -> ( -. A. x x = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ) ;
	step 8 : wff = thm hba1 () |- ( A. x ph -> A. x A. x ph ) ;
	step 9 : wff = thm hbsb4 (step 8) |- ( -. A. x x = z -> ( [ z / y ] A. x ph -> A. x [ z / y ] A. x ph ) ) ;
	step 10 : wff = axm ax-4 () |- ( A. x ph -> ph ) ;
	step 11 : wff = thm sbimi (step 10) |- ( [ z / y ] A. x ph -> [ z / y ] ph ) ;
	step 12 : wff = thm 19_20i (step 11) |- ( A. x [ z / y ] A. x ph -> A. x [ z / y ] ph ) ;
	step 13 : wff = thm syl6 (step 9, step 12) |- ( -. A. x x = z -> ( [ z / y ] A. x ph -> A. x [ z / y ] ph ) ) ;
	step 14 : wff = thm adantl (step 13) |- ( ( -. A. y y = z /\ -. A. x x = z ) -> ( [ z / y ] A. x ph -> A. x [ z / y ] ph ) ) ;
	step 15 : wff = thm sb4 () |- ( -. A. y y = z -> ( [ z / y ] ph -> A. y ( y = z -> ph ) ) ) ;
	step 16 : wff = thm 19_20ii (step 15) |- ( A. x -. A. y y = z -> ( A. x [ z / y ] ph -> A. x A. y ( y = z -> ph ) ) ) ;
	step 17 : wff = thm hbnaes (step 16) |- ( -. A. y y = z -> ( A. x [ z / y ] ph -> A. x A. y ( y = z -> ph ) ) ) ;
	step 18 : wff = axm ax-7 () |- ( A. x A. y ( y = z -> ph ) -> A. y A. x ( y = z -> ph ) ) ;
	step 19 : wff = thm syl6 (step 17, step 18) |- ( -. A. y y = z -> ( A. x [ z / y ] ph -> A. y A. x ( y = z -> ph ) ) ) ;
	step 20 : wff = axm ax-16 () |- ( A. x x = y -> ( y = z -> A. x y = z ) ) ;
	step 21 : wff = thm a1d (step 20) |- ( A. x x = y -> ( -. A. x x = z -> ( y = z -> A. x y = z ) ) ) ;
	step 22 : wff = axm ax-12 () |- ( -. A. x x = y -> ( -. A. x x = z -> ( y = z -> A. x y = z ) ) ) ;
	step 23 : wff = thm pm2_61i (step 21, step 22) |- ( -. A. x x = z -> ( y = z -> A. x y = z ) ) ;
	step 24 : wff = thm 19_20 () |- ( A. x ( y = z -> ph ) -> ( A. x y = z -> A. x ph ) ) ;
	step 25 : wff = thm syl9 (step 23, step 24) |- ( -. A. x x = z -> ( A. x ( y = z -> ph ) -> ( y = z -> A. x ph ) ) ) ;
	step 26 : wff = thm 19_20ii (step 25) |- ( A. y -. A. x x = z -> ( A. y A. x ( y = z -> ph ) -> A. y ( y = z -> A. x ph ) ) ) ;
	step 27 : wff = thm sb2 () |- ( A. y ( y = z -> A. x ph ) -> [ z / y ] A. x ph ) ;
	step 28 : wff = thm syl6 (step 26, step 27) |- ( A. y -. A. x x = z -> ( A. y A. x ( y = z -> ph ) -> [ z / y ] A. x ph ) ) ;
	step 29 : wff = thm hbnaes (step 28) |- ( -. A. x x = z -> ( A. y A. x ( y = z -> ph ) -> [ z / y ] A. x ph ) ) ;
	step 30 : wff = thm sylan9 (step 19, step 29) |- ( ( -. A. y y = z /\ -. A. x x = z ) -> ( A. x [ z / y ] ph -> [ z / y ] A. x ph ) ) ;
	step 31 : wff = thm impbid (step 14, step 30) |- ( ( -. A. y y = z /\ -. A. x x = z ) -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
	step 32 : wff = thm ex (step 31) |- ( -. A. y y = z -> ( -. A. x x = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ) ;
	step 33 : wff = thm pm2_61i (step 7, step 32) |- ( -. A. x x = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
	qed prop 1 = step 33 ;
}

theorem sbal (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ;
}

proof of sbal {
	step 1 : wff = thm a16gb () |- ( A. x x = z -> ( ph <-> A. x ph ) ) ;
	step 2 : wff = thm sbimi (step 1) |- ( [ z / y ] A. x x = z -> [ z / y ] ( ph <-> A. x ph ) ) ;
	step 3 : wff = thm sbequ5 () |- ( [ z / y ] A. x x = z <-> A. x x = z ) ;
	step 4 : wff = thm sbbi () |- ( [ z / y ] ( ph <-> A. x ph ) <-> ( [ z / y ] ph <-> [ z / y ] A. x ph ) ) ;
	step 5 : wff = thm 3imtr3i (step 2, step 3, step 4) |- ( A. x x = z -> ( [ z / y ] ph <-> [ z / y ] A. x ph ) ) ;
	step 6 : wff = thm a16gb () |- ( A. x x = z -> ( [ z / y ] ph <-> A. x [ z / y ] ph ) ) ;
	step 7 : wff = thm bitr3d (step 5, step 6) |- ( A. x x = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
	step 8 : wff = thm sbal1 () |- ( -. A. x x = z -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
	step 9 : wff = thm pm2_61i (step 7, step 8) |- ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ;
	qed prop 1 = step 9 ;
}

theorem sbex (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( [ z / y ] E. x ph <-> E. x [ z / y ] ph ) ;
}

proof of sbex {
	step 1 : wff = thm sbn () |- ( [ z / y ] -. A. x -. ph <-> -. [ z / y ] A. x -. ph ) ;
	step 2 : wff = thm sbal () |- ( [ z / y ] A. x -. ph <-> A. x [ z / y ] -. ph ) ;
	step 3 : wff = thm sbn () |- ( [ z / y ] -. ph <-> -. [ z / y ] ph ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x [ z / y ] -. ph <-> A. x -. [ z / y ] ph ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( [ z / y ] A. x -. ph <-> A. x -. [ z / y ] ph ) ;
	step 6 : wff = thm notbii (step 5) |- ( -. [ z / y ] A. x -. ph <-> -. A. x -. [ z / y ] ph ) ;
	step 7 : wff = thm bitri (step 1, step 6) |- ( [ z / y ] -. A. x -. ph <-> -. A. x -. [ z / y ] ph ) ;
	step 8 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 9 : wff = thm sbbii (step 8) |- ( [ z / y ] E. x ph <-> [ z / y ] -. A. x -. ph ) ;
	step 10 : wff = def df-ex () |- ( E. x [ z / y ] ph <-> -. A. x -. [ z / y ] ph ) ;
	step 11 : wff = thm 3bitr4i (step 7, step 9, step 10) |- ( [ z / y ] E. x ph <-> E. x [ z / y ] ph ) ;
	qed prop 1 = step 11 ;
}

theorem sbalv (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( [ y / x ] ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] A. z ph <-> A. z ps ) ;
}

proof of sbalv {
	step 1 : wff = thm sbal () |- ( [ y / x ] A. z ph <-> A. z [ y / x ] ph ) ;
	step 2 : wff = thm albii (hyp 1) |- ( A. z [ y / x ] ph <-> A. z ps ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( [ y / x ] A. z ph <-> A. z ps ) ;
	qed prop 1 = step 3 ;
}

theorem exsb (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E. x ph <-> E. y A. x ( x = y -> ph ) ) ;
}

proof of exsb {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm sb8e (step 1) |- ( E. x ph <-> E. y [ y / x ] ph ) ;
	step 3 : wff = thm sb6 () |- ( [ y / x ] ph <-> A. x ( x = y -> ph ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. y [ y / x ] ph <-> E. y A. x ( x = y -> ph ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( E. x ph <-> E. y A. x ( x = y -> ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem 2exsb (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( E. x E. y ph <-> E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
}

proof of 2exsb {
	step 1 : wff = thm exsb () |- ( E. y ph <-> E. w A. y ( y = w -> ph ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x E. y ph <-> E. x E. w A. y ( y = w -> ph ) ) ;
	step 3 : wff = thm excom () |- ( E. x E. w A. y ( y = w -> ph ) <-> E. w E. x A. y ( y = w -> ph ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x E. y ph <-> E. w E. x A. y ( y = w -> ph ) ) ;
	step 5 : wff = thm exsb () |- ( E. x A. y ( y = w -> ph ) <-> E. z A. x ( x = z -> A. y ( y = w -> ph ) ) ) ;
	step 6 : wff = thm impexp () |- ( ( ( x = z /\ y = w ) -> ph ) <-> ( x = z -> ( y = w -> ph ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. y ( ( x = z /\ y = w ) -> ph ) <-> A. y ( x = z -> ( y = w -> ph ) ) ) ;
	step 8 : wff = thm 19_21v () |- ( A. y ( x = z -> ( y = w -> ph ) ) <-> ( x = z -> A. y ( y = w -> ph ) ) ) ;
	step 9 : wff = thm bitr2i (step 7, step 8) |- ( ( x = z -> A. y ( y = w -> ph ) ) <-> A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 10 : wff = thm albii (step 9) |- ( A. x ( x = z -> A. y ( y = w -> ph ) ) <-> A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 11 : wff = thm exbii (step 10) |- ( E. z A. x ( x = z -> A. y ( y = w -> ph ) ) <-> E. z A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 12 : wff = thm bitri (step 5, step 11) |- ( E. x A. y ( y = w -> ph ) <-> E. z A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 13 : wff = thm exbii (step 12) |- ( E. w E. x A. y ( y = w -> ph ) <-> E. w E. z A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 14 : wff = thm excom () |- ( E. w E. z A. x A. y ( ( x = z /\ y = w ) -> ph ) <-> E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 15 : wff = thm 3bitri (step 4, step 13, step 14) |- ( E. x E. y ph <-> E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	qed prop 1 = step 15 ;
}

theorem dvelim (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( z = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
}

proof of dvelim {
	step 1 : wff = axm ax-17 () |- ( ps -> A. z ps ) ;
	step 2 : wff = thm dvelimf (hyp 1, step 1, hyp 2) |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem dvelimALT (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( z = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
}

proof of dvelimALT {
	step 1 : wff = axm ax-17 () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 2 : wff = thm hba1 () |- ( A. x x = z -> A. x A. x x = z ) ;
	step 3 : wff = thm ax16ALT () |- ( A. x x = z -> ( z = y -> A. x z = y ) ) ;
	step 4 : wff = thm a1i (hyp 1) |- ( A. x x = z -> ( ph -> A. x ph ) ) ;
	step 5 : wff = thm hbimd (step 2, step 3, step 4) |- ( A. x x = z -> ( ( z = y -> ph ) -> A. x ( z = y -> ph ) ) ) ;
	step 6 : wff = thm a1d (step 5) |- ( A. x x = z -> ( -. A. x x = y -> ( ( z = y -> ph ) -> A. x ( z = y -> ph ) ) ) ) ;
	step 7 : wff = thm hba1 () |- ( A. x x = z -> A. x A. x x = z ) ;
	step 8 : wff = thm hbn (step 7) |- ( -. A. x x = z -> A. x -. A. x x = z ) ;
	step 9 : wff = thm hba1 () |- ( A. x x = y -> A. x A. x x = y ) ;
	step 10 : wff = thm hbn (step 9) |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 11 : wff = thm hban (step 8, step 10) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> A. x ( -. A. x x = z /\ -. A. x x = y ) ) ;
	step 12 : wff = axm ax-12 () |- ( -. A. x x = z -> ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ) ;
	step 13 : wff = thm imp (step 12) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( z = y -> A. x z = y ) ) ;
	step 14 : wff = thm a1i (hyp 1) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( ph -> A. x ph ) ) ;
	step 15 : wff = thm hbimd (step 11, step 13, step 14) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( ( z = y -> ph ) -> A. x ( z = y -> ph ) ) ) ;
	step 16 : wff = thm ex (step 15) |- ( -. A. x x = z -> ( -. A. x x = y -> ( ( z = y -> ph ) -> A. x ( z = y -> ph ) ) ) ) ;
	step 17 : wff = thm pm2_61i (step 6, step 16) |- ( -. A. x x = y -> ( ( z = y -> ph ) -> A. x ( z = y -> ph ) ) ) ;
	step 18 : wff = thm hbald (step 1, step 17) |- ( -. A. x x = y -> ( A. z ( z = y -> ph ) -> A. x A. z ( z = y -> ph ) ) ) ;
	step 19 : wff = axm ax-17 () |- ( ps -> A. z ps ) ;
	step 20 : wff = thm equsal (step 19, hyp 2) |- ( A. z ( z = y -> ph ) <-> ps ) ;
	step 21 : wff = axm ax-17 () |- ( ps -> A. z ps ) ;
	step 22 : wff = thm equsal (step 21, hyp 2) |- ( A. z ( z = y -> ph ) <-> ps ) ;
	step 23 : wff = thm albii (step 22) |- ( A. x A. z ( z = y -> ph ) <-> A. x ps ) ;
	step 24 : wff = thm 3imtr3g (step 18, step 20, step 23) |- ( -. A. x x = y -> ( ps -> A. x ps ) ) ;
	qed prop 1 = step 24 ;
}

theorem dveeq1 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) ;
}

proof of dveeq1 {
	var w : set;
	step 1 : wff = axm ax-17 () |- ( w = z -> A. x w = z ) ;
	step 2 : wff = axm ax-17 () |- ( y = z -> A. w y = z ) ;
	step 3 : wff = thm equequ1 () |- ( w = y -> ( w = z <-> y = z ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) ;
	qed prop 1 = step 4 ;
}

theorem dveeq1ALT (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) ;
}

proof of dveeq1ALT {
	var w : set;
	step 1 : wff = thm ax17eq () |- ( w = z -> A. x w = z ) ;
	step 2 : wff = thm ax17eq () |- ( y = z -> A. w y = z ) ;
	step 3 : wff = thm equequ1 () |- ( w = y -> ( w = z <-> y = z ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) ;
	qed prop 1 = step 4 ;
}

theorem dveel1 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( y e. z -> A. x y e. z ) ) ;
}

proof of dveel1 {
	var w : set;
	step 1 : wff = axm ax-17 () |- ( w e. z -> A. x w e. z ) ;
	step 2 : wff = axm ax-17 () |- ( y e. z -> A. w y e. z ) ;
	step 3 : wff = thm elequ1 () |- ( w = y -> ( w e. z <-> y e. z ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( y e. z -> A. x y e. z ) ) ;
	qed prop 1 = step 4 ;
}

theorem dveel2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) ;
}

proof of dveel2 {
	var w : set;
	step 1 : wff = axm ax-17 () |- ( z e. w -> A. x z e. w ) ;
	step 2 : wff = axm ax-17 () |- ( z e. y -> A. w z e. y ) ;
	step 3 : wff = thm elequ2 () |- ( w = y -> ( z e. w <-> z e. y ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbal2 (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
}

proof of sbal2 {
	step 1 : wff = thm hbnae () |- ( -. A. x x = y -> A. y -. A. x x = y ) ;
	step 2 : wff = thm dveeq1 () |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x -. A. x x = y -> A. x ( y = z -> A. x y = z ) ) ;
	step 4 : wff = thm hbnaes (step 3) |- ( -. A. x x = y -> A. x ( y = z -> A. x y = z ) ) ;
	step 5 : wff = thm 19_21t () |- ( A. x ( y = z -> A. x y = z ) -> ( A. x ( y = z -> ph ) <-> ( y = z -> A. x ph ) ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( -. A. x x = y -> ( A. x ( y = z -> ph ) <-> ( y = z -> A. x ph ) ) ) ;
	step 7 : wff = thm albid (step 1, step 6) |- ( -. A. x x = y -> ( A. y A. x ( y = z -> ph ) <-> A. y ( y = z -> A. x ph ) ) ) ;
	step 8 : wff = thm alcom () |- ( A. y A. x ( y = z -> ph ) <-> A. x A. y ( y = z -> ph ) ) ;
	step 9 : wff = thm syl5rbbr (step 7, step 8) |- ( -. A. x x = y -> ( A. y ( y = z -> A. x ph ) <-> A. x A. y ( y = z -> ph ) ) ) ;
	step 10 : wff = thm sb6 () |- ( [ z / y ] A. x ph <-> A. y ( y = z -> A. x ph ) ) ;
	step 11 : wff = thm sb6 () |- ( [ z / y ] ph <-> A. y ( y = z -> ph ) ) ;
	step 12 : wff = thm albii (step 11) |- ( A. x [ z / y ] ph <-> A. x A. y ( y = z -> ph ) ) ;
	step 13 : wff = thm 3bitr4g (step 9, step 10, step 12) |- ( -. A. x x = y -> ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem ax15 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. z z = x -> ( -. A. z z = y -> ( x e. y -> A. z x e. y ) ) ) ;
}

proof of ax15 {
	var w : set;
	step 1 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 2 : wff = thm dveel2 () |- ( -. A. z z = y -> ( w e. y -> A. z w e. y ) ) ;
	step 3 : wff = thm hbim1 (step 1, step 2) |- ( ( -. A. z z = y -> w e. y ) -> A. z ( -. A. z z = y -> w e. y ) ) ;
	step 4 : wff = axm ax-17 () |- ( ( -. A. z z = y -> x e. y ) -> A. w ( -. A. z z = y -> x e. y ) ) ;
	step 5 : wff = thm elequ1 () |- ( w = x -> ( w e. y <-> x e. y ) ) ;
	step 6 : wff = thm imbi2d (step 5) |- ( w = x -> ( ( -. A. z z = y -> w e. y ) <-> ( -. A. z z = y -> x e. y ) ) ) ;
	step 7 : wff = thm dvelimfALT (step 3, step 4, step 6) |- ( -. A. z z = x -> ( ( -. A. z z = y -> x e. y ) -> A. z ( -. A. z z = y -> x e. y ) ) ) ;
	step 8 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 9 : wff = thm 19_21 (step 8) |- ( A. z ( -. A. z z = y -> x e. y ) <-> ( -. A. z z = y -> A. z x e. y ) ) ;
	step 10 : wff = thm syl6ib (step 7, step 9) |- ( -. A. z z = x -> ( ( -. A. z z = y -> x e. y ) -> ( -. A. z z = y -> A. z x e. y ) ) ) ;
	step 11 : wff = thm pm2_86d (step 10) |- ( -. A. z z = x -> ( -. A. z z = y -> ( x e. y -> A. z x e. y ) ) ) ;
	qed prop 1 = step 11 ;
}

axiom ax-15 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. z z = x -> ( -. A. z z = y -> ( x e. y -> A. z x e. y ) ) ) ;
}

theorem ax17el (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x e. y -> A. z x e. y ) ;
}

proof of ax17el {
	step 1 : wff = axm ax-15 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x e. y -> A. z x e. y ) ) ) ;
	step 2 : wff = axm ax-16 () |- ( A. z z = x -> ( x e. y -> A. z x e. y ) ) ;
	step 3 : wff = axm ax-16 () |- ( A. z z = y -> ( x e. y -> A. z x e. y ) ) ;
	step 4 : wff = thm pm2_61ii (step 1, step 2, step 3) |- ( x e. y -> A. z x e. y ) ;
	qed prop 1 = step 4 ;
}

theorem dveel2ALT (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) ;
}

proof of dveel2ALT {
	var w : set;
	step 1 : wff = thm ax17el () |- ( z e. w -> A. x z e. w ) ;
	step 2 : wff = thm ax17el () |- ( z e. y -> A. w z e. y ) ;
	step 3 : wff = thm elequ2 () |- ( w = y -> ( z e. w <-> z e. y ) ) ;
	step 4 : wff = thm dvelimfALT (step 1, step 2, step 3) |- ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) ;
	qed prop 1 = step 4 ;
}

theorem ax11eq (x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
}

proof of ax11eq {
	var v : set, u : set;
	step 1 : wff = thm 19_26 () |- ( A. x ( x = z /\ x = w ) <-> ( A. x x = z /\ A. x x = w ) ) ;
	step 2 : wff = thm equid () |- x = x ;
	step 3 : wff = thm a1i (step 2) |- ( x = y -> x = x ) ;
	step 4 : wff = axm ax-gen (step 3) |- A. x ( x = y -> x = x ) ;
	step 5 : wff = thm a1i (step 4) |- ( x = x -> A. x ( x = y -> x = x ) ) ;
	step 6 : wff = thm equequ1 () |- ( x = z -> ( x = x <-> z = x ) ) ;
	step 7 : wff = thm equequ2 () |- ( x = w -> ( z = x <-> z = w ) ) ;
	step 8 : wff = thm sylan9bb (step 6, step 7) |- ( ( x = z /\ x = w ) -> ( x = x <-> z = w ) ) ;
	step 9 : wff = thm a4s (step 8) |- ( A. x ( x = z /\ x = w ) -> ( x = x <-> z = w ) ) ;
	step 10 : wff = thm hba1 () |- ( A. x ( x = z /\ x = w ) -> A. x A. x ( x = z /\ x = w ) ) ;
	step 11 : wff = thm equequ1 () |- ( x = z -> ( x = x <-> z = x ) ) ;
	step 12 : wff = thm equequ2 () |- ( x = w -> ( z = x <-> z = w ) ) ;
	step 13 : wff = thm sylan9bb (step 11, step 12) |- ( ( x = z /\ x = w ) -> ( x = x <-> z = w ) ) ;
	step 14 : wff = thm a4s (step 13) |- ( A. x ( x = z /\ x = w ) -> ( x = x <-> z = w ) ) ;
	step 15 : wff = thm imbi2d (step 14) |- ( A. x ( x = z /\ x = w ) -> ( ( x = y -> x = x ) <-> ( x = y -> z = w ) ) ) ;
	step 16 : wff = thm albid (step 10, step 15) |- ( A. x ( x = z /\ x = w ) -> ( A. x ( x = y -> x = x ) <-> A. x ( x = y -> z = w ) ) ) ;
	step 17 : wff = thm imbi12d (step 9, step 16) |- ( A. x ( x = z /\ x = w ) -> ( ( x = x -> A. x ( x = y -> x = x ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 18 : wff = thm adantr (step 17) |- ( ( A. x ( x = z /\ x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( ( x = x -> A. x ( x = y -> x = x ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 19 : wff = thm mpbii (step 5, step 18) |- ( ( A. x ( x = z /\ x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z = w -> A. x ( x = y -> z = w ) ) ) ;
	step 20 : wff = thm exp32 (step 19) |- ( A. x ( x = z /\ x = w ) -> ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 21 : wff = thm sylbir (step 1, step 20) |- ( ( A. x x = z /\ A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 22 : wff = thm equequ1 () |- ( x = y -> ( x = w <-> y = w ) ) ;
	step 23 : wff = thm ad2antll (step 22) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( x = w <-> y = w ) ) ;
	step 24 : wff = axm ax-12 () |- ( -. A. x x = y -> ( -. A. x x = w -> ( y = w -> A. x y = w ) ) ) ;
	step 25 : wff = thm impcom (step 24) |- ( ( -. A. x x = w /\ -. A. x x = y ) -> ( y = w -> A. x y = w ) ) ;
	step 26 : wff = thm adantrr (step 25) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( y = w -> A. x y = w ) ) ;
	step 27 : wff = thm equtrr () |- ( y = w -> ( x = y -> x = w ) ) ;
	step 28 : wff = thm 19_20i (step 27) |- ( A. x y = w -> A. x ( x = y -> x = w ) ) ;
	step 29 : wff = thm syl6 (step 26, step 28) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( y = w -> A. x ( x = y -> x = w ) ) ) ;
	step 30 : wff = thm sylbid (step 23, step 29) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( x = w -> A. x ( x = y -> x = w ) ) ) ;
	step 31 : wff = thm adantll (step 30) |- ( ( ( A. x x = z /\ -. A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( x = w -> A. x ( x = y -> x = w ) ) ) ;
	step 32 : wff = thm equequ1 () |- ( x = z -> ( x = w <-> z = w ) ) ;
	step 33 : wff = thm a4s (step 32) |- ( A. x x = z -> ( x = w <-> z = w ) ) ;
	step 34 : wff = thm equequ1 () |- ( x = z -> ( x = w <-> z = w ) ) ;
	step 35 : wff = thm a4s (step 34) |- ( A. x x = z -> ( x = w <-> z = w ) ) ;
	step 36 : wff = thm imbi2d (step 35) |- ( A. x x = z -> ( ( x = y -> x = w ) <-> ( x = y -> z = w ) ) ) ;
	step 37 : wff = thm dral2 (step 36) |- ( A. x x = z -> ( A. x ( x = y -> x = w ) <-> A. x ( x = y -> z = w ) ) ) ;
	step 38 : wff = thm imbi12d (step 33, step 37) |- ( A. x x = z -> ( ( x = w -> A. x ( x = y -> x = w ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 39 : wff = thm ad2antrr (step 38) |- ( ( ( A. x x = z /\ -. A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( ( x = w -> A. x ( x = y -> x = w ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 40 : wff = thm mpbid (step 31, step 39) |- ( ( ( A. x x = z /\ -. A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z = w -> A. x ( x = y -> z = w ) ) ) ;
	step 41 : wff = thm exp32 (step 40) |- ( ( A. x x = z /\ -. A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 42 : wff = thm equequ2 () |- ( x = y -> ( z = x <-> z = y ) ) ;
	step 43 : wff = thm ad2antll (step 42) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z = x <-> z = y ) ) ;
	step 44 : wff = axm ax-12 () |- ( -. A. x x = z -> ( -. A. x x = y -> ( z = y -> A. x z = y ) ) ) ;
	step 45 : wff = thm imp (step 44) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( z = y -> A. x z = y ) ) ;
	step 46 : wff = thm adantrr (step 45) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z = y -> A. x z = y ) ) ;
	step 47 : wff = thm equequ2 () |- ( x = y -> ( z = x <-> z = y ) ) ;
	step 48 : wff = thm biimprcd (step 47) |- ( z = y -> ( x = y -> z = x ) ) ;
	step 49 : wff = thm 19_20i (step 48) |- ( A. x z = y -> A. x ( x = y -> z = x ) ) ;
	step 50 : wff = thm syl6 (step 46, step 49) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z = y -> A. x ( x = y -> z = x ) ) ) ;
	step 51 : wff = thm sylbid (step 43, step 50) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z = x -> A. x ( x = y -> z = x ) ) ) ;
	step 52 : wff = thm adantlr (step 51) |- ( ( ( -. A. x x = z /\ A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z = x -> A. x ( x = y -> z = x ) ) ) ;
	step 53 : wff = thm equequ2 () |- ( x = w -> ( z = x <-> z = w ) ) ;
	step 54 : wff = thm a4s (step 53) |- ( A. x x = w -> ( z = x <-> z = w ) ) ;
	step 55 : wff = thm equequ2 () |- ( x = w -> ( z = x <-> z = w ) ) ;
	step 56 : wff = thm a4s (step 55) |- ( A. x x = w -> ( z = x <-> z = w ) ) ;
	step 57 : wff = thm imbi2d (step 56) |- ( A. x x = w -> ( ( x = y -> z = x ) <-> ( x = y -> z = w ) ) ) ;
	step 58 : wff = thm dral2 (step 57) |- ( A. x x = w -> ( A. x ( x = y -> z = x ) <-> A. x ( x = y -> z = w ) ) ) ;
	step 59 : wff = thm imbi12d (step 54, step 58) |- ( A. x x = w -> ( ( z = x -> A. x ( x = y -> z = x ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 60 : wff = thm ad2antlr (step 59) |- ( ( ( -. A. x x = z /\ A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( ( z = x -> A. x ( x = y -> z = x ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 61 : wff = thm mpbid (step 52, step 60) |- ( ( ( -. A. x x = z /\ A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z = w -> A. x ( x = y -> z = w ) ) ) ;
	step 62 : wff = thm exp32 (step 61) |- ( ( -. A. x x = z /\ A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 63 : wff = thm a9e () |- E. u u = w ;
	step 64 : wff = thm a9e () |- E. v v = z ;
	step 65 : wff = axm ax-1 () |- ( v = u -> ( x = y -> v = u ) ) ;
	step 66 : wff = thm 19_21aiv (step 65) |- ( v = u -> A. x ( x = y -> v = u ) ) ;
	step 67 : wff = thm equequ1 () |- ( v = z -> ( v = u <-> z = u ) ) ;
	step 68 : wff = thm equequ2 () |- ( u = w -> ( z = u <-> z = w ) ) ;
	step 69 : wff = thm sylan9bb (step 67, step 68) |- ( ( v = z /\ u = w ) -> ( v = u <-> z = w ) ) ;
	step 70 : wff = thm adantl (step 69) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( v = u <-> z = w ) ) ;
	step 71 : wff = thm dveeq2 () |- ( -. A. x x = z -> ( v = z -> A. x v = z ) ) ;
	step 72 : wff = thm dveeq2 () |- ( -. A. x x = w -> ( u = w -> A. x u = w ) ) ;
	step 73 : wff = thm im2anan9 (step 71, step 72) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( ( v = z /\ u = w ) -> ( A. x v = z /\ A. x u = w ) ) ) ;
	step 74 : wff = thm imp (step 73) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( A. x v = z /\ A. x u = w ) ) ;
	step 75 : wff = thm 19_26 () |- ( A. x ( v = z /\ u = w ) <-> ( A. x v = z /\ A. x u = w ) ) ;
	step 76 : wff = thm sylibr (step 74, step 75) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> A. x ( v = z /\ u = w ) ) ;
	step 77 : wff = thm hba1 () |- ( A. x ( v = z /\ u = w ) -> A. x A. x ( v = z /\ u = w ) ) ;
	step 78 : wff = thm equequ1 () |- ( v = z -> ( v = u <-> z = u ) ) ;
	step 79 : wff = thm equequ2 () |- ( u = w -> ( z = u <-> z = w ) ) ;
	step 80 : wff = thm sylan9bb (step 78, step 79) |- ( ( v = z /\ u = w ) -> ( v = u <-> z = w ) ) ;
	step 81 : wff = thm a4s (step 80) |- ( A. x ( v = z /\ u = w ) -> ( v = u <-> z = w ) ) ;
	step 82 : wff = thm imbi2d (step 81) |- ( A. x ( v = z /\ u = w ) -> ( ( x = y -> v = u ) <-> ( x = y -> z = w ) ) ) ;
	step 83 : wff = thm albid (step 77, step 82) |- ( A. x ( v = z /\ u = w ) -> ( A. x ( x = y -> v = u ) <-> A. x ( x = y -> z = w ) ) ) ;
	step 84 : wff = thm syl (step 76, step 83) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( A. x ( x = y -> v = u ) <-> A. x ( x = y -> z = w ) ) ) ;
	step 85 : wff = thm imbi12d (step 70, step 84) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( ( v = u -> A. x ( x = y -> v = u ) ) <-> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 86 : wff = thm mpbii (step 66, step 85) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( z = w -> A. x ( x = y -> z = w ) ) ) ;
	step 87 : wff = thm exp32 (step 86) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( v = z -> ( u = w -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 88 : wff = thm 19_23adv (step 87) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( E. v v = z -> ( u = w -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 89 : wff = thm mpi (step 64, step 88) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( u = w -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 90 : wff = thm 19_23adv (step 89) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( E. u u = w -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 91 : wff = thm mpi (step 63, step 90) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( z = w -> A. x ( x = y -> z = w ) ) ) ;
	step 92 : wff = thm a1d (step 91) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	step 93 : wff = thm a1d (step 92) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ) ;
	step 94 : wff = thm 4cases (step 21, step 41, step 62, step 93) |- ( -. A. x x = y -> ( x = y -> ( z = w -> A. x ( x = y -> z = w ) ) ) ) ;
	qed prop 1 = step 94 ;
}

theorem ax11el (x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
}

proof of ax11el {
	var v : set, u : set;
	step 1 : wff = thm 19_26 () |- ( A. x ( x = z /\ x = w ) <-> ( A. x x = z /\ A. x x = w ) ) ;
	step 2 : wff = thm elequ1 () |- ( x = y -> ( x e. x <-> y e. x ) ) ;
	step 3 : wff = thm elequ2 () |- ( x = y -> ( y e. x <-> y e. y ) ) ;
	step 4 : wff = thm bitrd (step 2, step 3) |- ( x = y -> ( x e. x <-> y e. y ) ) ;
	step 5 : wff = thm adantl (step 4) |- ( ( -. A. x x = y /\ x = y ) -> ( x e. x <-> y e. y ) ) ;
	step 6 : wff = axm ax-17 () |- ( v e. v -> A. x v e. v ) ;
	step 7 : wff = axm ax-17 () |- ( y e. y -> A. v y e. y ) ;
	step 8 : wff = thm elequ1 () |- ( v = y -> ( v e. v <-> y e. v ) ) ;
	step 9 : wff = thm elequ2 () |- ( v = y -> ( y e. v <-> y e. y ) ) ;
	step 10 : wff = thm bitrd (step 8, step 9) |- ( v = y -> ( v e. v <-> y e. y ) ) ;
	step 11 : wff = thm dvelimfALT (step 6, step 7, step 10) |- ( -. A. x x = y -> ( y e. y -> A. x y e. y ) ) ;
	step 12 : wff = thm elequ1 () |- ( x = y -> ( x e. x <-> y e. x ) ) ;
	step 13 : wff = thm elequ2 () |- ( x = y -> ( y e. x <-> y e. y ) ) ;
	step 14 : wff = thm bitrd (step 12, step 13) |- ( x = y -> ( x e. x <-> y e. y ) ) ;
	step 15 : wff = thm biimprcd (step 14) |- ( y e. y -> ( x = y -> x e. x ) ) ;
	step 16 : wff = thm 19_20i (step 15) |- ( A. x y e. y -> A. x ( x = y -> x e. x ) ) ;
	step 17 : wff = thm syl6 (step 11, step 16) |- ( -. A. x x = y -> ( y e. y -> A. x ( x = y -> x e. x ) ) ) ;
	step 18 : wff = thm adantr (step 17) |- ( ( -. A. x x = y /\ x = y ) -> ( y e. y -> A. x ( x = y -> x e. x ) ) ) ;
	step 19 : wff = thm sylbid (step 5, step 18) |- ( ( -. A. x x = y /\ x = y ) -> ( x e. x -> A. x ( x = y -> x e. x ) ) ) ;
	step 20 : wff = thm adantl (step 19) |- ( ( A. x ( x = z /\ x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( x e. x -> A. x ( x = y -> x e. x ) ) ) ;
	step 21 : wff = thm elequ1 () |- ( x = z -> ( x e. x <-> z e. x ) ) ;
	step 22 : wff = thm elequ2 () |- ( x = w -> ( z e. x <-> z e. w ) ) ;
	step 23 : wff = thm sylan9bb (step 21, step 22) |- ( ( x = z /\ x = w ) -> ( x e. x <-> z e. w ) ) ;
	step 24 : wff = thm a4s (step 23) |- ( A. x ( x = z /\ x = w ) -> ( x e. x <-> z e. w ) ) ;
	step 25 : wff = thm hba1 () |- ( A. x ( x = z /\ x = w ) -> A. x A. x ( x = z /\ x = w ) ) ;
	step 26 : wff = thm elequ1 () |- ( x = z -> ( x e. x <-> z e. x ) ) ;
	step 27 : wff = thm elequ2 () |- ( x = w -> ( z e. x <-> z e. w ) ) ;
	step 28 : wff = thm sylan9bb (step 26, step 27) |- ( ( x = z /\ x = w ) -> ( x e. x <-> z e. w ) ) ;
	step 29 : wff = thm a4s (step 28) |- ( A. x ( x = z /\ x = w ) -> ( x e. x <-> z e. w ) ) ;
	step 30 : wff = thm imbi2d (step 29) |- ( A. x ( x = z /\ x = w ) -> ( ( x = y -> x e. x ) <-> ( x = y -> z e. w ) ) ) ;
	step 31 : wff = thm albid (step 25, step 30) |- ( A. x ( x = z /\ x = w ) -> ( A. x ( x = y -> x e. x ) <-> A. x ( x = y -> z e. w ) ) ) ;
	step 32 : wff = thm imbi12d (step 24, step 31) |- ( A. x ( x = z /\ x = w ) -> ( ( x e. x -> A. x ( x = y -> x e. x ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 33 : wff = thm adantr (step 32) |- ( ( A. x ( x = z /\ x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( ( x e. x -> A. x ( x = y -> x e. x ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 34 : wff = thm mpbid (step 20, step 33) |- ( ( A. x ( x = z /\ x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ;
	step 35 : wff = thm exp32 (step 34) |- ( A. x ( x = z /\ x = w ) -> ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 36 : wff = thm sylbir (step 1, step 35) |- ( ( A. x x = z /\ A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 37 : wff = thm elequ1 () |- ( x = y -> ( x e. w <-> y e. w ) ) ;
	step 38 : wff = thm ad2antll (step 37) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( x e. w <-> y e. w ) ) ;
	step 39 : wff = axm ax-15 () |- ( -. A. x x = y -> ( -. A. x x = w -> ( y e. w -> A. x y e. w ) ) ) ;
	step 40 : wff = thm impcom (step 39) |- ( ( -. A. x x = w /\ -. A. x x = y ) -> ( y e. w -> A. x y e. w ) ) ;
	step 41 : wff = thm adantrr (step 40) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( y e. w -> A. x y e. w ) ) ;
	step 42 : wff = thm elequ1 () |- ( x = y -> ( x e. w <-> y e. w ) ) ;
	step 43 : wff = thm biimprcd (step 42) |- ( y e. w -> ( x = y -> x e. w ) ) ;
	step 44 : wff = thm 19_20i (step 43) |- ( A. x y e. w -> A. x ( x = y -> x e. w ) ) ;
	step 45 : wff = thm syl6 (step 41, step 44) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( y e. w -> A. x ( x = y -> x e. w ) ) ) ;
	step 46 : wff = thm sylbid (step 38, step 45) |- ( ( -. A. x x = w /\ ( -. A. x x = y /\ x = y ) ) -> ( x e. w -> A. x ( x = y -> x e. w ) ) ) ;
	step 47 : wff = thm adantll (step 46) |- ( ( ( A. x x = z /\ -. A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( x e. w -> A. x ( x = y -> x e. w ) ) ) ;
	step 48 : wff = thm elequ1 () |- ( x = z -> ( x e. w <-> z e. w ) ) ;
	step 49 : wff = thm a4s (step 48) |- ( A. x x = z -> ( x e. w <-> z e. w ) ) ;
	step 50 : wff = thm elequ1 () |- ( x = z -> ( x e. w <-> z e. w ) ) ;
	step 51 : wff = thm a4s (step 50) |- ( A. x x = z -> ( x e. w <-> z e. w ) ) ;
	step 52 : wff = thm imbi2d (step 51) |- ( A. x x = z -> ( ( x = y -> x e. w ) <-> ( x = y -> z e. w ) ) ) ;
	step 53 : wff = thm dral2 (step 52) |- ( A. x x = z -> ( A. x ( x = y -> x e. w ) <-> A. x ( x = y -> z e. w ) ) ) ;
	step 54 : wff = thm imbi12d (step 49, step 53) |- ( A. x x = z -> ( ( x e. w -> A. x ( x = y -> x e. w ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 55 : wff = thm ad2antrr (step 54) |- ( ( ( A. x x = z /\ -. A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( ( x e. w -> A. x ( x = y -> x e. w ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 56 : wff = thm mpbid (step 47, step 55) |- ( ( ( A. x x = z /\ -. A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ;
	step 57 : wff = thm exp32 (step 56) |- ( ( A. x x = z /\ -. A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 58 : wff = thm elequ2 () |- ( x = y -> ( z e. x <-> z e. y ) ) ;
	step 59 : wff = thm ad2antll (step 58) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. x <-> z e. y ) ) ;
	step 60 : wff = axm ax-15 () |- ( -. A. x x = z -> ( -. A. x x = y -> ( z e. y -> A. x z e. y ) ) ) ;
	step 61 : wff = thm imp (step 60) |- ( ( -. A. x x = z /\ -. A. x x = y ) -> ( z e. y -> A. x z e. y ) ) ;
	step 62 : wff = thm adantrr (step 61) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. y -> A. x z e. y ) ) ;
	step 63 : wff = thm elequ2 () |- ( x = y -> ( z e. x <-> z e. y ) ) ;
	step 64 : wff = thm biimprcd (step 63) |- ( z e. y -> ( x = y -> z e. x ) ) ;
	step 65 : wff = thm 19_20i (step 64) |- ( A. x z e. y -> A. x ( x = y -> z e. x ) ) ;
	step 66 : wff = thm syl6 (step 62, step 65) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. y -> A. x ( x = y -> z e. x ) ) ) ;
	step 67 : wff = thm sylbid (step 59, step 66) |- ( ( -. A. x x = z /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. x -> A. x ( x = y -> z e. x ) ) ) ;
	step 68 : wff = thm adantlr (step 67) |- ( ( ( -. A. x x = z /\ A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. x -> A. x ( x = y -> z e. x ) ) ) ;
	step 69 : wff = thm elequ2 () |- ( x = w -> ( z e. x <-> z e. w ) ) ;
	step 70 : wff = thm a4s (step 69) |- ( A. x x = w -> ( z e. x <-> z e. w ) ) ;
	step 71 : wff = thm elequ2 () |- ( x = w -> ( z e. x <-> z e. w ) ) ;
	step 72 : wff = thm a4s (step 71) |- ( A. x x = w -> ( z e. x <-> z e. w ) ) ;
	step 73 : wff = thm imbi2d (step 72) |- ( A. x x = w -> ( ( x = y -> z e. x ) <-> ( x = y -> z e. w ) ) ) ;
	step 74 : wff = thm dral2 (step 73) |- ( A. x x = w -> ( A. x ( x = y -> z e. x ) <-> A. x ( x = y -> z e. w ) ) ) ;
	step 75 : wff = thm imbi12d (step 70, step 74) |- ( A. x x = w -> ( ( z e. x -> A. x ( x = y -> z e. x ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 76 : wff = thm ad2antlr (step 75) |- ( ( ( -. A. x x = z /\ A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( ( z e. x -> A. x ( x = y -> z e. x ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 77 : wff = thm mpbid (step 68, step 76) |- ( ( ( -. A. x x = z /\ A. x x = w ) /\ ( -. A. x x = y /\ x = y ) ) -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ;
	step 78 : wff = thm exp32 (step 77) |- ( ( -. A. x x = z /\ A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 79 : wff = thm a9e () |- E. u u = w ;
	step 80 : wff = thm a9e () |- E. v v = z ;
	step 81 : wff = axm ax-1 () |- ( v e. u -> ( x = y -> v e. u ) ) ;
	step 82 : wff = thm 19_21aiv (step 81) |- ( v e. u -> A. x ( x = y -> v e. u ) ) ;
	step 83 : wff = thm elequ1 () |- ( v = z -> ( v e. u <-> z e. u ) ) ;
	step 84 : wff = thm elequ2 () |- ( u = w -> ( z e. u <-> z e. w ) ) ;
	step 85 : wff = thm sylan9bb (step 83, step 84) |- ( ( v = z /\ u = w ) -> ( v e. u <-> z e. w ) ) ;
	step 86 : wff = thm adantl (step 85) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( v e. u <-> z e. w ) ) ;
	step 87 : wff = thm dveeq2 () |- ( -. A. x x = z -> ( v = z -> A. x v = z ) ) ;
	step 88 : wff = thm dveeq2 () |- ( -. A. x x = w -> ( u = w -> A. x u = w ) ) ;
	step 89 : wff = thm im2anan9 (step 87, step 88) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( ( v = z /\ u = w ) -> ( A. x v = z /\ A. x u = w ) ) ) ;
	step 90 : wff = thm imp (step 89) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( A. x v = z /\ A. x u = w ) ) ;
	step 91 : wff = thm 19_26 () |- ( A. x ( v = z /\ u = w ) <-> ( A. x v = z /\ A. x u = w ) ) ;
	step 92 : wff = thm sylibr (step 90, step 91) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> A. x ( v = z /\ u = w ) ) ;
	step 93 : wff = thm hba1 () |- ( A. x ( v = z /\ u = w ) -> A. x A. x ( v = z /\ u = w ) ) ;
	step 94 : wff = thm elequ1 () |- ( v = z -> ( v e. u <-> z e. u ) ) ;
	step 95 : wff = thm elequ2 () |- ( u = w -> ( z e. u <-> z e. w ) ) ;
	step 96 : wff = thm sylan9bb (step 94, step 95) |- ( ( v = z /\ u = w ) -> ( v e. u <-> z e. w ) ) ;
	step 97 : wff = thm a4s (step 96) |- ( A. x ( v = z /\ u = w ) -> ( v e. u <-> z e. w ) ) ;
	step 98 : wff = thm imbi2d (step 97) |- ( A. x ( v = z /\ u = w ) -> ( ( x = y -> v e. u ) <-> ( x = y -> z e. w ) ) ) ;
	step 99 : wff = thm albid (step 93, step 98) |- ( A. x ( v = z /\ u = w ) -> ( A. x ( x = y -> v e. u ) <-> A. x ( x = y -> z e. w ) ) ) ;
	step 100 : wff = thm syl (step 92, step 99) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( A. x ( x = y -> v e. u ) <-> A. x ( x = y -> z e. w ) ) ) ;
	step 101 : wff = thm imbi12d (step 86, step 100) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( ( v e. u -> A. x ( x = y -> v e. u ) ) <-> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 102 : wff = thm mpbii (step 82, step 101) |- ( ( ( -. A. x x = z /\ -. A. x x = w ) /\ ( v = z /\ u = w ) ) -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ;
	step 103 : wff = thm exp32 (step 102) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( v = z -> ( u = w -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 104 : wff = thm 19_23adv (step 103) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( E. v v = z -> ( u = w -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 105 : wff = thm mpi (step 80, step 104) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( u = w -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 106 : wff = thm 19_23adv (step 105) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( E. u u = w -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 107 : wff = thm mpi (step 79, step 106) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ;
	step 108 : wff = thm a1d (step 107) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	step 109 : wff = thm a1d (step 108) |- ( ( -. A. x x = z /\ -. A. x x = w ) -> ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ) ;
	step 110 : wff = thm 4cases (step 36, step 57, step 78, step 109) |- ( -. A. x x = y -> ( x = y -> ( z e. w -> A. x ( x = y -> z e. w ) ) ) ) ;
	qed prop 1 = step 110 ;
}

theorem ax11f (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
}

proof of ax11f {
	step 1 : wff = axm ax-1 () |- ( ph -> ( x = y -> ph ) ) ;
	step 2 : wff = thm 19_21ai (hyp 1, step 1) |- ( ph -> A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm a1i12 (step 2) |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ax11indn (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ) ;
}

proof of ax11indn {
	step 1 : wff = thm hbn1 () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 2 : wff = thm hbn1 () |- ( -. A. x ( x = y -> ph ) -> A. x -. A. x ( x = y -> ph ) ) ;
	step 3 : wff = thm con3 () |- ( ( ph -> A. x ( x = y -> ph ) ) -> ( -. A. x ( x = y -> ph ) -> -. ph ) ) ;
	step 4 : wff = thm syl6 (hyp 1, step 3) |- ( -. A. x x = y -> ( x = y -> ( -. A. x ( x = y -> ph ) -> -. ph ) ) ) ;
	step 5 : wff = thm com23 (step 4) |- ( -. A. x x = y -> ( -. A. x ( x = y -> ph ) -> ( x = y -> -. ph ) ) ) ;
	step 6 : wff = thm 19_21ad (step 1, step 2, step 5) |- ( -. A. x x = y -> ( -. A. x ( x = y -> ph ) -> A. x ( x = y -> -. ph ) ) ) ;
	step 7 : wff = thm exanali () |- ( E. x ( x = y /\ -. ph ) <-> -. A. x ( x = y -> ph ) ) ;
	step 8 : wff = thm syl5ib (step 6, step 7) |- ( -. A. x x = y -> ( E. x ( x = y /\ -. ph ) -> A. x ( x = y -> -. ph ) ) ) ;
	step 9 : wff = thm 19_8a () |- ( ( x = y /\ -. ph ) -> E. x ( x = y /\ -. ph ) ) ;
	step 10 : wff = thm syl5 (step 8, step 9) |- ( -. A. x x = y -> ( ( x = y /\ -. ph ) -> A. x ( x = y -> -. ph ) ) ) ;
	step 11 : wff = thm exp3a (step 10) |- ( -. A. x x = y -> ( x = y -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ) ;
	qed prop 1 = step 11 ;
}

theorem ax11indi (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	hyp 2 : wff = |- ( -. A. x x = y -> ( x = y -> ( ps -> A. x ( x = y -> ps ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ) ;
}

proof of ax11indi {
	step 1 : wff = thm ax11indn (hyp 1) |- ( -. A. x x = y -> ( x = y -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( -. A. x x = y /\ x = y ) -> ( -. ph -> A. x ( x = y -> -. ph ) ) ) ;
	step 3 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ps ) ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( x = y -> -. ph ) -> ( x = y -> ( ph -> ps ) ) ) ;
	step 5 : wff = thm 19_20i (step 4) |- ( A. x ( x = y -> -. ph ) -> A. x ( x = y -> ( ph -> ps ) ) ) ;
	step 6 : wff = thm syl6 (step 2, step 5) |- ( ( -. A. x x = y /\ x = y ) -> ( -. ph -> A. x ( x = y -> ( ph -> ps ) ) ) ) ;
	step 7 : wff = thm imp (hyp 2) |- ( ( -. A. x x = y /\ x = y ) -> ( ps -> A. x ( x = y -> ps ) ) ) ;
	step 8 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 9 : wff = thm imim2i (step 8) |- ( ( x = y -> ps ) -> ( x = y -> ( ph -> ps ) ) ) ;
	step 10 : wff = thm 19_20i (step 9) |- ( A. x ( x = y -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ;
	step 11 : wff = thm syl6 (step 7, step 10) |- ( ( -. A. x x = y /\ x = y ) -> ( ps -> A. x ( x = y -> ( ph -> ps ) ) ) ) ;
	step 12 : wff = thm jaod (step 6, step 11) |- ( ( -. A. x x = y /\ x = y ) -> ( ( -. ph \/ ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ;
	step 13 : wff = thm imor () |- ( ( ph -> ps ) <-> ( -. ph \/ ps ) ) ;
	step 14 : wff = thm syl5ib (step 12, step 13) |- ( ( -. A. x x = y /\ x = y ) -> ( ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ;
	step 15 : wff = thm ex (step 14) |- ( -. A. x x = y -> ( x = y -> ( ( ph -> ps ) -> A. x ( x = y -> ( ph -> ps ) ) ) ) ) ;
	qed prop 1 = step 15 ;
}

theorem ax11indalem (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. y y = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
}

proof of ax11indalem {
	step 1 : wff = axm ax-1 () |- ( A. x ph -> ( x = y -> A. x ph ) ) ;
	step 2 : wff = thm a5i (step 1) |- ( A. x ph -> A. x ( x = y -> A. x ph ) ) ;
	step 3 : wff = thm a1i (step 2) |- ( A. z z = x -> ( A. x ph -> A. x ( x = y -> A. x ph ) ) ) ;
	step 4 : wff = thm biidd () |- ( A. z z = x -> ( ph <-> ph ) ) ;
	step 5 : wff = thm dral1 (step 4) |- ( A. z z = x -> ( A. z ph <-> A. x ph ) ) ;
	step 6 : wff = thm biidd () |- ( A. z z = x -> ( ph <-> ph ) ) ;
	step 7 : wff = thm dral1 (step 6) |- ( A. z z = x -> ( A. z ph <-> A. x ph ) ) ;
	step 8 : wff = thm imbi2d (step 7) |- ( A. z z = x -> ( ( x = y -> A. z ph ) <-> ( x = y -> A. x ph ) ) ) ;
	step 9 : wff = thm dral2 (step 8) |- ( A. z z = x -> ( A. x ( x = y -> A. z ph ) <-> A. x ( x = y -> A. x ph ) ) ) ;
	step 10 : wff = thm 3imtr4d (step 3, step 5, step 9) |- ( A. z z = x -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 11 : wff = thm alequcoms (step 10) |- ( A. x x = z -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 12 : wff = thm a1d (step 11) |- ( A. x x = z -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	step 13 : wff = thm a1d (step 12) |- ( A. x x = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 14 : wff = thm adantr (step 13) |- ( ( A. x x = z /\ -. A. y y = z ) -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 15 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 16 : wff = thm hba1 () |- ( A. z x = y -> A. z A. z x = y ) ;
	step 17 : wff = thm hban (step 15, step 16) |- ( ( -. A. x x = y /\ A. z x = y ) -> A. z ( -. A. x x = y /\ A. z x = y ) ) ;
	step 18 : wff = thm imp (hyp 1) |- ( ( -. A. x x = y /\ x = y ) -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 19 : wff = axm ax-4 () |- ( A. z x = y -> x = y ) ;
	step 20 : wff = thm sylan2 (step 18, step 19) |- ( ( -. A. x x = y /\ A. z x = y ) -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 21 : wff = thm 19_20d (step 17, step 20) |- ( ( -. A. x x = y /\ A. z x = y ) -> ( A. z ph -> A. z A. x ( x = y -> ph ) ) ) ;
	step 22 : wff = thm simplr () |- ( ( ( ( -. A. x x = z /\ -. A. y y = z ) /\ -. A. x x = y ) /\ x = y ) -> -. A. x x = y ) ;
	step 23 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 24 : wff = thm imp (step 23) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 25 : wff = thm alequcom () |- ( A. z z = x -> A. x x = z ) ;
	step 26 : wff = thm con3i (step 25) |- ( -. A. x x = z -> -. A. z z = x ) ;
	step 27 : wff = thm alequcom () |- ( A. z z = y -> A. y y = z ) ;
	step 28 : wff = thm con3i (step 27) |- ( -. A. y y = z -> -. A. z z = y ) ;
	step 29 : wff = thm syl2an (step 24, step 26, step 28) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> ( x = y -> A. z x = y ) ) ;
	step 30 : wff = thm imp (step 29) |- ( ( ( -. A. x x = z /\ -. A. y y = z ) /\ x = y ) -> A. z x = y ) ;
	step 31 : wff = thm adantlr (step 30) |- ( ( ( ( -. A. x x = z /\ -. A. y y = z ) /\ -. A. x x = y ) /\ x = y ) -> A. z x = y ) ;
	step 32 : wff = thm sylanc (step 21, step 22, step 31) |- ( ( ( ( -. A. x x = z /\ -. A. y y = z ) /\ -. A. x x = y ) /\ x = y ) -> ( A. z ph -> A. z A. x ( x = y -> ph ) ) ) ;
	step 33 : wff = thm hbnae () |- ( -. A. x x = z -> A. x -. A. x x = z ) ;
	step 34 : wff = thm hbnae () |- ( -. A. y y = z -> A. x -. A. y y = z ) ;
	step 35 : wff = thm hban (step 33, step 34) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> A. x ( -. A. x x = z /\ -. A. y y = z ) ) ;
	step 36 : wff = thm hbnae () |- ( -. A. x x = z -> A. z -. A. x x = z ) ;
	step 37 : wff = thm hbnae () |- ( -. A. y y = z -> A. z -. A. y y = z ) ;
	step 38 : wff = thm hban (step 36, step 37) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> A. z ( -. A. x x = z /\ -. A. y y = z ) ) ;
	step 39 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 40 : wff = thm imp (step 39) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 41 : wff = thm alequcom () |- ( A. z z = x -> A. x x = z ) ;
	step 42 : wff = thm con3i (step 41) |- ( -. A. x x = z -> -. A. z z = x ) ;
	step 43 : wff = thm alequcom () |- ( A. z z = y -> A. y y = z ) ;
	step 44 : wff = thm con3i (step 43) |- ( -. A. y y = z -> -. A. z z = y ) ;
	step 45 : wff = thm syl2an (step 40, step 42, step 44) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> ( x = y -> A. z x = y ) ) ;
	step 46 : wff = thm 19_21ai (step 38, step 45) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> A. z ( x = y -> A. z x = y ) ) ;
	step 47 : wff = thm 19_21t () |- ( A. z ( x = y -> A. z x = y ) -> ( A. z ( x = y -> ph ) <-> ( x = y -> A. z ph ) ) ) ;
	step 48 : wff = thm syl (step 46, step 47) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> ( A. z ( x = y -> ph ) <-> ( x = y -> A. z ph ) ) ) ;
	step 49 : wff = thm albid (step 35, step 48) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> ( A. x A. z ( x = y -> ph ) <-> A. x ( x = y -> A. z ph ) ) ) ;
	step 50 : wff = axm ax-7 () |- ( A. z A. x ( x = y -> ph ) -> A. x A. z ( x = y -> ph ) ) ;
	step 51 : wff = thm syl5bi (step 49, step 50) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> ( A. z A. x ( x = y -> ph ) -> A. x ( x = y -> A. z ph ) ) ) ;
	step 52 : wff = thm ad2antrr (step 51) |- ( ( ( ( -. A. x x = z /\ -. A. y y = z ) /\ -. A. x x = y ) /\ x = y ) -> ( A. z A. x ( x = y -> ph ) -> A. x ( x = y -> A. z ph ) ) ) ;
	step 53 : wff = thm syld (step 32, step 52) |- ( ( ( ( -. A. x x = z /\ -. A. y y = z ) /\ -. A. x x = y ) /\ x = y ) -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 54 : wff = thm exp31 (step 53) |- ( ( -. A. x x = z /\ -. A. y y = z ) -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 55 : wff = thm pm2_61ian (step 14, step 54) |- ( -. A. y y = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	qed prop 1 = step 55 ;
}

theorem ax11inda2ALT (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
}

proof of ax11inda2ALT {
	step 1 : wff = axm ax-1 () |- ( A. x ph -> ( x = y -> A. x ph ) ) ;
	step 2 : wff = thm a5i (step 1) |- ( A. x ph -> A. x ( x = y -> A. x ph ) ) ;
	step 3 : wff = thm a1i (step 2) |- ( A. z z = x -> ( A. x ph -> A. x ( x = y -> A. x ph ) ) ) ;
	step 4 : wff = thm biidd () |- ( A. z z = x -> ( ph <-> ph ) ) ;
	step 5 : wff = thm dral1 (step 4) |- ( A. z z = x -> ( A. z ph <-> A. x ph ) ) ;
	step 6 : wff = thm biidd () |- ( A. z z = x -> ( ph <-> ph ) ) ;
	step 7 : wff = thm dral1 (step 6) |- ( A. z z = x -> ( A. z ph <-> A. x ph ) ) ;
	step 8 : wff = thm imbi2d (step 7) |- ( A. z z = x -> ( ( x = y -> A. z ph ) <-> ( x = y -> A. x ph ) ) ) ;
	step 9 : wff = thm dral2 (step 8) |- ( A. z z = x -> ( A. x ( x = y -> A. z ph ) <-> A. x ( x = y -> A. x ph ) ) ) ;
	step 10 : wff = thm 3imtr4d (step 3, step 5, step 9) |- ( A. z z = x -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 11 : wff = thm alequcoms (step 10) |- ( A. x x = z -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 12 : wff = thm a1d (step 11) |- ( A. x x = z -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	step 13 : wff = thm a1d (step 12) |- ( A. x x = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 14 : wff = thm hbnae () |- ( -. A. x x = y -> A. z -. A. x x = y ) ;
	step 15 : wff = thm hba1 () |- ( A. z x = y -> A. z A. z x = y ) ;
	step 16 : wff = thm hban (step 14, step 15) |- ( ( -. A. x x = y /\ A. z x = y ) -> A. z ( -. A. x x = y /\ A. z x = y ) ) ;
	step 17 : wff = thm imp (hyp 1) |- ( ( -. A. x x = y /\ x = y ) -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 18 : wff = axm ax-4 () |- ( A. z x = y -> x = y ) ;
	step 19 : wff = thm sylan2 (step 17, step 18) |- ( ( -. A. x x = y /\ A. z x = y ) -> ( ph -> A. x ( x = y -> ph ) ) ) ;
	step 20 : wff = thm 19_20d (step 16, step 19) |- ( ( -. A. x x = y /\ A. z x = y ) -> ( A. z ph -> A. z A. x ( x = y -> ph ) ) ) ;
	step 21 : wff = thm simplr () |- ( ( ( -. A. x x = z /\ -. A. x x = y ) /\ x = y ) -> -. A. x x = y ) ;
	step 22 : wff = thm dveeq1 () |- ( -. A. z z = x -> ( x = y -> A. z x = y ) ) ;
	step 23 : wff = thm nalequcoms (step 22) |- ( -. A. x x = z -> ( x = y -> A. z x = y ) ) ;
	step 24 : wff = thm imp (step 23) |- ( ( -. A. x x = z /\ x = y ) -> A. z x = y ) ;
	step 25 : wff = thm adantlr (step 24) |- ( ( ( -. A. x x = z /\ -. A. x x = y ) /\ x = y ) -> A. z x = y ) ;
	step 26 : wff = thm sylanc (step 20, step 21, step 25) |- ( ( ( -. A. x x = z /\ -. A. x x = y ) /\ x = y ) -> ( A. z ph -> A. z A. x ( x = y -> ph ) ) ) ;
	step 27 : wff = thm hbnae () |- ( -. A. x x = z -> A. x -. A. x x = z ) ;
	step 28 : wff = thm hbnae () |- ( -. A. x x = z -> A. z -. A. x x = z ) ;
	step 29 : wff = thm dveeq1 () |- ( -. A. z z = x -> ( x = y -> A. z x = y ) ) ;
	step 30 : wff = thm nalequcoms (step 29) |- ( -. A. x x = z -> ( x = y -> A. z x = y ) ) ;
	step 31 : wff = thm 19_21ai (step 28, step 30) |- ( -. A. x x = z -> A. z ( x = y -> A. z x = y ) ) ;
	step 32 : wff = thm 19_21t () |- ( A. z ( x = y -> A. z x = y ) -> ( A. z ( x = y -> ph ) <-> ( x = y -> A. z ph ) ) ) ;
	step 33 : wff = thm syl (step 31, step 32) |- ( -. A. x x = z -> ( A. z ( x = y -> ph ) <-> ( x = y -> A. z ph ) ) ) ;
	step 34 : wff = thm albid (step 27, step 33) |- ( -. A. x x = z -> ( A. x A. z ( x = y -> ph ) <-> A. x ( x = y -> A. z ph ) ) ) ;
	step 35 : wff = axm ax-7 () |- ( A. z A. x ( x = y -> ph ) -> A. x A. z ( x = y -> ph ) ) ;
	step 36 : wff = thm syl5bi (step 34, step 35) |- ( -. A. x x = z -> ( A. z A. x ( x = y -> ph ) -> A. x ( x = y -> A. z ph ) ) ) ;
	step 37 : wff = thm ad2antrr (step 36) |- ( ( ( -. A. x x = z /\ -. A. x x = y ) /\ x = y ) -> ( A. z A. x ( x = y -> ph ) -> A. x ( x = y -> A. z ph ) ) ) ;
	step 38 : wff = thm syld (step 26, step 37) |- ( ( ( -. A. x x = z /\ -. A. x x = y ) /\ x = y ) -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 39 : wff = thm exp31 (step 38) |- ( -. A. x x = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 40 : wff = thm pm2_61i (step 13, step 39) |- ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	qed prop 1 = step 40 ;
}

theorem ax11inda2 (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( ph -> A. x ( x = y -> ph ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
}

proof of ax11inda2 {
	step 1 : wff = thm a16g () |- ( A. y y = z -> ( ( x = y -> A. z ph ) -> A. x ( x = y -> A. z ph ) ) ) ;
	step 2 : wff = axm ax-1 () |- ( A. z ph -> ( x = y -> A. z ph ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A. y y = z -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ;
	step 4 : wff = thm a1d (step 3) |- ( A. y y = z -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	step 5 : wff = thm a1d (step 4) |- ( A. y y = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 6 : wff = thm ax11indalem (hyp 1) |- ( -. A. y y = z -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 7 : wff = thm pm2_61i (step 5, step 6) |- ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem ax11inda (ph : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( -. A. x x = w -> ( x = w -> ( ph -> A. x ( x = w -> ph ) ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
}

proof of ax11inda {
	step 1 : wff = thm a9e () |- E. w w = y ;
	step 2 : wff = thm ax11inda2 (hyp 1) |- ( -. A. x x = w -> ( x = w -> ( A. z ph -> A. x ( x = w -> A. z ph ) ) ) ) ;
	step 3 : wff = thm dveeq2 () |- ( -. A. x x = y -> ( w = y -> A. x w = y ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( -. A. x x = y /\ w = y ) -> A. x w = y ) ;
	step 5 : wff = thm hba1 () |- ( A. x w = y -> A. x A. x w = y ) ;
	step 6 : wff = thm equequ2 () |- ( w = y -> ( x = w <-> x = y ) ) ;
	step 7 : wff = thm a4s (step 6) |- ( A. x w = y -> ( x = w <-> x = y ) ) ;
	step 8 : wff = thm albid (step 5, step 7) |- ( A. x w = y -> ( A. x x = w <-> A. x x = y ) ) ;
	step 9 : wff = thm notbid (step 8) |- ( A. x w = y -> ( -. A. x x = w <-> -. A. x x = y ) ) ;
	step 10 : wff = thm syl (step 4, step 9) |- ( ( -. A. x x = y /\ w = y ) -> ( -. A. x x = w <-> -. A. x x = y ) ) ;
	step 11 : wff = thm equequ2 () |- ( w = y -> ( x = w <-> x = y ) ) ;
	step 12 : wff = thm adantl (step 11) |- ( ( -. A. x x = y /\ w = y ) -> ( x = w <-> x = y ) ) ;
	step 13 : wff = thm dveeq2 () |- ( -. A. x x = y -> ( w = y -> A. x w = y ) ) ;
	step 14 : wff = thm imp (step 13) |- ( ( -. A. x x = y /\ w = y ) -> A. x w = y ) ;
	step 15 : wff = thm hba1 () |- ( A. x w = y -> A. x A. x w = y ) ;
	step 16 : wff = thm equequ2 () |- ( w = y -> ( x = w <-> x = y ) ) ;
	step 17 : wff = thm a4s (step 16) |- ( A. x w = y -> ( x = w <-> x = y ) ) ;
	step 18 : wff = thm imbi1d (step 17) |- ( A. x w = y -> ( ( x = w -> A. z ph ) <-> ( x = y -> A. z ph ) ) ) ;
	step 19 : wff = thm albid (step 15, step 18) |- ( A. x w = y -> ( A. x ( x = w -> A. z ph ) <-> A. x ( x = y -> A. z ph ) ) ) ;
	step 20 : wff = thm syl (step 14, step 19) |- ( ( -. A. x x = y /\ w = y ) -> ( A. x ( x = w -> A. z ph ) <-> A. x ( x = y -> A. z ph ) ) ) ;
	step 21 : wff = thm imbi2d (step 20) |- ( ( -. A. x x = y /\ w = y ) -> ( ( A. z ph -> A. x ( x = w -> A. z ph ) ) <-> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	step 22 : wff = thm imbi12d (step 12, step 21) |- ( ( -. A. x x = y /\ w = y ) -> ( ( x = w -> ( A. z ph -> A. x ( x = w -> A. z ph ) ) ) <-> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 23 : wff = thm imbi12d (step 10, step 22) |- ( ( -. A. x x = y /\ w = y ) -> ( ( -. A. x x = w -> ( x = w -> ( A. z ph -> A. x ( x = w -> A. z ph ) ) ) ) <-> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ) ;
	step 24 : wff = thm mpbii (step 2, step 23) |- ( ( -. A. x x = y /\ w = y ) -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 25 : wff = thm ex (step 24) |- ( -. A. x x = y -> ( w = y -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ) ;
	step 26 : wff = thm 19_23adv (step 25) |- ( -. A. x x = y -> ( E. w w = y -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ) ;
	step 27 : wff = thm mpi (step 1, step 26) |- ( -. A. x x = y -> ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ) ;
	step 28 : wff = thm pm2_43i (step 27) |- ( -. A. x x = y -> ( x = y -> ( A. z ph -> A. x ( x = y -> A. z ph ) ) ) ) ;
	qed prop 1 = step 28 ;
}

theorem a12stdy1 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. x x = y -> E. x y = z ) ;
}

proof of a12stdy1 {
	step 1 : wff = thm a9e () |- E. y y = z ;
	step 2 : wff = axm ax-10o () |- ( A. x x = y -> ( A. x -. y = z -> A. y -. y = z ) ) ;
	step 3 : wff = thm con3d (step 2) |- ( A. x x = y -> ( -. A. y -. y = z -> -. A. x -. y = z ) ) ;
	step 4 : wff = def df-ex () |- ( E. y y = z <-> -. A. y -. y = z ) ;
	step 5 : wff = def df-ex () |- ( E. x y = z <-> -. A. x -. y = z ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( A. x x = y -> ( E. y y = z -> E. x y = z ) ) ;
	step 7 : wff = thm mpi (step 1, step 6) |- ( A. x x = y -> E. x y = z ) ;
	qed prop 1 = step 7 ;
}

theorem a12stdy2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. z ( z = x /\ x = y ) -> A. y y = x ) ;
}

proof of a12stdy2 {
	step 1 : wff = thm 19_26 () |- ( A. z ( z = x /\ x = y ) <-> ( A. z z = x /\ A. z x = y ) ) ;
	step 2 : wff = axm ax-10o () |- ( A. z z = x -> ( A. z x = y -> A. x x = y ) ) ;
	step 3 : wff = thm alequcom () |- ( A. x x = y -> A. y y = x ) ;
	step 4 : wff = thm syl6 (step 2, step 3) |- ( A. z z = x -> ( A. z x = y -> A. y y = x ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( A. z z = x /\ A. z x = y ) -> A. y y = x ) ;
	step 6 : wff = thm sylbi (step 1, step 5) |- ( A. z ( z = x /\ x = y ) -> A. y y = x ) ;
	qed prop 1 = step 6 ;
}

theorem a12stdy3 (x : set, y : set, z : set, w : set, v : set)  {
	prop 1 : wff = |- ( A. z ( z = x /\ x = y ) -> A. v E. y x = w ) ;
}

proof of a12stdy3 {
	step 1 : wff = thm a12stdy2 () |- ( A. z ( z = x /\ x = y ) -> A. y y = x ) ;
	step 2 : wff = thm hbae () |- ( A. y y = x -> A. v A. y y = x ) ;
	step 3 : wff = thm a12stdy1 () |- ( A. y y = x -> E. y x = w ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. v A. y y = x -> A. v E. y x = w ) ;
	step 5 : wff = thm 3syl (step 1, step 2, step 4) |- ( A. z ( z = x /\ x = y ) -> A. v E. y x = w ) ;
	qed prop 1 = step 5 ;
}

theorem a12stdy4 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. z z = x -> ( A. y z = x -> ( x = y -> A. z x = y ) ) ) ;
}

proof of a12stdy4 {
	step 1 : wff = axm ax-10o () |- ( A. y y = z -> ( A. y z = x -> A. z z = x ) ) ;
	step 2 : wff = thm alequcoms (step 1) |- ( A. z z = y -> ( A. y z = x -> A. z z = x ) ) ;
	step 3 : wff = thm con3d (step 2) |- ( A. z z = y -> ( -. A. z z = x -> -. A. y z = x ) ) ;
	step 4 : wff = thm impcom (step 3) |- ( ( -. A. z z = x /\ A. z z = y ) -> -. A. y z = x ) ;
	step 5 : wff = thm pm2_21d (step 4) |- ( ( -. A. z z = x /\ A. z z = y ) -> ( A. y z = x -> ( x = y -> A. z x = y ) ) ) ;
	step 6 : wff = thm ex (step 5) |- ( -. A. z z = x -> ( A. z z = y -> ( A. y z = x -> ( x = y -> A. z x = y ) ) ) ) ;
	step 7 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 8 : wff = thm a1dd (step 7) |- ( -. A. z z = x -> ( -. A. z z = y -> ( A. y z = x -> ( x = y -> A. z x = y ) ) ) ) ;
	step 9 : wff = thm pm2_61d (step 6, step 8) |- ( -. A. z z = x -> ( A. y z = x -> ( x = y -> A. z x = y ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem a12lem1 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> x = y ) ) ;
}

proof of a12lem1 {
	step 1 : wff = thm equequ1 () |- ( z = x -> ( z = x <-> x = x ) ) ;
	step 2 : wff = thm equequ1 () |- ( z = x -> ( z = y <-> x = y ) ) ;
	step 3 : wff = thm imbi12d (step 1, step 2) |- ( z = x -> ( ( z = x -> z = y ) <-> ( x = x -> x = y ) ) ) ;
	step 4 : wff = thm a4s (step 3) |- ( A. z z = x -> ( ( z = x -> z = y ) <-> ( x = x -> x = y ) ) ) ;
	step 5 : wff = thm dral2 (step 4) |- ( A. z z = x -> ( A. z ( z = x -> z = y ) <-> A. z ( x = x -> x = y ) ) ) ;
	step 6 : wff = thm equid () |- x = x ;
	step 7 : wff = thm a1bi (step 6) |- ( x = y <-> ( x = x -> x = y ) ) ;
	step 8 : wff = thm biimpri (step 7) |- ( ( x = x -> x = y ) -> x = y ) ;
	step 9 : wff = thm a4s (step 8) |- ( A. z ( x = x -> x = y ) -> x = y ) ;
	step 10 : wff = thm syl6bi (step 5, step 9) |- ( A. z z = x -> ( A. z ( z = x -> z = y ) -> x = y ) ) ;
	step 11 : wff = thm a1d (step 10) |- ( A. z z = x -> ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> x = y ) ) ) ;
	step 12 : wff = thm equid () |- x = x ;
	step 13 : wff = thm 19_26 () |- ( A. z ( ( ( x = x -> x = y ) -> A. z ( x = x -> x = y ) ) /\ ( z = x -> ( ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ) <-> ( A. z ( ( x = x -> x = y ) -> A. z ( x = x -> x = y ) ) /\ A. z ( z = x -> ( ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ) ) ;
	step 14 : wff = thm a4imt () |- ( A. z ( ( ( x = x -> x = y ) -> A. z ( x = x -> x = y ) ) /\ ( z = x -> ( ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ) -> ( A. z ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ;
	step 15 : wff = thm sylbir (step 13, step 14) |- ( ( A. z ( ( x = x -> x = y ) -> A. z ( x = x -> x = y ) ) /\ A. z ( z = x -> ( ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ) -> ( A. z ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ;
	step 16 : wff = thm hbn1 () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 17 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 18 : wff = thm hban (step 16, step 17) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 19 : wff = thm hbn1 () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 20 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 21 : wff = thm hban (step 19, step 20) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 22 : wff = thm equid () |- x = x ;
	step 23 : wff = thm hbth (step 22) |- ( x = x -> A. z x = x ) ;
	step 24 : wff = thm a1i (step 23) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = x -> A. z x = x ) ) ;
	step 25 : wff = axm ax-12 () |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	step 26 : wff = thm imp (step 25) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 27 : wff = thm hbimd (step 21, step 24, step 26) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( ( x = x -> x = y ) -> A. z ( x = x -> x = y ) ) ) ;
	step 28 : wff = thm 19_21ai (step 18, step 27) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( ( x = x -> x = y ) -> A. z ( x = x -> x = y ) ) ) ;
	step 29 : wff = thm equtr () |- ( z = x -> ( x = x -> z = x ) ) ;
	step 30 : wff = axm ax-8 () |- ( z = x -> ( z = y -> x = y ) ) ;
	step 31 : wff = thm imim12d (step 29, step 30) |- ( z = x -> ( ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ;
	step 32 : wff = axm ax-gen (step 31) |- A. z ( z = x -> ( ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ;
	step 33 : wff = thm sylancl (step 15, step 28, step 32) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( A. z ( z = x -> z = y ) -> ( x = x -> x = y ) ) ) ;
	step 34 : wff = thm mpii (step 12, step 33) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( A. z ( z = x -> z = y ) -> x = y ) ) ;
	step 35 : wff = thm ex (step 34) |- ( -. A. z z = x -> ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> x = y ) ) ) ;
	step 36 : wff = thm pm2_61i (step 11, step 35) |- ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> x = y ) ) ;
	qed prop 1 = step 36 ;
}

theorem a12lem2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) ;
}

proof of a12lem2 {
	step 1 : wff = thm equcom () |- ( z = x <-> x = z ) ;
	step 2 : wff = thm imbi1i (step 1) |- ( ( z = x -> -. z = y ) <-> ( x = z -> -. z = y ) ) ;
	step 3 : wff = thm imnan () |- ( ( x = z -> -. z = y ) <-> -. ( x = z /\ z = y ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ( z = x -> -. z = y ) <-> -. ( x = z /\ z = y ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. z ( z = x -> -. z = y ) <-> A. z -. ( x = z /\ z = y ) ) ;
	step 6 : wff = thm alnex () |- ( A. z -. ( x = z /\ z = y ) <-> -. E. z ( x = z /\ z = y ) ) ;
	step 7 : wff = thm bitri (step 5, step 6) |- ( A. z ( z = x -> -. z = y ) <-> -. E. z ( x = z /\ z = y ) ) ;
	step 8 : wff = thm equvini () |- ( x = y -> E. z ( x = z /\ z = y ) ) ;
	step 9 : wff = thm con3i (step 8) |- ( -. E. z ( x = z /\ z = y ) -> -. x = y ) ;
	step 10 : wff = thm sylbi (step 7, step 9) |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) ;
	qed prop 1 = step 10 ;
}

theorem a12study (x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> x = y ) ) ;
	hyp 2 : wff = |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
}

proof of a12study {
	step 1 : wff = thm hbn1 () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 2 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 3 : wff = thm hban (step 1, step 2) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 4 : wff = thm hba1 () |- ( A. z x = y -> A. z A. z x = y ) ;
	step 5 : wff = axm ax-11o () |- ( -. A. z z = x -> ( z = x -> ( z = y -> A. z ( z = x -> z = y ) ) ) ) ;
	step 6 : wff = thm equid1 () |- x = x ;
	step 7 : wff = axm ax-8 () |- ( x = z -> ( x = x -> z = x ) ) ;
	step 8 : wff = thm mpi (step 6, step 7) |- ( x = z -> z = x ) ;
	step 9 : wff = thm syl5 (step 5, step 8) |- ( -. A. z z = x -> ( x = z -> ( z = y -> A. z ( z = x -> z = y ) ) ) ) ;
	step 10 : wff = thm imp3a (step 9) |- ( -. A. z z = x -> ( ( x = z /\ z = y ) -> A. z ( z = x -> z = y ) ) ) ;
	step 11 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 12 : wff = thm hba1 () |- ( A. z ( z = x -> z = y ) -> A. z A. z ( z = x -> z = y ) ) ;
	step 13 : wff = thm 19_21ad (step 11, step 12, hyp 1) |- ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> A. z x = y ) ) ;
	step 14 : wff = thm sylan9 (step 10, step 13) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( ( x = z /\ z = y ) -> A. z x = y ) ) ;
	step 15 : wff = thm 19_23ad (step 3, step 4, step 14) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( E. z ( x = z /\ z = y ) -> A. z x = y ) ) ;
	step 16 : wff = thm ex (step 15) |- ( -. A. z z = x -> ( -. A. z z = y -> ( E. z ( x = z /\ z = y ) -> A. z x = y ) ) ) ;
	step 17 : wff = thm imnan () |- ( ( x = z -> -. z = y ) <-> -. ( x = z /\ z = y ) ) ;
	step 18 : wff = thm equid1 () |- z = z ;
	step 19 : wff = axm ax-8 () |- ( z = x -> ( z = z -> x = z ) ) ;
	step 20 : wff = thm mpi (step 18, step 19) |- ( z = x -> x = z ) ;
	step 21 : wff = thm imim1i (step 20) |- ( ( x = z -> -. z = y ) -> ( z = x -> -. z = y ) ) ;
	step 22 : wff = thm sylbir (step 17, step 21) |- ( -. ( x = z /\ z = y ) -> ( z = x -> -. z = y ) ) ;
	step 23 : wff = thm 19_20i (step 22) |- ( A. z -. ( x = z /\ z = y ) -> A. z ( z = x -> -. z = y ) ) ;
	step 24 : wff = thm syl (step 23, hyp 2) |- ( A. z -. ( x = z /\ z = y ) -> -. x = y ) ;
	step 25 : wff = thm con2i (step 24) |- ( x = y -> -. A. z -. ( x = z /\ z = y ) ) ;
	step 26 : wff = def df-ex () |- ( E. z ( x = z /\ z = y ) <-> -. A. z -. ( x = z /\ z = y ) ) ;
	step 27 : wff = thm sylibr (step 25, step 26) |- ( x = y -> E. z ( x = z /\ z = y ) ) ;
	step 28 : wff = thm syl7 (step 16, step 27) |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	qed prop 1 = step 28 ;
}

theorem a12studyALT (x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( -. A. z z = y -> ( A. z ( z = x -> z = y ) -> x = y ) ) ;
	hyp 2 : wff = |- ( A. z ( z = x -> -. z = y ) -> -. x = y ) ;
	-----------------------
	prop 1 : wff = |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
}

proof of a12studyALT {
	step 1 : wff = thm hbn1 () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 2 : wff = thm hbn1 () |- ( -. A. z z = y -> A. z -. A. z z = y ) ;
	step 3 : wff = thm hban (step 1, step 2) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> A. z ( -. A. z z = x /\ -. A. z z = y ) ) ;
	step 4 : wff = thm con3d (hyp 1) |- ( -. A. z z = y -> ( -. x = y -> -. A. z ( z = x -> z = y ) ) ) ;
	step 5 : wff = thm hbn1 () |- ( -. A. z z = x -> A. z -. A. z z = x ) ;
	step 6 : wff = thm hba1 () |- ( A. z -. x = y -> A. z A. z -. x = y ) ;
	step 7 : wff = axm ax-11o () |- ( -. A. z z = x -> ( z = x -> ( z = y -> A. z ( z = x -> z = y ) ) ) ) ;
	step 8 : wff = thm ax11indn (step 7) |- ( -. A. z z = x -> ( z = x -> ( -. z = y -> A. z ( z = x -> -. z = y ) ) ) ) ;
	step 9 : wff = thm a5i (hyp 2) |- ( A. z ( z = x -> -. z = y ) -> A. z -. x = y ) ;
	step 10 : wff = thm syl8 (step 8, step 9) |- ( -. A. z z = x -> ( z = x -> ( -. z = y -> A. z -. x = y ) ) ) ;
	step 11 : wff = thm imp3a (step 10) |- ( -. A. z z = x -> ( ( z = x /\ -. z = y ) -> A. z -. x = y ) ) ;
	step 12 : wff = thm annim () |- ( ( z = x /\ -. z = y ) <-> -. ( z = x -> z = y ) ) ;
	step 13 : wff = thm syl5ibr (step 11, step 12) |- ( -. A. z z = x -> ( -. ( z = x -> z = y ) -> A. z -. x = y ) ) ;
	step 14 : wff = thm 19_23ad (step 5, step 6, step 13) |- ( -. A. z z = x -> ( E. z -. ( z = x -> z = y ) -> A. z -. x = y ) ) ;
	step 15 : wff = thm exnal () |- ( E. z -. ( z = x -> z = y ) <-> -. A. z ( z = x -> z = y ) ) ;
	step 16 : wff = thm syl5ibr (step 14, step 15) |- ( -. A. z z = x -> ( -. A. z ( z = x -> z = y ) -> A. z -. x = y ) ) ;
	step 17 : wff = thm sylan9r (step 4, step 16) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( -. x = y -> A. z -. x = y ) ) ;
	step 18 : wff = thm hbnd (step 3, step 17) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( -. -. x = y -> A. z -. -. x = y ) ) ;
	step 19 : wff = thm notnot () |- ( x = y <-> -. -. x = y ) ;
	step 20 : wff = thm notnot () |- ( x = y <-> -. -. x = y ) ;
	step 21 : wff = thm albii (step 20) |- ( A. z x = y <-> A. z -. -. x = y ) ;
	step 22 : wff = thm 3imtr4g (step 18, step 19, step 21) |- ( ( -. A. z z = x /\ -. A. z z = y ) -> ( x = y -> A. z x = y ) ) ;
	step 23 : wff = thm ex (step 22) |- ( -. A. z z = x -> ( -. A. z z = y -> ( x = y -> A. z x = y ) ) ) ;
	qed prop 1 = step 23 ;
}

constant {
	symbol E! ;
}

constant {
	symbol E* ;
}

rule weu (ph : wff, x : set) {
	term : wff = # E! x ph ;
}

rule wmo (ph : wff, x : set) {
	term : wff = # E* x ph ;
}

theorem eujust (ph : wff, x : set, y : set, z : set)  {
	prop 1 : wff = |- ( E. y A. x ( ph <-> x = y ) <-> E. z A. x ( ph <-> x = z ) ) ;
}

proof of eujust {
	var w : set;
	step 1 : wff = thm equequ2 () |- ( y = z -> ( x = y <-> x = z ) ) ;
	step 2 : wff = thm bibi2d (step 1) |- ( y = z -> ( ( ph <-> x = y ) <-> ( ph <-> x = z ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( y = z -> ( A. x ( ph <-> x = y ) <-> A. x ( ph <-> x = z ) ) ) ;
	step 4 : wff = thm a4s (step 3) |- ( A. y y = z -> ( A. x ( ph <-> x = y ) <-> A. x ( ph <-> x = z ) ) ) ;
	step 5 : wff = thm drex1 (step 4) |- ( A. y y = z -> ( E. y A. x ( ph <-> x = y ) <-> E. z A. x ( ph <-> x = z ) ) ) ;
	step 6 : wff = thm hbnae () |- ( -. A. y y = z -> A. y -. A. y y = z ) ;
	step 7 : wff = thm hbnae () |- ( -. A. y y = z -> A. z -. A. y y = z ) ;
	step 8 : wff = thm 19_21ai (step 6, step 7) |- ( -. A. y y = z -> A. y A. z -. A. y y = z ) ;
	step 9 : wff = axm ax-17 () |- ( -. A. x ( ph <-> x = w ) -> A. z -. A. x ( ph <-> x = w ) ) ;
	step 10 : wff = thm equequ2 () |- ( w = y -> ( x = w <-> x = y ) ) ;
	step 11 : wff = thm bibi2d (step 10) |- ( w = y -> ( ( ph <-> x = w ) <-> ( ph <-> x = y ) ) ) ;
	step 12 : wff = thm albidv (step 11) |- ( w = y -> ( A. x ( ph <-> x = w ) <-> A. x ( ph <-> x = y ) ) ) ;
	step 13 : wff = thm notbid (step 12) |- ( w = y -> ( -. A. x ( ph <-> x = w ) <-> -. A. x ( ph <-> x = y ) ) ) ;
	step 14 : wff = thm dvelim (step 9, step 13) |- ( -. A. z z = y -> ( -. A. x ( ph <-> x = y ) -> A. z -. A. x ( ph <-> x = y ) ) ) ;
	step 15 : wff = thm nalequcoms (step 14) |- ( -. A. y y = z -> ( -. A. x ( ph <-> x = y ) -> A. z -. A. x ( ph <-> x = y ) ) ) ;
	step 16 : wff = axm ax-17 () |- ( -. A. x ( ph <-> x = w ) -> A. y -. A. x ( ph <-> x = w ) ) ;
	step 17 : wff = thm equequ2 () |- ( w = z -> ( x = w <-> x = z ) ) ;
	step 18 : wff = thm bibi2d (step 17) |- ( w = z -> ( ( ph <-> x = w ) <-> ( ph <-> x = z ) ) ) ;
	step 19 : wff = thm albidv (step 18) |- ( w = z -> ( A. x ( ph <-> x = w ) <-> A. x ( ph <-> x = z ) ) ) ;
	step 20 : wff = thm notbid (step 19) |- ( w = z -> ( -. A. x ( ph <-> x = w ) <-> -. A. x ( ph <-> x = z ) ) ) ;
	step 21 : wff = thm dvelim (step 16, step 20) |- ( -. A. y y = z -> ( -. A. x ( ph <-> x = z ) -> A. y -. A. x ( ph <-> x = z ) ) ) ;
	step 22 : wff = thm equequ2 () |- ( y = z -> ( x = y <-> x = z ) ) ;
	step 23 : wff = thm bibi2d (step 22) |- ( y = z -> ( ( ph <-> x = y ) <-> ( ph <-> x = z ) ) ) ;
	step 24 : wff = thm albidv (step 23) |- ( y = z -> ( A. x ( ph <-> x = y ) <-> A. x ( ph <-> x = z ) ) ) ;
	step 25 : wff = thm notbid (step 24) |- ( y = z -> ( -. A. x ( ph <-> x = y ) <-> -. A. x ( ph <-> x = z ) ) ) ;
	step 26 : wff = thm a1i (step 25) |- ( -. A. y y = z -> ( y = z -> ( -. A. x ( ph <-> x = y ) <-> -. A. x ( ph <-> x = z ) ) ) ) ;
	step 27 : wff = thm cbv2 (step 15, step 21, step 26) |- ( A. y A. z -. A. y y = z -> ( A. y -. A. x ( ph <-> x = y ) <-> A. z -. A. x ( ph <-> x = z ) ) ) ;
	step 28 : wff = thm syl (step 8, step 27) |- ( -. A. y y = z -> ( A. y -. A. x ( ph <-> x = y ) <-> A. z -. A. x ( ph <-> x = z ) ) ) ;
	step 29 : wff = thm notbid (step 28) |- ( -. A. y y = z -> ( -. A. y -. A. x ( ph <-> x = y ) <-> -. A. z -. A. x ( ph <-> x = z ) ) ) ;
	step 30 : wff = def df-ex () |- ( E. y A. x ( ph <-> x = y ) <-> -. A. y -. A. x ( ph <-> x = y ) ) ;
	step 31 : wff = def df-ex () |- ( E. z A. x ( ph <-> x = z ) <-> -. A. z -. A. x ( ph <-> x = z ) ) ;
	step 32 : wff = thm 3bitr4g (step 29, step 30, step 31) |- ( -. A. y y = z -> ( E. y A. x ( ph <-> x = y ) <-> E. z A. x ( ph <-> x = z ) ) ) ;
	step 33 : wff = thm pm2_61i (step 5, step 32) |- ( E. y A. x ( ph <-> x = y ) <-> E. z A. x ( ph <-> x = z ) ) ;
	qed prop 1 = step 33 ;
}

definition df-eu (ph : wff, x : set, y : set)  {
	defiendum : wff = # E! x ph ;
	definiens : wff = # E. y A. x ( ph <-> x = y ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-mo (ph : wff, x : set)  {
	defiendum : wff = # E* x ph ;
	definiens : wff = # ( E. x ph -> E! x ph ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem euf (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) ;
}

proof of euf {
	var z : set;
	step 1 : wff = def df-eu () |- ( E! x ph <-> E. z A. x ( ph <-> x = z ) ) ;
	step 2 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 3 : wff = thm hbbi (hyp 1, step 2) |- ( ( ph <-> x = z ) -> A. y ( ph <-> x = z ) ) ;
	step 4 : wff = thm hbal (step 3) |- ( A. x ( ph <-> x = z ) -> A. y A. x ( ph <-> x = z ) ) ;
	step 5 : wff = axm ax-17 () |- ( A. x ( ph <-> x = y ) -> A. z A. x ( ph <-> x = y ) ) ;
	step 6 : wff = thm equequ2 () |- ( z = y -> ( x = z <-> x = y ) ) ;
	step 7 : wff = thm bibi2d (step 6) |- ( z = y -> ( ( ph <-> x = z ) <-> ( ph <-> x = y ) ) ) ;
	step 8 : wff = thm albidv (step 7) |- ( z = y -> ( A. x ( ph <-> x = z ) <-> A. x ( ph <-> x = y ) ) ) ;
	step 9 : wff = thm cbvex (step 4, step 5, step 8) |- ( E. z A. x ( ph <-> x = z ) <-> E. y A. x ( ph <-> x = y ) ) ;
	step 10 : wff = thm bitri (step 1, step 9) |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) ;
	qed prop 1 = step 10 ;
}

theorem eubid (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E! x ps <-> E! x ch ) ) ;
}

proof of eubid {
	var y : set;
	step 1 : wff = thm bibi1d (hyp 2) |- ( ph -> ( ( ps <-> x = y ) <-> ( ch <-> x = y ) ) ) ;
	step 2 : wff = thm albid (hyp 1, step 1) |- ( ph -> ( A. x ( ps <-> x = y ) <-> A. x ( ch <-> x = y ) ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( ph -> ( E. y A. x ( ps <-> x = y ) <-> E. y A. x ( ch <-> x = y ) ) ) ;
	step 4 : wff = def df-eu () |- ( E! x ps <-> E. y A. x ( ps <-> x = y ) ) ;
	step 5 : wff = def df-eu () |- ( E! x ch <-> E. y A. x ( ch <-> x = y ) ) ;
	step 6 : wff = thm 3bitr4g (step 3, step 4, step 5) |- ( ph -> ( E! x ps <-> E! x ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem eubidv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E! x ps <-> E! x ch ) ) ;
}

proof of eubidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm eubid (step 1, hyp 1) |- ( ph -> ( E! x ps <-> E! x ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem eubii (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> E! x ps ) ;
}

proof of eubii {
	step 1 : wff = thm equid () |- x = x ;
	step 2 : wff = thm hbequid2 () |- ( x = x -> A. x x = x ) ;
	step 3 : wff = thm a1i (hyp 1) |- ( x = x -> ( ph <-> ps ) ) ;
	step 4 : wff = thm eubid (step 2, step 3) |- ( x = x -> ( E! x ph <-> E! x ps ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- ( E! x ph <-> E! x ps ) ;
	qed prop 1 = step 5 ;
}

theorem hbeu1 (ph : wff, x : set)  {
	prop 1 : wff = |- ( E! x ph -> A. x E! x ph ) ;
}

proof of hbeu1 {
	var y : set;
	step 1 : wff = thm hba1 () |- ( A. x ( ph <-> x = y ) -> A. x A. x ( ph <-> x = y ) ) ;
	step 2 : wff = thm hbex (step 1) |- ( E. y A. x ( ph <-> x = y ) -> A. x E. y A. x ( ph <-> x = y ) ) ;
	step 3 : wff = def df-eu () |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) ;
	step 4 : wff = def df-eu () |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x E! x ph <-> A. x E. y A. x ( ph <-> x = y ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( E! x ph -> A. x E! x ph ) ;
	qed prop 1 = step 6 ;
}

theorem hbeu (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! y ph -> A. x E! y ph ) ;
}

proof of hbeu {
	var z : set;
	step 1 : wff = axm ax-10o () |- ( A. y y = x -> ( A. y A. y ( ph <-> y = z ) -> A. x A. y ( ph <-> y = z ) ) ) ;
	step 2 : wff = thm alequcoms (step 1) |- ( A. x x = y -> ( A. y A. y ( ph <-> y = z ) -> A. x A. y ( ph <-> y = z ) ) ) ;
	step 3 : wff = thm hba1 () |- ( A. y ( ph <-> y = z ) -> A. y A. y ( ph <-> y = z ) ) ;
	step 4 : wff = thm syl5 (step 2, step 3) |- ( A. x x = y -> ( A. y ( ph <-> y = z ) -> A. x A. y ( ph <-> y = z ) ) ) ;
	step 5 : wff = thm hbnae () |- ( -. A. x x = y -> A. y -. A. x x = y ) ;
	step 6 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 7 : wff = thm a1i (hyp 1) |- ( -. A. x x = y -> ( ph -> A. x ph ) ) ;
	step 8 : wff = thm dveeq1 () |- ( -. A. x x = y -> ( y = z -> A. x y = z ) ) ;
	step 9 : wff = thm hbbid (step 6, step 7, step 8) |- ( -. A. x x = y -> ( ( ph <-> y = z ) -> A. x ( ph <-> y = z ) ) ) ;
	step 10 : wff = thm hbald (step 5, step 9) |- ( -. A. x x = y -> ( A. y ( ph <-> y = z ) -> A. x A. y ( ph <-> y = z ) ) ) ;
	step 11 : wff = thm pm2_61i (step 4, step 10) |- ( A. y ( ph <-> y = z ) -> A. x A. y ( ph <-> y = z ) ) ;
	step 12 : wff = thm hbex (step 11) |- ( E. z A. y ( ph <-> y = z ) -> A. x E. z A. y ( ph <-> y = z ) ) ;
	step 13 : wff = def df-eu () |- ( E! y ph <-> E. z A. y ( ph <-> y = z ) ) ;
	step 14 : wff = def df-eu () |- ( E! y ph <-> E. z A. y ( ph <-> y = z ) ) ;
	step 15 : wff = thm albii (step 14) |- ( A. x E! y ph <-> A. x E. z A. y ( ph <-> y = z ) ) ;
	step 16 : wff = thm 3imtr4i (step 12, step 13, step 15) |- ( E! y ph -> A. x E! y ph ) ;
	qed prop 1 = step 16 ;
}

theorem sb8eu (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> E! y [ y / x ] ph ) ;
}

proof of sb8eu {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 2 : wff = thm hbbi (hyp 1, step 1) |- ( ( ph <-> x = z ) -> A. y ( ph <-> x = z ) ) ;
	step 3 : wff = thm sb8 (step 2) |- ( A. x ( ph <-> x = z ) <-> A. y [ y / x ] ( ph <-> x = z ) ) ;
	step 4 : wff = axm ax-17 () |- ( y = z -> A. x y = z ) ;
	step 5 : wff = thm equequ1 () |- ( x = y -> ( x = z <-> y = z ) ) ;
	step 6 : wff = thm sbie (step 4, step 5) |- ( [ y / x ] x = z <-> y = z ) ;
	step 7 : wff = thm sblbis (step 6) |- ( [ y / x ] ( ph <-> x = z ) <-> ( [ y / x ] ph <-> y = z ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. y [ y / x ] ( ph <-> x = z ) <-> A. y ( [ y / x ] ph <-> y = z ) ) ;
	step 9 : wff = thm bitri (step 3, step 8) |- ( A. x ( ph <-> x = z ) <-> A. y ( [ y / x ] ph <-> y = z ) ) ;
	step 10 : wff = thm exbii (step 9) |- ( E. z A. x ( ph <-> x = z ) <-> E. z A. y ( [ y / x ] ph <-> y = z ) ) ;
	step 11 : wff = def df-eu () |- ( E! x ph <-> E. z A. x ( ph <-> x = z ) ) ;
	step 12 : wff = def df-eu () |- ( E! y [ y / x ] ph <-> E. z A. y ( [ y / x ] ph <-> y = z ) ) ;
	step 13 : wff = thm 3bitr4i (step 10, step 11, step 12) |- ( E! x ph <-> E! y [ y / x ] ph ) ;
	qed prop 1 = step 13 ;
}

theorem cbveu (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> E! y ps ) ;
}

proof of cbveu {
	step 1 : wff = thm sb8eu (hyp 1) |- ( E! x ph <-> E! y [ y / x ] ph ) ;
	step 2 : wff = thm sbie (hyp 2, hyp 3) |- ( [ y / x ] ph <-> ps ) ;
	step 3 : wff = thm eubii (step 2) |- ( E! y [ y / x ] ph <-> E! y ps ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E! x ph <-> E! y ps ) ;
	qed prop 1 = step 4 ;
}

theorem eu1 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
}

proof of eu1 {
	step 1 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 2 : wff = thm euf (step 1) |- ( E! y [ y / x ] ph <-> E. x A. y ( [ y / x ] ph <-> y = x ) ) ;
	step 3 : wff = thm sb8eu (hyp 1) |- ( E! x ph <-> E! y [ y / x ] ph ) ;
	step 4 : wff = thm equcom () |- ( x = y <-> y = x ) ;
	step 5 : wff = thm imbi2i (step 4) |- ( ( [ y / x ] ph -> x = y ) <-> ( [ y / x ] ph -> y = x ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. y ( [ y / x ] ph -> x = y ) <-> A. y ( [ y / x ] ph -> y = x ) ) ;
	step 7 : wff = thm sb6rf (hyp 1) |- ( ph <-> A. y ( y = x -> [ y / x ] ph ) ) ;
	step 8 : wff = thm anbi12i (step 6, step 7) |- ( ( A. y ( [ y / x ] ph -> x = y ) /\ ph ) <-> ( A. y ( [ y / x ] ph -> y = x ) /\ A. y ( y = x -> [ y / x ] ph ) ) ) ;
	step 9 : wff = thm ancom () |- ( ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) <-> ( A. y ( [ y / x ] ph -> x = y ) /\ ph ) ) ;
	step 10 : wff = thm albi () |- ( A. y ( [ y / x ] ph <-> y = x ) <-> ( A. y ( [ y / x ] ph -> y = x ) /\ A. y ( y = x -> [ y / x ] ph ) ) ) ;
	step 11 : wff = thm 3bitr4i (step 8, step 9, step 10) |- ( ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) <-> A. y ( [ y / x ] ph <-> y = x ) ) ;
	step 12 : wff = thm exbii (step 11) |- ( E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) <-> E. x A. y ( [ y / x ] ph <-> y = x ) ) ;
	step 13 : wff = thm 3bitr4i (step 2, step 3, step 12) |- ( E! x ph <-> E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
	qed prop 1 = step 13 ;
}

theorem mo (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. y A. x ( ph -> x = y ) <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
}

proof of mo {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 2 : wff = thm hbim (hyp 1, step 1) |- ( ( ph -> x = z ) -> A. y ( ph -> x = z ) ) ;
	step 3 : wff = thm hbal (step 2) |- ( A. x ( ph -> x = z ) -> A. y A. x ( ph -> x = z ) ) ;
	step 4 : wff = axm ax-17 () |- ( A. x ( ph -> x = y ) -> A. z A. x ( ph -> x = y ) ) ;
	step 5 : wff = thm equequ2 () |- ( z = y -> ( x = z <-> x = y ) ) ;
	step 6 : wff = thm imbi2d (step 5) |- ( z = y -> ( ( ph -> x = z ) <-> ( ph -> x = y ) ) ) ;
	step 7 : wff = thm albidv (step 6) |- ( z = y -> ( A. x ( ph -> x = z ) <-> A. x ( ph -> x = y ) ) ) ;
	step 8 : wff = thm cbvex (step 3, step 4, step 7) |- ( E. z A. x ( ph -> x = z ) <-> E. y A. x ( ph -> x = y ) ) ;
	step 9 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 10 : wff = thm hbim (hyp 1, step 9) |- ( ( ph -> x = z ) -> A. y ( ph -> x = z ) ) ;
	step 11 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 12 : wff = axm ax-17 () |- ( y = z -> A. x y = z ) ;
	step 13 : wff = thm hbim (step 11, step 12) |- ( ( [ y / x ] ph -> y = z ) -> A. x ( [ y / x ] ph -> y = z ) ) ;
	step 14 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ph -> ph ) ) ;
	step 15 : wff = axm ax-8 () |- ( x = y -> ( x = z -> y = z ) ) ;
	step 16 : wff = thm imim12d (step 14, step 15) |- ( x = y -> ( ( ph -> x = z ) -> ( [ y / x ] ph -> y = z ) ) ) ;
	step 17 : wff = thm cbv3 (step 10, step 13, step 16) |- ( A. x ( ph -> x = z ) -> A. y ( [ y / x ] ph -> y = z ) ) ;
	step 18 : wff = thm ancli (step 17) |- ( A. x ( ph -> x = z ) -> ( A. x ( ph -> x = z ) /\ A. y ( [ y / x ] ph -> y = z ) ) ) ;
	step 19 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 20 : wff = thm hbim (hyp 1, step 19) |- ( ( ph -> x = z ) -> A. y ( ph -> x = z ) ) ;
	step 21 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 22 : wff = axm ax-17 () |- ( y = z -> A. x y = z ) ;
	step 23 : wff = thm hbim (step 21, step 22) |- ( ( [ y / x ] ph -> y = z ) -> A. x ( [ y / x ] ph -> y = z ) ) ;
	step 24 : wff = thm aaan (step 20, step 23) |- ( A. x A. y ( ( ph -> x = z ) /\ ( [ y / x ] ph -> y = z ) ) <-> ( A. x ( ph -> x = z ) /\ A. y ( [ y / x ] ph -> y = z ) ) ) ;
	step 25 : wff = thm sylibr (step 18, step 24) |- ( A. x ( ph -> x = z ) -> A. x A. y ( ( ph -> x = z ) /\ ( [ y / x ] ph -> y = z ) ) ) ;
	step 26 : wff = thm prth () |- ( ( ( ph -> x = z ) /\ ( [ y / x ] ph -> y = z ) ) -> ( ( ph /\ [ y / x ] ph ) -> ( x = z /\ y = z ) ) ) ;
	step 27 : wff = thm equtr2 () |- ( ( x = z /\ y = z ) -> x = y ) ;
	step 28 : wff = thm syl6 (step 26, step 27) |- ( ( ( ph -> x = z ) /\ ( [ y / x ] ph -> y = z ) ) -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 29 : wff = thm 19_20i2 (step 28) |- ( A. x A. y ( ( ph -> x = z ) /\ ( [ y / x ] ph -> y = z ) ) -> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 30 : wff = thm syl (step 25, step 29) |- ( A. x ( ph -> x = z ) -> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 31 : wff = thm 19_23aiv (step 30) |- ( E. z A. x ( ph -> x = z ) -> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 32 : wff = thm sylbir (step 8, step 31) |- ( E. y A. x ( ph -> x = y ) -> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 33 : wff = thm 19_20 () |- ( A. x ( [ y / x ] ph -> ( ph -> x = y ) ) -> ( A. x [ y / x ] ph -> A. x ( ph -> x = y ) ) ) ;
	step 34 : wff = thm 19_20i (step 33) |- ( A. y A. x ( [ y / x ] ph -> ( ph -> x = y ) ) -> A. y ( A. x [ y / x ] ph -> A. x ( ph -> x = y ) ) ) ;
	step 35 : wff = thm a7s (step 34) |- ( A. x A. y ( [ y / x ] ph -> ( ph -> x = y ) ) -> A. y ( A. x [ y / x ] ph -> A. x ( ph -> x = y ) ) ) ;
	step 36 : wff = thm 19_22 () |- ( A. y ( A. x [ y / x ] ph -> A. x ( ph -> x = y ) ) -> ( E. y A. x [ y / x ] ph -> E. y A. x ( ph -> x = y ) ) ) ;
	step 37 : wff = thm syl (step 35, step 36) |- ( A. x A. y ( [ y / x ] ph -> ( ph -> x = y ) ) -> ( E. y A. x [ y / x ] ph -> E. y A. x ( ph -> x = y ) ) ) ;
	step 38 : wff = thm hbsb3 (hyp 1) |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 39 : wff = thm 19_22i (step 38) |- ( E. y [ y / x ] ph -> E. y A. x [ y / x ] ph ) ;
	step 40 : wff = thm syl5com (step 37, step 39) |- ( E. y [ y / x ] ph -> ( A. x A. y ( [ y / x ] ph -> ( ph -> x = y ) ) -> E. y A. x ( ph -> x = y ) ) ) ;
	step 41 : wff = thm impexp () |- ( ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( ph -> ( [ y / x ] ph -> x = y ) ) ) ;
	step 42 : wff = thm bi2_04 () |- ( ( ph -> ( [ y / x ] ph -> x = y ) ) <-> ( [ y / x ] ph -> ( ph -> x = y ) ) ) ;
	step 43 : wff = thm bitri (step 41, step 42) |- ( ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( [ y / x ] ph -> ( ph -> x = y ) ) ) ;
	step 44 : wff = thm 2albii (step 43) |- ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. x A. y ( [ y / x ] ph -> ( ph -> x = y ) ) ) ;
	step 45 : wff = thm syl5ib (step 40, step 44) |- ( E. y [ y / x ] ph -> ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> E. y A. x ( ph -> x = y ) ) ) ;
	step 46 : wff = thm alnex () |- ( A. y -. [ y / x ] ph <-> -. E. y [ y / x ] ph ) ;
	step 47 : wff = thm hbsb3 (hyp 1) |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 48 : wff = thm hbn (step 47) |- ( -. [ y / x ] ph -> A. x -. [ y / x ] ph ) ;
	step 49 : wff = thm hbn (hyp 1) |- ( -. ph -> A. y -. ph ) ;
	step 50 : wff = thm sbequ1 () |- ( x = y -> ( ph -> [ y / x ] ph ) ) ;
	step 51 : wff = thm equcoms (step 50) |- ( y = x -> ( ph -> [ y / x ] ph ) ) ;
	step 52 : wff = thm con3d (step 51) |- ( y = x -> ( -. [ y / x ] ph -> -. ph ) ) ;
	step 53 : wff = thm cbv3 (step 48, step 49, step 52) |- ( A. y -. [ y / x ] ph -> A. x -. ph ) ;
	step 54 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> x = y ) ) ;
	step 55 : wff = thm 19_20i (step 54) |- ( A. x -. ph -> A. x ( ph -> x = y ) ) ;
	step 56 : wff = thm 19_8a () |- ( A. x ( ph -> x = y ) -> E. y A. x ( ph -> x = y ) ) ;
	step 57 : wff = thm 3syl (step 53, step 55, step 56) |- ( A. y -. [ y / x ] ph -> E. y A. x ( ph -> x = y ) ) ;
	step 58 : wff = thm sylbir (step 46, step 57) |- ( -. E. y [ y / x ] ph -> E. y A. x ( ph -> x = y ) ) ;
	step 59 : wff = thm a1d (step 58) |- ( -. E. y [ y / x ] ph -> ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> E. y A. x ( ph -> x = y ) ) ) ;
	step 60 : wff = thm pm2_61i (step 45, step 59) |- ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> E. y A. x ( ph -> x = y ) ) ;
	step 61 : wff = thm impbii (step 32, step 60) |- ( E. y A. x ( ph -> x = y ) <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	qed prop 1 = step 61 ;
}

theorem euex (ph : wff, x : set)  {
	prop 1 : wff = |- ( E! x ph -> E. x ph ) ;
}

proof of euex {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm eu1 (step 1) |- ( E! x ph <-> E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 3 : wff = thm 19_40 () |- ( E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) -> ( E. x ph /\ E. x A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 4 : wff = thm sylbi (step 2, step 3) |- ( E! x ph -> ( E. x ph /\ E. x A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 5 : wff = thm pm3_26d (step 4) |- ( E! x ph -> E. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem eumo0 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) ;
}

proof of eumo0 {
	step 1 : wff = thm euf (hyp 1) |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) ;
	step 2 : wff = thm bi1 () |- ( ( ph <-> x = y ) -> ( ph -> x = y ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x ( ph <-> x = y ) -> A. x ( ph -> x = y ) ) ;
	step 4 : wff = thm 19_22i (step 3) |- ( E. y A. x ( ph <-> x = y ) -> E. y A. x ( ph -> x = y ) ) ;
	step 5 : wff = thm sylbi (step 1, step 4) |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) ;
	qed prop 1 = step 5 ;
}

theorem eu2 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
}

proof of eu2 {
	step 1 : wff = thm euex () |- ( E! x ph -> E. x ph ) ;
	step 2 : wff = thm eumo0 (hyp 1) |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) ;
	step 3 : wff = thm mo (hyp 1) |- ( E. y A. x ( ph -> x = y ) <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 4 : wff = thm sylib (step 2, step 3) |- ( E! x ph -> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 5 : wff = thm jca (step 1, step 4) |- ( E! x ph -> ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 6 : wff = thm 19_29r () |- ( ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) -> E. x ( ph /\ A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 7 : wff = thm impexp () |- ( ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( ph -> ( [ y / x ] ph -> x = y ) ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. y ( ph -> ( [ y / x ] ph -> x = y ) ) ) ;
	step 9 : wff = thm 19_21 (hyp 1) |- ( A. y ( ph -> ( [ y / x ] ph -> x = y ) ) <-> ( ph -> A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 10 : wff = thm bitri (step 8, step 9) |- ( A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( ph -> A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 11 : wff = thm anbi2i (step 10) |- ( ( ph /\ A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) <-> ( ph /\ ( ph -> A. y ( [ y / x ] ph -> x = y ) ) ) ) ;
	step 12 : wff = thm abai () |- ( ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) <-> ( ph /\ ( ph -> A. y ( [ y / x ] ph -> x = y ) ) ) ) ;
	step 13 : wff = thm bitr4i (step 11, step 12) |- ( ( ph /\ A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) <-> ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 14 : wff = thm exbii (step 13) |- ( E. x ( ph /\ A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) <-> E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 15 : wff = thm sylib (step 6, step 14) |- ( ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) -> E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 16 : wff = thm eu1 (hyp 1) |- ( E! x ph <-> E. x ( ph /\ A. y ( [ y / x ] ph -> x = y ) ) ) ;
	step 17 : wff = thm sylibr (step 15, step 16) |- ( ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) -> E! x ph ) ;
	step 18 : wff = thm impbii (step 5, step 17) |- ( E! x ph <-> ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	qed prop 1 = step 18 ;
}

theorem eu3 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) ;
}

proof of eu3 {
	step 1 : wff = thm eu2 (hyp 1) |- ( E! x ph <-> ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 2 : wff = thm mo (hyp 1) |- ( E. y A. x ( ph -> x = y ) <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( E. x ph /\ E. y A. x ( ph -> x = y ) ) <-> ( E. x ph /\ A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( E! x ph <-> ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem euor (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) ;
}

proof of euor {
	step 1 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 2 : wff = thm biorf () |- ( -. ph -> ( ps <-> ( ph \/ ps ) ) ) ;
	step 3 : wff = thm eubid (step 1, step 2) |- ( -. ph -> ( E! x ps <-> E! x ( ph \/ ps ) ) ) ;
	step 4 : wff = thm biimpa (step 3) |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem euorv (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) ;
}

proof of euorv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm euor (step 1) |- ( ( -. ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem mo2 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) ;
}

proof of mo2 {
	step 1 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 2 : wff = thm alnex () |- ( A. x -. ph <-> -. E. x ph ) ;
	step 3 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> x = y ) ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x -. ph -> A. x ( ph -> x = y ) ) ;
	step 5 : wff = thm 19_8a () |- ( A. x ( ph -> x = y ) -> E. y A. x ( ph -> x = y ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( A. x -. ph -> E. y A. x ( ph -> x = y ) ) ;
	step 7 : wff = thm sylbir (step 2, step 6) |- ( -. E. x ph -> E. y A. x ( ph -> x = y ) ) ;
	step 8 : wff = thm eumo0 (hyp 1) |- ( E! x ph -> E. y A. x ( ph -> x = y ) ) ;
	step 9 : wff = thm ja (step 7, step 8) |- ( ( E. x ph -> E! x ph ) -> E. y A. x ( ph -> x = y ) ) ;
	step 10 : wff = thm eu3 (hyp 1) |- ( E! x ph <-> ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) ;
	step 11 : wff = thm biimpri (step 10) |- ( ( E. x ph /\ E. y A. x ( ph -> x = y ) ) -> E! x ph ) ;
	step 12 : wff = thm expcom (step 11) |- ( E. y A. x ( ph -> x = y ) -> ( E. x ph -> E! x ph ) ) ;
	step 13 : wff = thm impbii (step 9, step 12) |- ( ( E. x ph -> E! x ph ) <-> E. y A. x ( ph -> x = y ) ) ;
	step 14 : wff = thm bitri (step 1, step 13) |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) ;
	qed prop 1 = step 14 ;
}

theorem mo3 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ph <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
}

proof of mo3 {
	step 1 : wff = thm mo2 (hyp 1) |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) ;
	step 2 : wff = thm mo (hyp 1) |- ( E. y A. x ( ph -> x = y ) <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( E* x ph <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	qed prop 1 = step 3 ;
}

theorem mo4f (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) ;
}

proof of mo4f {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm mo3 (step 1) |- ( E* x ph <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 3 : wff = thm sbie (hyp 1, hyp 2) |- ( [ y / x ] ph <-> ps ) ;
	step 4 : wff = thm anbi2i (step 3) |- ( ( ph /\ [ y / x ] ph ) <-> ( ph /\ ps ) ) ;
	step 5 : wff = thm imbi1i (step 4) |- ( ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( ( ph /\ ps ) -> x = y ) ) ;
	step 6 : wff = thm 2albii (step 5) |- ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) ;
	step 7 : wff = thm bitri (step 2, step 6) |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) ;
	qed prop 1 = step 7 ;
}

theorem mo4 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) ;
}

proof of mo4 {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm mo4f (step 1, hyp 1) |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) ;
	qed prop 1 = step 2 ;
}

theorem mobid (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E* x ps <-> E* x ch ) ) ;
}

proof of mobid {
	step 1 : wff = thm exbid (hyp 1, hyp 2) |- ( ph -> ( E. x ps <-> E. x ch ) ) ;
	step 2 : wff = thm eubid (hyp 1, hyp 2) |- ( ph -> ( E! x ps <-> E! x ch ) ) ;
	step 3 : wff = thm imbi12d (step 1, step 2) |- ( ph -> ( ( E. x ps -> E! x ps ) <-> ( E. x ch -> E! x ch ) ) ) ;
	step 4 : wff = def df-mo () |- ( E* x ps <-> ( E. x ps -> E! x ps ) ) ;
	step 5 : wff = def df-mo () |- ( E* x ch <-> ( E. x ch -> E! x ch ) ) ;
	step 6 : wff = thm 3bitr4g (step 3, step 4, step 5) |- ( ph -> ( E* x ps <-> E* x ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem mobii (ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ps <-> ch ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ps <-> E* x ch ) ;
}

proof of mobii {
	step 1 : wff = thm equid () |- x = x ;
	step 2 : wff = thm hbequid2 () |- ( x = x -> A. x x = x ) ;
	step 3 : wff = thm a1i (hyp 1) |- ( x = x -> ( ps <-> ch ) ) ;
	step 4 : wff = thm mobid (step 2, step 3) |- ( x = x -> ( E* x ps <-> E* x ch ) ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- ( E* x ps <-> E* x ch ) ;
	qed prop 1 = step 5 ;
}

theorem hbmo1 (ph : wff, x : set)  {
	prop 1 : wff = |- ( E* x ph -> A. x E* x ph ) ;
}

proof of hbmo1 {
	step 1 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 2 : wff = thm hbeu1 () |- ( E! x ph -> A. x E! x ph ) ;
	step 3 : wff = thm hbim (step 1, step 2) |- ( ( E. x ph -> E! x ph ) -> A. x ( E. x ph -> E! x ph ) ) ;
	step 4 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 5 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x E* x ph <-> A. x ( E. x ph -> E! x ph ) ) ;
	step 7 : wff = thm 3imtr4i (step 3, step 4, step 6) |- ( E* x ph -> A. x E* x ph ) ;
	qed prop 1 = step 7 ;
}

theorem hbmo (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E* y ph -> A. x E* y ph ) ;
}

proof of hbmo {
	step 1 : wff = thm hbex (hyp 1) |- ( E. y ph -> A. x E. y ph ) ;
	step 2 : wff = thm hbeu (hyp 1) |- ( E! y ph -> A. x E! y ph ) ;
	step 3 : wff = thm hbim (step 1, step 2) |- ( ( E. y ph -> E! y ph ) -> A. x ( E. y ph -> E! y ph ) ) ;
	step 4 : wff = def df-mo () |- ( E* y ph <-> ( E. y ph -> E! y ph ) ) ;
	step 5 : wff = def df-mo () |- ( E* y ph <-> ( E. y ph -> E! y ph ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x E* y ph <-> A. x ( E. y ph -> E! y ph ) ) ;
	step 7 : wff = thm 3imtr4i (step 3, step 4, step 6) |- ( E* y ph -> A. x E* y ph ) ;
	qed prop 1 = step 7 ;
}

theorem cbvmo (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ph <-> E* y ps ) ;
}

proof of cbvmo {
	step 1 : wff = thm cbvex (hyp 1, hyp 2, hyp 3) |- ( E. x ph <-> E. y ps ) ;
	step 2 : wff = thm cbveu (hyp 1, hyp 2, hyp 3) |- ( E! x ph <-> E! y ps ) ;
	step 3 : wff = thm imbi12i (step 1, step 2) |- ( ( E. x ph -> E! x ph ) <-> ( E. y ps -> E! y ps ) ) ;
	step 4 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 5 : wff = def df-mo () |- ( E* y ps <-> ( E. y ps -> E! y ps ) ) ;
	step 6 : wff = thm 3bitr4i (step 3, step 4, step 5) |- ( E* x ph <-> E* y ps ) ;
	qed prop 1 = step 6 ;
}

theorem eu5 (ph : wff, x : set)  {
	prop 1 : wff = |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) ;
}

proof of eu5 {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm eu3 (step 1) |- ( E! x ph <-> ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) ;
	step 3 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 4 : wff = thm mo2 (step 3) |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( E. x ph /\ E* x ph ) <-> ( E. x ph /\ E. y A. x ( ph -> x = y ) ) ) ;
	step 6 : wff = thm bitr4i (step 2, step 5) |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem eu4 (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> ( E. x ph /\ A. x A. y ( ( ph /\ ps ) -> x = y ) ) ) ;
}

proof of eu4 {
	step 1 : wff = thm eu5 () |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) ;
	step 2 : wff = thm mo4 (hyp 1) |- ( E* x ph <-> A. x A. y ( ( ph /\ ps ) -> x = y ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( E. x ph /\ E* x ph ) <-> ( E. x ph /\ A. x A. y ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E! x ph <-> ( E. x ph /\ A. x A. y ( ( ph /\ ps ) -> x = y ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem eumo (ph : wff, x : set)  {
	prop 1 : wff = |- ( E! x ph -> E* x ph ) ;
}

proof of eumo {
	step 1 : wff = thm eu5 () |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) ;
	step 2 : wff = thm pm3_27bi (step 1) |- ( E! x ph -> E* x ph ) ;
	qed prop 1 = step 2 ;
}

theorem eumoi (ph : wff, x : set)  {
	hyp 1 : wff = |- E! x ph ;
	-----------------------
	prop 1 : wff = |- E* x ph ;
}

proof of eumoi {
	step 1 : wff = thm eumo () |- ( E! x ph -> E* x ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- E* x ph ;
	qed prop 1 = step 2 ;
}

theorem exmoeu (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x ph <-> ( E* x ph -> E! x ph ) ) ;
}

proof of exmoeu {
	step 1 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( E* x ph -> ( E. x ph -> E! x ph ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( E. x ph -> ( E* x ph -> E! x ph ) ) ;
	step 4 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 5 : wff = thm biimpri (step 4) |- ( ( E. x ph -> E! x ph ) -> E* x ph ) ;
	step 6 : wff = thm euex () |- ( E! x ph -> E. x ph ) ;
	step 7 : wff = thm imim12i (step 5, step 6) |- ( ( E* x ph -> E! x ph ) -> ( ( E. x ph -> E! x ph ) -> E. x ph ) ) ;
	step 8 : wff = thm peirce () |- ( ( ( E. x ph -> E! x ph ) -> E. x ph ) -> E. x ph ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( ( E* x ph -> E! x ph ) -> E. x ph ) ;
	step 10 : wff = thm impbii (step 3, step 9) |- ( E. x ph <-> ( E* x ph -> E! x ph ) ) ;
	qed prop 1 = step 10 ;
}

theorem exmoeu2 (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x ph -> ( E* x ph <-> E! x ph ) ) ;
}

proof of exmoeu2 {
	step 1 : wff = thm eu5 () |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) ;
	step 2 : wff = thm baibr (step 1) |- ( E. x ph -> ( E* x ph <-> E! x ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem moabs (ph : wff, x : set)  {
	prop 1 : wff = |- ( E* x ph <-> ( E. x ph -> E* x ph ) ) ;
}

proof of moabs {
	step 1 : wff = thm pm5_4 () |- ( ( E. x ph -> ( E. x ph -> E! x ph ) ) <-> ( E. x ph -> E! x ph ) ) ;
	step 2 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( E. x ph -> E* x ph ) <-> ( E. x ph -> ( E. x ph -> E! x ph ) ) ) ;
	step 4 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 5 : wff = thm 3bitr4ri (step 1, step 3, step 4) |- ( E* x ph <-> ( E. x ph -> E* x ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem exmo (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x ph \/ E* x ph ) ;
}

proof of exmo {
	step 1 : wff = thm pm2_21 () |- ( -. E. x ph -> ( E. x ph -> E! x ph ) ) ;
	step 2 : wff = def df-mo () |- ( E* x ph <-> ( E. x ph -> E! x ph ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( -. E. x ph -> E* x ph ) ;
	step 4 : wff = thm orri (step 3) |- ( E. x ph \/ E* x ph ) ;
	qed prop 1 = step 4 ;
}

theorem immo (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) ;
}

proof of immo {
	var y : set;
	step 1 : wff = thm imim1 () |- ( ( ph -> ps ) -> ( ( ps -> x = y ) -> ( ph -> x = y ) ) ) ;
	step 2 : wff = thm 19_20ii (step 1) |- ( A. x ( ph -> ps ) -> ( A. x ( ps -> x = y ) -> A. x ( ph -> x = y ) ) ) ;
	step 3 : wff = thm 19_22dv (step 2) |- ( A. x ( ph -> ps ) -> ( E. y A. x ( ps -> x = y ) -> E. y A. x ( ph -> x = y ) ) ) ;
	step 4 : wff = axm ax-17 () |- ( ps -> A. y ps ) ;
	step 5 : wff = thm mo2 (step 4) |- ( E* x ps <-> E. y A. x ( ps -> x = y ) ) ;
	step 6 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 7 : wff = thm mo2 (step 6) |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) ;
	step 8 : wff = thm 3imtr4g (step 3, step 5, step 7) |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) ;
	qed prop 1 = step 8 ;
}

theorem immoi (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ps -> E* x ph ) ;
}

proof of immoi {
	step 1 : wff = thm immo () |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) ;
	step 2 : wff = thm mpg (step 1, hyp 1) |- ( E* x ps -> E* x ph ) ;
	qed prop 1 = step 2 ;
}

theorem moimv (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E* x ( ph -> ps ) -> ( ph -> E* x ps ) ) ;
}

proof of moimv {
	var y : set;
	step 1 : wff = axm ax-1 () |- ( ps -> ( ph -> ps ) ) ;
	step 2 : wff = thm a1i (step 1) |- ( ph -> ( ps -> ( ph -> ps ) ) ) ;
	step 3 : wff = thm imim1d (step 2) |- ( ph -> ( ( ( ph -> ps ) -> x = y ) -> ( ps -> x = y ) ) ) ;
	step 4 : wff = thm 19_20dv (step 3) |- ( ph -> ( A. x ( ( ph -> ps ) -> x = y ) -> A. x ( ps -> x = y ) ) ) ;
	step 5 : wff = thm 19_22dv (step 4) |- ( ph -> ( E. y A. x ( ( ph -> ps ) -> x = y ) -> E. y A. x ( ps -> x = y ) ) ) ;
	step 6 : wff = axm ax-17 () |- ( ( ph -> ps ) -> A. y ( ph -> ps ) ) ;
	step 7 : wff = thm mo2 (step 6) |- ( E* x ( ph -> ps ) <-> E. y A. x ( ( ph -> ps ) -> x = y ) ) ;
	step 8 : wff = axm ax-17 () |- ( ps -> A. y ps ) ;
	step 9 : wff = thm mo2 (step 8) |- ( E* x ps <-> E. y A. x ( ps -> x = y ) ) ;
	step 10 : wff = thm 3imtr4g (step 5, step 7, step 9) |- ( ph -> ( E* x ( ph -> ps ) -> E* x ps ) ) ;
	step 11 : wff = thm com12 (step 10) |- ( E* x ( ph -> ps ) -> ( ph -> E* x ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem euimmo (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( A. x ( ph -> ps ) -> ( E! x ps -> E* x ph ) ) ;
}

proof of euimmo {
	step 1 : wff = thm immo () |- ( A. x ( ph -> ps ) -> ( E* x ps -> E* x ph ) ) ;
	step 2 : wff = thm eumo () |- ( E! x ps -> E* x ps ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A. x ( ph -> ps ) -> ( E! x ps -> E* x ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem euim (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E! x ps -> E! x ph ) ) ;
}

proof of euim {
	step 1 : wff = thm euimmo () |- ( A. x ( ph -> ps ) -> ( E! x ps -> E* x ph ) ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E! x ps -> E* x ph ) ) ;
	step 3 : wff = thm exmoeu2 () |- ( E. x ph -> ( E* x ph <-> E! x ph ) ) ;
	step 4 : wff = thm adantr (step 3) |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E* x ph <-> E! x ph ) ) ;
	step 5 : wff = thm sylibd (step 2, step 4) |- ( ( E. x ph /\ A. x ( ph -> ps ) ) -> ( E! x ps -> E! x ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem moan (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E* x ph -> E* x ( ps /\ ph ) ) ;
}

proof of moan {
	step 1 : wff = thm pm3_27 () |- ( ( ps /\ ph ) -> ph ) ;
	step 2 : wff = thm immoi (step 1) |- ( E* x ph -> E* x ( ps /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem moani (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- E* x ph ;
	-----------------------
	prop 1 : wff = |- E* x ( ps /\ ph ) ;
}

proof of moani {
	step 1 : wff = thm moan () |- ( E* x ph -> E* x ( ps /\ ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- E* x ( ps /\ ph ) ;
	qed prop 1 = step 2 ;
}

theorem moor (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E* x ( ph \/ ps ) -> E* x ph ) ;
}

proof of moor {
	step 1 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 2 : wff = thm immoi (step 1) |- ( E* x ( ph \/ ps ) -> E* x ph ) ;
	qed prop 1 = step 2 ;
}

theorem mooran1 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E* x ph \/ E* x ps ) -> E* x ( ph /\ ps ) ) ;
}

proof of mooran1 {
	step 1 : wff = thm moan () |- ( E* x ph -> E* x ( ps /\ ph ) ) ;
	step 2 : wff = thm ancom () |- ( ( ps /\ ph ) <-> ( ph /\ ps ) ) ;
	step 3 : wff = thm mobii (step 2) |- ( E* x ( ps /\ ph ) <-> E* x ( ph /\ ps ) ) ;
	step 4 : wff = thm sylib (step 1, step 3) |- ( E* x ph -> E* x ( ph /\ ps ) ) ;
	step 5 : wff = thm moan () |- ( E* x ps -> E* x ( ph /\ ps ) ) ;
	step 6 : wff = thm jaoi (step 4, step 5) |- ( ( E* x ph \/ E* x ps ) -> E* x ( ph /\ ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem mooran2 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E* x ( ph \/ ps ) -> ( E* x ph /\ E* x ps ) ) ;
}

proof of mooran2 {
	step 1 : wff = thm moor () |- ( E* x ( ph \/ ps ) -> E* x ph ) ;
	step 2 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 3 : wff = thm mobii (step 2) |- ( E* x ( ph \/ ps ) <-> E* x ( ps \/ ph ) ) ;
	step 4 : wff = thm moor () |- ( E* x ( ps \/ ph ) -> E* x ps ) ;
	step 5 : wff = thm sylbi (step 3, step 4) |- ( E* x ( ph \/ ps ) -> E* x ps ) ;
	step 6 : wff = thm jca (step 1, step 5) |- ( E* x ( ph \/ ps ) -> ( E* x ph /\ E* x ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem moanim (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) ;
}

proof of moanim {
	var y : set;
	step 1 : wff = thm impexp () |- ( ( ( ph /\ ps ) -> x = y ) <-> ( ph -> ( ps -> x = y ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( ( ph /\ ps ) -> x = y ) <-> A. x ( ph -> ( ps -> x = y ) ) ) ;
	step 3 : wff = thm 19_21 (hyp 1) |- ( A. x ( ph -> ( ps -> x = y ) ) <-> ( ph -> A. x ( ps -> x = y ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x ( ( ph /\ ps ) -> x = y ) <-> ( ph -> A. x ( ps -> x = y ) ) ) ;
	step 5 : wff = thm exbii (step 4) |- ( E. y A. x ( ( ph /\ ps ) -> x = y ) <-> E. y ( ph -> A. x ( ps -> x = y ) ) ) ;
	step 6 : wff = axm ax-17 () |- ( ( ph /\ ps ) -> A. y ( ph /\ ps ) ) ;
	step 7 : wff = thm mo2 (step 6) |- ( E* x ( ph /\ ps ) <-> E. y A. x ( ( ph /\ ps ) -> x = y ) ) ;
	step 8 : wff = axm ax-17 () |- ( ps -> A. y ps ) ;
	step 9 : wff = thm mo2 (step 8) |- ( E* x ps <-> E. y A. x ( ps -> x = y ) ) ;
	step 10 : wff = thm imbi2i (step 9) |- ( ( ph -> E* x ps ) <-> ( ph -> E. y A. x ( ps -> x = y ) ) ) ;
	step 11 : wff = thm 19_37v () |- ( E. y ( ph -> A. x ( ps -> x = y ) ) <-> ( ph -> E. y A. x ( ps -> x = y ) ) ) ;
	step 12 : wff = thm bitr4i (step 10, step 11) |- ( ( ph -> E* x ps ) <-> E. y ( ph -> A. x ( ps -> x = y ) ) ) ;
	step 13 : wff = thm 3bitr4i (step 5, step 7, step 12) |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) ;
	qed prop 1 = step 13 ;
}

theorem euan (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) ;
}

proof of euan {
	step 1 : wff = thm 19_42 (hyp 1) |- ( E. x ( ph /\ ps ) <-> ( ph /\ E. x ps ) ) ;
	step 2 : wff = thm moanim (hyp 1) |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( ph /\ E* x ( ph /\ ps ) ) <-> ( ph /\ ( ph -> E* x ps ) ) ) ;
	step 4 : wff = thm abai () |- ( ( ph /\ E* x ps ) <-> ( ph /\ ( ph -> E* x ps ) ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( ph /\ E* x ( ph /\ ps ) ) <-> ( ph /\ E* x ps ) ) ;
	step 6 : wff = thm anbi12i (step 1, step 5) |- ( ( E. x ( ph /\ ps ) /\ ( ph /\ E* x ( ph /\ ps ) ) ) <-> ( ( ph /\ E. x ps ) /\ ( ph /\ E* x ps ) ) ) ;
	step 7 : wff = thm anass () |- ( ( ( E. x ( ph /\ ps ) /\ ph ) /\ E* x ( ph /\ ps ) ) <-> ( E. x ( ph /\ ps ) /\ ( ph /\ E* x ( ph /\ ps ) ) ) ) ;
	step 8 : wff = thm an4 () |- ( ( ( ph /\ ph ) /\ ( E. x ps /\ E* x ps ) ) <-> ( ( ph /\ E. x ps ) /\ ( ph /\ E* x ps ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 6, step 7, step 8) |- ( ( ( E. x ( ph /\ ps ) /\ ph ) /\ E* x ( ph /\ ps ) ) <-> ( ( ph /\ ph ) /\ ( E. x ps /\ E* x ps ) ) ) ;
	step 10 : wff = thm eu5 () |- ( E! x ( ph /\ ps ) <-> ( E. x ( ph /\ ps ) /\ E* x ( ph /\ ps ) ) ) ;
	step 11 : wff = thm anabs1 () |- ( ( ( ph /\ ps ) /\ ph ) <-> ( ph /\ ps ) ) ;
	step 12 : wff = thm exbii (step 11) |- ( E. x ( ( ph /\ ps ) /\ ph ) <-> E. x ( ph /\ ps ) ) ;
	step 13 : wff = thm 19_41 (hyp 1) |- ( E. x ( ( ph /\ ps ) /\ ph ) <-> ( E. x ( ph /\ ps ) /\ ph ) ) ;
	step 14 : wff = thm bitr3i (step 12, step 13) |- ( E. x ( ph /\ ps ) <-> ( E. x ( ph /\ ps ) /\ ph ) ) ;
	step 15 : wff = thm anbi1i (step 14) |- ( ( E. x ( ph /\ ps ) /\ E* x ( ph /\ ps ) ) <-> ( ( E. x ( ph /\ ps ) /\ ph ) /\ E* x ( ph /\ ps ) ) ) ;
	step 16 : wff = thm bitri (step 10, step 15) |- ( E! x ( ph /\ ps ) <-> ( ( E. x ( ph /\ ps ) /\ ph ) /\ E* x ( ph /\ ps ) ) ) ;
	step 17 : wff = thm pm4_24 () |- ( ph <-> ( ph /\ ph ) ) ;
	step 18 : wff = thm eu5 () |- ( E! x ps <-> ( E. x ps /\ E* x ps ) ) ;
	step 19 : wff = thm anbi12i (step 17, step 18) |- ( ( ph /\ E! x ps ) <-> ( ( ph /\ ph ) /\ ( E. x ps /\ E* x ps ) ) ) ;
	step 20 : wff = thm 3bitr4i (step 9, step 16, step 19) |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) ;
	qed prop 1 = step 20 ;
}

theorem moanimv (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) ;
}

proof of moanimv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm moanim (step 1) |- ( E* x ( ph /\ ps ) <-> ( ph -> E* x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem moaneu (ph : wff, x : set)  {
	prop 1 : wff = |- E* x ( ph /\ E! x ph ) ;
}

proof of moaneu {
	step 1 : wff = thm eumo () |- ( E! x ph -> E* x ph ) ;
	step 2 : wff = thm hbeu1 () |- ( E! x ph -> A. x E! x ph ) ;
	step 3 : wff = thm moanim (step 2) |- ( E* x ( E! x ph /\ ph ) <-> ( E! x ph -> E* x ph ) ) ;
	step 4 : wff = thm mpbir (step 1, step 3) |- E* x ( E! x ph /\ ph ) ;
	step 5 : wff = thm ancom () |- ( ( ph /\ E! x ph ) <-> ( E! x ph /\ ph ) ) ;
	step 6 : wff = thm mobii (step 5) |- ( E* x ( ph /\ E! x ph ) <-> E* x ( E! x ph /\ ph ) ) ;
	step 7 : wff = thm mpbir (step 4, step 6) |- E* x ( ph /\ E! x ph ) ;
	qed prop 1 = step 7 ;
}

theorem moanmo (ph : wff, x : set)  {
	prop 1 : wff = |- E* x ( ph /\ E* x ph ) ;
}

proof of moanmo {
	step 1 : wff = thm id () |- ( E* x ph -> E* x ph ) ;
	step 2 : wff = thm hbmo1 () |- ( E* x ph -> A. x E* x ph ) ;
	step 3 : wff = thm moanim (step 2) |- ( E* x ( E* x ph /\ ph ) <-> ( E* x ph -> E* x ph ) ) ;
	step 4 : wff = thm mpbir (step 1, step 3) |- E* x ( E* x ph /\ ph ) ;
	step 5 : wff = thm ancom () |- ( ( ph /\ E* x ph ) <-> ( E* x ph /\ ph ) ) ;
	step 6 : wff = thm mobii (step 5) |- ( E* x ( ph /\ E* x ph ) <-> E* x ( E* x ph /\ ph ) ) ;
	step 7 : wff = thm mpbir (step 4, step 6) |- E* x ( ph /\ E* x ph ) ;
	qed prop 1 = step 7 ;
}

theorem euanv (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) ;
}

proof of euanv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm euan (step 1) |- ( E! x ( ph /\ ps ) <-> ( ph /\ E! x ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem mopick (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
}

proof of mopick {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( ( ph /\ ps ) -> A. y ( ph /\ ps ) ) ;
	step 2 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 3 : wff = thm hbs1 () |- ( [ y / x ] ps -> A. x [ y / x ] ps ) ;
	step 4 : wff = thm hban (step 2, step 3) |- ( ( [ y / x ] ph /\ [ y / x ] ps ) -> A. x ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	step 5 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 6 : wff = thm sbequ12 () |- ( x = y -> ( ps <-> [ y / x ] ps ) ) ;
	step 7 : wff = thm anbi12d (step 5, step 6) |- ( x = y -> ( ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ) ;
	step 8 : wff = thm cbvex (step 1, step 4, step 7) |- ( E. x ( ph /\ ps ) <-> E. y ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	step 9 : wff = thm sbequ2 () |- ( x = y -> ( [ y / x ] ps -> ps ) ) ;
	step 10 : wff = thm imim2i (step 9) |- ( ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ( ph /\ [ y / x ] ph ) -> ( [ y / x ] ps -> ps ) ) ) ;
	step 11 : wff = thm exp3a (step 10) |- ( ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ph -> ( [ y / x ] ph -> ( [ y / x ] ps -> ps ) ) ) ) ;
	step 12 : wff = thm com4t (step 11) |- ( [ y / x ] ph -> ( [ y / x ] ps -> ( ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ph -> ps ) ) ) ) ;
	step 13 : wff = thm imp (step 12) |- ( ( [ y / x ] ph /\ [ y / x ] ps ) -> ( ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ph -> ps ) ) ) ;
	step 14 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 15 : wff = thm mo3 (step 14) |- ( E* x ph <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 16 : wff = axm ax-4 () |- ( A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 17 : wff = thm a4s (step 16) |- ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 18 : wff = thm sylbi (step 15, step 17) |- ( E* x ph -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 19 : wff = thm syl5 (step 13, step 18) |- ( ( [ y / x ] ph /\ [ y / x ] ps ) -> ( E* x ph -> ( ph -> ps ) ) ) ;
	step 20 : wff = thm 19_23aiv (step 19) |- ( E. y ( [ y / x ] ph /\ [ y / x ] ps ) -> ( E* x ph -> ( ph -> ps ) ) ) ;
	step 21 : wff = thm sylbi (step 8, step 20) |- ( E. x ( ph /\ ps ) -> ( E* x ph -> ( ph -> ps ) ) ) ;
	step 22 : wff = thm impcom (step 21) |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 22 ;
}

theorem eupick (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
}

proof of eupick {
	step 1 : wff = thm mopick () |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm eumo () |- ( E! x ph -> E* x ph ) ;
	step 3 : wff = thm sylan (step 1, step 2) |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem eupicka (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> A. x ( ph -> ps ) ) ;
}

proof of eupicka {
	step 1 : wff = thm hbeu1 () |- ( E! x ph -> A. x E! x ph ) ;
	step 2 : wff = thm hbe1 () |- ( E. x ( ph /\ ps ) -> A. x E. x ( ph /\ ps ) ) ;
	step 3 : wff = thm hban (step 1, step 2) |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> A. x ( E! x ph /\ E. x ( ph /\ ps ) ) ) ;
	step 4 : wff = thm eupick () |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 5 : wff = thm 19_21ai (step 3, step 4) |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> A. x ( ph -> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem eupickb (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) -> ( ph <-> ps ) ) ;
}

proof of eupickb {
	step 1 : wff = thm eupick () |- ( ( E! x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 2 : wff = thm 3adant2 (step 1) |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 3 : wff = thm 3simpc () |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) -> ( E! x ps /\ E. x ( ph /\ ps ) ) ) ;
	step 4 : wff = thm pm3_22 () |- ( ( ph /\ ps ) -> ( ps /\ ph ) ) ;
	step 5 : wff = thm 19_22i (step 4) |- ( E. x ( ph /\ ps ) -> E. x ( ps /\ ph ) ) ;
	step 6 : wff = thm anim2i (step 5) |- ( ( E! x ps /\ E. x ( ph /\ ps ) ) -> ( E! x ps /\ E. x ( ps /\ ph ) ) ) ;
	step 7 : wff = thm eupick () |- ( ( E! x ps /\ E. x ( ps /\ ph ) ) -> ( ps -> ph ) ) ;
	step 8 : wff = thm 3syl (step 3, step 6, step 7) |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) -> ( ps -> ph ) ) ;
	step 9 : wff = thm impbid (step 2, step 8) |- ( ( E! x ph /\ E! x ps /\ E. x ( ph /\ ps ) ) -> ( ph <-> ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem mopick2 (ph : wff, ps : wff, ch : wff, x : set)  {
	prop 1 : wff = |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> E. x ( ph /\ ps /\ ch ) ) ;
}

proof of mopick2 {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm 19_22i (step 1) |- ( E. x ( ph /\ ps ) -> E. x ph ) ;
	step 3 : wff = thm 3ad2ant2 (step 2) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> E. x ph ) ;
	step 4 : wff = thm hbmo1 () |- ( E* x ph -> A. x E* x ph ) ;
	step 5 : wff = thm hbe1 () |- ( E. x ( ph /\ ps ) -> A. x E. x ( ph /\ ps ) ) ;
	step 6 : wff = thm hbe1 () |- ( E. x ( ph /\ ch ) -> A. x E. x ( ph /\ ch ) ) ;
	step 7 : wff = thm hb3an (step 4, step 5, step 6) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> A. x ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) ) ;
	step 8 : wff = thm mopick () |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 9 : wff = thm mopick () |- ( ( E* x ph /\ E. x ( ph /\ ch ) ) -> ( ph -> ch ) ) ;
	step 10 : wff = thm anim12i (step 8, step 9) |- ( ( ( E* x ph /\ E. x ( ph /\ ps ) ) /\ ( E* x ph /\ E. x ( ph /\ ch ) ) ) -> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
	step 11 : wff = thm 3anass () |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) <-> ( E* x ph /\ ( E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) ) ) ;
	step 12 : wff = thm anandi () |- ( ( E* x ph /\ ( E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) ) <-> ( ( E* x ph /\ E. x ( ph /\ ps ) ) /\ ( E* x ph /\ E. x ( ph /\ ch ) ) ) ) ;
	step 13 : wff = thm bitri (step 11, step 12) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) <-> ( ( E* x ph /\ E. x ( ph /\ ps ) ) /\ ( E* x ph /\ E. x ( ph /\ ch ) ) ) ) ;
	step 14 : wff = thm jcab () |- ( ( ph -> ( ps /\ ch ) ) <-> ( ( ph -> ps ) /\ ( ph -> ch ) ) ) ;
	step 15 : wff = thm 3imtr4i (step 10, step 13, step 14) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> ( ph -> ( ps /\ ch ) ) ) ;
	step 16 : wff = thm ancld (step 15) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> ( ph -> ( ph /\ ( ps /\ ch ) ) ) ) ;
	step 17 : wff = thm 3anass () |- ( ( ph /\ ps /\ ch ) <-> ( ph /\ ( ps /\ ch ) ) ) ;
	step 18 : wff = thm syl6ibr (step 16, step 17) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> ( ph -> ( ph /\ ps /\ ch ) ) ) ;
	step 19 : wff = thm 19_22d (step 7, step 18) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> ( E. x ph -> E. x ( ph /\ ps /\ ch ) ) ) ;
	step 20 : wff = thm mpd (step 3, step 19) |- ( ( E* x ph /\ E. x ( ph /\ ps ) /\ E. x ( ph /\ ch ) ) -> E. x ( ph /\ ps /\ ch ) ) ;
	qed prop 1 = step 20 ;
}

theorem euor2 (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( -. E. x ph -> ( E! x ( ph \/ ps ) <-> E! x ps ) ) ;
}

proof of euor2 {
	step 1 : wff = thm euex () |- ( E! x ( ph \/ ps ) -> E. x ( ph \/ ps ) ) ;
	step 2 : wff = thm 19_43 () |- ( E. x ( ph \/ ps ) <-> ( E. x ph \/ E. x ps ) ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( E! x ( ph \/ ps ) -> ( E. x ph \/ E. x ps ) ) ;
	step 4 : wff = thm ord (step 3) |- ( E! x ( ph \/ ps ) -> ( -. E. x ph -> E. x ps ) ) ;
	step 5 : wff = thm com12 (step 4) |- ( -. E. x ph -> ( E! x ( ph \/ ps ) -> E. x ps ) ) ;
	step 6 : wff = thm eumo () |- ( E! x ( ph \/ ps ) -> E* x ( ph \/ ps ) ) ;
	step 7 : wff = thm orcom () |- ( ( ph \/ ps ) <-> ( ps \/ ph ) ) ;
	step 8 : wff = thm mobii (step 7) |- ( E* x ( ph \/ ps ) <-> E* x ( ps \/ ph ) ) ;
	step 9 : wff = thm moor () |- ( E* x ( ps \/ ph ) -> E* x ps ) ;
	step 10 : wff = thm sylbi (step 8, step 9) |- ( E* x ( ph \/ ps ) -> E* x ps ) ;
	step 11 : wff = thm syl (step 6, step 10) |- ( E! x ( ph \/ ps ) -> E* x ps ) ;
	step 12 : wff = thm a1i (step 11) |- ( -. E. x ph -> ( E! x ( ph \/ ps ) -> E* x ps ) ) ;
	step 13 : wff = thm jcad (step 5, step 12) |- ( -. E. x ph -> ( E! x ( ph \/ ps ) -> ( E. x ps /\ E* x ps ) ) ) ;
	step 14 : wff = thm eu5 () |- ( E! x ps <-> ( E. x ps /\ E* x ps ) ) ;
	step 15 : wff = thm syl6ibr (step 13, step 14) |- ( -. E. x ph -> ( E! x ( ph \/ ps ) -> E! x ps ) ) ;
	step 16 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 17 : wff = thm euor (step 16) |- ( ( -. E. x ph /\ E! x ps ) -> E! x ( E. x ph \/ ps ) ) ;
	step 18 : wff = thm euex () |- ( E! x ps -> E. x ps ) ;
	step 19 : wff = thm olc () |- ( ps -> ( ph \/ ps ) ) ;
	step 20 : wff = thm 19_22i (step 19) |- ( E. x ps -> E. x ( ph \/ ps ) ) ;
	step 21 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 22 : wff = thm orim1i (step 21) |- ( ( ph \/ ps ) -> ( E. x ph \/ ps ) ) ;
	step 23 : wff = axm ax-gen (step 22) |- A. x ( ( ph \/ ps ) -> ( E. x ph \/ ps ) ) ;
	step 24 : wff = thm euim () |- ( ( E. x ( ph \/ ps ) /\ A. x ( ( ph \/ ps ) -> ( E. x ph \/ ps ) ) ) -> ( E! x ( E. x ph \/ ps ) -> E! x ( ph \/ ps ) ) ) ;
	step 25 : wff = thm mpan2 (step 23, step 24) |- ( E. x ( ph \/ ps ) -> ( E! x ( E. x ph \/ ps ) -> E! x ( ph \/ ps ) ) ) ;
	step 26 : wff = thm 3syl (step 18, step 20, step 25) |- ( E! x ps -> ( E! x ( E. x ph \/ ps ) -> E! x ( ph \/ ps ) ) ) ;
	step 27 : wff = thm adantl (step 26) |- ( ( -. E. x ph /\ E! x ps ) -> ( E! x ( E. x ph \/ ps ) -> E! x ( ph \/ ps ) ) ) ;
	step 28 : wff = thm mpd (step 17, step 27) |- ( ( -. E. x ph /\ E! x ps ) -> E! x ( ph \/ ps ) ) ;
	step 29 : wff = thm ex (step 28) |- ( -. E. x ph -> ( E! x ps -> E! x ( ph \/ ps ) ) ) ;
	step 30 : wff = thm impbid (step 15, step 29) |- ( -. E. x ph -> ( E! x ( ph \/ ps ) <-> E! x ps ) ) ;
	qed prop 1 = step 30 ;
}

theorem moexex (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) ;
}

proof of moexex {
	step 1 : wff = thm hbmo1 () |- ( E* x ph -> A. x E* x ph ) ;
	step 2 : wff = thm hba1 () |- ( A. x E* y ps -> A. x A. x E* y ps ) ;
	step 3 : wff = thm hbe1 () |- ( E. x ( ph /\ ps ) -> A. x E. x ( ph /\ ps ) ) ;
	step 4 : wff = thm hbmo (step 3) |- ( E* y E. x ( ph /\ ps ) -> A. x E* y E. x ( ph /\ ps ) ) ;
	step 5 : wff = thm hbim (step 2, step 4) |- ( ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) -> A. x ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ;
	step 6 : wff = thm hbim (step 1, step 5) |- ( ( E* x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) -> A. x ( E* x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ) ;
	step 7 : wff = thm hbmo (hyp 1) |- ( E* x ph -> A. y E* x ph ) ;
	step 8 : wff = thm mopick () |- ( ( E* x ph /\ E. x ( ph /\ ps ) ) -> ( ph -> ps ) ) ;
	step 9 : wff = thm ex (step 8) |- ( E* x ph -> ( E. x ( ph /\ ps ) -> ( ph -> ps ) ) ) ;
	step 10 : wff = thm com3r (step 9) |- ( ph -> ( E* x ph -> ( E. x ( ph /\ ps ) -> ps ) ) ) ;
	step 11 : wff = thm 19_21ad (hyp 1, step 7, step 10) |- ( ph -> ( E* x ph -> A. y ( E. x ( ph /\ ps ) -> ps ) ) ) ;
	step 12 : wff = thm immo () |- ( A. y ( E. x ( ph /\ ps ) -> ps ) -> ( E* y ps -> E* y E. x ( ph /\ ps ) ) ) ;
	step 13 : wff = thm a4sd (step 12) |- ( A. y ( E. x ( ph /\ ps ) -> ps ) -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ;
	step 14 : wff = thm syl6 (step 11, step 13) |- ( ph -> ( E* x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ) ;
	step 15 : wff = thm 19_23ai (step 6, step 14) |- ( E. x ph -> ( E* x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ) ;
	step 16 : wff = thm hbex (hyp 1) |- ( E. x ph -> A. y E. x ph ) ;
	step 17 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 18 : wff = thm 19_22i (step 17) |- ( E. x ( ph /\ ps ) -> E. x ph ) ;
	step 19 : wff = thm 19_23ai (step 16, step 18) |- ( E. y E. x ( ph /\ ps ) -> E. x ph ) ;
	step 20 : wff = thm con3i (step 19) |- ( -. E. x ph -> -. E. y E. x ( ph /\ ps ) ) ;
	step 21 : wff = thm exmo () |- ( E. y E. x ( ph /\ ps ) \/ E* y E. x ( ph /\ ps ) ) ;
	step 22 : wff = thm ori (step 21) |- ( -. E. y E. x ( ph /\ ps ) -> E* y E. x ( ph /\ ps ) ) ;
	step 23 : wff = thm syl (step 20, step 22) |- ( -. E. x ph -> E* y E. x ( ph /\ ps ) ) ;
	step 24 : wff = thm a1d (step 23) |- ( -. E. x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ;
	step 25 : wff = thm a1d (step 24) |- ( -. E. x ph -> ( E* x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ) ;
	step 26 : wff = thm pm2_61i (step 15, step 25) |- ( E* x ph -> ( A. x E* y ps -> E* y E. x ( ph /\ ps ) ) ) ;
	step 27 : wff = thm imp (step 26) |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) ;
	qed prop 1 = step 27 ;
}

theorem moexexv (ph : wff, ps : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) ;
}

proof of moexexv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm moexex (step 1) |- ( ( E* x ph /\ A. x E* y ps ) -> E* y E. x ( ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem 2moex (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E* x E. y ph -> A. y E* x ph ) ;
}

proof of 2moex {
	step 1 : wff = thm hbe1 () |- ( E. y ph -> A. y E. y ph ) ;
	step 2 : wff = thm hbmo (step 1) |- ( E* x E. y ph -> A. y E* x E. y ph ) ;
	step 3 : wff = thm 19_8a () |- ( ph -> E. y ph ) ;
	step 4 : wff = thm immoi (step 3) |- ( E* x E. y ph -> E* x ph ) ;
	step 5 : wff = thm 19_21ai (step 2, step 4) |- ( E* x E. y ph -> A. y E* x ph ) ;
	qed prop 1 = step 5 ;
}

theorem 2euex (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E! x E. y ph -> E. y E! x ph ) ;
}

proof of 2euex {
	step 1 : wff = thm eu5 () |- ( E! x E. y ph <-> ( E. x E. y ph /\ E* x E. y ph ) ) ;
	step 2 : wff = thm hbe1 () |- ( E. y ph -> A. y E. y ph ) ;
	step 3 : wff = thm hbmo (step 2) |- ( E* x E. y ph -> A. y E* x E. y ph ) ;
	step 4 : wff = thm 19_41 (step 3) |- ( E. y ( E. x ph /\ E* x E. y ph ) <-> ( E. y E. x ph /\ E* x E. y ph ) ) ;
	step 5 : wff = thm biimpri (step 4) |- ( ( E. y E. x ph /\ E* x E. y ph ) -> E. y ( E. x ph /\ E* x E. y ph ) ) ;
	step 6 : wff = thm excom () |- ( E. x E. y ph <-> E. y E. x ph ) ;
	step 7 : wff = thm sylanb (step 5, step 6) |- ( ( E. x E. y ph /\ E* x E. y ph ) -> E. y ( E. x ph /\ E* x E. y ph ) ) ;
	step 8 : wff = thm 2moex () |- ( E* x E. y ph -> A. y E* x ph ) ;
	step 9 : wff = thm 19_21bi (step 8) |- ( E* x E. y ph -> E* x ph ) ;
	step 10 : wff = thm anim2i (step 9) |- ( ( E. x ph /\ E* x E. y ph ) -> ( E. x ph /\ E* x ph ) ) ;
	step 11 : wff = thm eu5 () |- ( E! x ph <-> ( E. x ph /\ E* x ph ) ) ;
	step 12 : wff = thm sylibr (step 10, step 11) |- ( ( E. x ph /\ E* x E. y ph ) -> E! x ph ) ;
	step 13 : wff = thm 19_22i (step 12) |- ( E. y ( E. x ph /\ E* x E. y ph ) -> E. y E! x ph ) ;
	step 14 : wff = thm syl (step 7, step 13) |- ( ( E. x E. y ph /\ E* x E. y ph ) -> E. y E! x ph ) ;
	step 15 : wff = thm sylbi (step 1, step 14) |- ( E! x E. y ph -> E. y E! x ph ) ;
	qed prop 1 = step 15 ;
}

theorem 2eumo (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E! x E* y ph -> E* x E! y ph ) ;
}

proof of 2eumo {
	step 1 : wff = thm euimmo () |- ( A. x ( E! y ph -> E* y ph ) -> ( E! x E* y ph -> E* x E! y ph ) ) ;
	step 2 : wff = thm eumo () |- ( E! y ph -> E* y ph ) ;
	step 3 : wff = thm mpg (step 1, step 2) |- ( E! x E* y ph -> E* x E! y ph ) ;
	qed prop 1 = step 3 ;
}

theorem 2eu2ex (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E! x E! y ph -> E. x E. y ph ) ;
}

proof of 2eu2ex {
	step 1 : wff = thm euex () |- ( E! x E! y ph -> E. x E! y ph ) ;
	step 2 : wff = thm euex () |- ( E! y ph -> E. y ph ) ;
	step 3 : wff = thm 19_22i (step 2) |- ( E. x E! y ph -> E. x E. y ph ) ;
	step 4 : wff = thm syl (step 1, step 3) |- ( E! x E! y ph -> E. x E. y ph ) ;
	qed prop 1 = step 4 ;
}

theorem 2moswap (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) ;
}

proof of 2moswap {
	step 1 : wff = thm hbe1 () |- ( E. y ph -> A. y E. y ph ) ;
	step 2 : wff = thm moexex (step 1) |- ( ( E* x E. y ph /\ A. x E* y ph ) -> E* y E. x ( E. y ph /\ ph ) ) ;
	step 3 : wff = thm expcom (step 2) |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ( E. y ph /\ ph ) ) ) ;
	step 4 : wff = thm 19_8a () |- ( ph -> E. y ph ) ;
	step 5 : wff = thm pm4_71ri (step 4) |- ( ph <-> ( E. y ph /\ ph ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. x ph <-> E. x ( E. y ph /\ ph ) ) ;
	step 7 : wff = thm mobii (step 6) |- ( E* y E. x ph <-> E* y E. x ( E. y ph /\ ph ) ) ;
	step 8 : wff = thm syl6ibr (step 3, step 7) |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) ;
	qed prop 1 = step 8 ;
}

theorem 2euswap (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x E* y ph -> ( E! x E. y ph -> E! y E. x ph ) ) ;
}

proof of 2euswap {
	step 1 : wff = thm excomim () |- ( E. x E. y ph -> E. y E. x ph ) ;
	step 2 : wff = thm a1i (step 1) |- ( A. x E* y ph -> ( E. x E. y ph -> E. y E. x ph ) ) ;
	step 3 : wff = thm 2moswap () |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) ;
	step 4 : wff = thm anim12d (step 2, step 3) |- ( A. x E* y ph -> ( ( E. x E. y ph /\ E* x E. y ph ) -> ( E. y E. x ph /\ E* y E. x ph ) ) ) ;
	step 5 : wff = thm eu5 () |- ( E! x E. y ph <-> ( E. x E. y ph /\ E* x E. y ph ) ) ;
	step 6 : wff = thm eu5 () |- ( E! y E. x ph <-> ( E. y E. x ph /\ E* y E. x ph ) ) ;
	step 7 : wff = thm 3imtr4g (step 4, step 5, step 6) |- ( A. x E* y ph -> ( E! x E. y ph -> E! y E. x ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem 2exeu (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) ;
}

proof of 2exeu {
	step 1 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 2 : wff = thm hbmo (step 1) |- ( E* y E. x ph -> A. x E* y E. x ph ) ;
	step 3 : wff = thm 19_41 (step 2) |- ( E. x ( E. y ph /\ E* y E. x ph ) <-> ( E. x E. y ph /\ E* y E. x ph ) ) ;
	step 4 : wff = thm 19_8a () |- ( ph -> E. x ph ) ;
	step 5 : wff = thm immoi (step 4) |- ( E* y E. x ph -> E* y ph ) ;
	step 6 : wff = thm anim2i (step 5) |- ( ( E. y ph /\ E* y E. x ph ) -> ( E. y ph /\ E* y ph ) ) ;
	step 7 : wff = thm 19_22i (step 6) |- ( E. x ( E. y ph /\ E* y E. x ph ) -> E. x ( E. y ph /\ E* y ph ) ) ;
	step 8 : wff = thm sylbir (step 3, step 7) |- ( ( E. x E. y ph /\ E* y E. x ph ) -> E. x ( E. y ph /\ E* y ph ) ) ;
	step 9 : wff = thm excom () |- ( E. y E. x ph <-> E. x E. y ph ) ;
	step 10 : wff = thm sylanb (step 8, step 9) |- ( ( E. y E. x ph /\ E* y E. x ph ) -> E. x ( E. y ph /\ E* y ph ) ) ;
	step 11 : wff = thm pm3_26 () |- ( ( E. y ph /\ E* y ph ) -> E. y ph ) ;
	step 12 : wff = thm immoi (step 11) |- ( E* x E. y ph -> E* x ( E. y ph /\ E* y ph ) ) ;
	step 13 : wff = thm adantl (step 12) |- ( ( E. x E. y ph /\ E* x E. y ph ) -> E* x ( E. y ph /\ E* y ph ) ) ;
	step 14 : wff = thm anim12i (step 10, step 13) |- ( ( ( E. y E. x ph /\ E* y E. x ph ) /\ ( E. x E. y ph /\ E* x E. y ph ) ) -> ( E. x ( E. y ph /\ E* y ph ) /\ E* x ( E. y ph /\ E* y ph ) ) ) ;
	step 15 : wff = thm ancoms (step 14) |- ( ( ( E. x E. y ph /\ E* x E. y ph ) /\ ( E. y E. x ph /\ E* y E. x ph ) ) -> ( E. x ( E. y ph /\ E* y ph ) /\ E* x ( E. y ph /\ E* y ph ) ) ) ;
	step 16 : wff = thm eu5 () |- ( E! x E. y ph <-> ( E. x E. y ph /\ E* x E. y ph ) ) ;
	step 17 : wff = thm eu5 () |- ( E! y E. x ph <-> ( E. y E. x ph /\ E* y E. x ph ) ) ;
	step 18 : wff = thm anbi12i (step 16, step 17) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( ( E. x E. y ph /\ E* x E. y ph ) /\ ( E. y E. x ph /\ E* y E. x ph ) ) ) ;
	step 19 : wff = thm eu5 () |- ( E! x E! y ph <-> ( E. x E! y ph /\ E* x E! y ph ) ) ;
	step 20 : wff = thm eu5 () |- ( E! y ph <-> ( E. y ph /\ E* y ph ) ) ;
	step 21 : wff = thm exbii (step 20) |- ( E. x E! y ph <-> E. x ( E. y ph /\ E* y ph ) ) ;
	step 22 : wff = thm eu5 () |- ( E! y ph <-> ( E. y ph /\ E* y ph ) ) ;
	step 23 : wff = thm mobii (step 22) |- ( E* x E! y ph <-> E* x ( E. y ph /\ E* y ph ) ) ;
	step 24 : wff = thm anbi12i (step 21, step 23) |- ( ( E. x E! y ph /\ E* x E! y ph ) <-> ( E. x ( E. y ph /\ E* y ph ) /\ E* x ( E. y ph /\ E* y ph ) ) ) ;
	step 25 : wff = thm bitri (step 19, step 24) |- ( E! x E! y ph <-> ( E. x ( E. y ph /\ E* y ph ) /\ E* x ( E. y ph /\ E* y ph ) ) ) ;
	step 26 : wff = thm 3imtr4i (step 15, step 18, step 25) |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) ;
	qed prop 1 = step 26 ;
}

theorem 2mo (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
}

proof of 2mo {
	var v : set, u : set;
	step 1 : wff = thm equequ2 () |- ( v = z -> ( x = v <-> x = z ) ) ;
	step 2 : wff = thm equequ2 () |- ( u = w -> ( y = u <-> y = w ) ) ;
	step 3 : wff = thm bi2anan9 (step 1, step 2) |- ( ( v = z /\ u = w ) -> ( ( x = v /\ y = u ) <-> ( x = z /\ y = w ) ) ) ;
	step 4 : wff = thm imbi2d (step 3) |- ( ( v = z /\ u = w ) -> ( ( ph -> ( x = v /\ y = u ) ) <-> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 5 : wff = thm 2albidv (step 4) |- ( ( v = z /\ u = w ) -> ( A. x A. y ( ph -> ( x = v /\ y = u ) ) <-> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 6 : wff = thm cbvex2v (step 5) |- ( E. v E. u A. x A. y ( ph -> ( x = v /\ y = u ) ) <-> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 7 : wff = axm ax-17 () |- ( ( ph -> ( x = v /\ y = u ) ) -> A. z ( ph -> ( x = v /\ y = u ) ) ) ;
	step 8 : wff = axm ax-17 () |- ( ( ph -> ( x = v /\ y = u ) ) -> A. w ( ph -> ( x = v /\ y = u ) ) ) ;
	step 9 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 10 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. x ( z = v /\ w = u ) ) ;
	step 11 : wff = thm hbim (step 9, step 10) |- ( ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. x ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 12 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 13 : wff = thm hbsb (step 12) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 14 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. y ( z = v /\ w = u ) ) ;
	step 15 : wff = thm hbim (step 13, step 14) |- ( ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. y ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 16 : wff = thm sbequ12 () |- ( y = w -> ( ph <-> [ w / y ] ph ) ) ;
	step 17 : wff = thm sbequ12 () |- ( x = z -> ( [ w / y ] ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 18 : wff = thm sylan9bbr (step 16, step 17) |- ( ( x = z /\ y = w ) -> ( ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 19 : wff = thm equequ1 () |- ( x = z -> ( x = v <-> z = v ) ) ;
	step 20 : wff = thm equequ1 () |- ( y = w -> ( y = u <-> w = u ) ) ;
	step 21 : wff = thm bi2anan9 (step 19, step 20) |- ( ( x = z /\ y = w ) -> ( ( x = v /\ y = u ) <-> ( z = v /\ w = u ) ) ) ;
	step 22 : wff = thm imbi12d (step 18, step 21) |- ( ( x = z /\ y = w ) -> ( ( ph -> ( x = v /\ y = u ) ) <-> ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 23 : wff = thm cbval2 (step 7, step 8, step 11, step 15, step 22) |- ( A. x A. y ( ph -> ( x = v /\ y = u ) ) <-> A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 24 : wff = thm biimpi (step 23) |- ( A. x A. y ( ph -> ( x = v /\ y = u ) ) -> A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 25 : wff = thm ancli (step 24) |- ( A. x A. y ( ph -> ( x = v /\ y = u ) ) -> ( A. x A. y ( ph -> ( x = v /\ y = u ) ) /\ A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 26 : wff = thm alcom () |- ( A. y A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> A. z A. y A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 27 : wff = axm ax-17 () |- ( ( ph -> ( x = v /\ y = u ) ) -> A. w ( ph -> ( x = v /\ y = u ) ) ) ;
	step 28 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 29 : wff = thm hbsb (step 28) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 30 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. y ( z = v /\ w = u ) ) ;
	step 31 : wff = thm hbim (step 29, step 30) |- ( ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. y ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 32 : wff = thm aaan (step 27, step 31) |- ( A. y A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> ( A. y ( ph -> ( x = v /\ y = u ) ) /\ A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 33 : wff = thm albii (step 32) |- ( A. z A. y A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> A. z ( A. y ( ph -> ( x = v /\ y = u ) ) /\ A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 34 : wff = thm bitri (step 26, step 33) |- ( A. y A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> A. z ( A. y ( ph -> ( x = v /\ y = u ) ) /\ A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 35 : wff = thm albii (step 34) |- ( A. x A. y A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> A. x A. z ( A. y ( ph -> ( x = v /\ y = u ) ) /\ A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 36 : wff = axm ax-17 () |- ( A. y ( ph -> ( x = v /\ y = u ) ) -> A. z A. y ( ph -> ( x = v /\ y = u ) ) ) ;
	step 37 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 38 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. x ( z = v /\ w = u ) ) ;
	step 39 : wff = thm hbim (step 37, step 38) |- ( ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. x ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 40 : wff = thm hbal (step 39) |- ( A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. x A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 41 : wff = thm aaan (step 36, step 40) |- ( A. x A. z ( A. y ( ph -> ( x = v /\ y = u ) ) /\ A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> ( A. x A. y ( ph -> ( x = v /\ y = u ) ) /\ A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 42 : wff = thm bitri (step 35, step 41) |- ( A. x A. y A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) <-> ( A. x A. y ( ph -> ( x = v /\ y = u ) ) /\ A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 43 : wff = thm sylibr (step 25, step 42) |- ( A. x A. y ( ph -> ( x = v /\ y = u ) ) -> A. x A. y A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 44 : wff = thm prth () |- ( ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) -> ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( ( x = v /\ y = u ) /\ ( z = v /\ w = u ) ) ) ) ;
	step 45 : wff = thm equtr2 () |- ( ( x = v /\ z = v ) -> x = z ) ;
	step 46 : wff = thm equtr2 () |- ( ( y = u /\ w = u ) -> y = w ) ;
	step 47 : wff = thm anim12i (step 45, step 46) |- ( ( ( x = v /\ z = v ) /\ ( y = u /\ w = u ) ) -> ( x = z /\ y = w ) ) ;
	step 48 : wff = thm an4s (step 47) |- ( ( ( x = v /\ y = u ) /\ ( z = v /\ w = u ) ) -> ( x = z /\ y = w ) ) ;
	step 49 : wff = thm syl6 (step 44, step 48) |- ( ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) -> ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 50 : wff = thm 19_20i2 (step 49) |- ( A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) -> A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 51 : wff = thm 19_20i2 (step 50) |- ( A. x A. y A. z A. w ( ( ph -> ( x = v /\ y = u ) ) /\ ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) -> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 52 : wff = thm syl (step 43, step 51) |- ( A. x A. y ( ph -> ( x = v /\ y = u ) ) -> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 53 : wff = thm 19_23aivv (step 52) |- ( E. v E. u A. x A. y ( ph -> ( x = v /\ y = u ) ) -> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 54 : wff = thm sylbir (step 6, step 53) |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) -> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 55 : wff = thm alrot4 () |- ( A. x A. y A. z A. w ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) <-> A. z A. w A. x A. y ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 56 : wff = thm 19_20 () |- ( A. y ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) -> ( A. y [ z / x ] [ w / y ] ph -> A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 57 : wff = thm 19_20ii (step 56) |- ( A. x A. y ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) -> ( A. x A. y [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 58 : wff = thm 19_20i2 (step 57) |- ( A. z A. w A. x A. y ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) -> A. z A. w ( A. x A. y [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 59 : wff = thm sylbi (step 55, step 58) |- ( A. x A. y A. z A. w ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) -> A. z A. w ( A. x A. y [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 60 : wff = thm 19_22 () |- ( A. w ( A. x A. y [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) -> ( E. w A. x A. y [ z / x ] [ w / y ] ph -> E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 61 : wff = thm 19_20i (step 60) |- ( A. z A. w ( A. x A. y [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) -> A. z ( E. w A. x A. y [ z / x ] [ w / y ] ph -> E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 62 : wff = thm 19_22 () |- ( A. z ( E. w A. x A. y [ z / x ] [ w / y ] ph -> E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) -> ( E. z E. w A. x A. y [ z / x ] [ w / y ] ph -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 63 : wff = thm 3syl (step 59, step 61, step 62) |- ( A. x A. y A. z A. w ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) -> ( E. z E. w A. x A. y [ z / x ] [ w / y ] ph -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 64 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 65 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 66 : wff = thm hbsb (step 65) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 67 : wff = thm 19_21ai (step 64, step 66) |- ( [ z / x ] [ w / y ] ph -> A. x A. y [ z / x ] [ w / y ] ph ) ;
	step 68 : wff = thm 19_22i2 (step 67) |- ( E. z E. w [ z / x ] [ w / y ] ph -> E. z E. w A. x A. y [ z / x ] [ w / y ] ph ) ;
	step 69 : wff = thm syl5com (step 63, step 68) |- ( E. z E. w [ z / x ] [ w / y ] ph -> ( A. x A. y A. z A. w ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 70 : wff = thm impexp () |- ( ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> ( ph -> ( [ z / x ] [ w / y ] ph -> ( x = z /\ y = w ) ) ) ) ;
	step 71 : wff = thm bi2_04 () |- ( ( ph -> ( [ z / x ] [ w / y ] ph -> ( x = z /\ y = w ) ) ) <-> ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 72 : wff = thm bitri (step 70, step 71) |- ( ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 73 : wff = thm 2albii (step 72) |- ( A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> A. z A. w ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 74 : wff = thm 2albii (step 73) |- ( A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 75 : wff = thm syl5ib (step 69, step 74) |- ( E. z E. w [ z / x ] [ w / y ] ph -> ( A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 76 : wff = thm alnex () |- ( A. w -. [ z / x ] [ w / y ] ph <-> -. E. w [ z / x ] [ w / y ] ph ) ;
	step 77 : wff = thm albii (step 76) |- ( A. z A. w -. [ z / x ] [ w / y ] ph <-> A. z -. E. w [ z / x ] [ w / y ] ph ) ;
	step 78 : wff = thm alnex () |- ( A. z -. E. w [ z / x ] [ w / y ] ph <-> -. E. z E. w [ z / x ] [ w / y ] ph ) ;
	step 79 : wff = thm bitri (step 77, step 78) |- ( A. z A. w -. [ z / x ] [ w / y ] ph <-> -. E. z E. w [ z / x ] [ w / y ] ph ) ;
	step 80 : wff = axm ax-17 () |- ( -. ph -> A. z -. ph ) ;
	step 81 : wff = axm ax-17 () |- ( -. ph -> A. w -. ph ) ;
	step 82 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 83 : wff = thm hbn (step 82) |- ( -. [ z / x ] [ w / y ] ph -> A. x -. [ z / x ] [ w / y ] ph ) ;
	step 84 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 85 : wff = thm hbsb (step 84) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 86 : wff = thm hbn (step 85) |- ( -. [ z / x ] [ w / y ] ph -> A. y -. [ z / x ] [ w / y ] ph ) ;
	step 87 : wff = thm sbequ12 () |- ( y = w -> ( ph <-> [ w / y ] ph ) ) ;
	step 88 : wff = thm sbequ12 () |- ( x = z -> ( [ w / y ] ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 89 : wff = thm sylan9bbr (step 87, step 88) |- ( ( x = z /\ y = w ) -> ( ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 90 : wff = thm notbid (step 89) |- ( ( x = z /\ y = w ) -> ( -. ph <-> -. [ z / x ] [ w / y ] ph ) ) ;
	step 91 : wff = thm cbval2 (step 80, step 81, step 83, step 86, step 90) |- ( A. x A. y -. ph <-> A. z A. w -. [ z / x ] [ w / y ] ph ) ;
	step 92 : wff = thm biimpri (step 91) |- ( A. z A. w -. [ z / x ] [ w / y ] ph -> A. x A. y -. ph ) ;
	step 93 : wff = thm pm2_21 () |- ( -. ph -> ( ph -> ( x = z /\ y = w ) ) ) ;
	step 94 : wff = thm 19_20i2 (step 93) |- ( A. x A. y -. ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 95 : wff = thm 19_8a () |- ( E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 96 : wff = thm 19_23bi (step 95) |- ( A. x A. y ( ph -> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 97 : wff = thm 3syl (step 92, step 94, step 96) |- ( A. z A. w -. [ z / x ] [ w / y ] ph -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 98 : wff = thm sylbir (step 79, step 97) |- ( -. E. z E. w [ z / x ] [ w / y ] ph -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 99 : wff = thm a1d (step 98) |- ( -. E. z E. w [ z / x ] [ w / y ] ph -> ( A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 100 : wff = thm pm2_61i (step 75, step 99) |- ( A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 101 : wff = thm impbii (step 54, step 100) |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	qed prop 1 = step 101 ;
}

theorem 2mos (ph : wff, ps : wff, x : set, y : set, z : set, w : set)  {
	hyp 1 : wff = |- ( ( x = z /\ y = w ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) ;
}

proof of 2mos {
	step 1 : wff = thm 2mo () |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 4 : wff = thm sb19_21 (step 3) |- ( [ w / y ] ( x = z -> ph ) <-> ( x = z -> [ w / y ] ph ) ) ;
	step 5 : wff = axm ax-17 () |- ( ( x = z -> ps ) -> A. y ( x = z -> ps ) ) ;
	step 6 : wff = thm expcom (hyp 1) |- ( y = w -> ( x = z -> ( ph <-> ps ) ) ) ;
	step 7 : wff = thm pm5_74d (step 6) |- ( y = w -> ( ( x = z -> ph ) <-> ( x = z -> ps ) ) ) ;
	step 8 : wff = thm sbie (step 5, step 7) |- ( [ w / y ] ( x = z -> ph ) <-> ( x = z -> ps ) ) ;
	step 9 : wff = thm bitr3i (step 4, step 8) |- ( ( x = z -> [ w / y ] ph ) <-> ( x = z -> ps ) ) ;
	step 10 : wff = thm pm5_74ri (step 9) |- ( x = z -> ( [ w / y ] ph <-> ps ) ) ;
	step 11 : wff = thm sbie (step 2, step 10) |- ( [ z / x ] [ w / y ] ph <-> ps ) ;
	step 12 : wff = thm anbi2i (step 11) |- ( ( ph /\ [ z / x ] [ w / y ] ph ) <-> ( ph /\ ps ) ) ;
	step 13 : wff = thm imbi1i (step 12) |- ( ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) ;
	step 14 : wff = thm 2albii (step 13) |- ( A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) ;
	step 15 : wff = thm 2albii (step 14) |- ( A. x A. y A. z A. w ( ( ph /\ [ z / x ] [ w / y ] ph ) -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) ;
	step 16 : wff = thm bitri (step 1, step 15) |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y A. z A. w ( ( ph /\ ps ) -> ( x = z /\ y = w ) ) ) ;
	qed prop 1 = step 16 ;
}

theorem 2eu1 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x E* y ph -> ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
}

proof of 2eu1 {
	step 1 : wff = thm eu5 () |- ( E! x E! y ph <-> ( E. x E! y ph /\ E* x E! y ph ) ) ;
	step 2 : wff = thm eu5 () |- ( E! y ph <-> ( E. y ph /\ E* y ph ) ) ;
	step 3 : wff = thm exbii (step 2) |- ( E. x E! y ph <-> E. x ( E. y ph /\ E* y ph ) ) ;
	step 4 : wff = thm eu5 () |- ( E! y ph <-> ( E. y ph /\ E* y ph ) ) ;
	step 5 : wff = thm mobii (step 4) |- ( E* x E! y ph <-> E* x ( E. y ph /\ E* y ph ) ) ;
	step 6 : wff = thm anbi12i (step 3, step 5) |- ( ( E. x E! y ph /\ E* x E! y ph ) <-> ( E. x ( E. y ph /\ E* y ph ) /\ E* x ( E. y ph /\ E* y ph ) ) ) ;
	step 7 : wff = thm bitri (step 1, step 6) |- ( E! x E! y ph <-> ( E. x ( E. y ph /\ E* y ph ) /\ E* x ( E. y ph /\ E* y ph ) ) ) ;
	step 8 : wff = thm pm3_27bi (step 7) |- ( E! x E! y ph -> E* x ( E. y ph /\ E* y ph ) ) ;
	step 9 : wff = axm ax-4 () |- ( A. x E* y ph -> E* y ph ) ;
	step 10 : wff = thm anim2i (step 9) |- ( ( E. y ph /\ A. x E* y ph ) -> ( E. y ph /\ E* y ph ) ) ;
	step 11 : wff = thm ancoms (step 10) |- ( ( A. x E* y ph /\ E. y ph ) -> ( E. y ph /\ E* y ph ) ) ;
	step 12 : wff = thm immoi (step 11) |- ( E* x ( E. y ph /\ E* y ph ) -> E* x ( A. x E* y ph /\ E. y ph ) ) ;
	step 13 : wff = thm hba1 () |- ( A. x E* y ph -> A. x A. x E* y ph ) ;
	step 14 : wff = thm moanim (step 13) |- ( E* x ( A. x E* y ph /\ E. y ph ) <-> ( A. x E* y ph -> E* x E. y ph ) ) ;
	step 15 : wff = thm sylib (step 12, step 14) |- ( E* x ( E. y ph /\ E* y ph ) -> ( A. x E* y ph -> E* x E. y ph ) ) ;
	step 16 : wff = thm ancrd (step 15) |- ( E* x ( E. y ph /\ E* y ph ) -> ( A. x E* y ph -> ( E* x E. y ph /\ A. x E* y ph ) ) ) ;
	step 17 : wff = thm 2moswap () |- ( A. x E* y ph -> ( E* x E. y ph -> E* y E. x ph ) ) ;
	step 18 : wff = thm com12 (step 17) |- ( E* x E. y ph -> ( A. x E* y ph -> E* y E. x ph ) ) ;
	step 19 : wff = thm imdistani (step 18) |- ( ( E* x E. y ph /\ A. x E* y ph ) -> ( E* x E. y ph /\ E* y E. x ph ) ) ;
	step 20 : wff = thm syl6 (step 16, step 19) |- ( E* x ( E. y ph /\ E* y ph ) -> ( A. x E* y ph -> ( E* x E. y ph /\ E* y E. x ph ) ) ) ;
	step 21 : wff = thm syl (step 8, step 20) |- ( E! x E! y ph -> ( A. x E* y ph -> ( E* x E. y ph /\ E* y E. x ph ) ) ) ;
	step 22 : wff = thm 2eu2ex () |- ( E! x E! y ph -> E. x E. y ph ) ;
	step 23 : wff = thm 2eu2ex () |- ( E! x E! y ph -> E. x E. y ph ) ;
	step 24 : wff = thm excom () |- ( E. x E. y ph <-> E. y E. x ph ) ;
	step 25 : wff = thm sylib (step 23, step 24) |- ( E! x E! y ph -> E. y E. x ph ) ;
	step 26 : wff = thm jca (step 22, step 25) |- ( E! x E! y ph -> ( E. x E. y ph /\ E. y E. x ph ) ) ;
	step 27 : wff = thm jctild (step 21, step 26) |- ( E! x E! y ph -> ( A. x E* y ph -> ( ( E. x E. y ph /\ E. y E. x ph ) /\ ( E* x E. y ph /\ E* y E. x ph ) ) ) ) ;
	step 28 : wff = thm eu5 () |- ( E! x E. y ph <-> ( E. x E. y ph /\ E* x E. y ph ) ) ;
	step 29 : wff = thm eu5 () |- ( E! y E. x ph <-> ( E. y E. x ph /\ E* y E. x ph ) ) ;
	step 30 : wff = thm anbi12i (step 28, step 29) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( ( E. x E. y ph /\ E* x E. y ph ) /\ ( E. y E. x ph /\ E* y E. x ph ) ) ) ;
	step 31 : wff = thm an4 () |- ( ( ( E. x E. y ph /\ E* x E. y ph ) /\ ( E. y E. x ph /\ E* y E. x ph ) ) <-> ( ( E. x E. y ph /\ E. y E. x ph ) /\ ( E* x E. y ph /\ E* y E. x ph ) ) ) ;
	step 32 : wff = thm bitri (step 30, step 31) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( ( E. x E. y ph /\ E. y E. x ph ) /\ ( E* x E. y ph /\ E* y E. x ph ) ) ) ;
	step 33 : wff = thm syl6ibr (step 27, step 32) |- ( E! x E! y ph -> ( A. x E* y ph -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 34 : wff = thm com12 (step 33) |- ( A. x E* y ph -> ( E! x E! y ph -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 35 : wff = thm 2exeu () |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) ;
	step 36 : wff = thm impbid1 (step 34, step 35) |- ( A. x E* y ph -> ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	qed prop 1 = step 36 ;
}

theorem 2eu2 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E! y E. x ph -> ( E! x E! y ph <-> E! x E. y ph ) ) ;
}

proof of 2eu2 {
	step 1 : wff = thm eumo () |- ( E! y E. x ph -> E* y E. x ph ) ;
	step 2 : wff = thm 2moex () |- ( E* y E. x ph -> A. x E* y ph ) ;
	step 3 : wff = thm 2eu1 () |- ( A. x E* y ph -> ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 4 : wff = thm pm3_26 () |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E. y ph ) ;
	step 5 : wff = thm syl6bi (step 3, step 4) |- ( A. x E* y ph -> ( E! x E! y ph -> E! x E. y ph ) ) ;
	step 6 : wff = thm 3syl (step 1, step 2, step 5) |- ( E! y E. x ph -> ( E! x E! y ph -> E! x E. y ph ) ) ;
	step 7 : wff = thm 2exeu () |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) ;
	step 8 : wff = thm expcom (step 7) |- ( E! y E. x ph -> ( E! x E. y ph -> E! x E! y ph ) ) ;
	step 9 : wff = thm impbid (step 6, step 8) |- ( E! y E. x ph -> ( E! x E! y ph <-> E! x E. y ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem 2eu3 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( A. x A. y ( E* x ph \/ E* y ph ) -> ( ( E! x E! y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
}

proof of 2eu3 {
	step 1 : wff = thm hbmo1 () |- ( E* y ph -> A. y E* y ph ) ;
	step 2 : wff = thm 19_31 (step 1) |- ( A. y ( E* x ph \/ E* y ph ) <-> ( A. y E* x ph \/ E* y ph ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x A. y ( E* x ph \/ E* y ph ) <-> A. x ( A. y E* x ph \/ E* y ph ) ) ;
	step 4 : wff = thm hbmo1 () |- ( E* x ph -> A. x E* x ph ) ;
	step 5 : wff = thm hbal (step 4) |- ( A. y E* x ph -> A. x A. y E* x ph ) ;
	step 6 : wff = thm 19_32 (step 5) |- ( A. x ( A. y E* x ph \/ E* y ph ) <-> ( A. y E* x ph \/ A. x E* y ph ) ) ;
	step 7 : wff = thm bitri (step 3, step 6) |- ( A. x A. y ( E* x ph \/ E* y ph ) <-> ( A. y E* x ph \/ A. x E* y ph ) ) ;
	step 8 : wff = thm 2eu1 () |- ( A. y E* x ph -> ( E! y E! x ph <-> ( E! y E. x ph /\ E! x E. y ph ) ) ) ;
	step 9 : wff = thm biimpd (step 8) |- ( A. y E* x ph -> ( E! y E! x ph -> ( E! y E. x ph /\ E! x E. y ph ) ) ) ;
	step 10 : wff = thm ancom () |- ( ( E! y E. x ph /\ E! x E. y ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ;
	step 11 : wff = thm syl6ib (step 9, step 10) |- ( A. y E* x ph -> ( E! y E! x ph -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 12 : wff = thm adantld (step 11) |- ( A. y E* x ph -> ( ( E! x E! y ph /\ E! y E! x ph ) -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 13 : wff = thm 2eu1 () |- ( A. x E* y ph -> ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 14 : wff = thm biimpd (step 13) |- ( A. x E* y ph -> ( E! x E! y ph -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 15 : wff = thm adantrd (step 14) |- ( A. x E* y ph -> ( ( E! x E! y ph /\ E! y E! x ph ) -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 16 : wff = thm jaoi (step 12, step 15) |- ( ( A. y E* x ph \/ A. x E* y ph ) -> ( ( E! x E! y ph /\ E! y E! x ph ) -> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 17 : wff = thm 2exeu () |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! x E! y ph ) ;
	step 18 : wff = thm 2exeu () |- ( ( E! y E. x ph /\ E! x E. y ph ) -> E! y E! x ph ) ;
	step 19 : wff = thm ancoms (step 18) |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E! y E! x ph ) ;
	step 20 : wff = thm jca (step 17, step 19) |- ( ( E! x E. y ph /\ E! y E. x ph ) -> ( E! x E! y ph /\ E! y E! x ph ) ) ;
	step 21 : wff = thm impbid1 (step 16, step 20) |- ( ( A. y E* x ph \/ A. x E* y ph ) -> ( ( E! x E! y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 22 : wff = thm sylbi (step 7, step 21) |- ( A. x A. y ( E* x ph \/ E* y ph ) -> ( ( E! x E! y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	qed prop 1 = step 22 ;
}

theorem 2eu4 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
}

proof of 2eu4 {
	step 1 : wff = axm ax-17 () |- ( E. y ph -> A. z E. y ph ) ;
	step 2 : wff = thm eu3 (step 1) |- ( E! x E. y ph <-> ( E. x E. y ph /\ E. z A. x ( E. y ph -> x = z ) ) ) ;
	step 3 : wff = axm ax-17 () |- ( E. x ph -> A. w E. x ph ) ;
	step 4 : wff = thm eu3 (step 3) |- ( E! y E. x ph <-> ( E. y E. x ph /\ E. w A. y ( E. x ph -> y = w ) ) ) ;
	step 5 : wff = thm anbi12i (step 2, step 4) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( ( E. x E. y ph /\ E. z A. x ( E. y ph -> x = z ) ) /\ ( E. y E. x ph /\ E. w A. y ( E. x ph -> y = w ) ) ) ) ;
	step 6 : wff = thm an4 () |- ( ( ( E. x E. y ph /\ E. z A. x ( E. y ph -> x = z ) ) /\ ( E. y E. x ph /\ E. w A. y ( E. x ph -> y = w ) ) ) <-> ( ( E. x E. y ph /\ E. y E. x ph ) /\ ( E. z A. x ( E. y ph -> x = z ) /\ E. w A. y ( E. x ph -> y = w ) ) ) ) ;
	step 7 : wff = thm excom () |- ( E. y E. x ph <-> E. x E. y ph ) ;
	step 8 : wff = thm anbi2i (step 7) |- ( ( E. x E. y ph /\ E. y E. x ph ) <-> ( E. x E. y ph /\ E. x E. y ph ) ) ;
	step 9 : wff = thm anidm () |- ( ( E. x E. y ph /\ E. x E. y ph ) <-> E. x E. y ph ) ;
	step 10 : wff = thm bitri (step 8, step 9) |- ( ( E. x E. y ph /\ E. y E. x ph ) <-> E. x E. y ph ) ;
	step 11 : wff = thm hba1 () |- ( A. x A. y ( ph -> y = w ) -> A. x A. x A. y ( ph -> y = w ) ) ;
	step 12 : wff = thm 19_3 (step 11) |- ( A. x A. x A. y ( ph -> y = w ) <-> A. x A. y ( ph -> y = w ) ) ;
	step 13 : wff = thm anbi2i (step 12) |- ( ( A. x A. y ( ph -> x = z ) /\ A. x A. x A. y ( ph -> y = w ) ) <-> ( A. x A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 14 : wff = thm 19_26 () |- ( A. x ( A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) <-> ( A. x A. y ( ph -> x = z ) /\ A. x A. x A. y ( ph -> y = w ) ) ) ;
	step 15 : wff = thm jcab () |- ( ( ph -> ( x = z /\ y = w ) ) <-> ( ( ph -> x = z ) /\ ( ph -> y = w ) ) ) ;
	step 16 : wff = thm albii (step 15) |- ( A. y ( ph -> ( x = z /\ y = w ) ) <-> A. y ( ( ph -> x = z ) /\ ( ph -> y = w ) ) ) ;
	step 17 : wff = thm 19_26 () |- ( A. y ( ( ph -> x = z ) /\ ( ph -> y = w ) ) <-> ( A. y ( ph -> x = z ) /\ A. y ( ph -> y = w ) ) ) ;
	step 18 : wff = thm bitri (step 16, step 17) |- ( A. y ( ph -> ( x = z /\ y = w ) ) <-> ( A. y ( ph -> x = z ) /\ A. y ( ph -> y = w ) ) ) ;
	step 19 : wff = thm albii (step 18) |- ( A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x ( A. y ( ph -> x = z ) /\ A. y ( ph -> y = w ) ) ) ;
	step 20 : wff = thm 19_26 () |- ( A. x ( A. y ( ph -> x = z ) /\ A. y ( ph -> y = w ) ) <-> ( A. x A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 21 : wff = thm bitri (step 19, step 20) |- ( A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> ( A. x A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 22 : wff = thm 3bitr4ri (step 13, step 14, step 21) |- ( A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x ( A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 23 : wff = thm 19_26 () |- ( A. y ( A. y ( ph -> x = z ) /\ A. x ( ph -> y = w ) ) <-> ( A. y A. y ( ph -> x = z ) /\ A. y A. x ( ph -> y = w ) ) ) ;
	step 24 : wff = thm hba1 () |- ( A. y ( ph -> x = z ) -> A. y A. y ( ph -> x = z ) ) ;
	step 25 : wff = thm 19_3 (step 24) |- ( A. y A. y ( ph -> x = z ) <-> A. y ( ph -> x = z ) ) ;
	step 26 : wff = thm alcom () |- ( A. y A. x ( ph -> y = w ) <-> A. x A. y ( ph -> y = w ) ) ;
	step 27 : wff = thm anbi12i (step 25, step 26) |- ( ( A. y A. y ( ph -> x = z ) /\ A. y A. x ( ph -> y = w ) ) <-> ( A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 28 : wff = thm bitri (step 23, step 27) |- ( A. y ( A. y ( ph -> x = z ) /\ A. x ( ph -> y = w ) ) <-> ( A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 29 : wff = thm albii (step 28) |- ( A. x A. y ( A. y ( ph -> x = z ) /\ A. x ( ph -> y = w ) ) <-> A. x ( A. y ( ph -> x = z ) /\ A. x A. y ( ph -> y = w ) ) ) ;
	step 30 : wff = thm bitr4i (step 22, step 29) |- ( A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y ( A. y ( ph -> x = z ) /\ A. x ( ph -> y = w ) ) ) ;
	step 31 : wff = thm 19_23v () |- ( A. y ( ph -> x = z ) <-> ( E. y ph -> x = z ) ) ;
	step 32 : wff = thm 19_23v () |- ( A. x ( ph -> y = w ) <-> ( E. x ph -> y = w ) ) ;
	step 33 : wff = thm anbi12i (step 31, step 32) |- ( ( A. y ( ph -> x = z ) /\ A. x ( ph -> y = w ) ) <-> ( ( E. y ph -> x = z ) /\ ( E. x ph -> y = w ) ) ) ;
	step 34 : wff = thm 2albii (step 33) |- ( A. x A. y ( A. y ( ph -> x = z ) /\ A. x ( ph -> y = w ) ) <-> A. x A. y ( ( E. y ph -> x = z ) /\ ( E. x ph -> y = w ) ) ) ;
	step 35 : wff = thm hbe1 () |- ( E. y ph -> A. y E. y ph ) ;
	step 36 : wff = axm ax-17 () |- ( x = z -> A. y x = z ) ;
	step 37 : wff = thm hbim (step 35, step 36) |- ( ( E. y ph -> x = z ) -> A. y ( E. y ph -> x = z ) ) ;
	step 38 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 39 : wff = axm ax-17 () |- ( y = w -> A. x y = w ) ;
	step 40 : wff = thm hbim (step 38, step 39) |- ( ( E. x ph -> y = w ) -> A. x ( E. x ph -> y = w ) ) ;
	step 41 : wff = thm aaan (step 37, step 40) |- ( A. x A. y ( ( E. y ph -> x = z ) /\ ( E. x ph -> y = w ) ) <-> ( A. x ( E. y ph -> x = z ) /\ A. y ( E. x ph -> y = w ) ) ) ;
	step 42 : wff = thm 3bitri (step 30, step 34, step 41) |- ( A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> ( A. x ( E. y ph -> x = z ) /\ A. y ( E. x ph -> y = w ) ) ) ;
	step 43 : wff = thm 2exbii (step 42) |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> E. z E. w ( A. x ( E. y ph -> x = z ) /\ A. y ( E. x ph -> y = w ) ) ) ;
	step 44 : wff = thm eeanv () |- ( E. z E. w ( A. x ( E. y ph -> x = z ) /\ A. y ( E. x ph -> y = w ) ) <-> ( E. z A. x ( E. y ph -> x = z ) /\ E. w A. y ( E. x ph -> y = w ) ) ) ;
	step 45 : wff = thm bitr2i (step 43, step 44) |- ( ( E. z A. x ( E. y ph -> x = z ) /\ E. w A. y ( E. x ph -> y = w ) ) <-> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 46 : wff = thm anbi12i (step 10, step 45) |- ( ( ( E. x E. y ph /\ E. y E. x ph ) /\ ( E. z A. x ( E. y ph -> x = z ) /\ E. w A. y ( E. x ph -> y = w ) ) ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 47 : wff = thm 3bitri (step 5, step 6, step 46) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	qed prop 1 = step 47 ;
}

theorem 2eu5 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( ( E! x E! y ph /\ A. x E* y ph ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
}

proof of 2eu5 {
	step 1 : wff = thm 2eu1 () |- ( A. x E* y ph -> ( E! x E! y ph <-> ( E! x E. y ph /\ E! y E. x ph ) ) ) ;
	step 2 : wff = thm pm5_32ri (step 1) |- ( ( E! x E! y ph /\ A. x E* y ph ) <-> ( ( E! x E. y ph /\ E! y E. x ph ) /\ A. x E* y ph ) ) ;
	step 3 : wff = thm eumo () |- ( E! y E. x ph -> E* y E. x ph ) ;
	step 4 : wff = thm adantl (step 3) |- ( ( E! x E. y ph /\ E! y E. x ph ) -> E* y E. x ph ) ;
	step 5 : wff = thm 2moex () |- ( E* y E. x ph -> A. x E* y ph ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( ( E! x E. y ph /\ E! y E. x ph ) -> A. x E* y ph ) ;
	step 7 : wff = thm pm4_71i (step 6) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( ( E! x E. y ph /\ E! y E. x ph ) /\ A. x E* y ph ) ) ;
	step 8 : wff = thm 2eu4 () |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 9 : wff = thm 3bitr2i (step 2, step 7, step 8) |- ( ( E! x E! y ph /\ A. x E* y ph ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem 2eu6 (ph : wff, x : set, y : set, z : set, w : set)  {
	prop 1 : wff = |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) ;
}

proof of 2eu6 {
	var v : set, u : set;
	step 1 : wff = thm 2eu4 () |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 2 : wff = thm 19_29r2 () |- ( ( E. z E. w [ z / x ] [ w / y ] ph /\ A. z A. w A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) -> E. z E. w ( [ z / x ] [ w / y ] ph /\ A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ) ;
	step 3 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 4 : wff = axm ax-17 () |- ( ph -> A. w ph ) ;
	step 5 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 6 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 7 : wff = thm hbsb (step 6) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 8 : wff = thm sbequ12 () |- ( y = w -> ( ph <-> [ w / y ] ph ) ) ;
	step 9 : wff = thm sbequ12 () |- ( x = z -> ( [ w / y ] ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 10 : wff = thm sylan9bbr (step 8, step 9) |- ( ( x = z /\ y = w ) -> ( ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 11 : wff = thm cbvex2 (step 3, step 4, step 5, step 7, step 10) |- ( E. x E. y ph <-> E. z E. w [ z / x ] [ w / y ] ph ) ;
	step 12 : wff = thm equequ2 () |- ( z = v -> ( x = z <-> x = v ) ) ;
	step 13 : wff = thm equequ2 () |- ( w = u -> ( y = w <-> y = u ) ) ;
	step 14 : wff = thm bi2anan9 (step 12, step 13) |- ( ( z = v /\ w = u ) -> ( ( x = z /\ y = w ) <-> ( x = v /\ y = u ) ) ) ;
	step 15 : wff = thm imbi2d (step 14) |- ( ( z = v /\ w = u ) -> ( ( ph -> ( x = z /\ y = w ) ) <-> ( ph -> ( x = v /\ y = u ) ) ) ) ;
	step 16 : wff = thm 2albidv (step 15) |- ( ( z = v /\ w = u ) -> ( A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. x A. y ( ph -> ( x = v /\ y = u ) ) ) ) ;
	step 17 : wff = thm cbvex2v (step 16) |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> E. v E. u A. x A. y ( ph -> ( x = v /\ y = u ) ) ) ;
	step 18 : wff = axm ax-17 () |- ( ( ph -> ( x = v /\ y = u ) ) -> A. z ( ph -> ( x = v /\ y = u ) ) ) ;
	step 19 : wff = axm ax-17 () |- ( ( ph -> ( x = v /\ y = u ) ) -> A. w ( ph -> ( x = v /\ y = u ) ) ) ;
	step 20 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 21 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. x ( z = v /\ w = u ) ) ;
	step 22 : wff = thm hbim (step 20, step 21) |- ( ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. x ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 23 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 24 : wff = thm hbsb (step 23) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 25 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. y ( z = v /\ w = u ) ) ;
	step 26 : wff = thm hbim (step 24, step 25) |- ( ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) -> A. y ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 27 : wff = thm sbequ12 () |- ( y = w -> ( ph <-> [ w / y ] ph ) ) ;
	step 28 : wff = thm sbequ12 () |- ( x = z -> ( [ w / y ] ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 29 : wff = thm sylan9bbr (step 27, step 28) |- ( ( x = z /\ y = w ) -> ( ph <-> [ z / x ] [ w / y ] ph ) ) ;
	step 30 : wff = thm equequ1 () |- ( x = z -> ( x = v <-> z = v ) ) ;
	step 31 : wff = thm equequ1 () |- ( y = w -> ( y = u <-> w = u ) ) ;
	step 32 : wff = thm bi2anan9 (step 30, step 31) |- ( ( x = z /\ y = w ) -> ( ( x = v /\ y = u ) <-> ( z = v /\ w = u ) ) ) ;
	step 33 : wff = thm imbi12d (step 29, step 32) |- ( ( x = z /\ y = w ) -> ( ( ph -> ( x = v /\ y = u ) ) <-> ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ) ;
	step 34 : wff = thm cbval2 (step 18, step 19, step 22, step 26, step 33) |- ( A. x A. y ( ph -> ( x = v /\ y = u ) ) <-> A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 35 : wff = thm 2exbii (step 34) |- ( E. v E. u A. x A. y ( ph -> ( x = v /\ y = u ) ) <-> E. v E. u A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) ) ;
	step 36 : wff = thm 2mo () |- ( E. v E. u A. z A. w ( [ z / x ] [ w / y ] ph -> ( z = v /\ w = u ) ) <-> A. z A. w A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ;
	step 37 : wff = thm 3bitri (step 17, step 35, step 36) |- ( E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) <-> A. z A. w A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ;
	step 38 : wff = thm anbi12i (step 11, step 37) |- ( ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) <-> ( E. z E. w [ z / x ] [ w / y ] ph /\ A. z A. w A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ) ;
	step 39 : wff = thm 2albi () |- ( A. x A. y ( ph <-> ( x = z /\ y = w ) ) <-> ( A. x A. y ( ph -> ( x = z /\ y = w ) ) /\ A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ) ;
	step 40 : wff = thm ancom () |- ( ( A. x A. y ( ph -> ( x = z /\ y = w ) ) /\ A. x A. y ( ( x = z /\ y = w ) -> ph ) ) <-> ( A. x A. y ( ( x = z /\ y = w ) -> ph ) /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 41 : wff = thm bitri (step 39, step 40) |- ( A. x A. y ( ph <-> ( x = z /\ y = w ) ) <-> ( A. x A. y ( ( x = z /\ y = w ) -> ph ) /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 42 : wff = thm 2exbii (step 41) |- ( E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) <-> E. z E. w ( A. x A. y ( ( x = z /\ y = w ) -> ph ) /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 43 : wff = thm equcom () |- ( z = x <-> x = z ) ;
	step 44 : wff = thm equcom () |- ( w = y <-> y = w ) ;
	step 45 : wff = thm anbi12i (step 43, step 44) |- ( ( z = x /\ w = y ) <-> ( x = z /\ y = w ) ) ;
	step 46 : wff = thm imbi2i (step 45) |- ( ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) <-> ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( x = z /\ y = w ) ) ) ;
	step 47 : wff = thm impexp () |- ( ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( x = z /\ y = w ) ) <-> ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 48 : wff = thm bitri (step 46, step 47) |- ( ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) <-> ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 49 : wff = thm 2albii (step 48) |- ( A. x A. y ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) <-> A. x A. y ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 50 : wff = axm ax-17 () |- ( ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) -> A. v ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) ) ;
	step 51 : wff = axm ax-17 () |- ( ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) -> A. u ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) ) ;
	step 52 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 53 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 54 : wff = thm hbsb (step 53) |- ( [ u / w ] [ z / x ] [ w / y ] ph -> A. x [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 55 : wff = thm hbsb (step 54) |- ( [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph -> A. x [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 56 : wff = thm hban (step 52, step 55) |- ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> A. x ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ) ;
	step 57 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. x ( z = v /\ w = u ) ) ;
	step 58 : wff = thm hbim (step 56, step 57) |- ( ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) -> A. x ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ;
	step 59 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 60 : wff = thm hbsb (step 59) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 61 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 62 : wff = thm hbsb (step 61) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 63 : wff = thm hbsb (step 62) |- ( [ u / w ] [ z / x ] [ w / y ] ph -> A. y [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 64 : wff = thm hbsb (step 63) |- ( [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph -> A. y [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 65 : wff = thm hban (step 60, step 64) |- ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> A. y ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ) ;
	step 66 : wff = axm ax-17 () |- ( ( z = v /\ w = u ) -> A. y ( z = v /\ w = u ) ) ;
	step 67 : wff = thm hbim (step 65, step 66) |- ( ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) -> A. y ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ;
	step 68 : wff = thm sbequ12 () |- ( y = u -> ( ph <-> [ u / y ] ph ) ) ;
	step 69 : wff = thm sbequ12 () |- ( x = v -> ( [ u / y ] ph <-> [ v / x ] [ u / y ] ph ) ) ;
	step 70 : wff = thm sylan9bbr (step 68, step 69) |- ( ( x = v /\ y = u ) -> ( ph <-> [ v / x ] [ u / y ] ph ) ) ;
	step 71 : wff = axm ax-17 () |- ( [ u / w ] [ w / y ] ph -> A. z [ u / w ] [ w / y ] ph ) ;
	step 72 : wff = thm sbco2 (step 71) |- ( [ v / z ] [ z / x ] [ u / w ] [ w / y ] ph <-> [ v / x ] [ u / w ] [ w / y ] ph ) ;
	step 73 : wff = thm sbcom2 () |- ( [ z / x ] [ u / w ] [ w / y ] ph <-> [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 74 : wff = thm sbbii (step 73) |- ( [ v / z ] [ z / x ] [ u / w ] [ w / y ] ph <-> [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 75 : wff = axm ax-17 () |- ( ph -> A. w ph ) ;
	step 76 : wff = thm sbco2 (step 75) |- ( [ u / w ] [ w / y ] ph <-> [ u / y ] ph ) ;
	step 77 : wff = thm sbbii (step 76) |- ( [ v / x ] [ u / w ] [ w / y ] ph <-> [ v / x ] [ u / y ] ph ) ;
	step 78 : wff = thm 3bitr3ri (step 72, step 74, step 77) |- ( [ v / x ] [ u / y ] ph <-> [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ;
	step 79 : wff = thm syl6bb (step 70, step 78) |- ( ( x = v /\ y = u ) -> ( ph <-> [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ) ;
	step 80 : wff = thm anbi2d (step 79) |- ( ( x = v /\ y = u ) -> ( ( [ z / x ] [ w / y ] ph /\ ph ) <-> ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) ) ) ;
	step 81 : wff = thm equequ2 () |- ( x = v -> ( z = x <-> z = v ) ) ;
	step 82 : wff = thm equequ2 () |- ( y = u -> ( w = y <-> w = u ) ) ;
	step 83 : wff = thm bi2anan9 (step 81, step 82) |- ( ( x = v /\ y = u ) -> ( ( z = x /\ w = y ) <-> ( z = v /\ w = u ) ) ) ;
	step 84 : wff = thm imbi12d (step 80, step 83) |- ( ( x = v /\ y = u ) -> ( ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) <-> ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ) ;
	step 85 : wff = thm cbval2 (step 50, step 51, step 58, step 67, step 84) |- ( A. x A. y ( ( [ z / x ] [ w / y ] ph /\ ph ) -> ( z = x /\ w = y ) ) <-> A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ;
	step 86 : wff = thm hbs1 () |- ( [ z / x ] [ w / y ] ph -> A. x [ z / x ] [ w / y ] ph ) ;
	step 87 : wff = thm hbs1 () |- ( [ w / y ] ph -> A. y [ w / y ] ph ) ;
	step 88 : wff = thm hbsb (step 87) |- ( [ z / x ] [ w / y ] ph -> A. y [ z / x ] [ w / y ] ph ) ;
	step 89 : wff = thm 19_21-2 (step 86, step 88) |- ( A. x A. y ( [ z / x ] [ w / y ] ph -> ( ph -> ( x = z /\ y = w ) ) ) <-> ( [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 90 : wff = thm 3bitr3i (step 49, step 85, step 89) |- ( A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) <-> ( [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 91 : wff = thm anbi2i (step 90) |- ( ( [ z / x ] [ w / y ] ph /\ A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) <-> ( [ z / x ] [ w / y ] ph /\ ( [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ) ;
	step 92 : wff = thm abai () |- ( ( [ z / x ] [ w / y ] ph /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) <-> ( [ z / x ] [ w / y ] ph /\ ( [ z / x ] [ w / y ] ph -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ) ;
	step 93 : wff = thm 2sb6 () |- ( [ z / x ] [ w / y ] ph <-> A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 94 : wff = thm anbi1i (step 93) |- ( ( [ z / x ] [ w / y ] ph /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) <-> ( A. x A. y ( ( x = z /\ y = w ) -> ph ) /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 95 : wff = thm 3bitr2i (step 91, step 92, step 94) |- ( ( [ z / x ] [ w / y ] ph /\ A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) <-> ( A. x A. y ( ( x = z /\ y = w ) -> ph ) /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 96 : wff = thm 2exbii (step 95) |- ( E. z E. w ( [ z / x ] [ w / y ] ph /\ A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) <-> E. z E. w ( A. x A. y ( ( x = z /\ y = w ) -> ph ) /\ A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 97 : wff = thm bitr4i (step 42, step 96) |- ( E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) <-> E. z E. w ( [ z / x ] [ w / y ] ph /\ A. v A. u ( ( [ z / x ] [ w / y ] ph /\ [ v / z ] [ u / w ] [ z / x ] [ w / y ] ph ) -> ( z = v /\ w = u ) ) ) ) ;
	step 98 : wff = thm 3imtr4i (step 2, step 38, step 97) |- ( ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) -> E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) ;
	step 99 : wff = thm bi2 () |- ( ( ph <-> ( x = z /\ y = w ) ) -> ( ( x = z /\ y = w ) -> ph ) ) ;
	step 100 : wff = thm 19_20i2 (step 99) |- ( A. x A. y ( ph <-> ( x = z /\ y = w ) ) -> A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 101 : wff = thm 19_22i2 (step 100) |- ( E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 102 : wff = thm 2exsb () |- ( E. x E. y ph <-> E. z E. w A. x A. y ( ( x = z /\ y = w ) -> ph ) ) ;
	step 103 : wff = thm sylibr (step 101, step 102) |- ( E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) -> E. x E. y ph ) ;
	step 104 : wff = thm bi1 () |- ( ( ph <-> ( x = z /\ y = w ) ) -> ( ph -> ( x = z /\ y = w ) ) ) ;
	step 105 : wff = thm 19_20i2 (step 104) |- ( A. x A. y ( ph <-> ( x = z /\ y = w ) ) -> A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 106 : wff = thm 19_22i2 (step 105) |- ( E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) -> E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ;
	step 107 : wff = thm jca (step 103, step 106) |- ( E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) -> ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) ) ;
	step 108 : wff = thm impbii (step 98, step 107) |- ( ( E. x E. y ph /\ E. z E. w A. x A. y ( ph -> ( x = z /\ y = w ) ) ) <-> E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) ;
	step 109 : wff = thm bitri (step 1, step 108) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> E. z E. w A. x A. y ( ph <-> ( x = z /\ y = w ) ) ) ;
	qed prop 1 = step 109 ;
}

theorem 2eu7 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> E! x E! y ( E. x ph /\ E. y ph ) ) ;
}

proof of 2eu7 {
	step 1 : wff = thm hbe1 () |- ( E. x ph -> A. x E. x ph ) ;
	step 2 : wff = thm hbeu (step 1) |- ( E! y E. x ph -> A. x E! y E. x ph ) ;
	step 3 : wff = thm euan (step 2) |- ( E! x ( E! y E. x ph /\ E. y ph ) <-> ( E! y E. x ph /\ E! x E. y ph ) ) ;
	step 4 : wff = thm ancom () |- ( ( E. x ph /\ E. y ph ) <-> ( E. y ph /\ E. x ph ) ) ;
	step 5 : wff = thm eubii (step 4) |- ( E! y ( E. x ph /\ E. y ph ) <-> E! y ( E. y ph /\ E. x ph ) ) ;
	step 6 : wff = thm hbe1 () |- ( E. y ph -> A. y E. y ph ) ;
	step 7 : wff = thm euan (step 6) |- ( E! y ( E. y ph /\ E. x ph ) <-> ( E. y ph /\ E! y E. x ph ) ) ;
	step 8 : wff = thm ancom () |- ( ( E. y ph /\ E! y E. x ph ) <-> ( E! y E. x ph /\ E. y ph ) ) ;
	step 9 : wff = thm 3bitri (step 5, step 7, step 8) |- ( E! y ( E. x ph /\ E. y ph ) <-> ( E! y E. x ph /\ E. y ph ) ) ;
	step 10 : wff = thm eubii (step 9) |- ( E! x E! y ( E. x ph /\ E. y ph ) <-> E! x ( E! y E. x ph /\ E. y ph ) ) ;
	step 11 : wff = thm ancom () |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> ( E! y E. x ph /\ E! x E. y ph ) ) ;
	step 12 : wff = thm 3bitr4ri (step 3, step 10, step 11) |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> E! x E! y ( E. x ph /\ E. y ph ) ) ;
	qed prop 1 = step 12 ;
}

theorem 2eu8 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( E! x E! y ( E. x ph /\ E. y ph ) <-> E! x E! y ( E! x ph /\ E. y ph ) ) ;
}

proof of 2eu8 {
	step 1 : wff = thm 2eu2 () |- ( E! x E. y ph -> ( E! y E! x ph <-> E! y E. x ph ) ) ;
	step 2 : wff = thm pm5_32i (step 1) |- ( ( E! x E. y ph /\ E! y E! x ph ) <-> ( E! x E. y ph /\ E! y E. x ph ) ) ;
	step 3 : wff = thm hbeu1 () |- ( E! x ph -> A. x E! x ph ) ;
	step 4 : wff = thm hbeu (step 3) |- ( E! y E! x ph -> A. x E! y E! x ph ) ;
	step 5 : wff = thm euan (step 4) |- ( E! x ( E! y E! x ph /\ E. y ph ) <-> ( E! y E! x ph /\ E! x E. y ph ) ) ;
	step 6 : wff = thm ancom () |- ( ( E! x ph /\ E. y ph ) <-> ( E. y ph /\ E! x ph ) ) ;
	step 7 : wff = thm eubii (step 6) |- ( E! y ( E! x ph /\ E. y ph ) <-> E! y ( E. y ph /\ E! x ph ) ) ;
	step 8 : wff = thm hbe1 () |- ( E. y ph -> A. y E. y ph ) ;
	step 9 : wff = thm euan (step 8) |- ( E! y ( E. y ph /\ E! x ph ) <-> ( E. y ph /\ E! y E! x ph ) ) ;
	step 10 : wff = thm ancom () |- ( ( E. y ph /\ E! y E! x ph ) <-> ( E! y E! x ph /\ E. y ph ) ) ;
	step 11 : wff = thm 3bitri (step 7, step 9, step 10) |- ( E! y ( E! x ph /\ E. y ph ) <-> ( E! y E! x ph /\ E. y ph ) ) ;
	step 12 : wff = thm eubii (step 11) |- ( E! x E! y ( E! x ph /\ E. y ph ) <-> E! x ( E! y E! x ph /\ E. y ph ) ) ;
	step 13 : wff = thm ancom () |- ( ( E! x E. y ph /\ E! y E! x ph ) <-> ( E! y E! x ph /\ E! x E. y ph ) ) ;
	step 14 : wff = thm 3bitr4ri (step 5, step 12, step 13) |- ( ( E! x E. y ph /\ E! y E! x ph ) <-> E! x E! y ( E! x ph /\ E. y ph ) ) ;
	step 15 : wff = thm 2eu7 () |- ( ( E! x E. y ph /\ E! y E. x ph ) <-> E! x E! y ( E. x ph /\ E. y ph ) ) ;
	step 16 : wff = thm 3bitr3ri (step 2, step 14, step 15) |- ( E! x E! y ( E. x ph /\ E. y ph ) <-> E! x E! y ( E! x ph /\ E. y ph ) ) ;
	qed prop 1 = step 16 ;
}

theorem euequ1 (x : set, y : set)  {
	prop 1 : wff = |- E! x x = y ;
}

proof of euequ1 {
	var z : set;
	step 1 : wff = thm a9e () |- E. x x = y ;
	step 2 : wff = thm equtr2 () |- ( ( x = y /\ z = y ) -> x = z ) ;
	step 3 : wff = thm gen2 (step 2) |- A. x A. z ( ( x = y /\ z = y ) -> x = z ) ;
	step 4 : wff = thm pm3_2i (step 1, step 3) |- ( E. x x = y /\ A. x A. z ( ( x = y /\ z = y ) -> x = z ) ) ;
	step 5 : wff = thm equequ1 () |- ( x = z -> ( x = y <-> z = y ) ) ;
	step 6 : wff = thm eu4 (step 5) |- ( E! x x = y <-> ( E. x x = y /\ A. x A. z ( ( x = y /\ z = y ) -> x = z ) ) ) ;
	step 7 : wff = thm mpbir (step 4, step 6) |- E! x x = y ;
	qed prop 1 = step 7 ;
}

theorem exists1 (x : set, y : set)  {
	prop 1 : wff = |- ( E! x x = x <-> A. x x = y ) ;
}

proof of exists1 {
	step 1 : wff = def df-eu () |- ( E! x x = x <-> E. y A. x ( x = x <-> x = y ) ) ;
	step 2 : wff = thm equid () |- x = x ;
	step 3 : wff = thm tbt (step 2) |- ( x = y <-> ( x = y <-> x = x ) ) ;
	step 4 : wff = thm bicom () |- ( ( x = y <-> x = x ) <-> ( x = x <-> x = y ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( x = y <-> ( x = x <-> x = y ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x x = y <-> A. x ( x = x <-> x = y ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. y A. x x = y <-> E. y A. x ( x = x <-> x = y ) ) ;
	step 8 : wff = thm hbae () |- ( A. x x = y -> A. y A. x x = y ) ;
	step 9 : wff = thm 19_9 (step 8) |- ( E. y A. x x = y <-> A. x x = y ) ;
	step 10 : wff = thm 3bitr2i (step 1, step 7, step 9) |- ( E! x x = x <-> A. x x = y ) ;
	qed prop 1 = step 10 ;
}

theorem exists2 (ph : wff, x : set)  {
	prop 1 : wff = |- ( ( E. x ph /\ E. x -. ph ) -> -. E! x x = x ) ;
}

proof of exists2 {
	var y : set;
	step 1 : wff = thm exists1 () |- ( E! x x = x <-> A. x x = y ) ;
	step 2 : wff = thm pm3_24 () |- -. ( ph /\ -. ph ) ;
	step 3 : wff = axm ax-16 () |- ( A. x x = y -> ( ph -> A. x ph ) ) ;
	step 4 : wff = thm a5i (step 3) |- ( A. x x = y -> A. x ( ph -> A. x ph ) ) ;
	step 5 : wff = thm 19_9t () |- ( A. x ( ph -> A. x ph ) -> ( E. x ph -> ph ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( A. x x = y -> ( E. x ph -> ph ) ) ;
	step 7 : wff = axm ax-16 () |- ( A. x x = y -> ( -. ph -> A. x -. ph ) ) ;
	step 8 : wff = thm a5i (step 7) |- ( A. x x = y -> A. x ( -. ph -> A. x -. ph ) ) ;
	step 9 : wff = thm 19_9t () |- ( A. x ( -. ph -> A. x -. ph ) -> ( E. x -. ph -> -. ph ) ) ;
	step 10 : wff = thm syl (step 8, step 9) |- ( A. x x = y -> ( E. x -. ph -> -. ph ) ) ;
	step 11 : wff = thm anim12d (step 6, step 10) |- ( A. x x = y -> ( ( E. x ph /\ E. x -. ph ) -> ( ph /\ -. ph ) ) ) ;
	step 12 : wff = thm mtoi (step 2, step 11) |- ( A. x x = y -> -. ( E. x ph /\ E. x -. ph ) ) ;
	step 13 : wff = thm sylbi (step 1, step 12) |- ( E! x x = x -> -. ( E. x ph /\ E. x -. ph ) ) ;
	step 14 : wff = thm con2i (step 13) |- ( ( E. x ph /\ E. x -. ph ) -> -. E! x x = x ) ;
	qed prop 1 = step 14 ;
}

axiom ax-ext (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. z ( z e. x <-> z e. y ) -> x = y ) ;
}

theorem axext2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- E. z ( ( z e. x <-> z e. y ) -> x = y ) ;
}

proof of axext2 {
	step 1 : wff = axm ax-ext () |- ( A. z ( z e. x <-> z e. y ) -> x = y ) ;
	step 2 : wff = thm 19_36v () |- ( E. z ( ( z e. x <-> z e. y ) -> x = y ) <-> ( A. z ( z e. x <-> z e. y ) -> x = y ) ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- E. z ( ( z e. x <-> z e. y ) -> x = y ) ;
	qed prop 1 = step 3 ;
}

theorem axext3 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( A. z ( z e. x <-> z e. y ) -> x = y ) ;
}

proof of axext3 {
	var w : set;
	step 1 : wff = thm a9e () |- E. w w = x ;
	step 2 : wff = axm ax-ext () |- ( A. z ( z e. w <-> z e. y ) -> w = y ) ;
	step 3 : wff = thm elequ2 () |- ( w = x -> ( z e. w <-> z e. x ) ) ;
	step 4 : wff = thm bibi1d (step 3) |- ( w = x -> ( ( z e. w <-> z e. y ) <-> ( z e. x <-> z e. y ) ) ) ;
	step 5 : wff = thm albidv (step 4) |- ( w = x -> ( A. z ( z e. w <-> z e. y ) <-> A. z ( z e. x <-> z e. y ) ) ) ;
	step 6 : wff = thm equequ1 () |- ( w = x -> ( w = y <-> x = y ) ) ;
	step 7 : wff = thm imbi12d (step 5, step 6) |- ( w = x -> ( ( A. z ( z e. w <-> z e. y ) -> w = y ) <-> ( A. z ( z e. x <-> z e. y ) -> x = y ) ) ) ;
	step 8 : wff = thm mpbii (step 2, step 7) |- ( w = x -> ( A. z ( z e. x <-> z e. y ) -> x = y ) ) ;
	step 9 : wff = thm 19_23aiv (step 8) |- ( E. w w = x -> ( A. z ( z e. x <-> z e. y ) -> x = y ) ) ;
	step 10 : wff = axm ax-mp (step 1, step 9) |- ( A. z ( z e. x <-> z e. y ) -> x = y ) ;
	qed prop 1 = step 10 ;
}

theorem axext4 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y <-> A. z ( z e. x <-> z e. y ) ) ;
}

proof of axext4 {
	step 1 : wff = thm elequ2 () |- ( x = y -> ( z e. x <-> z e. y ) ) ;
	step 2 : wff = thm 19_21aiv (step 1) |- ( x = y -> A. z ( z e. x <-> z e. y ) ) ;
	step 3 : wff = thm axext3 () |- ( A. z ( z e. x <-> z e. y ) -> x = y ) ;
	step 4 : wff = thm impbii (step 2, step 3) |- ( x = y <-> A. z ( z e. x <-> z e. y ) ) ;
	qed prop 1 = step 4 ;
}

theorem bm1_1 (ph : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. x A. y ( y e. x <-> ph ) -> E! x A. y ( y e. x <-> ph ) ) ;
}

proof of bm1_1 {
	var z : set;
	step 1 : wff = thm 19_26 () |- ( A. y ( ( y e. x <-> ph ) /\ ( y e. z <-> ph ) ) <-> ( A. y ( y e. x <-> ph ) /\ A. y ( y e. z <-> ph ) ) ) ;
	step 2 : wff = thm biantr () |- ( ( ( y e. x <-> ph ) /\ ( y e. z <-> ph ) ) -> ( y e. x <-> y e. z ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. y ( ( y e. x <-> ph ) /\ ( y e. z <-> ph ) ) -> A. y ( y e. x <-> y e. z ) ) ;
	step 4 : wff = axm ax-ext () |- ( A. y ( y e. x <-> y e. z ) -> x = z ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A. y ( ( y e. x <-> ph ) /\ ( y e. z <-> ph ) ) -> x = z ) ;
	step 6 : wff = thm sylbir (step 1, step 5) |- ( ( A. y ( y e. x <-> ph ) /\ A. y ( y e. z <-> ph ) ) -> x = z ) ;
	step 7 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 8 : wff = thm hbbi (step 7, hyp 1) |- ( ( y e. z <-> ph ) -> A. x ( y e. z <-> ph ) ) ;
	step 9 : wff = thm hbal (step 8) |- ( A. y ( y e. z <-> ph ) -> A. x A. y ( y e. z <-> ph ) ) ;
	step 10 : wff = thm elequ2 () |- ( x = z -> ( y e. x <-> y e. z ) ) ;
	step 11 : wff = thm bibi1d (step 10) |- ( x = z -> ( ( y e. x <-> ph ) <-> ( y e. z <-> ph ) ) ) ;
	step 12 : wff = thm albidv (step 11) |- ( x = z -> ( A. y ( y e. x <-> ph ) <-> A. y ( y e. z <-> ph ) ) ) ;
	step 13 : wff = thm sbie (step 9, step 12) |- ( [ z / x ] A. y ( y e. x <-> ph ) <-> A. y ( y e. z <-> ph ) ) ;
	step 14 : wff = thm sylan2b (step 6, step 13) |- ( ( A. y ( y e. x <-> ph ) /\ [ z / x ] A. y ( y e. x <-> ph ) ) -> x = z ) ;
	step 15 : wff = thm gen2 (step 14) |- A. x A. z ( ( A. y ( y e. x <-> ph ) /\ [ z / x ] A. y ( y e. x <-> ph ) ) -> x = z ) ;
	step 16 : wff = thm jctr (step 15) |- ( E. x A. y ( y e. x <-> ph ) -> ( E. x A. y ( y e. x <-> ph ) /\ A. x A. z ( ( A. y ( y e. x <-> ph ) /\ [ z / x ] A. y ( y e. x <-> ph ) ) -> x = z ) ) ) ;
	step 17 : wff = axm ax-17 () |- ( A. y ( y e. x <-> ph ) -> A. z A. y ( y e. x <-> ph ) ) ;
	step 18 : wff = thm eu2 (step 17) |- ( E! x A. y ( y e. x <-> ph ) <-> ( E. x A. y ( y e. x <-> ph ) /\ A. x A. z ( ( A. y ( y e. x <-> ph ) /\ [ z / x ] A. y ( y e. x <-> ph ) ) -> x = z ) ) ) ;
	step 19 : wff = thm sylibr (step 16, step 18) |- ( E. x A. y ( y e. x <-> ph ) -> E! x A. y ( y e. x <-> ph ) ) ;
	qed prop 1 = step 19 ;
}

constant {
	symbol { ;
}

constant {
	symbol | ;
}

constant {
	symbol } ;
}

rule cab (ph : wff, x : set) {
	term : class = # { x | ph } ;
}

definition df-clab (ph : wff, x : set, y : set)  {
	defiendum : wff = # x e. { y | ph } ;
	definiens : wff = # [ x / y ] ph ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem abid (ph : wff, x : set)  {
	prop 1 : wff = |- ( x e. { x | ph } <-> ph ) ;
}

proof of abid {
	step 1 : wff = def df-clab () |- ( x e. { x | ph } <-> [ x / x ] ph ) ;
	step 2 : wff = thm sbid () |- ( [ x / x ] ph <-> ph ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( x e. { x | ph } <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem hbab1 (ph : wff, x : set, y : set)  {
	prop 1 : wff = |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
}

proof of hbab1 {
	step 1 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 2 : wff = def df-clab () |- ( y e. { x | ph } <-> [ y / x ] ph ) ;
	step 3 : wff = def df-clab () |- ( y e. { x | ph } <-> [ y / x ] ph ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x y e. { x | ph } <-> A. x [ y / x ] ph ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	qed prop 1 = step 5 ;
}

theorem hbab (ph : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( z e. { y | ph } -> A. x z e. { y | ph } ) ;
}

proof of hbab {
	step 1 : wff = axm ax-16 () |- ( A. x x = z -> ( [ z / y ] ph -> A. x [ z / y ] ph ) ) ;
	step 2 : wff = thm hbsb4 (hyp 1) |- ( -. A. x x = z -> ( [ z / y ] ph -> A. x [ z / y ] ph ) ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- ( [ z / y ] ph -> A. x [ z / y ] ph ) ;
	step 4 : wff = def df-clab () |- ( z e. { y | ph } <-> [ z / y ] ph ) ;
	step 5 : wff = def df-clab () |- ( z e. { y | ph } <-> [ z / y ] ph ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x z e. { y | ph } <-> A. x [ z / y ] ph ) ;
	step 7 : wff = thm 3imtr4i (step 3, step 4, step 6) |- ( z e. { y | ph } -> A. x z e. { y | ph } ) ;
	qed prop 1 = step 7 ;
}

theorem hbabd (ph : wff, ps : wff, x : set, y : set, z : set)  {
	hyp 1 : wff = |- ( ph -> A. x A. y ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( z e. { y | ps } -> A. x z e. { y | ps } ) ) ;
}

proof of hbabd {
	step 1 : wff = axm ax-7 () |- ( A. x A. y ph -> A. y A. x ph ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> A. y A. x ph ) ;
	step 3 : wff = thm 19_20i2 (hyp 2) |- ( A. y A. x ph -> A. y A. x ( ps -> A. x ps ) ) ;
	step 4 : wff = thm hbsb4t () |- ( A. y A. x ( ps -> A. x ps ) -> ( -. A. x x = z -> ( [ z / y ] ps -> A. x [ z / y ] ps ) ) ) ;
	step 5 : wff = thm 3syl (step 2, step 3, step 4) |- ( ph -> ( -. A. x x = z -> ( [ z / y ] ps -> A. x [ z / y ] ps ) ) ) ;
	step 6 : wff = axm ax-16 () |- ( A. x x = z -> ( [ z / y ] ps -> A. x [ z / y ] ps ) ) ;
	step 7 : wff = thm pm2_61d2 (step 5, step 6) |- ( ph -> ( [ z / y ] ps -> A. x [ z / y ] ps ) ) ;
	step 8 : wff = def df-clab () |- ( z e. { y | ps } <-> [ z / y ] ps ) ;
	step 9 : wff = def df-clab () |- ( z e. { y | ps } <-> [ z / y ] ps ) ;
	step 10 : wff = thm albii (step 9) |- ( A. x z e. { y | ps } <-> A. x [ z / y ] ps ) ;
	step 11 : wff = thm 3imtr4g (step 7, step 8, step 10) |- ( ph -> ( z e. { y | ps } -> A. x z e. { y | ps } ) ) ;
	qed prop 1 = step 11 ;
}

definition df-cleq (x : set, y : set, z : set, A : class, B : class)  {
	hyp 1 : wff = |- ( A. x ( x e. y <-> x e. z ) -> y = z ) ;
	defiendum : wff = # A = B ;
	definiens : wff = # A. x ( x e. A <-> x e. B ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem dfcleq (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
}

proof of dfcleq {
	var y : set, z : set;
	step 1 : wff = axm ax-ext () |- ( A. x ( x e. y <-> x e. z ) -> y = z ) ;
	step 2 : wff = def df-cleq (step 1) |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem cvjust (x : set, y : set)  {
	prop 1 : wff = |- x = { y | y e. x } ;
}

proof of cvjust {
	var z : set;
	step 1 : wff = thm dfcleq () |- ( x = { y | y e. x } <-> A. z ( z e. x <-> z e. { y | y e. x } ) ) ;
	step 2 : wff = def df-clab () |- ( z e. { y | y e. x } <-> [ z / y ] y e. x ) ;
	step 3 : wff = thm elsb3 () |- ( [ z / y ] y e. x <-> z e. x ) ;
	step 4 : wff = thm bitr2i (step 2, step 3) |- ( z e. x <-> z e. { y | y e. x } ) ;
	step 5 : wff = thm mpgbir (step 1, step 4) |- x = { y | y e. x } ;
	qed prop 1 = step 5 ;
}

definition df-clel (x : set, A : class, B : class)  {
	defiendum : wff = # A e. B ;
	definiens : wff = # E. x ( x = A /\ x e. B ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem eqriv (x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x e. A <-> x e. B ) ;
	-----------------------
	prop 1 : wff = |- A = B ;
}

proof of eqriv {
	step 1 : wff = thm dfcleq () |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm mpgbir (step 1, hyp 1) |- A = B ;
	qed prop 1 = step 2 ;
}

theorem eqrdv (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. A <-> x e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = B ) ;
}

proof of eqrdv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm dfcleq () |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem eqrdav (ph : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> x e. C ) ;
	hyp 2 : wff = |- ( ( ph /\ x e. B ) -> x e. C ) ;
	hyp 3 : wff = |- ( ( ph /\ x e. C ) -> ( x e. A <-> x e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = B ) ;
}

proof of eqrdav {
	step 1 : wff = thm biimpd (hyp 3) |- ( ( ph /\ x e. C ) -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm ex (step 1) |- ( ph -> ( x e. C -> ( x e. A -> x e. B ) ) ) ;
	step 3 : wff = thm com23 (step 2) |- ( ph -> ( x e. A -> ( x e. C -> x e. B ) ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ph /\ x e. A ) -> ( x e. C -> x e. B ) ) ;
	step 5 : wff = thm mpd (hyp 1, step 4) |- ( ( ph /\ x e. A ) -> x e. B ) ;
	step 6 : wff = thm biimprd (hyp 3) |- ( ( ph /\ x e. C ) -> ( x e. B -> x e. A ) ) ;
	step 7 : wff = thm ex (step 6) |- ( ph -> ( x e. C -> ( x e. B -> x e. A ) ) ) ;
	step 8 : wff = thm com23 (step 7) |- ( ph -> ( x e. B -> ( x e. C -> x e. A ) ) ) ;
	step 9 : wff = thm imp (step 8) |- ( ( ph /\ x e. B ) -> ( x e. C -> x e. A ) ) ;
	step 10 : wff = thm mpd (hyp 2, step 9) |- ( ( ph /\ x e. B ) -> x e. A ) ;
	step 11 : wff = thm impbida (step 5, step 10) |- ( ph -> ( x e. A <-> x e. B ) ) ;
	step 12 : wff = thm eqrdv (step 11) |- ( ph -> A = B ) ;
	qed prop 1 = step 12 ;
}

theorem eqid (A : class)  {
	prop 1 : wff = |- A = A ;
}

proof of eqid {
	var x : set;
	step 1 : wff = thm biid () |- ( x e. A <-> x e. A ) ;
	step 2 : wff = thm eqriv (step 1) |- A = A ;
	qed prop 1 = step 2 ;
}

theorem eqidd (ph : wff, A : class)  {
	prop 1 : wff = |- ( ph -> A = A ) ;
}

proof of eqidd {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm a1i (step 1) |- ( ph -> A = A ) ;
	qed prop 1 = step 2 ;
}

theorem eqcom (A : class, B : class)  {
	prop 1 : wff = |- ( A = B <-> B = A ) ;
}

proof of eqcom {
	var x : set;
	step 1 : wff = thm bicom () |- ( ( x e. A <-> x e. B ) <-> ( x e. B <-> x e. A ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( x e. A <-> x e. B ) <-> A. x ( x e. B <-> x e. A ) ) ;
	step 3 : wff = thm dfcleq () |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	step 4 : wff = thm dfcleq () |- ( B = A <-> A. x ( x e. B <-> x e. A ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( A = B <-> B = A ) ;
	qed prop 1 = step 5 ;
}

theorem eqcoms (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( B = A -> ph ) ;
}

proof of eqcoms {
	step 1 : wff = thm eqcom () |- ( B = A <-> A = B ) ;
	step 2 : wff = thm sylbi (step 1, hyp 1) |- ( B = A -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem eqcomi (A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- B = A ;
}

proof of eqcomi {
	step 1 : wff = thm eqcom () |- ( A = B <-> B = A ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- B = A ;
	qed prop 1 = step 2 ;
}

theorem eqcomd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> B = A ) ;
}

proof of eqcomd {
	step 1 : wff = thm eqcom () |- ( A = B <-> B = A ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> B = A ) ;
	qed prop 1 = step 2 ;
}

theorem eqeq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A = C <-> B = C ) ) ;
}

proof of eqeq1 {
	var x : set;
	step 1 : wff = thm dfcleq () |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( A = B -> A. x ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm 19_21bi (step 2) |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 4 : wff = thm bibi1d (step 3) |- ( A = B -> ( ( x e. A <-> x e. C ) <-> ( x e. B <-> x e. C ) ) ) ;
	step 5 : wff = thm albidv (step 4) |- ( A = B -> ( A. x ( x e. A <-> x e. C ) <-> A. x ( x e. B <-> x e. C ) ) ) ;
	step 6 : wff = thm dfcleq () |- ( A = C <-> A. x ( x e. A <-> x e. C ) ) ;
	step 7 : wff = thm dfcleq () |- ( B = C <-> A. x ( x e. B <-> x e. C ) ) ;
	step 8 : wff = thm 3bitr4g (step 5, step 6, step 7) |- ( A = B -> ( A = C <-> B = C ) ) ;
	qed prop 1 = step 8 ;
}

theorem eqeq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A = C <-> B = C ) ;
}

proof of eqeq1i {
	step 1 : wff = thm eqeq1 () |- ( A = B -> ( A = C <-> B = C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A = C <-> B = C ) ;
	qed prop 1 = step 2 ;
}

theorem eqeq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = C <-> B = C ) ) ;
}

proof of eqeq1d {
	step 1 : wff = thm eqeq1 () |- ( A = B -> ( A = C <-> B = C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A = C <-> B = C ) ) ;
	qed prop 1 = step 2 ;
}

theorem eqeq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C = A <-> C = B ) ) ;
}

proof of eqeq2 {
	step 1 : wff = thm eqeq1 () |- ( A = B -> ( A = C <-> B = C ) ) ;
	step 2 : wff = thm eqcom () |- ( C = A <-> A = C ) ;
	step 3 : wff = thm eqcom () |- ( C = B <-> B = C ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( A = B -> ( C = A <-> C = B ) ) ;
	qed prop 1 = step 4 ;
}

theorem eqeq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C = A <-> C = B ) ;
}

proof of eqeq2i {
	step 1 : wff = thm eqeq2 () |- ( A = B -> ( C = A <-> C = B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C = A <-> C = B ) ;
	qed prop 1 = step 2 ;
}

theorem eqeq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C = A <-> C = B ) ) ;
}

proof of eqeq2d {
	step 1 : wff = thm eqeq2 () |- ( A = B -> ( C = A <-> C = B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C = A <-> C = B ) ) ;
	qed prop 1 = step 2 ;
}

theorem eqeq12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> ( A = C <-> B = D ) ) ;
}

proof of eqeq12 {
	step 1 : wff = thm eqeq1 () |- ( A = B -> ( A = C <-> B = C ) ) ;
	step 2 : wff = thm eqeq2 () |- ( C = D -> ( B = C <-> B = D ) ) ;
	step 3 : wff = thm sylan9bb (step 1, step 2) |- ( ( A = B /\ C = D ) -> ( A = C <-> B = D ) ) ;
	qed prop 1 = step 3 ;
}

theorem eqeq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A = C <-> B = D ) ;
}

proof of eqeq12i {
	step 1 : wff = thm eqeq1i (hyp 1) |- ( A = C <-> B = C ) ;
	step 2 : wff = thm eqeq2i (hyp 2) |- ( B = C <-> B = D ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A = C <-> B = D ) ;
	qed prop 1 = step 3 ;
}

theorem eqeq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = C <-> B = D ) ) ;
}

proof of eqeq12d {
	step 1 : wff = thm eqeq1d (hyp 1) |- ( ph -> ( A = C <-> B = C ) ) ;
	step 2 : wff = thm eqeq2d (hyp 2) |- ( ph -> ( B = C <-> B = D ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( A = C <-> B = D ) ) ;
	qed prop 1 = step 3 ;
}

theorem eqeqan12d (ph : wff, ps : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) ;
}

proof of eqeqan12d {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ ps ) -> A = B ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ ps ) -> C = D ) ;
	step 3 : wff = thm eqeq12d (step 1, step 2) |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) ;
	qed prop 1 = step 3 ;
}

theorem eqeqan12rd (ph : wff, ps : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> ( A = C <-> B = D ) ) ;
}

proof of eqeqan12rd {
	step 1 : wff = thm eqeqan12d (hyp 1, hyp 2) |- ( ( ph /\ ps ) -> ( A = C <-> B = D ) ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( ps /\ ph ) -> ( A = C <-> B = D ) ) ;
	qed prop 1 = step 2 ;
}

theorem eqtr (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A = B /\ B = C ) -> A = C ) ;
}

proof of eqtr {
	step 1 : wff = thm eqeq1 () |- ( A = B -> ( A = C <-> B = C ) ) ;
	step 2 : wff = thm biimpar (step 1) |- ( ( A = B /\ B = C ) -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem eqtr2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A = B /\ A = C ) -> B = C ) ;
}

proof of eqtr2 {
	step 1 : wff = thm eqtr () |- ( ( B = A /\ A = C ) -> B = C ) ;
	step 2 : wff = thm eqcom () |- ( A = B <-> B = A ) ;
	step 3 : wff = thm sylanb (step 1, step 2) |- ( ( A = B /\ A = C ) -> B = C ) ;
	qed prop 1 = step 3 ;
}

theorem eqtr3 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A = C /\ B = C ) -> A = B ) ;
}

proof of eqtr3 {
	step 1 : wff = thm eqtr () |- ( ( A = C /\ C = B ) -> A = B ) ;
	step 2 : wff = thm eqcom () |- ( B = C <-> C = B ) ;
	step 3 : wff = thm sylan2b (step 1, step 2) |- ( ( A = C /\ B = C ) -> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem eqtri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- A = C ;
}

proof of eqtri {
	step 1 : wff = thm eqeq2i (hyp 2) |- ( A = B <-> A = C ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- A = C ;
	qed prop 1 = step 2 ;
}

theorem eqtr2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- C = A ;
}

proof of eqtr2i {
	step 1 : wff = thm eqtri (hyp 1, hyp 2) |- A = C ;
	step 2 : wff = thm eqcomi (step 1) |- C = A ;
	qed prop 1 = step 2 ;
}

theorem eqtr3i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- A = C ;
	-----------------------
	prop 1 : wff = |- B = C ;
}

proof of eqtr3i {
	step 1 : wff = thm eqcomi (hyp 1) |- B = A ;
	step 2 : wff = thm eqtri (step 1, hyp 2) |- B = C ;
	qed prop 1 = step 2 ;
}

theorem eqtr4i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- A = C ;
}

proof of eqtr4i {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm eqtri (hyp 1, step 1) |- A = C ;
	qed prop 1 = step 2 ;
}

theorem 3eqtri (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B = C ;
	hyp 3 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- A = D ;
}

proof of 3eqtri {
	step 1 : wff = thm eqtri (hyp 2, hyp 3) |- B = D ;
	step 2 : wff = thm eqtri (hyp 1, step 1) |- A = D ;
	qed prop 1 = step 2 ;
}

theorem 3eqtrri (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B = C ;
	hyp 3 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- D = A ;
}

proof of 3eqtrri {
	step 1 : wff = thm eqtr2i (hyp 1, hyp 2) |- C = A ;
	step 2 : wff = thm eqtr3i (hyp 3, step 1) |- D = A ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr2i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = B ;
	hyp 3 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- A = D ;
}

proof of 3eqtr2i {
	step 1 : wff = thm eqtr4i (hyp 1, hyp 2) |- A = C ;
	step 2 : wff = thm eqtri (step 1, hyp 3) |- A = D ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr2ri (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = B ;
	hyp 3 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- D = A ;
}

proof of 3eqtr2ri {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm 3eqtrri (hyp 1, step 1, hyp 3) |- D = A ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr3i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- C = D ;
}

proof of 3eqtr3i {
	step 1 : wff = thm eqtri (hyp 1, hyp 3) |- A = D ;
	step 2 : wff = thm eqtr3i (hyp 2, step 1) |- C = D ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr3ri (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- D = C ;
}

proof of 3eqtr3ri {
	step 1 : wff = thm eqtr3i (hyp 1, hyp 2) |- B = C ;
	step 2 : wff = thm eqtr3i (hyp 3, step 1) |- D = C ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr4i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- C = D ;
}

proof of 3eqtr4i {
	step 1 : wff = thm eqtr4i (hyp 1, hyp 3) |- A = D ;
	step 2 : wff = thm eqtri (hyp 2, step 1) |- C = D ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr4ri (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- D = C ;
}

proof of 3eqtr4ri {
	step 1 : wff = thm eqtr4i (hyp 1, hyp 3) |- A = D ;
	step 2 : wff = thm eqtr2i (hyp 2, step 1) |- D = C ;
	qed prop 1 = step 2 ;
}

theorem eqtrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = C ) ;
}

proof of eqtrd {
	step 1 : wff = thm eqeq2d (hyp 2) |- ( ph -> ( A = B <-> A = C ) ) ;
	step 2 : wff = thm mpbid (hyp 1, step 1) |- ( ph -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem eqtr2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = A ) ;
}

proof of eqtr2d {
	step 1 : wff = thm eqtrd (hyp 1, hyp 2) |- ( ph -> A = C ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> C = A ) ;
	qed prop 1 = step 2 ;
}

theorem eqtr3d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> A = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> B = C ) ;
}

proof of eqtr3d {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> B = A ) ;
	step 2 : wff = thm eqtrd (step 1, hyp 2) |- ( ph -> B = C ) ;
	qed prop 1 = step 2 ;
}

theorem eqtr4d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = C ) ;
}

proof of eqtr4d {
	step 1 : wff = thm eqcomd (hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm eqtrd (hyp 1, step 1) |- ( ph -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtrd (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	hyp 3 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = D ) ;
}

proof of 3eqtrd {
	step 1 : wff = thm eqtrd (hyp 2, hyp 3) |- ( ph -> B = D ) ;
	step 2 : wff = thm eqtrd (hyp 1, step 1) |- ( ph -> A = D ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtrrd (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	hyp 3 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> D = A ) ;
}

proof of 3eqtrrd {
	step 1 : wff = thm eqtr2d (hyp 1, hyp 2) |- ( ph -> C = A ) ;
	step 2 : wff = thm eqtr3d (hyp 3, step 1) |- ( ph -> D = A ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr2d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = B ) ;
	hyp 3 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = D ) ;
}

proof of 3eqtr2d {
	step 1 : wff = thm eqtr4d (hyp 1, hyp 2) |- ( ph -> A = C ) ;
	step 2 : wff = thm eqtrd (step 1, hyp 3) |- ( ph -> A = D ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr2rd (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = B ) ;
	hyp 3 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> D = A ) ;
}

proof of 3eqtr2rd {
	step 1 : wff = thm eqtr4d (hyp 1, hyp 2) |- ( ph -> A = C ) ;
	step 2 : wff = thm eqtr2d (step 1, hyp 3) |- ( ph -> D = A ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr3d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> A = C ) ;
	hyp 3 : wff = |- ( ph -> B = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = D ) ;
}

proof of 3eqtr3d {
	step 1 : wff = thm eqtrd (hyp 1, hyp 3) |- ( ph -> A = D ) ;
	step 2 : wff = thm eqtr3d (hyp 2, step 1) |- ( ph -> C = D ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr3rd (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> A = C ) ;
	hyp 3 : wff = |- ( ph -> B = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> D = C ) ;
}

proof of 3eqtr3rd {
	step 1 : wff = thm eqtr3d (hyp 1, hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm eqtr3d (hyp 3, step 1) |- ( ph -> D = C ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr4d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = A ) ;
	hyp 3 : wff = |- ( ph -> D = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = D ) ;
}

proof of 3eqtr4d {
	step 1 : wff = thm eqtr4d (hyp 1, hyp 3) |- ( ph -> A = D ) ;
	step 2 : wff = thm eqtrd (hyp 2, step 1) |- ( ph -> C = D ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr4rd (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = A ) ;
	hyp 3 : wff = |- ( ph -> D = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> D = C ) ;
}

proof of 3eqtr4rd {
	step 1 : wff = thm eqtr4d (hyp 3, hyp 1) |- ( ph -> D = A ) ;
	step 2 : wff = thm eqtr4d (step 1, hyp 2) |- ( ph -> D = C ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eq (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C = A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = B ) ;
}

proof of syl5eq {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> C = A ) ;
	step 2 : wff = thm eqtrd (step 1, hyp 1) |- ( ph -> C = B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5req (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C = A ;
	-----------------------
	prop 1 : wff = |- ( ph -> B = C ) ;
}

proof of syl5req {
	step 1 : wff = thm syl5eq (hyp 1, hyp 2) |- ( ph -> C = B ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> B = C ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eqr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- A = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = B ) ;
}

proof of syl5eqr {
	step 1 : wff = thm eqcomi (hyp 2) |- C = A ;
	step 2 : wff = thm syl5eq (hyp 1, step 1) |- ( ph -> C = B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5reqr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- A = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> B = C ) ;
}

proof of syl5reqr {
	step 1 : wff = thm eqcomi (hyp 2) |- C = A ;
	step 2 : wff = thm syl5req (hyp 1, step 1) |- ( ph -> B = C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eq (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = C ) ;
}

proof of syl6eq {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm eqtrd (hyp 1, step 1) |- ( ph -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6req (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = A ) ;
}

proof of syl6req {
	step 1 : wff = thm syl6eq (hyp 1, hyp 2) |- ( ph -> A = C ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> C = A ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eqr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = C ) ;
}

proof of syl6eqr {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm syl6eq (hyp 1, step 1) |- ( ph -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6reqr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = A ) ;
}

proof of syl6reqr {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm syl6req (hyp 1, step 1) |- ( ph -> C = A ) ;
	qed prop 1 = step 2 ;
}

theorem sylan9eq (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> A = C ) ;
}

proof of sylan9eq {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ ps ) -> A = B ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ ps ) -> B = C ) ;
	step 3 : wff = thm eqtrd (step 1, step 2) |- ( ( ph /\ ps ) -> A = C ) ;
	qed prop 1 = step 3 ;
}

theorem sylan9req (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> B = A ) ;
	hyp 2 : wff = |- ( ps -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> A = C ) ;
}

proof of sylan9req {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm sylan9eq (step 1, hyp 2) |- ( ( ph /\ ps ) -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem sylan9eqr (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> A = C ) ;
}

proof of sylan9eqr {
	step 1 : wff = thm sylan9eq (hyp 1, hyp 2) |- ( ( ph /\ ps ) -> A = C ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( ps /\ ph ) -> A = C ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr3g (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = D ) ;
}

proof of 3eqtr3g {
	step 1 : wff = thm syl5eqr (hyp 1, hyp 2) |- ( ph -> C = B ) ;
	step 2 : wff = thm syl6eq (step 1, hyp 3) |- ( ph -> C = D ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr4g (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = D ) ;
}

proof of 3eqtr4g {
	step 1 : wff = thm syl5eq (hyp 1, hyp 2) |- ( ph -> C = B ) ;
	step 2 : wff = thm syl6eqr (step 1, hyp 3) |- ( ph -> C = D ) ;
	qed prop 1 = step 2 ;
}

theorem 3eqtr4a (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- ( ph -> C = A ) ;
	hyp 3 : wff = |- ( ph -> D = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C = D ) ;
}

proof of 3eqtr4a {
	step 1 : wff = thm a1i (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm 3eqtr4d (step 1, hyp 2, hyp 3) |- ( ph -> C = D ) ;
	qed prop 1 = step 2 ;
}

theorem eq2tri (A : class, B : class, C : class, D : class, F : class, G : class)  {
	hyp 1 : wff = |- ( A = C -> D = F ) ;
	hyp 2 : wff = |- ( B = D -> C = G ) ;
	-----------------------
	prop 1 : wff = |- ( ( A = C /\ B = F ) <-> ( B = D /\ A = G ) ) ;
}

proof of eq2tri {
	step 1 : wff = thm ancom () |- ( ( A = C /\ B = D ) <-> ( B = D /\ A = C ) ) ;
	step 2 : wff = thm eqeq2d (hyp 1) |- ( A = C -> ( B = D <-> B = F ) ) ;
	step 3 : wff = thm pm5_32i (step 2) |- ( ( A = C /\ B = D ) <-> ( A = C /\ B = F ) ) ;
	step 4 : wff = thm eqeq2d (hyp 2) |- ( B = D -> ( A = C <-> A = G ) ) ;
	step 5 : wff = thm pm5_32i (step 4) |- ( ( B = D /\ A = C ) <-> ( B = D /\ A = G ) ) ;
	step 6 : wff = thm 3bitr3i (step 1, step 3, step 5) |- ( ( A = C /\ B = F ) <-> ( B = D /\ A = G ) ) ;
	qed prop 1 = step 6 ;
}

theorem eleq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A e. C <-> B e. C ) ) ;
}

proof of eleq1 {
	var x : set;
	step 1 : wff = thm eqeq2 () |- ( A = B -> ( x = A <-> x = B ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( A = B -> ( ( x = A /\ x e. C ) <-> ( x = B /\ x e. C ) ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( A = B -> ( E. x ( x = A /\ x e. C ) <-> E. x ( x = B /\ x e. C ) ) ) ;
	step 4 : wff = def df-clel () |- ( A e. C <-> E. x ( x = A /\ x e. C ) ) ;
	step 5 : wff = def df-clel () |- ( B e. C <-> E. x ( x = B /\ x e. C ) ) ;
	step 6 : wff = thm 3bitr4g (step 3, step 4, step 5) |- ( A = B -> ( A e. C <-> B e. C ) ) ;
	qed prop 1 = step 6 ;
}

theorem eleq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C e. A <-> C e. B ) ) ;
}

proof of eleq2 {
	var x : set;
	step 1 : wff = thm dfcleq () |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( A = B -> A. x ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm 19_21bi (step 2) |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 4 : wff = thm anbi2d (step 3) |- ( A = B -> ( ( x = C /\ x e. A ) <-> ( x = C /\ x e. B ) ) ) ;
	step 5 : wff = thm exbidv (step 4) |- ( A = B -> ( E. x ( x = C /\ x e. A ) <-> E. x ( x = C /\ x e. B ) ) ) ;
	step 6 : wff = def df-clel () |- ( C e. A <-> E. x ( x = C /\ x e. A ) ) ;
	step 7 : wff = def df-clel () |- ( C e. B <-> E. x ( x = C /\ x e. B ) ) ;
	step 8 : wff = thm 3bitr4g (step 5, step 6, step 7) |- ( A = B -> ( C e. A <-> C e. B ) ) ;
	qed prop 1 = step 8 ;
}

theorem eleq12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> ( A e. C <-> B e. D ) ) ;
}

proof of eleq12 {
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. C <-> B e. C ) ) ;
	step 2 : wff = thm eleq2 () |- ( C = D -> ( B e. C <-> B e. D ) ) ;
	step 3 : wff = thm sylan9bb (step 1, step 2) |- ( ( A = B /\ C = D ) -> ( A e. C <-> B e. D ) ) ;
	qed prop 1 = step 3 ;
}

theorem eleq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A e. C <-> B e. C ) ;
}

proof of eleq1i {
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. C <-> B e. C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. C <-> B e. C ) ;
	qed prop 1 = step 2 ;
}

theorem eleq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C e. A <-> C e. B ) ;
}

proof of eleq2i {
	step 1 : wff = thm eleq2 () |- ( A = B -> ( C e. A <-> C e. B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C e. A <-> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem eleq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A e. C <-> B e. D ) ;
}

proof of eleq12i {
	step 1 : wff = thm eleq2i (hyp 2) |- ( A e. C <-> A e. D ) ;
	step 2 : wff = thm eleq1i (hyp 1) |- ( A e. D <-> B e. D ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A e. C <-> B e. D ) ;
	qed prop 1 = step 3 ;
}

theorem eleq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A e. C <-> B e. C ) ) ;
}

proof of eleq1d {
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. C <-> B e. C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A e. C <-> B e. C ) ) ;
	qed prop 1 = step 2 ;
}

theorem eleq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C e. A <-> C e. B ) ) ;
}

proof of eleq2d {
	step 1 : wff = thm eleq2 () |- ( A = B -> ( C e. A <-> C e. B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C e. A <-> C e. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem eleq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A e. C <-> B e. D ) ) ;
}

proof of eleq12d {
	step 1 : wff = thm eleq2d (hyp 2) |- ( ph -> ( A e. C <-> A e. D ) ) ;
	step 2 : wff = thm eleq1d (hyp 1) |- ( ph -> ( A e. D <-> B e. D ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( A e. C <-> B e. D ) ) ;
	qed prop 1 = step 3 ;
}

theorem eleq1a (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. B -> ( C = A -> C e. B ) ) ;
}

proof of eleq1a {
	step 1 : wff = thm eleq1 () |- ( C = A -> ( C e. B <-> A e. B ) ) ;
	step 2 : wff = thm biimprcd (step 1) |- ( A e. B -> ( C = A -> C e. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem eqeltri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B e. C ;
	-----------------------
	prop 1 : wff = |- A e. C ;
}

proof of eqeltri {
	step 1 : wff = thm eleq1i (hyp 1) |- ( A e. C <-> B e. C ) ;
	step 2 : wff = thm mpbir (hyp 2, step 1) |- A e. C ;
	qed prop 1 = step 2 ;
}

theorem eqeltrri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- A e. C ;
	-----------------------
	prop 1 : wff = |- B e. C ;
}

proof of eqeltrri {
	step 1 : wff = thm eqcomi (hyp 1) |- B = A ;
	step 2 : wff = thm eqeltri (step 1, hyp 2) |- B e. C ;
	qed prop 1 = step 2 ;
}

theorem eleqtri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. B ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- A e. C ;
}

proof of eleqtri {
	step 1 : wff = thm eleq2i (hyp 2) |- ( A e. B <-> A e. C ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- A e. C ;
	qed prop 1 = step 2 ;
}

theorem eleqtrri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. B ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- A e. C ;
}

proof of eleqtrri {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm eleqtri (hyp 1, step 1) |- A e. C ;
	qed prop 1 = step 2 ;
}

theorem eqeltrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B e. C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of eqeltrd {
	step 1 : wff = thm eleq1d (hyp 1) |- ( ph -> ( A e. C <-> B e. C ) ) ;
	step 2 : wff = thm mpbird (hyp 2, step 1) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem eqeltrrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> A e. C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> B e. C ) ;
}

proof of eqeltrrd {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> B = A ) ;
	step 2 : wff = thm eqeltrd (step 1, hyp 2) |- ( ph -> B e. C ) ;
	qed prop 1 = step 2 ;
}

theorem eleqtrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A e. B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of eleqtrd {
	step 1 : wff = thm eleq2d (hyp 2) |- ( ph -> ( A e. B <-> A e. C ) ) ;
	step 2 : wff = thm mpbid (hyp 1, step 1) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem eleqtrrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A e. B ) ;
	hyp 2 : wff = |- ( ph -> C = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of eleqtrrd {
	step 1 : wff = thm eqcomd (hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm eleqtrd (hyp 1, step 1) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eqel (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A e. B ) ;
	hyp 2 : wff = |- C = A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C e. B ) ;
}

proof of syl5eqel {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> C = A ) ;
	step 2 : wff = thm eqeltrd (step 1, hyp 1) |- ( ph -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eqelr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A e. B ) ;
	hyp 2 : wff = |- A = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> C e. B ) ;
}

proof of syl5eqelr {
	step 1 : wff = thm eqcomi (hyp 2) |- C = A ;
	step 2 : wff = thm syl5eqel (hyp 1, step 1) |- ( ph -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eleq (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C e. A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C e. B ) ;
}

proof of syl5eleq {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> C e. A ) ;
	step 2 : wff = thm eleqtrd (step 1, hyp 1) |- ( ph -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eleqr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> B = A ) ;
	hyp 2 : wff = |- C e. A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C e. B ) ;
}

proof of syl5eleqr {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm syl5eleq (step 1, hyp 2) |- ( ph -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eqel (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- B e. C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of syl6eqel {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> B e. C ) ;
	step 2 : wff = thm eqeltrd (hyp 1, step 1) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eqelr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> B = A ) ;
	hyp 2 : wff = |- B e. C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of syl6eqelr {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm syl6eqel (step 1, hyp 2) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eleq (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A e. B ) ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of syl6eleq {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm eleqtrd (hyp 1, step 1) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eleqr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A e. B ) ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> A e. C ) ;
}

proof of syl6eleqr {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm syl6eleq (hyp 1, step 1) |- ( ph -> A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem cleqf (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
}

proof of cleqf {
	step 1 : wff = thm dfcleq () |- ( A = B <-> A. y ( y e. A <-> y e. B ) ) ;
	step 2 : wff = axm ax-17 () |- ( ( x e. A <-> x e. B ) -> A. y ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm hbbi (hyp 1, hyp 2) |- ( ( y e. A <-> y e. B ) -> A. x ( y e. A <-> y e. B ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = y -> ( x e. B <-> y e. B ) ) ;
	step 6 : wff = thm bibi12d (step 4, step 5) |- ( x = y -> ( ( x e. A <-> x e. B ) <-> ( y e. A <-> y e. B ) ) ) ;
	step 7 : wff = thm cbval (step 2, step 3, step 6) |- ( A. x ( x e. A <-> x e. B ) <-> A. y ( y e. A <-> y e. B ) ) ;
	step 8 : wff = thm bitr4i (step 1, step 7) |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	qed prop 1 = step 8 ;
}

theorem nelneq (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. C /\ -. B e. C ) -> -. A = B ) ;
}

proof of nelneq {
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. C <-> B e. C ) ) ;
	step 2 : wff = thm biimpcd (step 1) |- ( A e. C -> ( A = B -> B e. C ) ) ;
	step 3 : wff = thm con3d (step 2) |- ( A e. C -> ( -. B e. C -> -. A = B ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( A e. C /\ -. B e. C ) -> -. A = B ) ;
	qed prop 1 = step 4 ;
}

theorem nelneq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. B /\ -. A e. C ) -> -. B = C ) ;
}

proof of nelneq2 {
	step 1 : wff = thm eleq2 () |- ( B = C -> ( A e. B <-> A e. C ) ) ;
	step 2 : wff = thm biimpcd (step 1) |- ( A e. B -> ( B = C -> A e. C ) ) ;
	step 3 : wff = thm con3d (step 2) |- ( A e. B -> ( -. A e. C -> -. B = C ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( A e. B /\ -. A e. C ) -> -. B = C ) ;
	qed prop 1 = step 4 ;
}

theorem hbxfr (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. A -> A. x y e. A ) ;
}

proof of hbxfr {
	step 1 : wff = thm eleq2i (hyp 1) |- ( y e. A <-> y e. B ) ;
	step 2 : wff = thm eleq2i (hyp 1) |- ( y e. A <-> y e. B ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x y e. A <-> A. x y e. B ) ;
	step 4 : wff = thm 3imtr4i (hyp 2, step 1, step 3) |- ( y e. A -> A. x y e. A ) ;
	qed prop 1 = step 4 ;
}

theorem hblem (x : set, y : set, z : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( z e. A -> A. x z e. A ) ;
}

proof of hblem {
	step 1 : wff = thm eleq1 () |- ( y = z -> ( y e. A <-> z e. A ) ) ;
	step 2 : wff = thm eleq1 () |- ( y = z -> ( y e. A <-> z e. A ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( y = z -> ( A. x y e. A <-> A. x z e. A ) ) ;
	step 4 : wff = thm imbi12d (step 1, step 3) |- ( y = z -> ( ( y e. A -> A. x y e. A ) <-> ( z e. A -> A. x z e. A ) ) ) ;
	step 5 : wff = thm chvarv (step 4, hyp 1) |- ( z e. A -> A. x z e. A ) ;
	qed prop 1 = step 5 ;
}

theorem hbeq (x : set, y : set, z : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( z e. B -> A. x z e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> A. x A = B ) ;
}

proof of hbeq {
	var w : set;
	step 1 : wff = thm hblem (hyp 1) |- ( w e. A -> A. x w e. A ) ;
	step 2 : wff = thm hblem (hyp 2) |- ( w e. B -> A. x w e. B ) ;
	step 3 : wff = thm hbbi (step 1, step 2) |- ( ( w e. A <-> w e. B ) -> A. x ( w e. A <-> w e. B ) ) ;
	step 4 : wff = thm hbal (step 3) |- ( A. w ( w e. A <-> w e. B ) -> A. x A. w ( w e. A <-> w e. B ) ) ;
	step 5 : wff = thm dfcleq () |- ( A = B <-> A. w ( w e. A <-> w e. B ) ) ;
	step 6 : wff = thm dfcleq () |- ( A = B <-> A. w ( w e. A <-> w e. B ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x A = B <-> A. x A. w ( w e. A <-> w e. B ) ) ;
	step 8 : wff = thm 3imtr4i (step 4, step 5, step 7) |- ( A = B -> A. x A = B ) ;
	qed prop 1 = step 8 ;
}

theorem hbel (x : set, y : set, z : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( z e. B -> A. x z e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> A. x A e. B ) ;
}

proof of hbel {
	var w : set;
	step 1 : wff = axm ax-17 () |- ( y e. w -> A. x y e. w ) ;
	step 2 : wff = thm hbeq (step 1, hyp 1) |- ( w = A -> A. x w = A ) ;
	step 3 : wff = thm hblem (hyp 2) |- ( w e. B -> A. x w e. B ) ;
	step 4 : wff = thm hban (step 2, step 3) |- ( ( w = A /\ w e. B ) -> A. x ( w = A /\ w e. B ) ) ;
	step 5 : wff = thm hbex (step 4) |- ( E. w ( w = A /\ w e. B ) -> A. x E. w ( w = A /\ w e. B ) ) ;
	step 6 : wff = def df-clel () |- ( A e. B <-> E. w ( w = A /\ w e. B ) ) ;
	step 7 : wff = def df-clel () |- ( A e. B <-> E. w ( w = A /\ w e. B ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x A e. B <-> A. x E. w ( w = A /\ w e. B ) ) ;
	step 9 : wff = thm 3imtr4i (step 5, step 6, step 8) |- ( A e. B -> A. x A e. B ) ;
	qed prop 1 = step 9 ;
}

theorem hbeleq (x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( y = A -> A. x y = A ) ;
}

proof of hbeleq {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 2 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 3 : wff = thm hbel (step 2, hyp 1) |- ( z e. A -> A. x z e. A ) ;
	step 4 : wff = thm hbeq (step 1, step 3) |- ( y = A -> A. x y = A ) ;
	qed prop 1 = step 4 ;
}

theorem abeq2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) ;
}

proof of abeq2 {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 3 : wff = thm cleqf (step 1, step 2) |- ( A = { x | ph } <-> A. x ( x e. A <-> x e. { x | ph } ) ) ;
	step 4 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 5 : wff = thm bibi2i (step 4) |- ( ( x e. A <-> x e. { x | ph } ) <-> ( x e. A <-> ph ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x ( x e. A <-> x e. { x | ph } ) <-> A. x ( x e. A <-> ph ) ) ;
	step 7 : wff = thm bitri (step 3, step 6) |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem abeq1 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x | ph } = A <-> A. x ( ph <-> x e. A ) ) ;
}

proof of abeq1 {
	step 1 : wff = thm abeq2 () |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) ;
	step 2 : wff = thm eqcom () |- ( { x | ph } = A <-> A = { x | ph } ) ;
	step 3 : wff = thm bicom () |- ( ( ph <-> x e. A ) <-> ( x e. A <-> ph ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x ( ph <-> x e. A ) <-> A. x ( x e. A <-> ph ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( { x | ph } = A <-> A. x ( ph <-> x e. A ) ) ;
	qed prop 1 = step 5 ;
}

theorem abeq2i (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A = { x | ph } ;
	-----------------------
	prop 1 : wff = |- ( x e. A <-> ph ) ;
}

proof of abeq2i {
	step 1 : wff = thm eleq2i (hyp 1) |- ( x e. A <-> x e. { x | ph } ) ;
	step 2 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( x e. A <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem abeq1i (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- { x | ph } = A ;
	-----------------------
	prop 1 : wff = |- ( ph <-> x e. A ) ;
}

proof of abeq1i {
	step 1 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 2 : wff = thm eleq2i (hyp 1) |- ( x e. { x | ph } <-> x e. A ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( ph <-> x e. A ) ;
	qed prop 1 = step 3 ;
}

theorem abeq2d (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A = { x | ps } ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( x e. A <-> ps ) ) ;
}

proof of abeq2d {
	step 1 : wff = thm eleq2d (hyp 1) |- ( ph -> ( x e. A <-> x e. { x | ps } ) ) ;
	step 2 : wff = thm abid () |- ( x e. { x | ps } <-> ps ) ;
	step 3 : wff = thm syl6bb (step 1, step 2) |- ( ph -> ( x e. A <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem eq2ab (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( { x | ph } = { x | ps } <-> A. x ( ph <-> ps ) ) ;
}

proof of eq2ab {
	var y : set;
	step 1 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ps } -> A. x y e. { x | ps } ) ;
	step 3 : wff = thm cleqf (step 1, step 2) |- ( { x | ph } = { x | ps } <-> A. x ( x e. { x | ph } <-> x e. { x | ps } ) ) ;
	step 4 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 5 : wff = thm abid () |- ( x e. { x | ps } <-> ps ) ;
	step 6 : wff = thm bibi12i (step 4, step 5) |- ( ( x e. { x | ph } <-> x e. { x | ps } ) <-> ( ph <-> ps ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x ( x e. { x | ph } <-> x e. { x | ps } ) <-> A. x ( ph <-> ps ) ) ;
	step 8 : wff = thm bitri (step 3, step 7) |- ( { x | ph } = { x | ps } <-> A. x ( ph <-> ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem abbi2i (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A <-> ph ) ;
	-----------------------
	prop 1 : wff = |- A = { x | ph } ;
}

proof of abbi2i {
	step 1 : wff = thm abeq2 () |- ( A = { x | ph } <-> A. x ( x e. A <-> ph ) ) ;
	step 2 : wff = thm mpgbir (step 1, hyp 1) |- A = { x | ph } ;
	qed prop 1 = step 2 ;
}

theorem abbii (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- { x | ph } = { x | ps } ;
}

proof of abbii {
	step 1 : wff = thm eq2ab () |- ( { x | ph } = { x | ps } <-> A. x ( ph <-> ps ) ) ;
	step 2 : wff = thm mpgbir (step 1, hyp 1) |- { x | ph } = { x | ps } ;
	qed prop 1 = step 2 ;
}

theorem abbid (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x | ps } = { x | ch } ) ;
}

proof of abbid {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps <-> ch ) ) ;
	step 2 : wff = thm eq2ab () |- ( { x | ps } = { x | ch } <-> A. x ( ps <-> ch ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> { x | ps } = { x | ch } ) ;
	qed prop 1 = step 3 ;
}

theorem abbidv (ph : wff, ps : wff, ch : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x | ps } = { x | ch } ) ;
}

proof of abbidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm abbid (step 1, hyp 1) |- ( ph -> { x | ps } = { x | ch } ) ;
	qed prop 1 = step 2 ;
}

theorem abbi2dv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. A <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = { x | ps } ) ;
}

proof of abbi2dv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ( x e. A <-> ps ) ) ;
	step 2 : wff = thm abeq2 () |- ( A = { x | ps } <-> A. x ( x e. A <-> ps ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> A = { x | ps } ) ;
	qed prop 1 = step 3 ;
}

theorem abbi1dv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> x e. A ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x | ps } = A ) ;
}

proof of abbi1dv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ( ps <-> x e. A ) ) ;
	step 2 : wff = thm abeq1 () |- ( { x | ps } = A <-> A. x ( ps <-> x e. A ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> { x | ps } = A ) ;
	qed prop 1 = step 3 ;
}

theorem abid2 (x : set, A : class)  {
	prop 1 : wff = |- { x | x e. A } = A ;
}

proof of abid2 {
	step 1 : wff = thm biid () |- ( x e. A <-> x e. A ) ;
	step 2 : wff = thm abbi2i (step 1) |- A = { x | x e. A } ;
	step 3 : wff = thm eqcomi (step 2) |- { x | x e. A } = A ;
	qed prop 1 = step 3 ;
}

theorem clelab (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A e. { x | ph } <-> E. x ( x = A /\ ph ) ) ;
}

proof of clelab {
	var y : set;
	step 1 : wff = def df-clab () |- ( y e. { x | ph } <-> [ y / x ] ph ) ;
	step 2 : wff = thm anbi2i (step 1) |- ( ( y = A /\ y e. { x | ph } ) <-> ( y = A /\ [ y / x ] ph ) ) ;
	step 3 : wff = thm exbii (step 2) |- ( E. y ( y = A /\ y e. { x | ph } ) <-> E. y ( y = A /\ [ y / x ] ph ) ) ;
	step 4 : wff = def df-clel () |- ( A e. { x | ph } <-> E. y ( y = A /\ y e. { x | ph } ) ) ;
	step 5 : wff = axm ax-17 () |- ( ( x = A /\ ph ) -> A. y ( x = A /\ ph ) ) ;
	step 6 : wff = axm ax-17 () |- ( y = A -> A. x y = A ) ;
	step 7 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 8 : wff = thm hban (step 6, step 7) |- ( ( y = A /\ [ y / x ] ph ) -> A. x ( y = A /\ [ y / x ] ph ) ) ;
	step 9 : wff = thm eqeq1 () |- ( x = y -> ( x = A <-> y = A ) ) ;
	step 10 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 11 : wff = thm anbi12d (step 9, step 10) |- ( x = y -> ( ( x = A /\ ph ) <-> ( y = A /\ [ y / x ] ph ) ) ) ;
	step 12 : wff = thm cbvex (step 5, step 8, step 11) |- ( E. x ( x = A /\ ph ) <-> E. y ( y = A /\ [ y / x ] ph ) ) ;
	step 13 : wff = thm 3bitr4i (step 3, step 4, step 12) |- ( A e. { x | ph } <-> E. x ( x = A /\ ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem clabel (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( { x | ph } e. A <-> E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) ;
}

proof of clabel {
	step 1 : wff = def df-clel () |- ( { x | ph } e. A <-> E. y ( y = { x | ph } /\ y e. A ) ) ;
	step 2 : wff = thm abeq2 () |- ( y = { x | ph } <-> A. x ( x e. y <-> ph ) ) ;
	step 3 : wff = thm anbi1i (step 2) |- ( ( y = { x | ph } /\ y e. A ) <-> ( A. x ( x e. y <-> ph ) /\ y e. A ) ) ;
	step 4 : wff = thm ancom () |- ( ( A. x ( x e. y <-> ph ) /\ y e. A ) <-> ( y e. A /\ A. x ( x e. y <-> ph ) ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( y = { x | ph } /\ y e. A ) <-> ( y e. A /\ A. x ( x e. y <-> ph ) ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. y ( y = { x | ph } /\ y e. A ) <-> E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) ;
	step 7 : wff = thm bitri (step 1, step 6) |- ( { x | ph } e. A <-> E. y ( y e. A /\ A. x ( x e. y <-> ph ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem eqsb3lem (x : set, y : set, A : class)  {
	prop 1 : wff = |- ( [ x / y ] y = A <-> x = A ) ;
}

proof of eqsb3lem {
	step 1 : wff = thm equsb2 () |- [ x / y ] x = y ;
	step 2 : wff = thm eqeq1 () |- ( x = y -> ( x = A <-> y = A ) ) ;
	step 3 : wff = thm sbimi (step 2) |- ( [ x / y ] x = y -> [ x / y ] ( x = A <-> y = A ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- [ x / y ] ( x = A <-> y = A ) ;
	step 5 : wff = thm sbbi () |- ( [ x / y ] ( x = A <-> y = A ) <-> ( [ x / y ] x = A <-> [ x / y ] y = A ) ) ;
	step 6 : wff = thm mpbi (step 4, step 5) |- ( [ x / y ] x = A <-> [ x / y ] y = A ) ;
	step 7 : wff = axm ax-17 () |- ( x = A -> A. y x = A ) ;
	step 8 : wff = thm sbf (step 7) |- ( [ x / y ] x = A <-> x = A ) ;
	step 9 : wff = thm bitr3i (step 6, step 8) |- ( [ x / y ] y = A <-> x = A ) ;
	qed prop 1 = step 9 ;
}

theorem eqsb3 (x : set, y : set, A : class)  {
	prop 1 : wff = |- ( [ x / y ] y = A <-> x = A ) ;
}

proof of eqsb3 {
	var w : set;
	step 1 : wff = thm eqsb3lem () |- ( [ w / y ] y = A <-> w = A ) ;
	step 2 : wff = thm sbbii (step 1) |- ( [ x / w ] [ w / y ] y = A <-> [ x / w ] w = A ) ;
	step 3 : wff = axm ax-17 () |- ( y = A -> A. w y = A ) ;
	step 4 : wff = thm sbco2 (step 3) |- ( [ x / w ] [ w / y ] y = A <-> [ x / y ] y = A ) ;
	step 5 : wff = thm eqsb3lem () |- ( [ x / w ] w = A <-> x = A ) ;
	step 6 : wff = thm 3bitr3i (step 2, step 4, step 5) |- ( [ x / y ] y = A <-> x = A ) ;
	qed prop 1 = step 6 ;
}

theorem clelsb3 (x : set, y : set, A : class)  {
	prop 1 : wff = |- ( [ x / y ] y e. A <-> x e. A ) ;
}

proof of clelsb3 {
	var w : set;
	step 1 : wff = thm equsb2 () |- [ w / y ] w = y ;
	step 2 : wff = thm eleq1 () |- ( w = y -> ( w e. A <-> y e. A ) ) ;
	step 3 : wff = thm sbimi (step 2) |- ( [ w / y ] w = y -> [ w / y ] ( w e. A <-> y e. A ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- [ w / y ] ( w e. A <-> y e. A ) ;
	step 5 : wff = thm sbbi () |- ( [ w / y ] ( w e. A <-> y e. A ) <-> ( [ w / y ] w e. A <-> [ w / y ] y e. A ) ) ;
	step 6 : wff = thm mpbi (step 4, step 5) |- ( [ w / y ] w e. A <-> [ w / y ] y e. A ) ;
	step 7 : wff = axm ax-17 () |- ( w e. A -> A. y w e. A ) ;
	step 8 : wff = thm sbf (step 7) |- ( [ w / y ] w e. A <-> w e. A ) ;
	step 9 : wff = thm bitr3i (step 6, step 8) |- ( [ w / y ] y e. A <-> w e. A ) ;
	step 10 : wff = thm sbbii (step 9) |- ( [ x / w ] [ w / y ] y e. A <-> [ x / w ] w e. A ) ;
	step 11 : wff = axm ax-17 () |- ( y e. A -> A. w y e. A ) ;
	step 12 : wff = thm sbco2 (step 11) |- ( [ x / w ] [ w / y ] y e. A <-> [ x / y ] y e. A ) ;
	step 13 : wff = thm equsb2 () |- [ x / w ] x = w ;
	step 14 : wff = thm eleq1 () |- ( x = w -> ( x e. A <-> w e. A ) ) ;
	step 15 : wff = thm sbimi (step 14) |- ( [ x / w ] x = w -> [ x / w ] ( x e. A <-> w e. A ) ) ;
	step 16 : wff = axm ax-mp (step 13, step 15) |- [ x / w ] ( x e. A <-> w e. A ) ;
	step 17 : wff = thm sbbi () |- ( [ x / w ] ( x e. A <-> w e. A ) <-> ( [ x / w ] x e. A <-> [ x / w ] w e. A ) ) ;
	step 18 : wff = thm mpbi (step 16, step 17) |- ( [ x / w ] x e. A <-> [ x / w ] w e. A ) ;
	step 19 : wff = axm ax-17 () |- ( x e. A -> A. w x e. A ) ;
	step 20 : wff = thm sbf (step 19) |- ( [ x / w ] x e. A <-> x e. A ) ;
	step 21 : wff = thm bitr3i (step 18, step 20) |- ( [ x / w ] w e. A <-> x e. A ) ;
	step 22 : wff = thm 3bitr3i (step 10, step 12, step 21) |- ( [ x / y ] y e. A <-> x e. A ) ;
	qed prop 1 = step 22 ;
}

theorem sbab (x : set, y : set, z : set, A : class)  {
	prop 1 : wff = |- ( x = y -> A = { z | [ y / x ] z e. A } ) ;
}

proof of sbab {
	step 1 : wff = thm sbequ12 () |- ( x = y -> ( z e. A <-> [ y / x ] z e. A ) ) ;
	step 2 : wff = thm abbi2dv (step 1) |- ( x = y -> A = { z | [ y / x ] z e. A } ) ;
	qed prop 1 = step 2 ;
}

theorem sbabel (ph : wff, x : set, y : set, z : set, w : set, A : class)  {
	hyp 1 : wff = |- ( w e. A -> A. x w e. A ) ;
	-----------------------
	prop 1 : wff = |- ( [ y / x ] { z | ph } e. A <-> { z | [ y / x ] ph } e. A ) ;
}

proof of sbabel {
	var v : set;
	step 1 : wff = thm sbex () |- ( [ y / x ] E. v ( v = { z | ph } /\ v e. A ) <-> E. v [ y / x ] ( v = { z | ph } /\ v e. A ) ) ;
	step 2 : wff = thm sban () |- ( [ y / x ] ( v = { z | ph } /\ v e. A ) <-> ( [ y / x ] v = { z | ph } /\ [ y / x ] v e. A ) ) ;
	step 3 : wff = thm sbal () |- ( [ y / x ] A. z ( z e. v <-> ph ) <-> A. z [ y / x ] ( z e. v <-> ph ) ) ;
	step 4 : wff = axm ax-17 () |- ( z e. v -> A. x z e. v ) ;
	step 5 : wff = thm sbf (step 4) |- ( [ y / x ] z e. v <-> z e. v ) ;
	step 6 : wff = thm sbrbis (step 5) |- ( [ y / x ] ( z e. v <-> ph ) <-> ( z e. v <-> [ y / x ] ph ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. z [ y / x ] ( z e. v <-> ph ) <-> A. z ( z e. v <-> [ y / x ] ph ) ) ;
	step 8 : wff = thm bitri (step 3, step 7) |- ( [ y / x ] A. z ( z e. v <-> ph ) <-> A. z ( z e. v <-> [ y / x ] ph ) ) ;
	step 9 : wff = thm abeq2 () |- ( v = { z | ph } <-> A. z ( z e. v <-> ph ) ) ;
	step 10 : wff = thm sbbii (step 9) |- ( [ y / x ] v = { z | ph } <-> [ y / x ] A. z ( z e. v <-> ph ) ) ;
	step 11 : wff = thm abeq2 () |- ( v = { z | [ y / x ] ph } <-> A. z ( z e. v <-> [ y / x ] ph ) ) ;
	step 12 : wff = thm 3bitr4i (step 8, step 10, step 11) |- ( [ y / x ] v = { z | ph } <-> v = { z | [ y / x ] ph } ) ;
	step 13 : wff = axm ax-17 () |- ( w e. v -> A. x w e. v ) ;
	step 14 : wff = thm hbel (step 13, hyp 1) |- ( v e. A -> A. x v e. A ) ;
	step 15 : wff = thm sbf (step 14) |- ( [ y / x ] v e. A <-> v e. A ) ;
	step 16 : wff = thm anbi12i (step 12, step 15) |- ( ( [ y / x ] v = { z | ph } /\ [ y / x ] v e. A ) <-> ( v = { z | [ y / x ] ph } /\ v e. A ) ) ;
	step 17 : wff = thm bitri (step 2, step 16) |- ( [ y / x ] ( v = { z | ph } /\ v e. A ) <-> ( v = { z | [ y / x ] ph } /\ v e. A ) ) ;
	step 18 : wff = thm exbii (step 17) |- ( E. v [ y / x ] ( v = { z | ph } /\ v e. A ) <-> E. v ( v = { z | [ y / x ] ph } /\ v e. A ) ) ;
	step 19 : wff = thm bitri (step 1, step 18) |- ( [ y / x ] E. v ( v = { z | ph } /\ v e. A ) <-> E. v ( v = { z | [ y / x ] ph } /\ v e. A ) ) ;
	step 20 : wff = def df-clel () |- ( { z | ph } e. A <-> E. v ( v = { z | ph } /\ v e. A ) ) ;
	step 21 : wff = thm sbbii (step 20) |- ( [ y / x ] { z | ph } e. A <-> [ y / x ] E. v ( v = { z | ph } /\ v e. A ) ) ;
	step 22 : wff = def df-clel () |- ( { z | [ y / x ] ph } e. A <-> E. v ( v = { z | [ y / x ] ph } /\ v e. A ) ) ;
	step 23 : wff = thm 3bitr4i (step 19, step 21, step 22) |- ( [ y / x ] { z | ph } e. A <-> { z | [ y / x ] ph } e. A ) ;
	qed prop 1 = step 23 ;
}

constant {
	symbol =/= ;
}

constant {
	symbol e/ ;
}

rule wne (A : class, B : class) {
	term : wff = # A =/= B ;
}

rule wnel (A : class, B : class) {
	term : wff = # A e/ B ;
}

definition df-ne (A : class, B : class)  {
	defiendum : wff = # A =/= B ;
	definiens : wff = # -. A = B ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-nel (A : class, B : class)  {
	defiendum : wff = # A e/ B ;
	definiens : wff = # -. A e. B ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem nne (A : class, B : class)  {
	prop 1 : wff = |- ( -. A =/= B <-> A = B ) ;
}

proof of nne {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm con2bii (step 1) |- ( A = B <-> -. A =/= B ) ;
	step 3 : wff = thm bicomi (step 2) |- ( -. A =/= B <-> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem neeq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A =/= C <-> B =/= C ) ) ;
}

proof of neeq1 {
	step 1 : wff = thm eqeq1 () |- ( A = B -> ( A = C <-> B = C ) ) ;
	step 2 : wff = thm notbid (step 1) |- ( A = B -> ( -. A = C <-> -. B = C ) ) ;
	step 3 : wff = def df-ne () |- ( A =/= C <-> -. A = C ) ;
	step 4 : wff = def df-ne () |- ( B =/= C <-> -. B = C ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( A =/= C <-> B =/= C ) ) ;
	qed prop 1 = step 5 ;
}

theorem neeq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C =/= A <-> C =/= B ) ) ;
}

proof of neeq2 {
	step 1 : wff = thm eqeq2 () |- ( A = B -> ( C = A <-> C = B ) ) ;
	step 2 : wff = thm notbid (step 1) |- ( A = B -> ( -. C = A <-> -. C = B ) ) ;
	step 3 : wff = def df-ne () |- ( C =/= A <-> -. C = A ) ;
	step 4 : wff = def df-ne () |- ( C =/= B <-> -. C = B ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( C =/= A <-> C =/= B ) ) ;
	qed prop 1 = step 5 ;
}

theorem neeq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A =/= C <-> B =/= C ) ;
}

proof of neeq1i {
	step 1 : wff = thm neeq1 () |- ( A = B -> ( A =/= C <-> B =/= C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A =/= C <-> B =/= C ) ;
	qed prop 1 = step 2 ;
}

theorem neeq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C =/= A <-> C =/= B ) ;
}

proof of neeq2i {
	step 1 : wff = thm neeq2 () |- ( A = B -> ( C =/= A <-> C =/= B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C =/= A <-> C =/= B ) ;
	qed prop 1 = step 2 ;
}

theorem neeq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A =/= C <-> B =/= C ) ) ;
}

proof of neeq1d {
	step 1 : wff = thm neeq1 () |- ( A = B -> ( A =/= C <-> B =/= C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A =/= C <-> B =/= C ) ) ;
	qed prop 1 = step 2 ;
}

theorem neeq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C =/= A <-> C =/= B ) ) ;
}

proof of neeq2d {
	step 1 : wff = thm neeq2 () |- ( A = B -> ( C =/= A <-> C =/= B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C =/= A <-> C =/= B ) ) ;
	qed prop 1 = step 2 ;
}

theorem necon3abii (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B <-> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= B <-> -. ph ) ;
}

proof of necon3abii {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm notbii (hyp 1) |- ( -. A = B <-> -. ph ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A =/= B <-> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem necon3bbii (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph <-> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph <-> A =/= B ) ;
}

proof of necon3bbii {
	step 1 : wff = thm bicomi (hyp 1) |- ( A = B <-> ph ) ;
	step 2 : wff = thm necon3abii (step 1) |- ( A =/= B <-> -. ph ) ;
	step 3 : wff = thm bicomi (step 2) |- ( -. ph <-> A =/= B ) ;
	qed prop 1 = step 3 ;
}

theorem necon3bii (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A = B <-> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= B <-> C =/= D ) ;
}

proof of necon3bii {
	step 1 : wff = thm necon3abii (hyp 1) |- ( A =/= B <-> -. C = D ) ;
	step 2 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( A =/= B <-> C =/= D ) ;
	qed prop 1 = step 3 ;
}

theorem necon3abid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A =/= B <-> -. ps ) ) ;
}

proof of necon3abid {
	step 1 : wff = thm notbid (hyp 1) |- ( ph -> ( -. A = B <-> -. ps ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl5bb (step 1, step 2) |- ( ph -> ( A =/= B <-> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon3bbid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> A = B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps <-> A =/= B ) ) ;
}

proof of necon3bbid {
	step 1 : wff = thm bicomd (hyp 1) |- ( ph -> ( A = B <-> ps ) ) ;
	step 2 : wff = thm necon3abid (step 1) |- ( ph -> ( A =/= B <-> -. ps ) ) ;
	step 3 : wff = thm bicomd (step 2) |- ( ph -> ( -. ps <-> A =/= B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon3bid (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B <-> C = D ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A =/= B <-> C =/= D ) ) ;
}

proof of necon3bid {
	step 1 : wff = thm necon3abid (hyp 1) |- ( ph -> ( A =/= B <-> -. C = D ) ) ;
	step 2 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 3 : wff = thm syl6bbr (step 1, step 2) |- ( ph -> ( A =/= B <-> C =/= D ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon3ad (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> A = B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A =/= B -> -. ps ) ) ;
}

proof of necon3ad {
	step 1 : wff = thm con3d (hyp 1) |- ( ph -> ( -. A = B -> -. ps ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl5ib (step 1, step 2) |- ( ph -> ( A =/= B -> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon3bd (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps -> A =/= B ) ) ;
}

proof of necon3bd {
	step 1 : wff = thm con3d (hyp 1) |- ( ph -> ( -. ps -> -. A = B ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl6ibr (step 1, step 2) |- ( ph -> ( -. ps -> A =/= B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon3d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B -> C = D ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C =/= D -> A =/= B ) ) ;
}

proof of necon3d {
	step 1 : wff = thm necon3ad (hyp 1) |- ( ph -> ( C =/= D -> -. A = B ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl6ibr (step 1, step 2) |- ( ph -> ( C =/= D -> A =/= B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon3i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A = B -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( C =/= D -> A =/= B ) ;
}

proof of necon3i {
	step 1 : wff = thm id () |- ( ( A = B -> C = D ) -> ( A = B -> C = D ) ) ;
	step 2 : wff = thm necon3d (step 1) |- ( ( A = B -> C = D ) -> ( C =/= D -> A =/= B ) ) ;
	step 3 : wff = axm ax-mp (hyp 1, step 2) |- ( C =/= D -> A =/= B ) ;
	qed prop 1 = step 3 ;
}

theorem necon3ai (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= B -> -. ph ) ;
}

proof of necon3ai {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm con3i (hyp 1) |- ( -. A = B -> -. ph ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A =/= B -> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem necon3bi (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph -> A =/= B ) ;
}

proof of necon3bi {
	step 1 : wff = thm con3i (hyp 1) |- ( -. ph -> -. A = B ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( -. ph -> A =/= B ) ;
	qed prop 1 = step 3 ;
}

theorem necon1ai (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( -. ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= B -> ph ) ;
}

proof of necon1ai {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm con1i (hyp 1) |- ( -. A = B -> ph ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A =/= B -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem necon1bi (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A =/= B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph -> A = B ) ;
}

proof of necon1bi {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm sylbir (step 1, hyp 1) |- ( -. A = B -> ph ) ;
	step 3 : wff = thm con1i (step 2) |- ( -. ph -> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem necon1i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A =/= B -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( C =/= D -> A = B ) ;
}

proof of necon1i {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm sylbir (step 1, hyp 1) |- ( -. A = B -> C = D ) ;
	step 3 : wff = thm necon1ai (step 2) |- ( C =/= D -> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem necon2ai (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> -. ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A =/= B ) ;
}

proof of necon2ai {
	step 1 : wff = thm con2i (hyp 1) |- ( ph -> -. A = B ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> A =/= B ) ;
	qed prop 1 = step 3 ;
}

theorem necon2bi (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A =/= B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> -. ph ) ;
}

proof of necon2bi {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> -. A = B ) ;
	step 3 : wff = thm con2i (step 2) |- ( A = B -> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem necon2i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A = B -> C =/= D ) ;
	-----------------------
	prop 1 : wff = |- ( C = D -> A =/= B ) ;
}

proof of necon2i {
	step 1 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( A = B -> -. C = D ) ;
	step 3 : wff = thm necon2ai (step 2) |- ( C = D -> A =/= B ) ;
	qed prop 1 = step 3 ;
}

theorem necon2ad (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B -> -. ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A =/= B ) ) ;
}

proof of necon2ad {
	step 1 : wff = thm con2d (hyp 1) |- ( ph -> ( ps -> -. A = B ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl6ibr (step 1, step 2) |- ( ph -> ( ps -> A =/= B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon2bd (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> A =/= B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = B -> -. ps ) ) ;
}

proof of necon2bd {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl6ib (hyp 1, step 1) |- ( ph -> ( ps -> -. A = B ) ) ;
	step 3 : wff = thm con2d (step 2) |- ( ph -> ( A = B -> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon2d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B -> C =/= D ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C = D -> A =/= B ) ) ;
}

proof of necon2d {
	step 1 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 2 : wff = thm syl6ib (hyp 1, step 1) |- ( ph -> ( A = B -> -. C = D ) ) ;
	step 3 : wff = thm necon2ad (step 2) |- ( ph -> ( C = D -> A =/= B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon1abii (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( -. ph <-> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= B <-> ph ) ;
}

proof of necon1abii {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm con1bii (hyp 1) |- ( -. A = B <-> ph ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A =/= B <-> ph ) ;
	qed prop 1 = step 3 ;
}

theorem necon1bbii (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A =/= B <-> ph ) ;
	-----------------------
	prop 1 : wff = |- ( -. ph <-> A = B ) ;
}

proof of necon1bbii {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm bitr3i (step 1, hyp 1) |- ( -. A = B <-> ph ) ;
	step 3 : wff = thm con1bii (step 2) |- ( -. ph <-> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem necon1abid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( -. ps <-> A = B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A =/= B <-> ps ) ) ;
}

proof of necon1abid {
	step 1 : wff = thm con1bid (hyp 1) |- ( ph -> ( -. A = B <-> ps ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl5bb (step 1, step 2) |- ( ph -> ( A =/= B <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon1bbid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps <-> A = B ) ) ;
}

proof of necon1bbid {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl5bbr (hyp 1, step 1) |- ( ph -> ( -. A = B <-> ps ) ) ;
	step 3 : wff = thm con1bid (step 2) |- ( ph -> ( -. ps <-> A = B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon2abii (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B <-> -. ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph <-> A =/= B ) ;
}

proof of necon2abii {
	step 1 : wff = thm bicomi (hyp 1) |- ( -. ph <-> A = B ) ;
	step 2 : wff = thm necon1abii (step 1) |- ( A =/= B <-> ph ) ;
	step 3 : wff = thm bicomi (step 2) |- ( ph <-> A =/= B ) ;
	qed prop 1 = step 3 ;
}

theorem necon2bbii (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph <-> A =/= B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B <-> -. ph ) ;
}

proof of necon2bbii {
	step 1 : wff = thm bicomi (hyp 1) |- ( A =/= B <-> ph ) ;
	step 2 : wff = thm necon1bbii (step 1) |- ( -. ph <-> A = B ) ;
	step 3 : wff = thm bicomi (step 2) |- ( A = B <-> -. ph ) ;
	qed prop 1 = step 3 ;
}

theorem necon2abid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B <-> -. ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps <-> A =/= B ) ) ;
}

proof of necon2abid {
	step 1 : wff = thm con2bid (hyp 1) |- ( ph -> ( ps <-> -. A = B ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl6bbr (step 1, step 2) |- ( ph -> ( ps <-> A =/= B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon2bbid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> A =/= B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = B <-> -. ps ) ) ;
}

proof of necon2bbid {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl6bb (hyp 1, step 1) |- ( ph -> ( ps <-> -. A = B ) ) ;
	step 3 : wff = thm con2bid (step 2) |- ( ph -> ( A = B <-> -. ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon4ai (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A =/= B -> -. ph ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = B ) ;
}

proof of necon4ai {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm sylbir (step 1, hyp 1) |- ( -. A = B -> -. ph ) ;
	step 3 : wff = thm con4i (step 2) |- ( ph -> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem necon4i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A =/= B -> C =/= D ) ;
	-----------------------
	prop 1 : wff = |- ( C = D -> A = B ) ;
}

proof of necon4i {
	step 1 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( A =/= B -> -. C = D ) ;
	step 3 : wff = thm necon4ai (step 2) |- ( C = D -> A = B ) ;
	qed prop 1 = step 3 ;
}

theorem necon4ad (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B -> -. ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A = B ) ) ;
}

proof of necon4ad {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl5ibr (hyp 1, step 1) |- ( ph -> ( -. A = B -> -. ps ) ) ;
	step 3 : wff = thm con4d (step 2) |- ( ph -> ( ps -> A = B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon4bd (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( -. ps -> A =/= B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = B -> ps ) ) ;
}

proof of necon4bd {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl6ib (hyp 1, step 1) |- ( ph -> ( -. ps -> -. A = B ) ) ;
	step 3 : wff = thm con4d (step 2) |- ( ph -> ( A = B -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon4d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B -> C =/= D ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C = D -> A = B ) ) ;
}

proof of necon4d {
	step 1 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 2 : wff = thm syl6ib (hyp 1, step 1) |- ( ph -> ( A =/= B -> -. C = D ) ) ;
	step 3 : wff = thm necon4ad (step 2) |- ( ph -> ( C = D -> A = B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon4abid (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B <-> -. ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = B <-> ps ) ) ;
}

proof of necon4abid {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl5bbr (hyp 1, step 1) |- ( ph -> ( -. A = B <-> -. ps ) ) ;
	step 3 : wff = thm con4bid (step 2) |- ( ph -> ( A = B <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon4bid (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B <-> C =/= D ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = B <-> C = D ) ) ;
}

proof of necon4bid {
	step 1 : wff = thm necon2bbid (hyp 1) |- ( ph -> ( C = D <-> -. A =/= B ) ) ;
	step 2 : wff = thm nne () |- ( -. A =/= B <-> A = B ) ;
	step 3 : wff = thm syl6rbb (step 1, step 2) |- ( ph -> ( A = B <-> C = D ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon1ad (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( -. ps -> A = B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A =/= B -> ps ) ) ;
}

proof of necon1ad {
	step 1 : wff = thm con1d (hyp 1) |- ( ph -> ( -. A = B -> ps ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm syl5ib (step 1, step 2) |- ( ph -> ( A =/= B -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon1bd (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( -. ps -> A = B ) ) ;
}

proof of necon1bd {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl5ibr (hyp 1, step 1) |- ( ph -> ( -. A = B -> ps ) ) ;
	step 3 : wff = thm con1d (step 2) |- ( ph -> ( -. ps -> A = B ) ) ;
	qed prop 1 = step 3 ;
}

theorem necon1d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> ( A =/= B -> C = D ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C =/= D -> A = B ) ) ;
}

proof of necon1d {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl5ibr (hyp 1, step 1) |- ( ph -> ( -. A = B -> C = D ) ) ;
	step 3 : wff = thm necon1ad (step 2) |- ( ph -> ( C =/= D -> A = B ) ) ;
	qed prop 1 = step 3 ;
}

theorem nebi (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B <-> C = D ) <-> ( A =/= B <-> C =/= D ) ) ;
}

proof of nebi {
	step 1 : wff = thm id () |- ( ( A = B <-> C = D ) -> ( A = B <-> C = D ) ) ;
	step 2 : wff = thm necon3bid (step 1) |- ( ( A = B <-> C = D ) -> ( A =/= B <-> C =/= D ) ) ;
	step 3 : wff = thm id () |- ( ( A =/= B <-> C =/= D ) -> ( A =/= B <-> C =/= D ) ) ;
	step 4 : wff = thm necon4bid (step 3) |- ( ( A =/= B <-> C =/= D ) -> ( A = B <-> C = D ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( A = B <-> C = D ) <-> ( A =/= B <-> C =/= D ) ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_61ne (ph : wff, ps : wff, ch : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( ( ph /\ A =/= B ) -> ps ) ;
	hyp 3 : wff = |- ( ph -> ch ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of pm2_61ne {
	step 1 : wff = thm syl5bir (hyp 1, hyp 3) |- ( A = B -> ( ph -> ps ) ) ;
	step 2 : wff = thm impcom (step 1) |- ( ( ph /\ A = B ) -> ps ) ;
	step 3 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 4 : wff = thm sylan2br (hyp 2, step 3) |- ( ( ph /\ -. A = B ) -> ps ) ;
	step 5 : wff = thm pm2_61dan (step 2, step 4) |- ( ph -> ps ) ;
	qed prop 1 = step 5 ;
}

theorem pm2_61ine (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ph ) ;
	hyp 2 : wff = |- ( A =/= B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of pm2_61ine {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm sylbir (step 1, hyp 2) |- ( -. A = B -> ph ) ;
	step 3 : wff = thm pm2_61i (hyp 1, step 2) |- ph ;
	qed prop 1 = step 3 ;
}

theorem pm2_61dne (ph : wff, ps : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( A = B -> ps ) ) ;
	hyp 2 : wff = |- ( ph -> ( A =/= B -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of pm2_61dne {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm syl5ibr (hyp 2, step 1) |- ( ph -> ( -. A = B -> ps ) ) ;
	step 3 : wff = thm pm2_61d (hyp 1, step 2) |- ( ph -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem necom (A : class, B : class)  {
	prop 1 : wff = |- ( A =/= B <-> B =/= A ) ;
}

proof of necom {
	step 1 : wff = thm eqcom () |- ( A = B <-> B = A ) ;
	step 2 : wff = thm necon3bii (step 1) |- ( A =/= B <-> B =/= A ) ;
	qed prop 1 = step 2 ;
}

theorem necomd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A =/= B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> B =/= A ) ;
}

proof of necomd {
	step 1 : wff = thm necom () |- ( A =/= B <-> B =/= A ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> B =/= A ) ;
	qed prop 1 = step 2 ;
}

theorem neor (ps : wff, A : class, B : class)  {
	prop 1 : wff = |- ( ( A = B \/ ps ) <-> ( A =/= B -> ps ) ) ;
}

proof of neor {
	step 1 : wff = def df-or () |- ( ( A = B \/ ps ) <-> ( -. A = B -> ps ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( A =/= B -> ps ) <-> ( -. A = B -> ps ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( A = B \/ ps ) <-> ( A =/= B -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem neanior (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A =/= B /\ C =/= D ) <-> -. ( A = B \/ C = D ) ) ;
}

proof of neanior {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 3 : wff = thm anbi12i (step 1, step 2) |- ( ( A =/= B /\ C =/= D ) <-> ( -. A = B /\ -. C = D ) ) ;
	step 4 : wff = thm pm4_56 () |- ( ( -. A = B /\ -. C = D ) <-> -. ( A = B \/ C = D ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( A =/= B /\ C =/= D ) <-> -. ( A = B \/ C = D ) ) ;
	qed prop 1 = step 5 ;
}

theorem neorian (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A =/= B \/ C =/= D ) <-> -. ( A = B /\ C = D ) ) ;
}

proof of neorian {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = def df-ne () |- ( C =/= D <-> -. C = D ) ;
	step 3 : wff = thm orbi12i (step 1, step 2) |- ( ( A =/= B \/ C =/= D ) <-> ( -. A = B \/ -. C = D ) ) ;
	step 4 : wff = thm ianor () |- ( -. ( A = B /\ C = D ) <-> ( -. A = B \/ -. C = D ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( A =/= B \/ C =/= D ) <-> -. ( A = B /\ C = D ) ) ;
	qed prop 1 = step 5 ;
}

theorem nemtbir (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- A =/= B ;
	hyp 2 : wff = |- ( ph <-> A = B ) ;
	-----------------------
	prop 1 : wff = |- -. ph ;
}

proof of nemtbir {
	step 1 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- -. A = B ;
	step 3 : wff = thm mtbir (step 2, hyp 2) |- -. ph ;
	qed prop 1 = step 3 ;
}

theorem neleq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A e/ C <-> B e/ C ) ) ;
}

proof of neleq1 {
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. C <-> B e. C ) ) ;
	step 2 : wff = thm notbid (step 1) |- ( A = B -> ( -. A e. C <-> -. B e. C ) ) ;
	step 3 : wff = def df-nel () |- ( A e/ C <-> -. A e. C ) ;
	step 4 : wff = def df-nel () |- ( B e/ C <-> -. B e. C ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( A e/ C <-> B e/ C ) ) ;
	qed prop 1 = step 5 ;
}

theorem neleq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C e/ A <-> C e/ B ) ) ;
}

proof of neleq2 {
	step 1 : wff = thm eleq2 () |- ( A = B -> ( C e. A <-> C e. B ) ) ;
	step 2 : wff = thm notbid (step 1) |- ( A = B -> ( -. C e. A <-> -. C e. B ) ) ;
	step 3 : wff = def df-nel () |- ( C e/ A <-> -. C e. A ) ;
	step 4 : wff = def df-nel () |- ( C e/ B <-> -. C e. B ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( C e/ A <-> C e/ B ) ) ;
	qed prop 1 = step 5 ;
}

theorem hbne (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= B -> A. x A =/= B ) ;
}

proof of hbne {
	step 1 : wff = thm hbeq (hyp 1, hyp 2) |- ( A = B -> A. x A = B ) ;
	step 2 : wff = thm hbn (step 1) |- ( -. A = B -> A. x -. A = B ) ;
	step 3 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 4 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x A =/= B <-> A. x -. A = B ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( A =/= B -> A. x A =/= B ) ;
	qed prop 1 = step 6 ;
}

rule wral (ph : wff, x : set, A : class) {
	term : wff = # A. x e. A ph ;
}

rule wrex (ph : wff, x : set, A : class) {
	term : wff = # E. x e. A ph ;
}

rule wreu (ph : wff, x : set, A : class) {
	term : wff = # E! x e. A ph ;
}

rule crab (ph : wff, x : set, A : class) {
	term : class = # { x e. A | ph } ;
}

definition df-ral (ph : wff, x : set, A : class)  {
	defiendum : wff = # A. x e. A ph ;
	definiens : wff = # A. x ( x e. A -> ph ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-rex (ph : wff, x : set, A : class)  {
	defiendum : wff = # E. x e. A ph ;
	definiens : wff = # E. x ( x e. A /\ ph ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-reu (ph : wff, x : set, A : class)  {
	defiendum : wff = # E! x e. A ph ;
	definiens : wff = # E! x ( x e. A /\ ph ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

definition df-rab (ph : wff, x : set, A : class)  {
	defiendum : class = # { x e. A | ph } ;
	definiens : class = # { x | ( x e. A /\ ph ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem ralnex (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A -. ph <-> -. E. x e. A ph ) ;
}

proof of ralnex {
	step 1 : wff = thm alinexa () |- ( A. x ( x e. A -> -. ph ) <-> -. E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A -. ph <-> A. x ( x e. A -> -. ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. E. x e. A ph <-> -. E. x ( x e. A /\ ph ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( A. x e. A -. ph <-> -. E. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem rexnal (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A -. ph <-> -. A. x e. A ph ) ;
}

proof of rexnal {
	step 1 : wff = thm exanali () |- ( E. x ( x e. A /\ -. ph ) <-> -. A. x ( x e. A -> ph ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A -. ph <-> E. x ( x e. A /\ -. ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. A. x e. A ph <-> -. A. x ( x e. A -> ph ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( E. x e. A -. ph <-> -. A. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem dfral2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ph <-> -. E. x e. A -. ph ) ;
}

proof of dfral2 {
	step 1 : wff = thm rexnal () |- ( E. x e. A -. ph <-> -. A. x e. A ph ) ;
	step 2 : wff = thm con2bii (step 1) |- ( A. x e. A ph <-> -. E. x e. A -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem dfrex2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ph <-> -. A. x e. A -. ph ) ;
}

proof of dfrex2 {
	step 1 : wff = thm ralnex () |- ( A. x e. A -. ph <-> -. E. x e. A ph ) ;
	step 2 : wff = thm con2bii (step 1) |- ( E. x e. A ph <-> -. A. x e. A -. ph ) ;
	qed prop 1 = step 2 ;
}

theorem ralbida (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
}

proof of ralbida {
	step 1 : wff = thm pm5_74da (hyp 2) |- ( ph -> ( ( x e. A -> ps ) <-> ( x e. A -> ch ) ) ) ;
	step 2 : wff = thm albid (hyp 1, step 1) |- ( ph -> ( A. x ( x e. A -> ps ) <-> A. x ( x e. A -> ch ) ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 4 : wff = def df-ral () |- ( A. x e. A ch <-> A. x ( x e. A -> ch ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
	qed prop 1 = step 5 ;
}

theorem rexbida (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
}

proof of rexbida {
	step 1 : wff = thm pm5_32da (hyp 2) |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. A /\ ch ) ) ) ;
	step 2 : wff = thm exbid (hyp 1, step 1) |- ( ph -> ( E. x ( x e. A /\ ps ) <-> E. x ( x e. A /\ ch ) ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 4 : wff = def df-rex () |- ( E. x e. A ch <-> E. x ( x e. A /\ ch ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
	qed prop 1 = step 5 ;
}

theorem ralbidva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
}

proof of ralbidva {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm ralbida (step 1, hyp 1) |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem rexbidva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
}

proof of rexbidva {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm rexbida (step 1, hyp 1) |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem ralbid (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
}

proof of ralbid {
	step 1 : wff = thm adantr (hyp 2) |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm ralbida (hyp 1, step 1) |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem rexbid (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
}

proof of rexbid {
	step 1 : wff = thm adantr (hyp 2) |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm rexbida (hyp 1, step 1) |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem ralbidv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
}

proof of ralbidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm ralbid (step 1, hyp 1) |- ( ph -> ( A. x e. A ps <-> A. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem rexbidv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
}

proof of rexbidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm rexbid (step 1, hyp 1) |- ( ph -> ( E. x e. A ps <-> E. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem ralbidv2 (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ( x e. A -> ps ) <-> ( x e. B -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) ;
}

proof of ralbidv2 {
	step 1 : wff = thm albidv (hyp 1) |- ( ph -> ( A. x ( x e. A -> ps ) <-> A. x ( x e. B -> ch ) ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. B ch <-> A. x ( x e. B -> ch ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem rexbidv2 (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. B /\ ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) ;
}

proof of rexbidv2 {
	step 1 : wff = thm exbidv (hyp 1) |- ( ph -> ( E. x ( x e. A /\ ps ) <-> E. x ( x e. B /\ ch ) ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. B ch <-> E. x ( x e. B /\ ch ) ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem ralbii (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A. x e. A ps ) ;
}

proof of ralbii {
	step 1 : wff = thm biid () |- ( ph <-> ph ) ;
	step 2 : wff = thm biid () |- ( ph <-> ph ) ;
	step 3 : wff = thm hbth (step 2) |- ( ( ph <-> ph ) -> A. x ( ph <-> ph ) ) ;
	step 4 : wff = thm a1i (hyp 1) |- ( ( ph <-> ph ) -> ( ph <-> ps ) ) ;
	step 5 : wff = thm ralbid (step 3, step 4) |- ( ( ph <-> ph ) -> ( A. x e. A ph <-> A. x e. A ps ) ) ;
	step 6 : wff = axm ax-mp (step 1, step 5) |- ( A. x e. A ph <-> A. x e. A ps ) ;
	qed prop 1 = step 6 ;
}

theorem rexbii (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph <-> E. x e. A ps ) ;
}

proof of rexbii {
	step 1 : wff = thm biid () |- ( ph <-> ph ) ;
	step 2 : wff = thm biid () |- ( ph <-> ph ) ;
	step 3 : wff = thm hbth (step 2) |- ( ( ph <-> ph ) -> A. x ( ph <-> ph ) ) ;
	step 4 : wff = thm a1i (hyp 1) |- ( ( ph <-> ph ) -> ( ph <-> ps ) ) ;
	step 5 : wff = thm rexbid (step 3, step 4) |- ( ( ph <-> ph ) -> ( E. x e. A ph <-> E. x e. A ps ) ) ;
	step 6 : wff = axm ax-mp (step 1, step 5) |- ( E. x e. A ph <-> E. x e. A ps ) ;
	qed prop 1 = step 6 ;
}

theorem 2ralbii (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A A. y e. B ph <-> A. x e. A A. y e. B ps ) ;
}

proof of 2ralbii {
	step 1 : wff = thm ralbii (hyp 1) |- ( A. y e. B ph <-> A. y e. B ps ) ;
	step 2 : wff = thm ralbii (step 1) |- ( A. x e. A A. y e. B ph <-> A. x e. A A. y e. B ps ) ;
	qed prop 1 = step 2 ;
}

theorem 2rexbii (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) ;
}

proof of 2rexbii {
	step 1 : wff = thm rexbii (hyp 1) |- ( E. y e. B ph <-> E. y e. B ps ) ;
	step 2 : wff = thm rexbii (step 1) |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) ;
	qed prop 1 = step 2 ;
}

theorem ralbii2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A -> ph ) <-> ( x e. B -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A. x e. B ps ) ;
}

proof of ralbii2 {
	step 1 : wff = thm albii (hyp 1) |- ( A. x ( x e. A -> ph ) <-> A. x ( x e. B -> ps ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. B ps <-> A. x ( x e. B -> ps ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( A. x e. A ph <-> A. x e. B ps ) ;
	qed prop 1 = step 4 ;
}

theorem rexbii2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ ph ) <-> ( x e. B /\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph <-> E. x e. B ps ) ;
}

proof of rexbii2 {
	step 1 : wff = thm exbii (hyp 1) |- ( E. x ( x e. A /\ ph ) <-> E. x ( x e. B /\ ps ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. B ps <-> E. x ( x e. B /\ ps ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( E. x e. A ph <-> E. x e. B ps ) ;
	qed prop 1 = step 4 ;
}

theorem ralbiia (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A. x e. A ps ) ;
}

proof of ralbiia {
	step 1 : wff = thm pm5_74i (hyp 1) |- ( ( x e. A -> ph ) <-> ( x e. A -> ps ) ) ;
	step 2 : wff = thm ralbii2 (step 1) |- ( A. x e. A ph <-> A. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem rexbiia (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph <-> E. x e. A ps ) ;
}

proof of rexbiia {
	step 1 : wff = thm pm5_32i (hyp 1) |- ( ( x e. A /\ ph ) <-> ( x e. A /\ ps ) ) ;
	step 2 : wff = thm rexbii2 (step 1) |- ( E. x e. A ph <-> E. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem 2rexbiia (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ y e. B ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) ;
}

proof of 2rexbiia {
	step 1 : wff = thm rexbidva (hyp 1) |- ( x e. A -> ( E. y e. B ph <-> E. y e. B ps ) ) ;
	step 2 : wff = thm rexbiia (step 1) |- ( E. x e. A E. y e. B ph <-> E. x e. A E. y e. B ps ) ;
	qed prop 1 = step 2 ;
}

theorem r2al (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. B ph <-> A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) ;
}

proof of r2al {
	step 1 : wff = def df-ral () |- ( A. x e. A A. y e. B ph <-> A. x ( x e. A -> A. y e. B ph ) ) ;
	step 2 : wff = thm 19_21v () |- ( A. y ( x e. A -> ( y e. B -> ph ) ) <-> ( x e. A -> A. y ( y e. B -> ph ) ) ) ;
	step 3 : wff = thm impexp () |- ( ( ( x e. A /\ y e. B ) -> ph ) <-> ( x e. A -> ( y e. B -> ph ) ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. y ( ( x e. A /\ y e. B ) -> ph ) <-> A. y ( x e. A -> ( y e. B -> ph ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. y e. B ph <-> A. y ( y e. B -> ph ) ) ;
	step 6 : wff = thm imbi2i (step 5) |- ( ( x e. A -> A. y e. B ph ) <-> ( x e. A -> A. y ( y e. B -> ph ) ) ) ;
	step 7 : wff = thm 3bitr4i (step 2, step 4, step 6) |- ( A. y ( ( x e. A /\ y e. B ) -> ph ) <-> ( x e. A -> A. y e. B ph ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x A. y ( ( x e. A /\ y e. B ) -> ph ) <-> A. x ( x e. A -> A. y e. B ph ) ) ;
	step 9 : wff = thm bitr4i (step 1, step 8) |- ( A. x e. A A. y e. B ph <-> A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem 2ralbida (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> A. y ph ) ;
	hyp 3 : wff = |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) ;
}

proof of 2ralbida {
	step 1 : wff = axm ax-17 () |- ( x e. A -> A. y x e. A ) ;
	step 2 : wff = thm hban (hyp 2, step 1) |- ( ( ph /\ x e. A ) -> A. y ( ph /\ x e. A ) ) ;
	step 3 : wff = thm anassrs (hyp 3) |- ( ( ( ph /\ x e. A ) /\ y e. B ) -> ( ps <-> ch ) ) ;
	step 4 : wff = thm ralbida (step 2, step 3) |- ( ( ph /\ x e. A ) -> ( A. y e. B ps <-> A. y e. B ch ) ) ;
	step 5 : wff = thm ralbida (hyp 1, step 4) |- ( ph -> ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) ;
	qed prop 1 = step 5 ;
}

theorem 2ralbidva (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) ;
}

proof of 2ralbidva {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 3 : wff = thm 2ralbida (step 1, step 2, hyp 1) |- ( ph -> ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 2rexbidva (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) ;
}

proof of 2rexbidva {
	step 1 : wff = thm anassrs (hyp 1) |- ( ( ( ph /\ x e. A ) /\ y e. B ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm rexbidva (step 1) |- ( ( ph /\ x e. A ) -> ( E. y e. B ps <-> E. y e. B ch ) ) ;
	step 3 : wff = thm rexbidva (step 2) |- ( ph -> ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem 2ralbidv (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) ;
}

proof of 2ralbidv {
	step 1 : wff = thm ralbidv (hyp 1) |- ( ph -> ( A. y e. B ps <-> A. y e. B ch ) ) ;
	step 2 : wff = thm ralbidv (step 1) |- ( ph -> ( A. x e. A A. y e. B ps <-> A. x e. A A. y e. B ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem 2rexbidv (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) ;
}

proof of 2rexbidv {
	step 1 : wff = thm rexbidv (hyp 1) |- ( ph -> ( E. y e. B ps <-> E. y e. B ch ) ) ;
	step 2 : wff = thm rexbidv (step 1) |- ( ph -> ( E. x e. A E. y e. B ps <-> E. x e. A E. y e. B ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem rexralbidv (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A A. y e. B ps <-> E. x e. A A. y e. B ch ) ) ;
}

proof of rexralbidv {
	step 1 : wff = thm ralbidv (hyp 1) |- ( ph -> ( A. y e. B ps <-> A. y e. B ch ) ) ;
	step 2 : wff = thm rexbidv (step 1) |- ( ph -> ( E. x e. A A. y e. B ps <-> E. x e. A A. y e. B ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem ralinexa (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph -> -. ps ) <-> -. E. x e. A ( ph /\ ps ) ) ;
}

proof of ralinexa {
	step 1 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 2 : wff = thm ralbii (step 1) |- ( A. x e. A ( ph -> -. ps ) <-> A. x e. A -. ( ph /\ ps ) ) ;
	step 3 : wff = thm ralnex () |- ( A. x e. A -. ( ph /\ ps ) <-> -. E. x e. A ( ph /\ ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x e. A ( ph -> -. ps ) <-> -. E. x e. A ( ph /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem rexanali (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph /\ -. ps ) <-> -. A. x e. A ( ph -> ps ) ) ;
}

proof of rexanali {
	step 1 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 2 : wff = thm rexbii (step 1) |- ( E. x e. A ( ph /\ -. ps ) <-> E. x e. A -. ( ph -> ps ) ) ;
	step 3 : wff = thm rexnal () |- ( E. x e. A -. ( ph -> ps ) <-> -. A. x e. A ( ph -> ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x e. A ( ph /\ -. ps ) <-> -. A. x e. A ( ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem risset (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B <-> E. x e. B x = A ) ;
}

proof of risset {
	step 1 : wff = thm exancom () |- ( E. x ( x e. B /\ x = A ) <-> E. x ( x = A /\ x e. B ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. B x = A <-> E. x ( x e. B /\ x = A ) ) ;
	step 3 : wff = def df-clel () |- ( A e. B <-> E. x ( x = A /\ x e. B ) ) ;
	step 4 : wff = thm 3bitr4ri (step 1, step 2, step 3) |- ( A e. B <-> E. x e. B x = A ) ;
	qed prop 1 = step 4 ;
}

theorem hbral (ph : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. y e. A ph -> A. x A. y e. A ph ) ;
}

proof of hbral {
	step 1 : wff = thm hbim (hyp 1, hyp 2) |- ( ( y e. A -> ph ) -> A. x ( y e. A -> ph ) ) ;
	step 2 : wff = thm hbal (step 1) |- ( A. y ( y e. A -> ph ) -> A. x A. y ( y e. A -> ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. y e. A ph <-> A. y ( y e. A -> ph ) ) ;
	step 4 : wff = def df-ral () |- ( A. y e. A ph <-> A. y ( y e. A -> ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x A. y e. A ph <-> A. x A. y ( y e. A -> ph ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( A. y e. A ph -> A. x A. y e. A ph ) ;
	qed prop 1 = step 6 ;
}

theorem hbra1 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ph -> A. x A. x e. A ph ) ;
}

proof of hbra1 {
	step 1 : wff = thm hba1 () |- ( A. x ( x e. A -> ph ) -> A. x A. x ( x e. A -> ph ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x A. x e. A ph <-> A. x A. x ( x e. A -> ph ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( A. x e. A ph -> A. x A. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem hbrex (ph : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( E. y e. A ph -> A. x E. y e. A ph ) ;
}

proof of hbrex {
	step 1 : wff = thm hban (hyp 1, hyp 2) |- ( ( y e. A /\ ph ) -> A. x ( y e. A /\ ph ) ) ;
	step 2 : wff = thm hbex (step 1) |- ( E. y ( y e. A /\ ph ) -> A. x E. y ( y e. A /\ ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. y e. A ph <-> E. y ( y e. A /\ ph ) ) ;
	step 4 : wff = def df-rex () |- ( E. y e. A ph <-> E. y ( y e. A /\ ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x E. y e. A ph <-> A. x E. y ( y e. A /\ ph ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( E. y e. A ph -> A. x E. y e. A ph ) ;
	qed prop 1 = step 6 ;
}

theorem hbre1 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ph -> A. x E. x e. A ph ) ;
}

proof of hbre1 {
	step 1 : wff = thm hbe1 () |- ( E. x ( x e. A /\ ph ) -> A. x E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x E. x e. A ph <-> A. x E. x ( x e. A /\ ph ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( E. x e. A ph -> A. x E. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem r3al (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. B A. z e. C ph <-> A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ) ;
}

proof of r3al {
	step 1 : wff = def df-ral () |- ( A. x e. A A. y A. z ( ( y e. B /\ z e. C ) -> ph ) <-> A. x ( x e. A -> A. y A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 2 : wff = thm r2al () |- ( A. y e. B A. z e. C ph <-> A. y A. z ( ( y e. B /\ z e. C ) -> ph ) ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. A A. y e. B A. z e. C ph <-> A. x e. A A. y A. z ( ( y e. B /\ z e. C ) -> ph ) ) ;
	step 4 : wff = thm 3anass () |- ( ( x e. A /\ y e. B /\ z e. C ) <-> ( x e. A /\ ( y e. B /\ z e. C ) ) ) ;
	step 5 : wff = thm imbi1i (step 4) |- ( ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> ( ( x e. A /\ ( y e. B /\ z e. C ) ) -> ph ) ) ;
	step 6 : wff = thm impexp () |- ( ( ( x e. A /\ ( y e. B /\ z e. C ) ) -> ph ) <-> ( x e. A -> ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 7 : wff = thm bitri (step 5, step 6) |- ( ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> ( x e. A -> ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> A. z ( x e. A -> ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 9 : wff = thm 19_21v () |- ( A. z ( x e. A -> ( ( y e. B /\ z e. C ) -> ph ) ) <-> ( x e. A -> A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 10 : wff = thm bitri (step 8, step 9) |- ( A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> ( x e. A -> A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 11 : wff = thm albii (step 10) |- ( A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> A. y ( x e. A -> A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 12 : wff = thm 19_21v () |- ( A. y ( x e. A -> A. z ( ( y e. B /\ z e. C ) -> ph ) ) <-> ( x e. A -> A. y A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 13 : wff = thm bitri (step 11, step 12) |- ( A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> ( x e. A -> A. y A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 14 : wff = thm albii (step 13) |- ( A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) <-> A. x ( x e. A -> A. y A. z ( ( y e. B /\ z e. C ) -> ph ) ) ) ;
	step 15 : wff = thm 3bitr4i (step 1, step 3, step 14) |- ( A. x e. A A. y e. B A. z e. C ph <-> A. x A. y A. z ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ) ;
	qed prop 1 = step 15 ;
}

theorem r2ex (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( E. x e. A E. y e. B ph <-> E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) ;
}

proof of r2ex {
	step 1 : wff = def df-rex () |- ( E. x e. A E. y e. B ph <-> E. x ( x e. A /\ E. y e. B ph ) ) ;
	step 2 : wff = thm 19_42v () |- ( E. y ( x e. A /\ ( y e. B /\ ph ) ) <-> ( x e. A /\ E. y ( y e. B /\ ph ) ) ) ;
	step 3 : wff = thm anass () |- ( ( ( x e. A /\ y e. B ) /\ ph ) <-> ( x e. A /\ ( y e. B /\ ph ) ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. y ( ( x e. A /\ y e. B ) /\ ph ) <-> E. y ( x e. A /\ ( y e. B /\ ph ) ) ) ;
	step 5 : wff = def df-rex () |- ( E. y e. B ph <-> E. y ( y e. B /\ ph ) ) ;
	step 6 : wff = thm anbi2i (step 5) |- ( ( x e. A /\ E. y e. B ph ) <-> ( x e. A /\ E. y ( y e. B /\ ph ) ) ) ;
	step 7 : wff = thm 3bitr4i (step 2, step 4, step 6) |- ( E. y ( ( x e. A /\ y e. B ) /\ ph ) <-> ( x e. A /\ E. y e. B ph ) ) ;
	step 8 : wff = thm exbii (step 7) |- ( E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) <-> E. x ( x e. A /\ E. y e. B ph ) ) ;
	step 9 : wff = thm bitr4i (step 1, step 8) |- ( E. x e. A E. y e. B ph <-> E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem alral (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x ph -> A. x e. A ph ) ;
}

proof of alral {
	step 1 : wff = axm ax-1 () |- ( ph -> ( x e. A -> ph ) ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ph -> A. x ( x e. A -> ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( A. x ph -> A. x e. A ph ) ;
	qed prop 1 = step 4 ;
}

theorem rexex (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ph -> E. x ph ) ;
}

proof of rexex {
	step 1 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( x e. A /\ ph ) -> ph ) ;
	step 3 : wff = thm 19_22i (step 2) |- ( E. x ( x e. A /\ ph ) -> E. x ph ) ;
	step 4 : wff = thm sylbi (step 1, step 3) |- ( E. x e. A ph -> E. x ph ) ;
	qed prop 1 = step 4 ;
}

theorem ra4 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ph -> ( x e. A -> ph ) ) ;
}

proof of ra4 {
	step 1 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ( x e. A -> ph ) -> ( x e. A -> ph ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A. x e. A ph -> ( x e. A -> ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem ra4e (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( x e. A /\ ph ) -> E. x e. A ph ) ;
}

proof of ra4e {
	step 1 : wff = thm 19_8a () |- ( ( x e. A /\ ph ) -> E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ( x e. A /\ ph ) -> E. x e. A ph ) ;
	qed prop 1 = step 3 ;
}

theorem ra42 (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. B ph -> ( ( x e. A /\ y e. B ) -> ph ) ) ;
}

proof of ra42 {
	step 1 : wff = thm ra4 () |- ( A. x e. A A. y e. B ph -> ( x e. A -> A. y e. B ph ) ) ;
	step 2 : wff = thm ra4 () |- ( A. y e. B ph -> ( y e. B -> ph ) ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( A. x e. A A. y e. B ph -> ( x e. A -> ( y e. B -> ph ) ) ) ;
	step 4 : wff = thm imp3a (step 3) |- ( A. x e. A A. y e. B ph -> ( ( x e. A /\ y e. B ) -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem rspec (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A. x e. A ph ;
	-----------------------
	prop 1 : wff = |- ( x e. A -> ph ) ;
}

proof of rspec {
	step 1 : wff = thm ra4 () |- ( A. x e. A ph -> ( x e. A -> ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( x e. A -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem rgen (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ph ) ;
	-----------------------
	prop 1 : wff = |- A. x e. A ph ;
}

proof of rgen {
	step 1 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 2 : wff = thm mpgbir (step 1, hyp 1) |- A. x e. A ph ;
	qed prop 1 = step 2 ;
}

theorem rgen2a (ph : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ y e. A ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- A. x e. A A. y e. A ph ;
}

proof of rgen2a {
	var z : set;
	step 1 : wff = thm ex (hyp 1) |- ( x e. A -> ( y e. A -> ph ) ) ;
	step 2 : wff = axm ax-gen (step 1) |- A. y ( x e. A -> ( y e. A -> ph ) ) ;
	step 3 : wff = thm eleq1 () |- ( y = x -> ( y e. A <-> x e. A ) ) ;
	step 4 : wff = thm a4s (step 3) |- ( A. y y = x -> ( y e. A <-> x e. A ) ) ;
	step 5 : wff = thm imbi1d (step 4) |- ( A. y y = x -> ( ( y e. A -> ( y e. A -> ph ) ) <-> ( x e. A -> ( y e. A -> ph ) ) ) ) ;
	step 6 : wff = thm dral2 (step 5) |- ( A. y y = x -> ( A. y ( y e. A -> ( y e. A -> ph ) ) <-> A. y ( x e. A -> ( y e. A -> ph ) ) ) ) ;
	step 7 : wff = thm mpbiri (step 2, step 6) |- ( A. y y = x -> A. y ( y e. A -> ( y e. A -> ph ) ) ) ;
	step 8 : wff = thm pm2_43 () |- ( ( y e. A -> ( y e. A -> ph ) ) -> ( y e. A -> ph ) ) ;
	step 9 : wff = thm 19_20i (step 8) |- ( A. y ( y e. A -> ( y e. A -> ph ) ) -> A. y ( y e. A -> ph ) ) ;
	step 10 : wff = axm ax-1 () |- ( A. y ( y e. A -> ph ) -> ( x e. A -> A. y ( y e. A -> ph ) ) ) ;
	step 11 : wff = thm 3syl (step 7, step 9, step 10) |- ( A. y y = x -> ( x e. A -> A. y ( y e. A -> ph ) ) ) ;
	step 12 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 13 : wff = thm eleq1 () |- ( z = x -> ( z e. A <-> x e. A ) ) ;
	step 14 : wff = thm dvelim (step 12, step 13) |- ( -. A. y y = x -> ( x e. A -> A. y x e. A ) ) ;
	step 15 : wff = thm ex (hyp 1) |- ( x e. A -> ( y e. A -> ph ) ) ;
	step 16 : wff = thm 19_20i (step 15) |- ( A. y x e. A -> A. y ( y e. A -> ph ) ) ;
	step 17 : wff = thm syl6 (step 14, step 16) |- ( -. A. y y = x -> ( x e. A -> A. y ( y e. A -> ph ) ) ) ;
	step 18 : wff = thm pm2_61i (step 11, step 17) |- ( x e. A -> A. y ( y e. A -> ph ) ) ;
	step 19 : wff = def df-ral () |- ( A. y e. A ph <-> A. y ( y e. A -> ph ) ) ;
	step 20 : wff = thm sylibr (step 18, step 19) |- ( x e. A -> A. y e. A ph ) ;
	step 21 : wff = thm rgen (step 20) |- A. x e. A A. y e. A ph ;
	qed prop 1 = step 21 ;
}

theorem mprg (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( A. x e. A ph -> ps ) ;
	hyp 2 : wff = |- ( x e. A -> ph ) ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of mprg {
	step 1 : wff = thm rgen (hyp 2) |- A. x e. A ph ;
	step 2 : wff = axm ax-mp (step 1, hyp 1) |- ps ;
	qed prop 1 = step 2 ;
}

theorem mprgbir (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph <-> A. x e. A ps ) ;
	hyp 2 : wff = |- ( x e. A -> ps ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of mprgbir {
	step 1 : wff = thm rgen (hyp 2) |- A. x e. A ps ;
	step 2 : wff = thm mpbir (step 1, hyp 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem r19_20 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph -> ps ) -> ( A. x e. A ph -> A. x e. A ps ) ) ;
}

proof of r19_20 {
	step 1 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 2 : wff = axm ax-2 () |- ( ( x e. A -> ( ph -> ps ) ) -> ( ( x e. A -> ph ) -> ( x e. A -> ps ) ) ) ;
	step 3 : wff = thm 19_20ii (step 2) |- ( A. x ( x e. A -> ( ph -> ps ) ) -> ( A. x ( x e. A -> ph ) -> A. x ( x e. A -> ps ) ) ) ;
	step 4 : wff = thm sylbi (step 1, step 3) |- ( A. x e. A ( ph -> ps ) -> ( A. x ( x e. A -> ph ) -> A. x ( x e. A -> ps ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 6 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 7 : wff = thm 3imtr4g (step 4, step 5, step 6) |- ( A. x e. A ( ph -> ps ) -> ( A. x e. A ph -> A. x e. A ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem r19_20i2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A -> ph ) -> ( x e. B -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph -> A. x e. B ps ) ;
}

proof of r19_20i2 {
	step 1 : wff = thm 19_20i (hyp 1) |- ( A. x ( x e. A -> ph ) -> A. x ( x e. B -> ps ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. B ps <-> A. x ( x e. B -> ps ) ) ;
	step 4 : wff = thm 3imtr4i (step 1, step 2, step 3) |- ( A. x e. A ph -> A. x e. B ps ) ;
	qed prop 1 = step 4 ;
}

theorem r19_20i (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph -> A. x e. A ps ) ;
}

proof of r19_20i {
	step 1 : wff = thm a2i (hyp 1) |- ( ( x e. A -> ph ) -> ( x e. A -> ps ) ) ;
	step 2 : wff = thm r19_20i2 (step 1) |- ( A. x e. A ph -> A. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_20ia (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ ph ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph -> A. x e. A ps ) ;
}

proof of r19_20ia {
	step 1 : wff = thm ex (hyp 1) |- ( x e. A -> ( ph -> ps ) ) ;
	step 2 : wff = thm r19_20i (step 1) |- ( A. x e. A ph -> A. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_20si (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph -> A. x e. A ps ) ;
}

proof of r19_20si {
	step 1 : wff = thm a1i (hyp 1) |- ( x e. A -> ( ph -> ps ) ) ;
	step 2 : wff = thm r19_20i (step 1) |- ( A. x e. A ph -> A. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_20sii (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
}

proof of r19_20sii {
	step 1 : wff = thm r19_20si (hyp 1) |- ( A. x e. A ph -> A. x e. A ( ps -> ch ) ) ;
	step 2 : wff = thm r19_20 () |- ( A. x e. A ( ps -> ch ) -> ( A. x e. A ps -> A. x e. A ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A. x e. A ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_20da (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
}

proof of r19_20da {
	step 1 : wff = thm ex (hyp 2) |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm a2d (step 1) |- ( ph -> ( ( x e. A -> ps ) -> ( x e. A -> ch ) ) ) ;
	step 3 : wff = thm 19_20d (hyp 1, step 2) |- ( ph -> ( A. x ( x e. A -> ps ) -> A. x ( x e. A -> ch ) ) ) ;
	step 4 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ch <-> A. x ( x e. A -> ch ) ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem r19_20dva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
}

proof of r19_20dva {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm r19_20da (step 1, hyp 1) |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_20sdv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
}

proof of r19_20sdv {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	step 2 : wff = thm r19_20dva (step 1) |- ( ph -> ( A. x e. A ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_20dv2 (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ( x e. A -> ps ) -> ( x e. B -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps -> A. x e. B ch ) ) ;
}

proof of r19_20dv2 {
	step 1 : wff = thm 19_20dv (hyp 1) |- ( ph -> ( A. x ( x e. A -> ps ) -> A. x ( x e. B -> ch ) ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. B ch <-> A. x ( x e. B -> ch ) ) ;
	step 4 : wff = thm 3imtr4g (step 1, step 2, step 3) |- ( ph -> ( A. x e. A ps -> A. x e. B ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_21ai (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( x e. A -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x e. A ps ) ;
}

proof of r19_21ai {
	step 1 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( x e. A -> ps ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> A. x e. A ps ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21aiv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. A -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x e. A ps ) ;
}

proof of r19_21aiv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm r19_21ai (step 1, hyp 1) |- ( ph -> A. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_21aiva (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x e. A ps ) ;
}

proof of r19_21aiva {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( x e. A -> ps ) ) ;
	step 2 : wff = thm r19_21aiv (step 1) |- ( ph -> A. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_21t (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x ( ph -> A. x ph ) -> ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) ;
}

proof of r19_21t {
	step 1 : wff = thm 19_21t () |- ( A. x ( ph -> A. x ph ) -> ( A. x ( ph -> ( x e. A -> ps ) ) <-> ( ph -> A. x ( x e. A -> ps ) ) ) ) ;
	step 2 : wff = thm bi2_04 () |- ( ( x e. A -> ( ph -> ps ) ) <-> ( ph -> ( x e. A -> ps ) ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( x e. A -> ( ph -> ps ) ) <-> A. x ( ph -> ( x e. A -> ps ) ) ) ;
	step 4 : wff = thm syl5bb (step 1, step 3) |- ( A. x ( ph -> A. x ph ) -> ( A. x ( x e. A -> ( ph -> ps ) ) <-> ( ph -> A. x ( x e. A -> ps ) ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 6 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 7 : wff = thm imbi2i (step 6) |- ( ( ph -> A. x e. A ps ) <-> ( ph -> A. x ( x e. A -> ps ) ) ) ;
	step 8 : wff = thm 3bitr4g (step 4, step 5, step 7) |- ( A. x ( ph -> A. x ph ) -> ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem r19_21v (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ;
}

proof of r19_21v {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = axm ax-gen (step 1) |- A. x ( ph -> A. x ph ) ;
	step 3 : wff = thm r19_21t () |- ( A. x ( ph -> A. x ph ) -> ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- ( A. x e. A ( ph -> ps ) <-> ( ph -> A. x e. A ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_21ad (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x e. A ch ) ) ;
}

proof of r19_21ad {
	step 1 : wff = thm 19_21ad (hyp 1, hyp 2, hyp 3) |- ( ph -> ( ps -> A. x ( x e. A -> ch ) ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ch <-> A. x ( x e. A -> ch ) ) ;
	step 3 : wff = thm syl6ibr (step 1, step 2) |- ( ph -> ( ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21adv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x e. A ch ) ) ;
}

proof of r19_21adv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm r19_21ad (step 1, step 2, hyp 1) |- ( ph -> ( ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21adva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x e. A ch ) ) ;
}

proof of r19_21adva {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm com23 (step 1) |- ( ph -> ( ps -> ( x e. A -> ch ) ) ) ;
	step 3 : wff = thm r19_21adv (step 2) |- ( ph -> ( ps -> A. x e. A ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21aivv (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ( x e. A /\ y e. B ) -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A. x e. A A. y e. B ps ) ;
}

proof of r19_21aivv {
	step 1 : wff = thm exp3a (hyp 1) |- ( ph -> ( x e. A -> ( y e. B -> ps ) ) ) ;
	step 2 : wff = thm r19_21adv (step 1) |- ( ph -> ( x e. A -> A. y e. B ps ) ) ;
	step 3 : wff = thm r19_21aiv (step 2) |- ( ph -> A. x e. A A. y e. B ps ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21advv (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ( ( x e. A /\ y e. B ) -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) ;
}

proof of r19_21advv {
	step 1 : wff = thm imp (hyp 1) |- ( ( ph /\ ps ) -> ( ( x e. A /\ y e. B ) -> ch ) ) ;
	step 2 : wff = thm r19_21aivv (step 1) |- ( ( ph /\ ps ) -> A. x e. A A. y e. B ch ) ;
	step 3 : wff = thm ex (step 2) |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21advva (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) ;
}

proof of r19_21advva {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( ( x e. A /\ y e. B ) -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm com23 (step 1) |- ( ph -> ( ps -> ( ( x e. A /\ y e. B ) -> ch ) ) ) ;
	step 3 : wff = thm r19_21advv (step 2) |- ( ph -> ( ps -> A. x e. A A. y e. B ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem rgen2 (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ y e. B ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- A. x e. A A. y e. B ph ;
}

proof of rgen2 {
	step 1 : wff = thm r19_21aiva (hyp 1) |- ( x e. A -> A. y e. B ph ) ;
	step 2 : wff = thm rgen (step 1) |- A. x e. A A. y e. B ph ;
	qed prop 1 = step 2 ;
}

theorem rgen3 (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- A. x e. A A. y e. B A. z e. C ph ;
}

proof of rgen3 {
	step 1 : wff = thm 3expa (hyp 1) |- ( ( ( x e. A /\ y e. B ) /\ z e. C ) -> ph ) ;
	step 2 : wff = thm r19_21aiva (step 1) |- ( ( x e. A /\ y e. B ) -> A. z e. C ph ) ;
	step 3 : wff = thm rgen2 (step 2) |- A. x e. A A. y e. B A. z e. C ph ;
	qed prop 1 = step 3 ;
}

theorem r19_21bi (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x e. A ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ x e. A ) -> ps ) ;
}

proof of r19_21bi {
	step 1 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> A. x ( x e. A -> ps ) ) ;
	step 3 : wff = thm 19_21bi (step 2) |- ( ph -> ( x e. A -> ps ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ph /\ x e. A ) -> ps ) ;
	qed prop 1 = step 4 ;
}

theorem rspec2 (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A. x e. A A. y e. B ph ;
	-----------------------
	prop 1 : wff = |- ( ( x e. A /\ y e. B ) -> ph ) ;
}

proof of rspec2 {
	step 1 : wff = thm rspec (hyp 1) |- ( x e. A -> A. y e. B ph ) ;
	step 2 : wff = thm r19_21bi (step 1) |- ( ( x e. A /\ y e. B ) -> ph ) ;
	qed prop 1 = step 2 ;
}

theorem rspec3 (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A. x e. A A. y e. B A. z e. C ph ;
	-----------------------
	prop 1 : wff = |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ;
}

proof of rspec3 {
	step 1 : wff = thm rspec2 (hyp 1) |- ( ( x e. A /\ y e. B ) -> A. z e. C ph ) ;
	step 2 : wff = thm r19_21bi (step 1) |- ( ( ( x e. A /\ y e. B ) /\ z e. C ) -> ph ) ;
	step 3 : wff = thm 3impa (step 2) |- ( ( x e. A /\ y e. B /\ z e. C ) -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem r19_21be (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x e. A ps ) ;
	-----------------------
	prop 1 : wff = |- A. x e. A ( ph -> ps ) ;
}

proof of r19_21be {
	step 1 : wff = thm r19_21bi (hyp 1) |- ( ( ph /\ x e. A ) -> ps ) ;
	step 2 : wff = thm expcom (step 1) |- ( x e. A -> ( ph -> ps ) ) ;
	step 3 : wff = thm rgen (step 2) |- A. x e. A ( ph -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem nrex (ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- -. E. x e. A ps ;
}

proof of nrex {
	step 1 : wff = thm rgen (hyp 1) |- A. x e. A -. ps ;
	step 2 : wff = thm ralnex () |- ( A. x e. A -. ps <-> -. E. x e. A ps ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- -. E. x e. A ps ;
	qed prop 1 = step 3 ;
}

theorem nrexdv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> -. ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> -. E. x e. A ps ) ;
}

proof of nrexdv {
	step 1 : wff = thm r19_21aiva (hyp 1) |- ( ph -> A. x e. A -. ps ) ;
	step 2 : wff = thm ralnex () |- ( A. x e. A -. ps <-> -. E. x e. A ps ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( ph -> -. E. x e. A ps ) ;
	qed prop 1 = step 3 ;
}

theorem r19_22 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph -> ps ) -> ( E. x e. A ph -> E. x e. A ps ) ) ;
}

proof of r19_22 {
	step 1 : wff = thm imdistan () |- ( ( x e. A -> ( ph -> ps ) ) <-> ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( x e. A -> ( ph -> ps ) ) <-> A. x ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) ) ;
	step 3 : wff = thm 19_22 () |- ( A. x ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) -> ( E. x ( x e. A /\ ph ) -> E. x ( x e. A /\ ps ) ) ) ;
	step 4 : wff = thm sylbi (step 2, step 3) |- ( A. x ( x e. A -> ( ph -> ps ) ) -> ( E. x ( x e. A /\ ph ) -> E. x ( x e. A /\ ps ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 6 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 7 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 8 : wff = thm imbi12i (step 6, step 7) |- ( ( E. x e. A ph -> E. x e. A ps ) <-> ( E. x ( x e. A /\ ph ) -> E. x ( x e. A /\ ps ) ) ) ;
	step 9 : wff = thm 3imtr4i (step 4, step 5, step 8) |- ( A. x e. A ( ph -> ps ) -> ( E. x e. A ph -> E. x e. A ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem r19_22i (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph -> E. x e. A ps ) ;
}

proof of r19_22i {
	step 1 : wff = thm r19_22 () |- ( A. x e. A ( ph -> ps ) -> ( E. x e. A ph -> E. x e. A ps ) ) ;
	step 2 : wff = thm mprg (step 1, hyp 1) |- ( E. x e. A ph -> E. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_22i2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph -> E. x e. B ps ) ;
}

proof of r19_22i2 {
	step 1 : wff = thm 19_22i (hyp 1) |- ( E. x ( x e. A /\ ph ) -> E. x ( x e. B /\ ps ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. B ps <-> E. x ( x e. B /\ ps ) ) ;
	step 4 : wff = thm 3imtr4i (step 1, step 2, step 3) |- ( E. x e. A ph -> E. x e. B ps ) ;
	qed prop 1 = step 4 ;
}

theorem r19_22si (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph -> E. x e. A ps ) ;
}

proof of r19_22si {
	step 1 : wff = thm a1i (hyp 1) |- ( x e. A -> ( ph -> ps ) ) ;
	step 2 : wff = thm r19_22i (step 1) |- ( E. x e. A ph -> E. x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_22d (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
}

proof of r19_22d {
	step 1 : wff = thm r19_21ai (hyp 1, hyp 2) |- ( ph -> A. x e. A ( ps -> ch ) ) ;
	step 2 : wff = thm r19_22 () |- ( A. x e. A ( ps -> ch ) -> ( E. x e. A ps -> E. x e. A ch ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_22dv2 (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ( x e. A /\ ps ) -> ( x e. B /\ ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> E. x e. B ch ) ) ;
}

proof of r19_22dv2 {
	step 1 : wff = thm 19_22dv (hyp 1) |- ( ph -> ( E. x ( x e. A /\ ps ) -> E. x ( x e. B /\ ch ) ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. B ch <-> E. x ( x e. B /\ ch ) ) ;
	step 4 : wff = thm 3imtr4g (step 1, step 2, step 3) |- ( ph -> ( E. x e. A ps -> E. x e. B ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_22dv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
}

proof of r19_22dv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm r19_22d (step 1, hyp 1) |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_22sdv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
}

proof of r19_22sdv {
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm r19_22dv (step 1) |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_22dva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
}

proof of r19_22dva {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm r19_22dv (step 1) |- ( ph -> ( E. x e. A ps -> E. x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_12 (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) ;
}

proof of r19_12 {
	step 1 : wff = axm ax-17 () |- ( x e. A -> A. y x e. A ) ;
	step 2 : wff = thm hbra1 () |- ( A. y e. B ph -> A. y A. y e. B ph ) ;
	step 3 : wff = thm hbrex (step 1, step 2) |- ( E. x e. A A. y e. B ph -> A. y E. x e. A A. y e. B ph ) ;
	step 4 : wff = axm ax-1 () |- ( E. x e. A A. y e. B ph -> ( y e. B -> E. x e. A A. y e. B ph ) ) ;
	step 5 : wff = thm r19_21ai (step 3, step 4) |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A A. y e. B ph ) ;
	step 6 : wff = thm ra4 () |- ( A. y e. B ph -> ( y e. B -> ph ) ) ;
	step 7 : wff = thm com12 (step 6) |- ( y e. B -> ( A. y e. B ph -> ph ) ) ;
	step 8 : wff = thm a1d (step 7) |- ( y e. B -> ( x e. A -> ( A. y e. B ph -> ph ) ) ) ;
	step 9 : wff = thm r19_22dv (step 8) |- ( y e. B -> ( E. x e. A A. y e. B ph -> E. x e. A ph ) ) ;
	step 10 : wff = thm r19_20i (step 9) |- ( A. y e. B E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) ;
	step 11 : wff = thm syl (step 5, step 10) |- ( E. x e. A A. y e. B ph -> A. y e. B E. x e. A ph ) ;
	qed prop 1 = step 11 ;
}

theorem r19_23 (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ;
}

proof of r19_23 {
	step 1 : wff = thm impexp () |- ( ( ( x e. A /\ ph ) -> ps ) <-> ( x e. A -> ( ph -> ps ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( ( x e. A /\ ph ) -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( E. x e. A ph -> ps ) <-> ( E. x ( x e. A /\ ph ) -> ps ) ) ;
	step 5 : wff = thm 19_23 (hyp 1) |- ( A. x ( ( x e. A /\ ph ) -> ps ) <-> ( E. x ( x e. A /\ ph ) -> ps ) ) ;
	step 6 : wff = thm bitr4i (step 4, step 5) |- ( ( E. x e. A ph -> ps ) <-> A. x ( ( x e. A /\ ph ) -> ps ) ) ;
	step 7 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 8 : wff = thm 3bitr4ri (step 2, step 6, step 7) |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem r19_23v (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ;
}

proof of r19_23v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm r19_23 (step 1) |- ( A. x e. A ( ph -> ps ) <-> ( E. x e. A ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_23ai (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x e. A -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph -> ps ) ;
}

proof of r19_23ai {
	step 1 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = thm imp (hyp 2) |- ( ( x e. A /\ ph ) -> ps ) ;
	step 3 : wff = thm 19_23ai (hyp 1, step 2) |- ( E. x ( x e. A /\ ph ) -> ps ) ;
	step 4 : wff = thm sylbi (step 1, step 3) |- ( E. x e. A ph -> ps ) ;
	qed prop 1 = step 4 ;
}

theorem r19_23aiv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph -> ps ) ;
}

proof of r19_23aiv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm r19_23ai (step 1, hyp 1) |- ( E. x e. A ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_23aiva (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ ph ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph -> ps ) ;
}

proof of r19_23aiva {
	step 1 : wff = thm ex (hyp 1) |- ( x e. A -> ( ph -> ps ) ) ;
	step 2 : wff = thm r19_23aiv (step 1) |- ( E. x e. A ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_23ad (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ch -> A. x ch ) ;
	hyp 3 : wff = |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> ch ) ) ;
}

proof of r19_23ad {
	step 1 : wff = thm imp3a (hyp 3) |- ( ph -> ( ( x e. A /\ ps ) -> ch ) ) ;
	step 2 : wff = thm 19_23ad (hyp 1, hyp 2, step 1) |- ( ph -> ( E. x ( x e. A /\ ps ) -> ch ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 4 : wff = thm syl5ib (step 2, step 3) |- ( ph -> ( E. x e. A ps -> ch ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_23adv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> ch ) ) ;
}

proof of r19_23adv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = axm ax-17 () |- ( ch -> A. x ch ) ;
	step 3 : wff = thm r19_23ad (step 1, step 2, hyp 1) |- ( ph -> ( E. x e. A ps -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_23adva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps -> ch ) ) ;
}

proof of r19_23adva {
	step 1 : wff = thm ex (hyp 1) |- ( ph -> ( x e. A -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm r19_23adv (step 1) |- ( ph -> ( E. x e. A ps -> ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_23aivv (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ y e. B ) -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A E. y e. B ph -> ps ) ;
}

proof of r19_23aivv {
	step 1 : wff = thm r19_23adva (hyp 1) |- ( x e. A -> ( E. y e. B ph -> ps ) ) ;
	step 2 : wff = thm r19_23aiv (step 1) |- ( E. x e. A E. y e. B ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem r19_23advv (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ( x e. A /\ y e. B ) -> ( ps -> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) ;
}

proof of r19_23advv {
	step 1 : wff = thm expdimp (hyp 1) |- ( ( ph /\ x e. A ) -> ( y e. B -> ( ps -> ch ) ) ) ;
	step 2 : wff = thm r19_23adv (step 1) |- ( ( ph /\ x e. A ) -> ( E. y e. B ps -> ch ) ) ;
	step 3 : wff = thm r19_23adva (step 2) |- ( ph -> ( E. x e. A E. y e. B ps -> ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem r19_26 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. x e. A ps ) ) ;
}

proof of r19_26 {
	step 1 : wff = thm jcab () |- ( ( x e. A -> ( ph /\ ps ) ) <-> ( ( x e. A -> ph ) /\ ( x e. A -> ps ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( x e. A -> ( ph /\ ps ) ) <-> A. x ( ( x e. A -> ph ) /\ ( x e. A -> ps ) ) ) ;
	step 3 : wff = thm 19_26 () |- ( A. x ( ( x e. A -> ph ) /\ ( x e. A -> ps ) ) <-> ( A. x ( x e. A -> ph ) /\ A. x ( x e. A -> ps ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x ( x e. A -> ( ph /\ ps ) ) <-> ( A. x ( x e. A -> ph ) /\ A. x ( x e. A -> ps ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ( ph /\ ps ) <-> A. x ( x e. A -> ( ph /\ ps ) ) ) ;
	step 6 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 7 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 8 : wff = thm anbi12i (step 6, step 7) |- ( ( A. x e. A ph /\ A. x e. A ps ) <-> ( A. x ( x e. A -> ph ) /\ A. x ( x e. A -> ps ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 4, step 5, step 8) |- ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. x e. A ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem r19_26-2 (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. B ( ph /\ ps ) <-> ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) ;
}

proof of r19_26-2 {
	step 1 : wff = thm r19_26 () |- ( A. y e. B ( ph /\ ps ) <-> ( A. y e. B ph /\ A. y e. B ps ) ) ;
	step 2 : wff = thm ralbii (step 1) |- ( A. x e. A A. y e. B ( ph /\ ps ) <-> A. x e. A ( A. y e. B ph /\ A. y e. B ps ) ) ;
	step 3 : wff = thm r19_26 () |- ( A. x e. A ( A. y e. B ph /\ A. y e. B ps ) <-> ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( A. x e. A A. y e. B ( ph /\ ps ) <-> ( A. x e. A A. y e. B ph /\ A. x e. A A. y e. B ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_26m (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <-> ( A. x e. A ph /\ A. x e. B ps ) ) ;
}

proof of r19_26m {
	step 1 : wff = thm 19_26 () |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <-> ( A. x ( x e. A -> ph ) /\ A. x ( x e. B -> ps ) ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. B ps <-> A. x ( x e. B -> ps ) ) ;
	step 4 : wff = thm anbi12i (step 2, step 3) |- ( ( A. x e. A ph /\ A. x e. B ps ) <-> ( A. x ( x e. A -> ph ) /\ A. x ( x e. B -> ps ) ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( A. x ( ( x e. A -> ph ) /\ ( x e. B -> ps ) ) <-> ( A. x e. A ph /\ A. x e. B ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_15 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph <-> ps ) -> ( A. x e. A ph <-> A. x e. A ps ) ) ;
}

proof of r19_15 {
	step 1 : wff = thm hbra1 () |- ( A. x e. A ( ph <-> ps ) -> A. x A. x e. A ( ph <-> ps ) ) ;
	step 2 : wff = thm ra4 () |- ( A. x e. A ( ph <-> ps ) -> ( x e. A -> ( ph <-> ps ) ) ) ;
	step 3 : wff = thm imp (step 2) |- ( ( A. x e. A ( ph <-> ps ) /\ x e. A ) -> ( ph <-> ps ) ) ;
	step 4 : wff = thm ralbida (step 1, step 3) |- ( A. x e. A ( ph <-> ps ) -> ( A. x e. A ph <-> A. x e. A ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_27av (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( A. x e. A ph /\ ps ) -> A. x e. A ( ph /\ ps ) ) ;
}

proof of r19_27av {
	step 1 : wff = thm pm2_27 () |- ( x e. A -> ( ( x e. A -> ph ) -> ph ) ) ;
	step 2 : wff = thm anim1d (step 1) |- ( x e. A -> ( ( ( x e. A -> ph ) /\ ps ) -> ( ph /\ ps ) ) ) ;
	step 3 : wff = thm com12 (step 2) |- ( ( ( x e. A -> ph ) /\ ps ) -> ( x e. A -> ( ph /\ ps ) ) ) ;
	step 4 : wff = thm 19_20i (step 3) |- ( A. x ( ( x e. A -> ph ) /\ ps ) -> A. x ( x e. A -> ( ph /\ ps ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 6 : wff = thm anbi1i (step 5) |- ( ( A. x e. A ph /\ ps ) <-> ( A. x ( x e. A -> ph ) /\ ps ) ) ;
	step 7 : wff = thm 19_27v () |- ( A. x ( ( x e. A -> ph ) /\ ps ) <-> ( A. x ( x e. A -> ph ) /\ ps ) ) ;
	step 8 : wff = thm bitr4i (step 6, step 7) |- ( ( A. x e. A ph /\ ps ) <-> A. x ( ( x e. A -> ph ) /\ ps ) ) ;
	step 9 : wff = def df-ral () |- ( A. x e. A ( ph /\ ps ) <-> A. x ( x e. A -> ( ph /\ ps ) ) ) ;
	step 10 : wff = thm 3imtr4i (step 4, step 8, step 9) |- ( ( A. x e. A ph /\ ps ) -> A. x e. A ( ph /\ ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem r19_28av (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( ph /\ A. x e. A ps ) -> A. x e. A ( ph /\ ps ) ) ;
}

proof of r19_28av {
	step 1 : wff = thm r19_27av () |- ( ( A. x e. A ps /\ ph ) -> A. x e. A ( ps /\ ph ) ) ;
	step 2 : wff = thm ancom () |- ( ( ph /\ A. x e. A ps ) <-> ( A. x e. A ps /\ ph ) ) ;
	step 3 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. x e. A ( ph /\ ps ) <-> A. x e. A ( ps /\ ph ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( ( ph /\ A. x e. A ps ) -> A. x e. A ( ph /\ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_29 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( A. x e. A ph /\ E. x e. A ps ) -> E. x e. A ( ph /\ ps ) ) ;
}

proof of r19_29 {
	step 1 : wff = thm 19_29 () |- ( ( A. x ( x e. A -> ph ) /\ E. x ( x e. A /\ ps ) ) -> E. x ( ( x e. A -> ph ) /\ ( x e. A /\ ps ) ) ) ;
	step 2 : wff = thm anandi () |- ( ( x e. A /\ ( ph /\ ps ) ) <-> ( ( x e. A /\ ph ) /\ ( x e. A /\ ps ) ) ) ;
	step 3 : wff = thm abai () |- ( ( x e. A /\ ph ) <-> ( x e. A /\ ( x e. A -> ph ) ) ) ;
	step 4 : wff = thm anbi1i (step 3) |- ( ( ( x e. A /\ ph ) /\ ( x e. A /\ ps ) ) <-> ( ( x e. A /\ ( x e. A -> ph ) ) /\ ( x e. A /\ ps ) ) ) ;
	step 5 : wff = thm anandi () |- ( ( x e. A /\ ( ( x e. A -> ph ) /\ ps ) ) <-> ( ( x e. A /\ ( x e. A -> ph ) ) /\ ( x e. A /\ ps ) ) ) ;
	step 6 : wff = thm bitr4i (step 4, step 5) |- ( ( ( x e. A /\ ph ) /\ ( x e. A /\ ps ) ) <-> ( x e. A /\ ( ( x e. A -> ph ) /\ ps ) ) ) ;
	step 7 : wff = thm an12 () |- ( ( x e. A /\ ( ( x e. A -> ph ) /\ ps ) ) <-> ( ( x e. A -> ph ) /\ ( x e. A /\ ps ) ) ) ;
	step 8 : wff = thm 3bitri (step 2, step 6, step 7) |- ( ( x e. A /\ ( ph /\ ps ) ) <-> ( ( x e. A -> ph ) /\ ( x e. A /\ ps ) ) ) ;
	step 9 : wff = thm exbii (step 8) |- ( E. x ( x e. A /\ ( ph /\ ps ) ) <-> E. x ( ( x e. A -> ph ) /\ ( x e. A /\ ps ) ) ) ;
	step 10 : wff = thm sylibr (step 1, step 9) |- ( ( A. x ( x e. A -> ph ) /\ E. x ( x e. A /\ ps ) ) -> E. x ( x e. A /\ ( ph /\ ps ) ) ) ;
	step 11 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 12 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 13 : wff = thm anbi12i (step 11, step 12) |- ( ( A. x e. A ph /\ E. x e. A ps ) <-> ( A. x ( x e. A -> ph ) /\ E. x ( x e. A /\ ps ) ) ) ;
	step 14 : wff = def df-rex () |- ( E. x e. A ( ph /\ ps ) <-> E. x ( x e. A /\ ( ph /\ ps ) ) ) ;
	step 15 : wff = thm 3imtr4i (step 10, step 13, step 14) |- ( ( A. x e. A ph /\ E. x e. A ps ) -> E. x e. A ( ph /\ ps ) ) ;
	qed prop 1 = step 15 ;
}

theorem r19_29r (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( E. x e. A ph /\ A. x e. A ps ) -> E. x e. A ( ph /\ ps ) ) ;
}

proof of r19_29r {
	step 1 : wff = thm r19_29 () |- ( ( A. x e. A ps /\ E. x e. A ph ) -> E. x e. A ( ps /\ ph ) ) ;
	step 2 : wff = thm ancom () |- ( ( E. x e. A ph /\ A. x e. A ps ) <-> ( A. x e. A ps /\ E. x e. A ph ) ) ;
	step 3 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 4 : wff = thm rexbii (step 3) |- ( E. x e. A ( ph /\ ps ) <-> E. x e. A ( ps /\ ph ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( ( E. x e. A ph /\ A. x e. A ps ) -> E. x e. A ( ph /\ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_32v (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ( ph \/ ps ) <-> ( ph \/ A. x e. A ps ) ) ;
}

proof of r19_32v {
	step 1 : wff = thm r19_21v () |- ( A. x e. A ( -. ph -> ps ) <-> ( -. ph -> A. x e. A ps ) ) ;
	step 2 : wff = def df-or () |- ( ( ph \/ ps ) <-> ( -. ph -> ps ) ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. A ( ph \/ ps ) <-> A. x e. A ( -. ph -> ps ) ) ;
	step 4 : wff = def df-or () |- ( ( ph \/ A. x e. A ps ) <-> ( -. ph -> A. x e. A ps ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 3, step 4) |- ( A. x e. A ( ph \/ ps ) <-> ( ph \/ A. x e. A ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_35 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ;
}

proof of r19_35 {
	step 1 : wff = thm r19_26 () |- ( A. x e. A ( ph /\ -. ps ) <-> ( A. x e. A ph /\ A. x e. A -. ps ) ) ;
	step 2 : wff = thm annim () |- ( ( ph /\ -. ps ) <-> -. ( ph -> ps ) ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. A ( ph /\ -. ps ) <-> A. x e. A -. ( ph -> ps ) ) ;
	step 4 : wff = def df-an () |- ( ( A. x e. A ph /\ A. x e. A -. ps ) <-> -. ( A. x e. A ph -> -. A. x e. A -. ps ) ) ;
	step 5 : wff = thm 3bitr3i (step 1, step 3, step 4) |- ( A. x e. A -. ( ph -> ps ) <-> -. ( A. x e. A ph -> -. A. x e. A -. ps ) ) ;
	step 6 : wff = thm con2bii (step 5) |- ( ( A. x e. A ph -> -. A. x e. A -. ps ) <-> -. A. x e. A -. ( ph -> ps ) ) ;
	step 7 : wff = thm dfrex2 () |- ( E. x e. A ps <-> -. A. x e. A -. ps ) ;
	step 8 : wff = thm imbi2i (step 7) |- ( ( A. x e. A ph -> E. x e. A ps ) <-> ( A. x e. A ph -> -. A. x e. A -. ps ) ) ;
	step 9 : wff = thm dfrex2 () |- ( E. x e. A ( ph -> ps ) <-> -. A. x e. A -. ( ph -> ps ) ) ;
	step 10 : wff = thm 3bitr4ri (step 6, step 8, step 9) |- ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem r19_36av (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph -> ps ) -> ( A. x e. A ph -> ps ) ) ;
}

proof of r19_36av {
	step 1 : wff = thm r19_35 () |- ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ;
	step 2 : wff = thm idd () |- ( x e. A -> ( ps -> ps ) ) ;
	step 3 : wff = thm r19_23aiv (step 2) |- ( E. x e. A ps -> ps ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( A. x e. A ph -> E. x e. A ps ) -> ( A. x e. A ph -> ps ) ) ;
	step 5 : wff = thm sylbi (step 1, step 4) |- ( E. x e. A ( ph -> ps ) -> ( A. x e. A ph -> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_37av (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) ;
}

proof of r19_37av {
	step 1 : wff = thm r19_35 () |- ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ;
	step 2 : wff = axm ax-1 () |- ( ph -> ( x e. A -> ph ) ) ;
	step 3 : wff = thm r19_21aiv (step 2) |- ( ph -> A. x e. A ph ) ;
	step 4 : wff = thm imim1i (step 3) |- ( ( A. x e. A ph -> E. x e. A ps ) -> ( ph -> E. x e. A ps ) ) ;
	step 5 : wff = thm sylbi (step 1, step 4) |- ( E. x e. A ( ph -> ps ) -> ( ph -> E. x e. A ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_40 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph /\ ps ) -> ( E. x e. A ph /\ E. x e. A ps ) ) ;
}

proof of r19_40 {
	step 1 : wff = thm pm3_26 () |- ( ( ph /\ ps ) -> ph ) ;
	step 2 : wff = thm r19_22si (step 1) |- ( E. x e. A ( ph /\ ps ) -> E. x e. A ph ) ;
	step 3 : wff = thm pm3_27 () |- ( ( ph /\ ps ) -> ps ) ;
	step 4 : wff = thm r19_22si (step 3) |- ( E. x e. A ( ph /\ ps ) -> E. x e. A ps ) ;
	step 5 : wff = thm jca (step 2, step 4) |- ( E. x e. A ( ph /\ ps ) -> ( E. x e. A ph /\ E. x e. A ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_41 (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) ;
}

proof of r19_41 {
	step 1 : wff = thm anass () |- ( ( ( x e. A /\ ph ) /\ ps ) <-> ( x e. A /\ ( ph /\ ps ) ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x ( ( x e. A /\ ph ) /\ ps ) <-> E. x ( x e. A /\ ( ph /\ ps ) ) ) ;
	step 3 : wff = thm 19_41 (hyp 1) |- ( E. x ( ( x e. A /\ ph ) /\ ps ) <-> ( E. x ( x e. A /\ ph ) /\ ps ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( E. x ( x e. A /\ ( ph /\ ps ) ) <-> ( E. x ( x e. A /\ ph ) /\ ps ) ) ;
	step 5 : wff = def df-rex () |- ( E. x e. A ( ph /\ ps ) <-> E. x ( x e. A /\ ( ph /\ ps ) ) ) ;
	step 6 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 7 : wff = thm anbi1i (step 6) |- ( ( E. x e. A ph /\ ps ) <-> ( E. x ( x e. A /\ ph ) /\ ps ) ) ;
	step 8 : wff = thm 3bitr4i (step 4, step 5, step 7) |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem r19_41v (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) ;
}

proof of r19_41v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm r19_41 (step 1) |- ( E. x e. A ( ph /\ ps ) <-> ( E. x e. A ph /\ ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem r19_42v (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph /\ ps ) <-> ( ph /\ E. x e. A ps ) ) ;
}

proof of r19_42v {
	step 1 : wff = thm r19_41v () |- ( E. x e. A ( ps /\ ph ) <-> ( E. x e. A ps /\ ph ) ) ;
	step 2 : wff = thm ancom () |- ( ( ph /\ ps ) <-> ( ps /\ ph ) ) ;
	step 3 : wff = thm rexbii (step 2) |- ( E. x e. A ( ph /\ ps ) <-> E. x e. A ( ps /\ ph ) ) ;
	step 4 : wff = thm ancom () |- ( ( ph /\ E. x e. A ps ) <-> ( E. x e. A ps /\ ph ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 3, step 4) |- ( E. x e. A ( ph /\ ps ) <-> ( ph /\ E. x e. A ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_43 (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph \/ ps ) <-> ( E. x e. A ph \/ E. x e. A ps ) ) ;
}

proof of r19_43 {
	step 1 : wff = thm andi () |- ( ( x e. A /\ ( ph \/ ps ) ) <-> ( ( x e. A /\ ph ) \/ ( x e. A /\ ps ) ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x ( x e. A /\ ( ph \/ ps ) ) <-> E. x ( ( x e. A /\ ph ) \/ ( x e. A /\ ps ) ) ) ;
	step 3 : wff = thm 19_43 () |- ( E. x ( ( x e. A /\ ph ) \/ ( x e. A /\ ps ) ) <-> ( E. x ( x e. A /\ ph ) \/ E. x ( x e. A /\ ps ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x ( x e. A /\ ( ph \/ ps ) ) <-> ( E. x ( x e. A /\ ph ) \/ E. x ( x e. A /\ ps ) ) ) ;
	step 5 : wff = def df-rex () |- ( E. x e. A ( ph \/ ps ) <-> E. x ( x e. A /\ ( ph \/ ps ) ) ) ;
	step 6 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 7 : wff = def df-rex () |- ( E. x e. A ps <-> E. x ( x e. A /\ ps ) ) ;
	step 8 : wff = thm orbi12i (step 6, step 7) |- ( ( E. x e. A ph \/ E. x e. A ps ) <-> ( E. x ( x e. A /\ ph ) \/ E. x ( x e. A /\ ps ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 4, step 5, step 8) |- ( E. x e. A ( ph \/ ps ) <-> ( E. x e. A ph \/ E. x e. A ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem r19_44av (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph \/ ps ) -> ( E. x e. A ph \/ ps ) ) ;
}

proof of r19_44av {
	step 1 : wff = thm r19_43 () |- ( E. x e. A ( ph \/ ps ) <-> ( E. x e. A ph \/ E. x e. A ps ) ) ;
	step 2 : wff = thm idd () |- ( x e. A -> ( ps -> ps ) ) ;
	step 3 : wff = thm r19_23aiv (step 2) |- ( E. x e. A ps -> ps ) ;
	step 4 : wff = thm orim2i (step 3) |- ( ( E. x e. A ph \/ E. x e. A ps ) -> ( E. x e. A ph \/ ps ) ) ;
	step 5 : wff = thm sylbi (step 1, step 4) |- ( E. x e. A ( ph \/ ps ) -> ( E. x e. A ph \/ ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_45av (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ( ph \/ ps ) -> ( ph \/ E. x e. A ps ) ) ;
}

proof of r19_45av {
	step 1 : wff = thm r19_43 () |- ( E. x e. A ( ph \/ ps ) <-> ( E. x e. A ph \/ E. x e. A ps ) ) ;
	step 2 : wff = thm idd () |- ( x e. A -> ( ph -> ph ) ) ;
	step 3 : wff = thm r19_23aiv (step 2) |- ( E. x e. A ph -> ph ) ;
	step 4 : wff = thm orim1i (step 3) |- ( ( E. x e. A ph \/ E. x e. A ps ) -> ( ph \/ E. x e. A ps ) ) ;
	step 5 : wff = thm sylbi (step 1, step 4) |- ( E. x e. A ( ph \/ ps ) -> ( ph \/ E. x e. A ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem hbreu1 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph -> A. x E! x e. A ph ) ;
}

proof of hbreu1 {
	step 1 : wff = thm hbeu1 () |- ( E! x ( x e. A /\ ph ) -> A. x E! x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 3 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x E! x e. A ph <-> A. x E! x ( x e. A /\ ph ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( E! x e. A ph -> A. x E! x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem rabid (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( x e. { x e. A | ph } <-> ( x e. A /\ ph ) ) ;
}

proof of rabid {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = thm abeq2i (step 1) |- ( x e. { x e. A | ph } <-> ( x e. A /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem rabid2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A = { x e. A | ph } <-> A. x e. A ph ) ;
}

proof of rabid2 {
	step 1 : wff = thm pm4_71 () |- ( ( x e. A -> ph ) <-> ( x e. A <-> ( x e. A /\ ph ) ) ) ;
	step 2 : wff = thm albii (step 1) |- ( A. x ( x e. A -> ph ) <-> A. x ( x e. A <-> ( x e. A /\ ph ) ) ) ;
	step 3 : wff = thm abeq2 () |- ( A = { x | ( x e. A /\ ph ) } <-> A. x ( x e. A <-> ( x e. A /\ ph ) ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( A. x ( x e. A -> ph ) <-> A = { x | ( x e. A /\ ph ) } ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 6 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 7 : wff = thm eqeq2i (step 6) |- ( A = { x e. A | ph } <-> A = { x | ( x e. A /\ ph ) } ) ;
	step 8 : wff = thm 3bitr4ri (step 4, step 5, step 7) |- ( A = { x e. A | ph } <-> A. x e. A ph ) ;
	qed prop 1 = step 8 ;
}

theorem rabswap (x : set, A : class, B : class)  {
	prop 1 : wff = |- { x e. A | x e. B } = { x e. B | x e. A } ;
}

proof of rabswap {
	step 1 : wff = thm ancom () |- ( ( x e. A /\ x e. B ) <-> ( x e. B /\ x e. A ) ) ;
	step 2 : wff = thm abbii (step 1) |- { x | ( x e. A /\ x e. B ) } = { x | ( x e. B /\ x e. A ) } ;
	step 3 : wff = def df-rab () |- { x e. A | x e. B } = { x | ( x e. A /\ x e. B ) } ;
	step 4 : wff = def df-rab () |- { x e. B | x e. A } = { x | ( x e. B /\ x e. A ) } ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- { x e. A | x e. B } = { x e. B | x e. A } ;
	qed prop 1 = step 5 ;
}

theorem hbrab1 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( y e. { x e. A | ph } -> A. x y e. { x e. A | ph } ) ;
}

proof of hbrab1 {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ( x e. A /\ ph ) } -> A. x y e. { x | ( x e. A /\ ph ) } ) ;
	step 3 : wff = thm hbxfr (step 1, step 2) |- ( y e. { x e. A | ph } -> A. x y e. { x e. A | ph } ) ;
	qed prop 1 = step 3 ;
}

theorem hbrab (ph : wff, x : set, y : set, z : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( z e. A -> A. x z e. A ) ;
	-----------------------
	prop 1 : wff = |- ( z e. { y e. A | ph } -> A. x z e. { y e. A | ph } ) ;
}

proof of hbrab {
	step 1 : wff = def df-rab () |- { y e. A | ph } = { y | ( y e. A /\ ph ) } ;
	step 2 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 3 : wff = thm hbel (step 2, hyp 2) |- ( y e. A -> A. x y e. A ) ;
	step 4 : wff = thm hban (step 3, hyp 1) |- ( ( y e. A /\ ph ) -> A. x ( y e. A /\ ph ) ) ;
	step 5 : wff = thm hbab (step 4) |- ( z e. { y | ( y e. A /\ ph ) } -> A. x z e. { y | ( y e. A /\ ph ) } ) ;
	step 6 : wff = thm hbxfr (step 1, step 5) |- ( z e. { y e. A | ph } -> A. x z e. { y e. A | ph } ) ;
	qed prop 1 = step 6 ;
}

theorem ralcom (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) ;
}

proof of ralcom {
	step 1 : wff = thm ancom () |- ( ( x e. A /\ y e. B ) <-> ( y e. B /\ x e. A ) ) ;
	step 2 : wff = thm imbi1i (step 1) |- ( ( ( x e. A /\ y e. B ) -> ph ) <-> ( ( y e. B /\ x e. A ) -> ph ) ) ;
	step 3 : wff = thm 2albii (step 2) |- ( A. x A. y ( ( x e. A /\ y e. B ) -> ph ) <-> A. x A. y ( ( y e. B /\ x e. A ) -> ph ) ) ;
	step 4 : wff = thm alcom () |- ( A. x A. y ( ( y e. B /\ x e. A ) -> ph ) <-> A. y A. x ( ( y e. B /\ x e. A ) -> ph ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( A. x A. y ( ( x e. A /\ y e. B ) -> ph ) <-> A. y A. x ( ( y e. B /\ x e. A ) -> ph ) ) ;
	step 6 : wff = thm r2al () |- ( A. x e. A A. y e. B ph <-> A. x A. y ( ( x e. A /\ y e. B ) -> ph ) ) ;
	step 7 : wff = thm r2al () |- ( A. y e. B A. x e. A ph <-> A. y A. x ( ( y e. B /\ x e. A ) -> ph ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( A. x e. A A. y e. B ph <-> A. y e. B A. x e. A ph ) ;
	qed prop 1 = step 8 ;
}

theorem rexcom (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) ;
}

proof of rexcom {
	step 1 : wff = thm ancom () |- ( ( x e. A /\ y e. B ) <-> ( y e. B /\ x e. A ) ) ;
	step 2 : wff = thm anbi1i (step 1) |- ( ( ( x e. A /\ y e. B ) /\ ph ) <-> ( ( y e. B /\ x e. A ) /\ ph ) ) ;
	step 3 : wff = thm 2exbii (step 2) |- ( E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) <-> E. x E. y ( ( y e. B /\ x e. A ) /\ ph ) ) ;
	step 4 : wff = thm excom () |- ( E. x E. y ( ( y e. B /\ x e. A ) /\ ph ) <-> E. y E. x ( ( y e. B /\ x e. A ) /\ ph ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) <-> E. y E. x ( ( y e. B /\ x e. A ) /\ ph ) ) ;
	step 6 : wff = thm r2ex () |- ( E. x e. A E. y e. B ph <-> E. x E. y ( ( x e. A /\ y e. B ) /\ ph ) ) ;
	step 7 : wff = thm r2ex () |- ( E. y e. B E. x e. A ph <-> E. y E. x ( ( y e. B /\ x e. A ) /\ ph ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( E. x e. A E. y e. B ph <-> E. y e. B E. x e. A ph ) ;
	qed prop 1 = step 8 ;
}

theorem ralcom2 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. A ph -> A. y e. A A. x e. A ph ) ;
}

proof of ralcom2 {
	var z : set;
	step 1 : wff = thm id () |- ( A. x ( x e. A -> A. x ( x e. A -> ph ) ) -> A. x ( x e. A -> A. x ( x e. A -> ph ) ) ) ;
	step 2 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 3 : wff = thm a4s (step 2) |- ( A. x x = y -> ( x e. A <-> y e. A ) ) ;
	step 4 : wff = thm imbi1d (step 3) |- ( A. x x = y -> ( ( x e. A -> ph ) <-> ( y e. A -> ph ) ) ) ;
	step 5 : wff = thm dral1 (step 4) |- ( A. x x = y -> ( A. x ( x e. A -> ph ) <-> A. y ( y e. A -> ph ) ) ) ;
	step 6 : wff = thm imbi2d (step 5) |- ( A. x x = y -> ( ( x e. A -> A. x ( x e. A -> ph ) ) <-> ( x e. A -> A. y ( y e. A -> ph ) ) ) ) ;
	step 7 : wff = thm dral2 (step 6) |- ( A. x x = y -> ( A. x ( x e. A -> A. x ( x e. A -> ph ) ) <-> A. x ( x e. A -> A. y ( y e. A -> ph ) ) ) ) ;
	step 8 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 9 : wff = thm a4s (step 8) |- ( A. x x = y -> ( x e. A <-> y e. A ) ) ;
	step 10 : wff = thm imbi1d (step 9) |- ( A. x x = y -> ( ( x e. A -> A. x ( x e. A -> ph ) ) <-> ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 11 : wff = thm dral1 (step 10) |- ( A. x x = y -> ( A. x ( x e. A -> A. x ( x e. A -> ph ) ) <-> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 12 : wff = thm imbi12d (step 7, step 11) |- ( A. x x = y -> ( ( A. x ( x e. A -> A. x ( x e. A -> ph ) ) -> A. x ( x e. A -> A. x ( x e. A -> ph ) ) ) <-> ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ) ;
	step 13 : wff = thm mpbii (step 1, step 12) |- ( A. x x = y -> ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 14 : wff = thm hbnae () |- ( -. A. x x = y -> A. x -. A. x x = y ) ;
	step 15 : wff = thm hbal (step 14) |- ( A. y -. A. x x = y -> A. x A. y -. A. x x = y ) ;
	step 16 : wff = thm hbnae () |- ( -. A. x x = y -> A. y -. A. x x = y ) ;
	step 17 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 18 : wff = thm eleq1 () |- ( z = x -> ( z e. A <-> x e. A ) ) ;
	step 19 : wff = thm dvelim (step 17, step 18) |- ( -. A. y y = x -> ( x e. A -> A. y x e. A ) ) ;
	step 20 : wff = thm nalequcoms (step 19) |- ( -. A. x x = y -> ( x e. A -> A. y x e. A ) ) ;
	step 21 : wff = thm hba1 () |- ( A. y ( y e. A -> ph ) -> A. y A. y ( y e. A -> ph ) ) ;
	step 22 : wff = thm a1i (step 21) |- ( -. A. x x = y -> ( A. y ( y e. A -> ph ) -> A. y A. y ( y e. A -> ph ) ) ) ;
	step 23 : wff = thm hbimd (step 16, step 20, step 22) |- ( -. A. x x = y -> ( ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( x e. A -> A. y ( y e. A -> ph ) ) ) ) ;
	step 24 : wff = thm a4s (step 23) |- ( A. y -. A. x x = y -> ( ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( x e. A -> A. y ( y e. A -> ph ) ) ) ) ;
	step 25 : wff = thm hbald (step 15, step 24) |- ( A. y -. A. x x = y -> ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y A. x ( x e. A -> A. y ( y e. A -> ph ) ) ) ) ;
	step 26 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 27 : wff = thm eleq1 () |- ( z = y -> ( z e. A <-> y e. A ) ) ;
	step 28 : wff = thm dvelim (step 26, step 27) |- ( -. A. x x = y -> ( y e. A -> A. x y e. A ) ) ;
	step 29 : wff = axm ax-4 () |- ( A. y ( y e. A -> ph ) -> ( y e. A -> ph ) ) ;
	step 30 : wff = thm imim2i (step 29) |- ( ( x e. A -> A. y ( y e. A -> ph ) ) -> ( x e. A -> ( y e. A -> ph ) ) ) ;
	step 31 : wff = thm com23 (step 30) |- ( ( x e. A -> A. y ( y e. A -> ph ) ) -> ( y e. A -> ( x e. A -> ph ) ) ) ;
	step 32 : wff = thm 19_20ii (step 31) |- ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> ( A. x y e. A -> A. x ( x e. A -> ph ) ) ) ;
	step 33 : wff = thm syl9 (step 28, step 32) |- ( -. A. x x = y -> ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 34 : wff = thm 19_20ii (step 33) |- ( A. y -. A. x x = y -> ( A. y A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 35 : wff = thm syld (step 25, step 34) |- ( A. y -. A. x x = y -> ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 36 : wff = thm hbnaes (step 35) |- ( -. A. x x = y -> ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ) ;
	step 37 : wff = thm pm2_61i (step 13, step 36) |- ( A. x ( x e. A -> A. y ( y e. A -> ph ) ) -> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ;
	step 38 : wff = def df-ral () |- ( A. x e. A A. y e. A ph <-> A. x ( x e. A -> A. y e. A ph ) ) ;
	step 39 : wff = def df-ral () |- ( A. y e. A ph <-> A. y ( y e. A -> ph ) ) ;
	step 40 : wff = thm imbi2i (step 39) |- ( ( x e. A -> A. y e. A ph ) <-> ( x e. A -> A. y ( y e. A -> ph ) ) ) ;
	step 41 : wff = thm albii (step 40) |- ( A. x ( x e. A -> A. y e. A ph ) <-> A. x ( x e. A -> A. y ( y e. A -> ph ) ) ) ;
	step 42 : wff = thm bitri (step 38, step 41) |- ( A. x e. A A. y e. A ph <-> A. x ( x e. A -> A. y ( y e. A -> ph ) ) ) ;
	step 43 : wff = def df-ral () |- ( A. y e. A A. x e. A ph <-> A. y ( y e. A -> A. x e. A ph ) ) ;
	step 44 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 45 : wff = thm imbi2i (step 44) |- ( ( y e. A -> A. x e. A ph ) <-> ( y e. A -> A. x ( x e. A -> ph ) ) ) ;
	step 46 : wff = thm albii (step 45) |- ( A. y ( y e. A -> A. x e. A ph ) <-> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ;
	step 47 : wff = thm bitri (step 43, step 46) |- ( A. y e. A A. x e. A ph <-> A. y ( y e. A -> A. x ( x e. A -> ph ) ) ) ;
	step 48 : wff = thm 3imtr4i (step 37, step 42, step 47) |- ( A. x e. A A. y e. A ph -> A. y e. A A. x e. A ph ) ;
	qed prop 1 = step 48 ;
}

theorem ralcom3 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A ( x e. B -> ph ) <-> A. x e. B ( x e. A -> ph ) ) ;
}

proof of ralcom3 {
	step 1 : wff = thm pm2_04 () |- ( ( x e. A -> ( x e. B -> ph ) ) -> ( x e. B -> ( x e. A -> ph ) ) ) ;
	step 2 : wff = thm r19_20i2 (step 1) |- ( A. x e. A ( x e. B -> ph ) -> A. x e. B ( x e. A -> ph ) ) ;
	step 3 : wff = thm pm2_04 () |- ( ( x e. B -> ( x e. A -> ph ) ) -> ( x e. A -> ( x e. B -> ph ) ) ) ;
	step 4 : wff = thm r19_20i2 (step 3) |- ( A. x e. B ( x e. A -> ph ) -> A. x e. A ( x e. B -> ph ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( A. x e. A ( x e. B -> ph ) <-> A. x e. B ( x e. A -> ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem reean (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A E. y e. B ( ph /\ ps ) <-> ( E. x e. A ph /\ E. y e. B ps ) ) ;
}

proof of reean {
	step 1 : wff = thm anass () |- ( ( ( x e. A /\ y e. B ) /\ ( ph /\ ps ) ) <-> ( x e. A /\ ( y e. B /\ ( ph /\ ps ) ) ) ) ;
	step 2 : wff = thm an4 () |- ( ( ( x e. A /\ y e. B ) /\ ( ph /\ ps ) ) <-> ( ( x e. A /\ ph ) /\ ( y e. B /\ ps ) ) ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( ( x e. A /\ ( y e. B /\ ( ph /\ ps ) ) ) <-> ( ( x e. A /\ ph ) /\ ( y e. B /\ ps ) ) ) ;
	step 4 : wff = thm 2exbii (step 3) |- ( E. x E. y ( x e. A /\ ( y e. B /\ ( ph /\ ps ) ) ) <-> E. x E. y ( ( x e. A /\ ph ) /\ ( y e. B /\ ps ) ) ) ;
	step 5 : wff = axm ax-17 () |- ( x e. A -> A. y x e. A ) ;
	step 6 : wff = thm 19_42 (step 5) |- ( E. y ( x e. A /\ ( y e. B /\ ( ph /\ ps ) ) ) <-> ( x e. A /\ E. y ( y e. B /\ ( ph /\ ps ) ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. x E. y ( x e. A /\ ( y e. B /\ ( ph /\ ps ) ) ) <-> E. x ( x e. A /\ E. y ( y e. B /\ ( ph /\ ps ) ) ) ) ;
	step 8 : wff = axm ax-17 () |- ( x e. A -> A. y x e. A ) ;
	step 9 : wff = thm hban (step 8, hyp 1) |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 10 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 11 : wff = thm hban (step 10, hyp 2) |- ( ( y e. B /\ ps ) -> A. x ( y e. B /\ ps ) ) ;
	step 12 : wff = thm eean (step 9, step 11) |- ( E. x E. y ( ( x e. A /\ ph ) /\ ( y e. B /\ ps ) ) <-> ( E. x ( x e. A /\ ph ) /\ E. y ( y e. B /\ ps ) ) ) ;
	step 13 : wff = thm 3bitr3i (step 4, step 7, step 12) |- ( E. x ( x e. A /\ E. y ( y e. B /\ ( ph /\ ps ) ) ) <-> ( E. x ( x e. A /\ ph ) /\ E. y ( y e. B /\ ps ) ) ) ;
	step 14 : wff = def df-rex () |- ( E. y e. B ( ph /\ ps ) <-> E. y ( y e. B /\ ( ph /\ ps ) ) ) ;
	step 15 : wff = thm rexbii (step 14) |- ( E. x e. A E. y e. B ( ph /\ ps ) <-> E. x e. A E. y ( y e. B /\ ( ph /\ ps ) ) ) ;
	step 16 : wff = def df-rex () |- ( E. x e. A E. y ( y e. B /\ ( ph /\ ps ) ) <-> E. x ( x e. A /\ E. y ( y e. B /\ ( ph /\ ps ) ) ) ) ;
	step 17 : wff = thm bitri (step 15, step 16) |- ( E. x e. A E. y e. B ( ph /\ ps ) <-> E. x ( x e. A /\ E. y ( y e. B /\ ( ph /\ ps ) ) ) ) ;
	step 18 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 19 : wff = def df-rex () |- ( E. y e. B ps <-> E. y ( y e. B /\ ps ) ) ;
	step 20 : wff = thm anbi12i (step 18, step 19) |- ( ( E. x e. A ph /\ E. y e. B ps ) <-> ( E. x ( x e. A /\ ph ) /\ E. y ( y e. B /\ ps ) ) ) ;
	step 21 : wff = thm 3bitr4i (step 13, step 17, step 20) |- ( E. x e. A E. y e. B ( ph /\ ps ) <-> ( E. x e. A ph /\ E. y e. B ps ) ) ;
	qed prop 1 = step 21 ;
}

theorem reeanv (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( E. x e. A E. y e. B ( ph /\ ps ) <-> ( E. x e. A ph /\ E. y e. B ps ) ) ;
}

proof of reeanv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm reean (step 1, step 2) |- ( E. x e. A E. y e. B ( ph /\ ps ) <-> ( E. x e. A ph /\ E. y e. B ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem reubidva (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) ;
}

proof of reubidva {
	step 1 : wff = thm pm5_32da (hyp 1) |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. A /\ ch ) ) ) ;
	step 2 : wff = thm eubidv (step 1) |- ( ph -> ( E! x ( x e. A /\ ps ) <-> E! x ( x e. A /\ ch ) ) ) ;
	step 3 : wff = def df-reu () |- ( E! x e. A ps <-> E! x ( x e. A /\ ps ) ) ;
	step 4 : wff = def df-reu () |- ( E! x e. A ch <-> E! x ( x e. A /\ ch ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) ;
	qed prop 1 = step 5 ;
}

theorem reubidv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) ;
}

proof of reubidv {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm reubidva (step 1) |- ( ph -> ( E! x e. A ps <-> E! x e. A ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem reubiia (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x e. A ph <-> E! x e. A ps ) ;
}

proof of reubiia {
	step 1 : wff = thm pm5_32i (hyp 1) |- ( ( x e. A /\ ph ) <-> ( x e. A /\ ps ) ) ;
	step 2 : wff = thm eubii (step 1) |- ( E! x ( x e. A /\ ph ) <-> E! x ( x e. A /\ ps ) ) ;
	step 3 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 4 : wff = def df-reu () |- ( E! x e. A ps <-> E! x ( x e. A /\ ps ) ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( E! x e. A ph <-> E! x e. A ps ) ;
	qed prop 1 = step 5 ;
}

theorem reubii (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( E! x e. A ph <-> E! x e. A ps ) ;
}

proof of reubii {
	step 1 : wff = thm a1i (hyp 1) |- ( x e. A -> ( ph <-> ps ) ) ;
	step 2 : wff = thm reubiia (step 1) |- ( E! x e. A ph <-> E! x e. A ps ) ;
	qed prop 1 = step 2 ;
}

theorem raleq1f (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) ;
}

proof of raleq1f {
	step 1 : wff = thm hbeq (hyp 1, hyp 2) |- ( A = B -> A. x A = B ) ;
	step 2 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm imbi1d (step 2) |- ( A = B -> ( ( x e. A -> ph ) <-> ( x e. B -> ph ) ) ) ;
	step 4 : wff = thm albid (step 1, step 3) |- ( A = B -> ( A. x ( x e. A -> ph ) <-> A. x ( x e. B -> ph ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 6 : wff = def df-ral () |- ( A. x e. B ph <-> A. x ( x e. B -> ph ) ) ;
	step 7 : wff = thm 3bitr4g (step 4, step 5, step 6) |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem rexeq1f (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) ;
}

proof of rexeq1f {
	step 1 : wff = thm hbeq (hyp 1, hyp 2) |- ( A = B -> A. x A = B ) ;
	step 2 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm anbi1d (step 2) |- ( A = B -> ( ( x e. A /\ ph ) <-> ( x e. B /\ ph ) ) ) ;
	step 4 : wff = thm exbid (step 1, step 3) |- ( A = B -> ( E. x ( x e. A /\ ph ) <-> E. x ( x e. B /\ ph ) ) ) ;
	step 5 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 6 : wff = def df-rex () |- ( E. x e. B ph <-> E. x ( x e. B /\ ph ) ) ;
	step 7 : wff = thm 3bitr4g (step 4, step 5, step 6) |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem reueq1f (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) ;
}

proof of reueq1f {
	step 1 : wff = thm hbeq (hyp 1, hyp 2) |- ( A = B -> A. x A = B ) ;
	step 2 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm anbi1d (step 2) |- ( A = B -> ( ( x e. A /\ ph ) <-> ( x e. B /\ ph ) ) ) ;
	step 4 : wff = thm eubid (step 1, step 3) |- ( A = B -> ( E! x ( x e. A /\ ph ) <-> E! x ( x e. B /\ ph ) ) ) ;
	step 5 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 6 : wff = def df-reu () |- ( E! x e. B ph <-> E! x ( x e. B /\ ph ) ) ;
	step 7 : wff = thm 3bitr4g (step 4, step 5, step 6) |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem raleq1 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) ;
}

proof of raleq1 {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm raleq1f (step 1, step 2) |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem rexeq1 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) ;
}

proof of rexeq1 {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm rexeq1f (step 1, step 2) |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem reueq1 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) ;
}

proof of reueq1 {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm reueq1f (step 1, step 2) |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem raleq1d (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) ;
}

proof of raleq1d {
	step 1 : wff = thm raleq1 () |- ( A = B -> ( A. x e. A ps <-> A. x e. B ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem rexeq1d (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) ;
}

proof of rexeq1d {
	step 1 : wff = thm rexeq1 () |- ( A = B -> ( E. x e. A ps <-> E. x e. B ps ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem raleqd (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> ( A. x e. A ph <-> A. x e. B ps ) ) ;
}

proof of raleqd {
	step 1 : wff = thm raleq1 () |- ( A = B -> ( A. x e. A ph <-> A. x e. B ph ) ) ;
	step 2 : wff = thm ralbidv (hyp 1) |- ( A = B -> ( A. x e. B ph <-> A. x e. B ps ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( A = B -> ( A. x e. A ph <-> A. x e. B ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem rexeqd (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> ( E. x e. A ph <-> E. x e. B ps ) ) ;
}

proof of rexeqd {
	step 1 : wff = thm rexeq1 () |- ( A = B -> ( E. x e. A ph <-> E. x e. B ph ) ) ;
	step 2 : wff = thm rexbidv (hyp 1) |- ( A = B -> ( E. x e. B ph <-> E. x e. B ps ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( A = B -> ( E. x e. A ph <-> E. x e. B ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem reueqd (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( A = B -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> ( E! x e. A ph <-> E! x e. B ps ) ) ;
}

proof of reueqd {
	step 1 : wff = thm reueq1 () |- ( A = B -> ( E! x e. A ph <-> E! x e. B ph ) ) ;
	step 2 : wff = thm reubidv (hyp 1) |- ( A = B -> ( E! x e. B ph <-> E! x e. B ps ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( A = B -> ( E! x e. A ph <-> E! x e. B ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem raleq12d (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) ;
}

proof of raleq12d {
	step 1 : wff = thm raleq1d (hyp 1) |- ( ph -> ( A. x e. A ps <-> A. x e. B ps ) ) ;
	step 2 : wff = thm ralbidv (hyp 2) |- ( ph -> ( A. x e. B ps <-> A. x e. B ch ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( A. x e. A ps <-> A. x e. B ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem rexeq12d (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) ;
}

proof of rexeq12d {
	step 1 : wff = thm rexeq1d (hyp 1) |- ( ph -> ( E. x e. A ps <-> E. x e. B ps ) ) ;
	step 2 : wff = thm rexbidv (hyp 2) |- ( ph -> ( E. x e. B ps <-> E. x e. B ch ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( E. x e. A ps <-> E. x e. B ch ) ) ;
	qed prop 1 = step 3 ;
}

theorem cbvralf (ph : wff, ps : wff, x : set, y : set, z : set, A : class)  {
	hyp 1 : wff = |- ( z e. A -> A. x z e. A ) ;
	hyp 2 : wff = |- ( z e. A -> A. y z e. A ) ;
	hyp 3 : wff = |- ( ph -> A. y ph ) ;
	hyp 4 : wff = |- ( ps -> A. x ps ) ;
	hyp 5 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A. y e. A ps ) ;
}

proof of cbvralf {
	step 1 : wff = axm ax-17 () |- ( z e. x -> A. y z e. x ) ;
	step 2 : wff = thm hbel (step 1, hyp 2) |- ( x e. A -> A. y x e. A ) ;
	step 3 : wff = thm hbim (step 2, hyp 3) |- ( ( x e. A -> ph ) -> A. y ( x e. A -> ph ) ) ;
	step 4 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 5 : wff = thm hbel (step 4, hyp 1) |- ( y e. A -> A. x y e. A ) ;
	step 6 : wff = thm hbim (step 5, hyp 4) |- ( ( y e. A -> ps ) -> A. x ( y e. A -> ps ) ) ;
	step 7 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 8 : wff = thm imbi12d (step 7, hyp 5) |- ( x = y -> ( ( x e. A -> ph ) <-> ( y e. A -> ps ) ) ) ;
	step 9 : wff = thm cbval (step 3, step 6, step 8) |- ( A. x ( x e. A -> ph ) <-> A. y ( y e. A -> ps ) ) ;
	step 10 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 11 : wff = def df-ral () |- ( A. y e. A ps <-> A. y ( y e. A -> ps ) ) ;
	step 12 : wff = thm 3bitr4i (step 9, step 10, step 11) |- ( A. x e. A ph <-> A. y e. A ps ) ;
	qed prop 1 = step 12 ;
}

theorem cbvrexf (ph : wff, ps : wff, x : set, y : set, z : set, A : class)  {
	hyp 1 : wff = |- ( z e. A -> A. x z e. A ) ;
	hyp 2 : wff = |- ( z e. A -> A. y z e. A ) ;
	hyp 3 : wff = |- ( ph -> A. y ph ) ;
	hyp 4 : wff = |- ( ps -> A. x ps ) ;
	hyp 5 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph <-> E. y e. A ps ) ;
}

proof of cbvrexf {
	step 1 : wff = axm ax-17 () |- ( z e. x -> A. y z e. x ) ;
	step 2 : wff = thm hbel (step 1, hyp 2) |- ( x e. A -> A. y x e. A ) ;
	step 3 : wff = thm hban (step 2, hyp 3) |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 4 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 5 : wff = thm hbel (step 4, hyp 1) |- ( y e. A -> A. x y e. A ) ;
	step 6 : wff = thm hban (step 5, hyp 4) |- ( ( y e. A /\ ps ) -> A. x ( y e. A /\ ps ) ) ;
	step 7 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 8 : wff = thm anbi12d (step 7, hyp 5) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ ps ) ) ) ;
	step 9 : wff = thm cbvex (step 3, step 6, step 8) |- ( E. x ( x e. A /\ ph ) <-> E. y ( y e. A /\ ps ) ) ;
	step 10 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 11 : wff = def df-rex () |- ( E. y e. A ps <-> E. y ( y e. A /\ ps ) ) ;
	step 12 : wff = thm 3bitr4i (step 9, step 10, step 11) |- ( E. x e. A ph <-> E. y e. A ps ) ;
	qed prop 1 = step 12 ;
}

theorem cbvral (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A. y e. A ps ) ;
}

proof of cbvral {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 2 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 3 : wff = thm cbvralf (step 1, step 2, hyp 1, hyp 2, hyp 3) |- ( A. x e. A ph <-> A. y e. A ps ) ;
	qed prop 1 = step 3 ;
}

theorem cbvrex (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph <-> E. y e. A ps ) ;
}

proof of cbvrex {
	step 1 : wff = axm ax-17 () |- ( x e. A -> A. y x e. A ) ;
	step 2 : wff = thm hban (step 1, hyp 1) |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 3 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 4 : wff = thm hban (step 3, hyp 2) |- ( ( y e. A /\ ps ) -> A. x ( y e. A /\ ps ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 6 : wff = thm anbi12d (step 5, hyp 3) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ ps ) ) ) ;
	step 7 : wff = thm cbvex (step 2, step 4, step 6) |- ( E. x ( x e. A /\ ph ) <-> E. y ( y e. A /\ ps ) ) ;
	step 8 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 9 : wff = def df-rex () |- ( E. y e. A ps <-> E. y ( y e. A /\ ps ) ) ;
	step 10 : wff = thm 3bitr4i (step 7, step 8, step 9) |- ( E. x e. A ph <-> E. y e. A ps ) ;
	qed prop 1 = step 10 ;
}

theorem cbvralv (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A. y e. A ps ) ;
}

proof of cbvralv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cbvral (step 1, step 2, hyp 1) |- ( A. x e. A ph <-> A. y e. A ps ) ;
	qed prop 1 = step 3 ;
}

theorem cbvrexv (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x e. A ph <-> E. y e. A ps ) ;
}

proof of cbvrexv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cbvrex (step 1, step 2, hyp 1) |- ( E. x e. A ph <-> E. y e. A ps ) ;
	qed prop 1 = step 3 ;
}

theorem cbvreuv (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x e. A ph <-> E! y e. A ps ) ;
}

proof of cbvreuv {
	step 1 : wff = axm ax-17 () |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( ( y e. A /\ ps ) -> A. x ( y e. A /\ ps ) ) ;
	step 3 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 4 : wff = thm anbi12d (step 3, hyp 1) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ ps ) ) ) ;
	step 5 : wff = thm cbveu (step 1, step 2, step 4) |- ( E! x ( x e. A /\ ph ) <-> E! y ( y e. A /\ ps ) ) ;
	step 6 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 7 : wff = def df-reu () |- ( E! y e. A ps <-> E! y ( y e. A /\ ps ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( E! x e. A ph <-> E! y e. A ps ) ;
	qed prop 1 = step 8 ;
}

theorem cbvral2v (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set, w : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = z -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( y = w -> ( ch <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A A. y e. B ph <-> A. z e. A A. w e. B ps ) ;
}

proof of cbvral2v {
	step 1 : wff = thm ralbidv (hyp 1) |- ( x = z -> ( A. y e. B ph <-> A. y e. B ch ) ) ;
	step 2 : wff = thm cbvralv (step 1) |- ( A. x e. A A. y e. B ph <-> A. z e. A A. y e. B ch ) ;
	step 3 : wff = thm cbvralv (hyp 2) |- ( A. y e. B ch <-> A. w e. B ps ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. z e. A A. y e. B ch <-> A. z e. A A. w e. B ps ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( A. x e. A A. y e. B ph <-> A. z e. A A. w e. B ps ) ;
	qed prop 1 = step 5 ;
}

theorem cbvral3v (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, z : set, w : set, v : set, u : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x = w -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( y = v -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( z = u -> ( th <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A A. y e. B A. z e. C ph <-> A. w e. A A. v e. B A. u e. C ps ) ;
}

proof of cbvral3v {
	step 1 : wff = thm 2ralbidv (hyp 1) |- ( x = w -> ( A. y e. B A. z e. C ph <-> A. y e. B A. z e. C ch ) ) ;
	step 2 : wff = thm cbvralv (step 1) |- ( A. x e. A A. y e. B A. z e. C ph <-> A. w e. A A. y e. B A. z e. C ch ) ;
	step 3 : wff = thm cbvral2v (hyp 2, hyp 3) |- ( A. y e. B A. z e. C ch <-> A. v e. B A. u e. C ps ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. w e. A A. y e. B A. z e. C ch <-> A. w e. A A. v e. B A. u e. C ps ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( A. x e. A A. y e. B A. z e. C ph <-> A. w e. A A. v e. B A. u e. C ps ) ;
	qed prop 1 = step 5 ;
}

theorem rabbii (ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- { x e. A | ps } = { x e. A | ch } ;
}

proof of rabbii {
	step 1 : wff = thm pm5_32i (hyp 1) |- ( ( x e. A /\ ps ) <-> ( x e. A /\ ch ) ) ;
	step 2 : wff = thm abbii (step 1) |- { x | ( x e. A /\ ps ) } = { x | ( x e. A /\ ch ) } ;
	step 3 : wff = def df-rab () |- { x e. A | ps } = { x | ( x e. A /\ ps ) } ;
	step 4 : wff = def df-rab () |- { x e. A | ch } = { x | ( x e. A /\ ch ) } ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- { x e. A | ps } = { x e. A | ch } ;
	qed prop 1 = step 5 ;
}

theorem rabbidv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x e. A | ps } = { x e. A | ch } ) ;
}

proof of rabbidv {
	step 1 : wff = thm pm5_32da (hyp 1) |- ( ph -> ( ( x e. A /\ ps ) <-> ( x e. A /\ ch ) ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( ph -> { x | ( x e. A /\ ps ) } = { x | ( x e. A /\ ch ) } ) ;
	step 3 : wff = def df-rab () |- { x e. A | ps } = { x | ( x e. A /\ ps ) } ;
	step 4 : wff = def df-rab () |- { x e. A | ch } = { x | ( x e. A /\ ch ) } ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( ph -> { x e. A | ps } = { x e. A | ch } ) ;
	qed prop 1 = step 5 ;
}

theorem rabbisdv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x e. A | ps } = { x e. A | ch } ) ;
}

proof of rabbisdv {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ x e. A ) -> ( ps <-> ch ) ) ;
	step 2 : wff = thm rabbidv (step 1) |- ( ph -> { x e. A | ps } = { x e. A | ch } ) ;
	qed prop 1 = step 2 ;
}

theorem rabeqf (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) ;
}

proof of rabeqf {
	step 1 : wff = thm hbeq (hyp 1, hyp 2) |- ( A = B -> A. x A = B ) ;
	step 2 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm anbi1d (step 2) |- ( A = B -> ( ( x e. A /\ ph ) <-> ( x e. B /\ ph ) ) ) ;
	step 4 : wff = thm abbid (step 1, step 3) |- ( A = B -> { x | ( x e. A /\ ph ) } = { x | ( x e. B /\ ph ) } ) ;
	step 5 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 6 : wff = def df-rab () |- { x e. B | ph } = { x | ( x e. B /\ ph ) } ;
	step 7 : wff = thm 3eqtr4g (step 4, step 5, step 6) |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) ;
	qed prop 1 = step 7 ;
}

theorem rabeq (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) ;
}

proof of rabeq {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm rabeqf (step 1, step 2) |- ( A = B -> { x e. A | ph } = { x e. B | ph } ) ;
	qed prop 1 = step 3 ;
}

theorem rabeq2i (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- A = { x e. B | ph } ;
	-----------------------
	prop 1 : wff = |- ( x e. A <-> ( x e. B /\ ph ) ) ;
}

proof of rabeq2i {
	step 1 : wff = thm eleq2i (hyp 1) |- ( x e. A <-> x e. { x e. B | ph } ) ;
	step 2 : wff = thm rabid () |- ( x e. { x e. B | ph } <-> ( x e. B /\ ph ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( x e. A <-> ( x e. B /\ ph ) ) ;
	qed prop 1 = step 3 ;
}

constant {
	symbol _V ;
}

rule cvv () {
	term : class = # _V ;
}

theorem vjust (x : set, y : set)  {
	prop 1 : wff = |- { x | x = x } = { y | y = y } ;
}

proof of vjust {
	var z : set;
	step 1 : wff = thm equid () |- x = x ;
	step 2 : wff = thm sbt (step 1) |- [ z / x ] x = x ;
	step 3 : wff = thm equid () |- y = y ;
	step 4 : wff = thm sbt (step 3) |- [ z / y ] y = y ;
	step 5 : wff = thm 2th (step 2, step 4) |- ( [ z / x ] x = x <-> [ z / y ] y = y ) ;
	step 6 : wff = def df-clab () |- ( z e. { x | x = x } <-> [ z / x ] x = x ) ;
	step 7 : wff = def df-clab () |- ( z e. { y | y = y } <-> [ z / y ] y = y ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( z e. { x | x = x } <-> z e. { y | y = y } ) ;
	step 9 : wff = thm eqriv (step 8) |- { x | x = x } = { y | y = y } ;
	qed prop 1 = step 9 ;
}

definition df-v (x : set)  {
	defiendum : class = # _V ;
	definiens : class = # { x | x = x } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem visset (x : set)  {
	prop 1 : wff = |- x e. _V ;
}

proof of visset {
	step 1 : wff = thm eqid () |- x = x ;
	step 2 : wff = def df-v () |- _V = { x | x = x } ;
	step 3 : wff = thm abeq2i (step 2) |- ( x e. _V <-> x = x ) ;
	step 4 : wff = thm mpbir (step 1, step 3) |- x e. _V ;
	qed prop 1 = step 4 ;
}

theorem isset (x : set, A : class)  {
	prop 1 : wff = |- ( A e. _V <-> E. x x = A ) ;
}

proof of isset {
	step 1 : wff = def df-clel () |- ( A e. _V <-> E. x ( x = A /\ x e. _V ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm biantru (step 2) |- ( x = A <-> ( x = A /\ x e. _V ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. x x = A <-> E. x ( x = A /\ x e. _V ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( A e. _V <-> E. x x = A ) ;
	qed prop 1 = step 5 ;
}

theorem isseti (x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- E. x x = A ;
}

proof of isseti {
	step 1 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- E. x x = A ;
	qed prop 1 = step 2 ;
}

theorem issetri (x : set, A : class)  {
	hyp 1 : wff = |- E. x x = A ;
	-----------------------
	prop 1 : wff = |- A e. _V ;
}

proof of issetri {
	step 1 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- A e. _V ;
	qed prop 1 = step 2 ;
}

theorem elisset (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> A e. _V ) ;
}

proof of elisset {
	var x : set;
	step 1 : wff = def df-clel () |- ( A e. B <-> E. x ( x = A /\ x e. B ) ) ;
	step 2 : wff = thm 19_40 () |- ( E. x ( x = A /\ x e. B ) -> ( E. x x = A /\ E. x x e. B ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A e. B -> ( E. x x = A /\ E. x x e. B ) ) ;
	step 4 : wff = thm pm3_26d (step 3) |- ( A e. B -> E. x x = A ) ;
	step 5 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( A e. B -> A e. _V ) ;
	qed prop 1 = step 6 ;
}

theorem elisseti (A : class, B : class)  {
	hyp 1 : wff = |- A e. B ;
	-----------------------
	prop 1 : wff = |- A e. _V ;
}

proof of elisseti {
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- A e. _V ;
	qed prop 1 = step 2 ;
}

theorem elex (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> E. x x = A ) ;
}

proof of elex {
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( A e. B -> E. x x = A ) ;
	qed prop 1 = step 3 ;
}

theorem ralv (ph : wff, x : set)  {
	prop 1 : wff = |- ( A. x e. _V ph <-> A. x ph ) ;
}

proof of ralv {
	step 1 : wff = def df-ral () |- ( A. x e. _V ph <-> A. x ( x e. _V -> ph ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm a1bi (step 2) |- ( ph <-> ( x e. _V -> ph ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x ph <-> A. x ( x e. _V -> ph ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( A. x e. _V ph <-> A. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem rexv (ph : wff, x : set)  {
	prop 1 : wff = |- ( E. x e. _V ph <-> E. x ph ) ;
}

proof of rexv {
	step 1 : wff = def df-rex () |- ( E. x e. _V ph <-> E. x ( x e. _V /\ ph ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm biantrur (step 2) |- ( ph <-> ( x e. _V /\ ph ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. x ph <-> E. x ( x e. _V /\ ph ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( E. x e. _V ph <-> E. x ph ) ;
	qed prop 1 = step 5 ;
}

theorem rabab (ph : wff, x : set)  {
	prop 1 : wff = |- { x e. _V | ph } = { x | ph } ;
}

proof of rabab {
	step 1 : wff = def df-rab () |- { x e. _V | ph } = { x | ( x e. _V /\ ph ) } ;
	step 2 : wff = thm pm3_27 () |- ( ( x e. _V /\ ph ) -> ph ) ;
	step 3 : wff = thm visset () |- x e. _V ;
	step 4 : wff = thm jctl (step 3) |- ( ph -> ( x e. _V /\ ph ) ) ;
	step 5 : wff = thm impbii (step 2, step 4) |- ( ( x e. _V /\ ph ) <-> ph ) ;
	step 6 : wff = thm abbii (step 5) |- { x | ( x e. _V /\ ph ) } = { x | ph } ;
	step 7 : wff = thm eqtri (step 1, step 6) |- { x e. _V | ph } = { x | ph } ;
	qed prop 1 = step 7 ;
}

theorem ralcom4 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A A. y ph <-> A. y A. x e. A ph ) ;
}

proof of ralcom4 {
	step 1 : wff = thm ralcom () |- ( A. y e. _V A. x e. A ph <-> A. x e. A A. y e. _V ph ) ;
	step 2 : wff = thm ralv () |- ( A. y e. _V A. x e. A ph <-> A. y A. x e. A ph ) ;
	step 3 : wff = thm ralv () |- ( A. y e. _V ph <-> A. y ph ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. x e. A A. y e. _V ph <-> A. x e. A A. y ph ) ;
	step 5 : wff = thm 3bitr3ri (step 1, step 2, step 4) |- ( A. x e. A A. y ph <-> A. y A. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem rexcom4 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A E. y ph <-> E. y E. x e. A ph ) ;
}

proof of rexcom4 {
	step 1 : wff = thm rexcom () |- ( E. y e. _V E. x e. A ph <-> E. x e. A E. y e. _V ph ) ;
	step 2 : wff = thm rexv () |- ( E. y e. _V E. x e. A ph <-> E. y E. x e. A ph ) ;
	step 3 : wff = thm rexv () |- ( E. y e. _V ph <-> E. y ph ) ;
	step 4 : wff = thm rexbii (step 3) |- ( E. x e. A E. y e. _V ph <-> E. x e. A E. y ph ) ;
	step 5 : wff = thm 3bitr3ri (step 1, step 2, step 4) |- ( E. x e. A E. y ph <-> E. y E. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem ceqsalg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A. x ( x = A -> ph ) <-> ps ) ) ;
}

proof of ceqsalg {
	step 1 : wff = thm biimpd (hyp 2) |- ( x = A -> ( ph -> ps ) ) ;
	step 2 : wff = thm a2i (step 1) |- ( ( x = A -> ph ) -> ( x = A -> ps ) ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x ( x = A -> ph ) -> A. x ( x = A -> ps ) ) ;
	step 4 : wff = thm 19_23 (hyp 1) |- ( A. x ( x = A -> ps ) <-> ( E. x x = A -> ps ) ) ;
	step 5 : wff = thm sylib (step 3, step 4) |- ( A. x ( x = A -> ph ) -> ( E. x x = A -> ps ) ) ;
	step 6 : wff = thm elex () |- ( A e. B -> E. x x = A ) ;
	step 7 : wff = thm syl5com (step 5, step 6) |- ( A e. B -> ( A. x ( x = A -> ph ) -> ps ) ) ;
	step 8 : wff = thm biimprcd (hyp 2) |- ( ps -> ( x = A -> ph ) ) ;
	step 9 : wff = thm 19_21ai (hyp 1, step 8) |- ( ps -> A. x ( x = A -> ph ) ) ;
	step 10 : wff = thm impbid1 (step 7, step 9) |- ( A e. B -> ( A. x ( x = A -> ph ) <-> ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem ceqsal (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- A e. _V ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( x = A -> ph ) <-> ps ) ;
}

proof of ceqsal {
	step 1 : wff = thm ceqsalg (hyp 1, hyp 3) |- ( A e. _V -> ( A. x ( x = A -> ph ) <-> ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 2, step 1) |- ( A. x ( x = A -> ph ) <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ceqsalv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( x = A -> ph ) <-> ps ) ;
}

proof of ceqsalv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm ceqsal (step 1, hyp 1, hyp 2) |- ( A. x ( x = A -> ph ) <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem gencl (ph : wff, ps : wff, ch : wff, th : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( th <-> E. x ( ch /\ A = B ) ) ;
	hyp 2 : wff = |- ( A = B -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ( ch -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( th -> ps ) ;
}

proof of gencl {
	step 1 : wff = thm syl5bi (hyp 2, hyp 3) |- ( A = B -> ( ch -> ps ) ) ;
	step 2 : wff = thm impcom (step 1) |- ( ( ch /\ A = B ) -> ps ) ;
	step 3 : wff = thm 19_23aiv (step 2) |- ( E. x ( ch /\ A = B ) -> ps ) ;
	step 4 : wff = thm sylbi (hyp 1, step 3) |- ( th -> ps ) ;
	qed prop 1 = step 4 ;
}

theorem 2gencl (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class, R : class, S : class)  {
	hyp 1 : wff = |- ( C e. S <-> E. x ( x e. R /\ A = C ) ) ;
	hyp 2 : wff = |- ( D e. S <-> E. y ( y e. R /\ B = D ) ) ;
	hyp 3 : wff = |- ( A = C -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ( B = D -> ( ps <-> ch ) ) ;
	hyp 5 : wff = |- ( ( x e. R /\ y e. R ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( C e. S /\ D e. S ) -> ch ) ;
}

proof of 2gencl {
	step 1 : wff = thm imbi2d (hyp 4) |- ( B = D -> ( ( C e. S -> ps ) <-> ( C e. S -> ch ) ) ) ;
	step 2 : wff = thm imbi2d (hyp 3) |- ( A = C -> ( ( y e. R -> ph ) <-> ( y e. R -> ps ) ) ) ;
	step 3 : wff = thm ex (hyp 5) |- ( x e. R -> ( y e. R -> ph ) ) ;
	step 4 : wff = thm gencl (hyp 1, step 2, step 3) |- ( C e. S -> ( y e. R -> ps ) ) ;
	step 5 : wff = thm com12 (step 4) |- ( y e. R -> ( C e. S -> ps ) ) ;
	step 6 : wff = thm gencl (hyp 2, step 1, step 5) |- ( D e. S -> ( C e. S -> ch ) ) ;
	step 7 : wff = thm impcom (step 6) |- ( ( C e. S /\ D e. S ) -> ch ) ;
	qed prop 1 = step 7 ;
}

theorem 3gencl (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, z : set, A : class, B : class, C : class, D : class, R : class, S : class, F : class, G : class)  {
	hyp 1 : wff = |- ( D e. S <-> E. x ( x e. R /\ A = D ) ) ;
	hyp 2 : wff = |- ( F e. S <-> E. y ( y e. R /\ B = F ) ) ;
	hyp 3 : wff = |- ( G e. S <-> E. z ( z e. R /\ C = G ) ) ;
	hyp 4 : wff = |- ( A = D -> ( ph <-> ps ) ) ;
	hyp 5 : wff = |- ( B = F -> ( ps <-> ch ) ) ;
	hyp 6 : wff = |- ( C = G -> ( ch <-> th ) ) ;
	hyp 7 : wff = |- ( ( x e. R /\ y e. R /\ z e. R ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( D e. S /\ F e. S /\ G e. S ) -> th ) ;
}

proof of 3gencl {
	step 1 : wff = thm imbi2d (hyp 6) |- ( C = G -> ( ( ( D e. S /\ F e. S ) -> ch ) <-> ( ( D e. S /\ F e. S ) -> th ) ) ) ;
	step 2 : wff = thm imbi2d (hyp 4) |- ( A = D -> ( ( z e. R -> ph ) <-> ( z e. R -> ps ) ) ) ;
	step 3 : wff = thm imbi2d (hyp 5) |- ( B = F -> ( ( z e. R -> ps ) <-> ( z e. R -> ch ) ) ) ;
	step 4 : wff = thm 3expia (hyp 7) |- ( ( x e. R /\ y e. R ) -> ( z e. R -> ph ) ) ;
	step 5 : wff = thm 2gencl (hyp 1, hyp 2, step 2, step 3, step 4) |- ( ( D e. S /\ F e. S ) -> ( z e. R -> ch ) ) ;
	step 6 : wff = thm com12 (step 5) |- ( z e. R -> ( ( D e. S /\ F e. S ) -> ch ) ) ;
	step 7 : wff = thm gencl (hyp 3, step 1, step 6) |- ( G e. S -> ( ( D e. S /\ F e. S ) -> th ) ) ;
	step 8 : wff = thm com12 (step 7) |- ( ( D e. S /\ F e. S ) -> ( G e. S -> th ) ) ;
	step 9 : wff = thm 3impia (step 8) |- ( ( D e. S /\ F e. S /\ G e. S ) -> th ) ;
	qed prop 1 = step 9 ;
}

theorem cgsexg (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ch ) ;
	hyp 2 : wff = |- ( ch -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( E. x ( ch /\ ph ) <-> ps ) ) ;
}

proof of cgsexg {
	step 1 : wff = thm biimpa (hyp 2) |- ( ( ch /\ ph ) -> ps ) ;
	step 2 : wff = thm 19_23aiv (step 1) |- ( E. x ( ch /\ ph ) -> ps ) ;
	step 3 : wff = thm biimprcd (hyp 2) |- ( ps -> ( ch -> ph ) ) ;
	step 4 : wff = thm ancld (step 3) |- ( ps -> ( ch -> ( ch /\ ph ) ) ) ;
	step 5 : wff = thm 19_22dv (step 4) |- ( ps -> ( E. x ch -> E. x ( ch /\ ph ) ) ) ;
	step 6 : wff = thm elex () |- ( A e. B -> E. x x = A ) ;
	step 7 : wff = thm 19_22i (hyp 1) |- ( E. x x = A -> E. x ch ) ;
	step 8 : wff = thm syl (step 6, step 7) |- ( A e. B -> E. x ch ) ;
	step 9 : wff = thm syl5com (step 5, step 8) |- ( A e. B -> ( ps -> E. x ( ch /\ ph ) ) ) ;
	step 10 : wff = thm impbid2 (step 2, step 9) |- ( A e. B -> ( E. x ( ch /\ ph ) <-> ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem cgsex2g (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ( x = A /\ y = B ) -> ch ) ;
	hyp 2 : wff = |- ( ch -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( E. x E. y ( ch /\ ph ) <-> ps ) ) ;
}

proof of cgsex2g {
	step 1 : wff = thm biimpa (hyp 2) |- ( ( ch /\ ph ) -> ps ) ;
	step 2 : wff = thm 19_23aivv (step 1) |- ( E. x E. y ( ch /\ ph ) -> ps ) ;
	step 3 : wff = thm biimprcd (hyp 2) |- ( ps -> ( ch -> ph ) ) ;
	step 4 : wff = thm ancld (step 3) |- ( ps -> ( ch -> ( ch /\ ph ) ) ) ;
	step 5 : wff = thm 19_22dvv (step 4) |- ( ps -> ( E. x E. y ch -> E. x E. y ( ch /\ ph ) ) ) ;
	step 6 : wff = thm elex () |- ( A e. C -> E. x x = A ) ;
	step 7 : wff = thm elex () |- ( B e. D -> E. y y = B ) ;
	step 8 : wff = thm anim12i (step 6, step 7) |- ( ( A e. C /\ B e. D ) -> ( E. x x = A /\ E. y y = B ) ) ;
	step 9 : wff = thm eeanv () |- ( E. x E. y ( x = A /\ y = B ) <-> ( E. x x = A /\ E. y y = B ) ) ;
	step 10 : wff = thm sylibr (step 8, step 9) |- ( ( A e. C /\ B e. D ) -> E. x E. y ( x = A /\ y = B ) ) ;
	step 11 : wff = thm 19_22i2 (hyp 1) |- ( E. x E. y ( x = A /\ y = B ) -> E. x E. y ch ) ;
	step 12 : wff = thm syl (step 10, step 11) |- ( ( A e. C /\ B e. D ) -> E. x E. y ch ) ;
	step 13 : wff = thm syl5com (step 5, step 12) |- ( ( A e. C /\ B e. D ) -> ( ps -> E. x E. y ( ch /\ ph ) ) ) ;
	step 14 : wff = thm impbid2 (step 2, step 13) |- ( ( A e. C /\ B e. D ) -> ( E. x E. y ( ch /\ ph ) <-> ps ) ) ;
	qed prop 1 = step 14 ;
}

theorem cgsex4g (ph : wff, ps : wff, ch : wff, x : set, y : set, z : set, w : set, A : class, B : class, C : class, D : class, R : class, S : class)  {
	hyp 1 : wff = |- ( ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> ch ) ;
	hyp 2 : wff = |- ( ch -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) -> ( E. x E. y E. z E. w ( ch /\ ph ) <-> ps ) ) ;
}

proof of cgsex4g {
	step 1 : wff = thm biimpa (hyp 2) |- ( ( ch /\ ph ) -> ps ) ;
	step 2 : wff = thm 19_23aivv (step 1) |- ( E. z E. w ( ch /\ ph ) -> ps ) ;
	step 3 : wff = thm 19_23aivv (step 2) |- ( E. x E. y E. z E. w ( ch /\ ph ) -> ps ) ;
	step 4 : wff = thm biimprcd (hyp 2) |- ( ps -> ( ch -> ph ) ) ;
	step 5 : wff = thm ancld (step 4) |- ( ps -> ( ch -> ( ch /\ ph ) ) ) ;
	step 6 : wff = thm 19_22dvv (step 5) |- ( ps -> ( E. z E. w ch -> E. z E. w ( ch /\ ph ) ) ) ;
	step 7 : wff = thm 19_22dvv (step 6) |- ( ps -> ( E. x E. y E. z E. w ch -> E. x E. y E. z E. w ( ch /\ ph ) ) ) ;
	step 8 : wff = thm elex () |- ( A e. R -> E. x x = A ) ;
	step 9 : wff = thm elex () |- ( B e. S -> E. y y = B ) ;
	step 10 : wff = thm anim12i (step 8, step 9) |- ( ( A e. R /\ B e. S ) -> ( E. x x = A /\ E. y y = B ) ) ;
	step 11 : wff = thm eeanv () |- ( E. x E. y ( x = A /\ y = B ) <-> ( E. x x = A /\ E. y y = B ) ) ;
	step 12 : wff = thm sylibr (step 10, step 11) |- ( ( A e. R /\ B e. S ) -> E. x E. y ( x = A /\ y = B ) ) ;
	step 13 : wff = thm elex () |- ( C e. R -> E. z z = C ) ;
	step 14 : wff = thm elex () |- ( D e. S -> E. w w = D ) ;
	step 15 : wff = thm anim12i (step 13, step 14) |- ( ( C e. R /\ D e. S ) -> ( E. z z = C /\ E. w w = D ) ) ;
	step 16 : wff = thm eeanv () |- ( E. z E. w ( z = C /\ w = D ) <-> ( E. z z = C /\ E. w w = D ) ) ;
	step 17 : wff = thm sylibr (step 15, step 16) |- ( ( C e. R /\ D e. S ) -> E. z E. w ( z = C /\ w = D ) ) ;
	step 18 : wff = thm anim12i (step 12, step 17) |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) -> ( E. x E. y ( x = A /\ y = B ) /\ E. z E. w ( z = C /\ w = D ) ) ) ;
	step 19 : wff = thm ee4anv () |- ( E. x E. y E. z E. w ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) <-> ( E. x E. y ( x = A /\ y = B ) /\ E. z E. w ( z = C /\ w = D ) ) ) ;
	step 20 : wff = thm sylibr (step 18, step 19) |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) -> E. x E. y E. z E. w ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) ) ;
	step 21 : wff = thm 19_22i2 (hyp 1) |- ( E. z E. w ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> E. z E. w ch ) ;
	step 22 : wff = thm 19_22i2 (step 21) |- ( E. x E. y E. z E. w ( ( x = A /\ y = B ) /\ ( z = C /\ w = D ) ) -> E. x E. y E. z E. w ch ) ;
	step 23 : wff = thm syl (step 20, step 22) |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) -> E. x E. y E. z E. w ch ) ;
	step 24 : wff = thm syl5com (step 7, step 23) |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) -> ( ps -> E. x E. y E. z E. w ( ch /\ ph ) ) ) ;
	step 25 : wff = thm impbid2 (step 3, step 24) |- ( ( ( A e. R /\ B e. S ) /\ ( C e. R /\ D e. S ) ) -> ( E. x E. y E. z E. w ( ch /\ ph ) <-> ps ) ) ;
	qed prop 1 = step 25 ;
}

theorem ceqsex (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- A e. _V ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( x = A /\ ph ) <-> ps ) ;
}

proof of ceqsex {
	step 1 : wff = thm biimpa (hyp 3) |- ( ( x = A /\ ph ) -> ps ) ;
	step 2 : wff = thm 19_23ai (hyp 1, step 1) |- ( E. x ( x = A /\ ph ) -> ps ) ;
	step 3 : wff = thm isseti (hyp 2) |- E. x x = A ;
	step 4 : wff = thm biimprcd (hyp 3) |- ( ps -> ( x = A -> ph ) ) ;
	step 5 : wff = thm 19_21ai (hyp 1, step 4) |- ( ps -> A. x ( x = A -> ph ) ) ;
	step 6 : wff = thm exintr () |- ( A. x ( x = A -> ph ) -> ( E. x x = A -> E. x ( x = A /\ ph ) ) ) ;
	step 7 : wff = thm syl (step 5, step 6) |- ( ps -> ( E. x x = A -> E. x ( x = A /\ ph ) ) ) ;
	step 8 : wff = thm mpi (step 3, step 7) |- ( ps -> E. x ( x = A /\ ph ) ) ;
	step 9 : wff = thm impbii (step 2, step 8) |- ( E. x ( x = A /\ ph ) <-> ps ) ;
	qed prop 1 = step 9 ;
}

theorem ceqsexv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( x = A /\ ph ) <-> ps ) ;
}

proof of ceqsexv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm ceqsex (step 1, hyp 1, hyp 2) |- ( E. x ( x = A /\ ph ) <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem ceqsex2 (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( ch -> A. y ch ) ;
	hyp 3 : wff = |- A e. _V ;
	hyp 4 : wff = |- B e. _V ;
	hyp 5 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 6 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ;
}

proof of ceqsex2 {
	step 1 : wff = thm anass () |- ( ( ( x = A /\ y = B ) /\ ph ) <-> ( x = A /\ ( y = B /\ ph ) ) ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. y ( ( x = A /\ y = B ) /\ ph ) <-> E. y ( x = A /\ ( y = B /\ ph ) ) ) ;
	step 3 : wff = thm 19_42v () |- ( E. y ( x = A /\ ( y = B /\ ph ) ) <-> ( x = A /\ E. y ( y = B /\ ph ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. y ( ( x = A /\ y = B ) /\ ph ) <-> ( x = A /\ E. y ( y = B /\ ph ) ) ) ;
	step 5 : wff = thm exbii (step 4) |- ( E. x E. y ( ( x = A /\ y = B ) /\ ph ) <-> E. x ( x = A /\ E. y ( y = B /\ ph ) ) ) ;
	step 6 : wff = axm ax-17 () |- ( y = B -> A. x y = B ) ;
	step 7 : wff = thm hban (step 6, hyp 1) |- ( ( y = B /\ ps ) -> A. x ( y = B /\ ps ) ) ;
	step 8 : wff = thm hbex (step 7) |- ( E. y ( y = B /\ ps ) -> A. x E. y ( y = B /\ ps ) ) ;
	step 9 : wff = thm anbi2d (hyp 5) |- ( x = A -> ( ( y = B /\ ph ) <-> ( y = B /\ ps ) ) ) ;
	step 10 : wff = thm exbidv (step 9) |- ( x = A -> ( E. y ( y = B /\ ph ) <-> E. y ( y = B /\ ps ) ) ) ;
	step 11 : wff = thm ceqsex (step 8, hyp 3, step 10) |- ( E. x ( x = A /\ E. y ( y = B /\ ph ) ) <-> E. y ( y = B /\ ps ) ) ;
	step 12 : wff = thm ceqsex (hyp 2, hyp 4, hyp 6) |- ( E. y ( y = B /\ ps ) <-> ch ) ;
	step 13 : wff = thm 3bitri (step 5, step 11, step 12) |- ( E. x E. y ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ;
	qed prop 1 = step 13 ;
}

theorem ceqsex2v (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x E. y ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ;
}

proof of ceqsex2v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = axm ax-17 () |- ( ch -> A. y ch ) ;
	step 3 : wff = thm ceqsex2 (step 1, step 2, hyp 1, hyp 2, hyp 3, hyp 4) |- ( E. x E. y ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ;
	qed prop 1 = step 3 ;
}

theorem gencbvex (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( A = y -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ( A = y -> ( ch <-> th ) ) ;
	hyp 4 : wff = |- ( th <-> E. x ( ch /\ A = y ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) ;
}

proof of gencbvex {
	step 1 : wff = thm excom () |- ( E. x E. y ( y = A /\ ( th /\ ps ) ) <-> E. y E. x ( y = A /\ ( th /\ ps ) ) ) ;
	step 2 : wff = thm anbi12d (hyp 3, hyp 2) |- ( A = y -> ( ( ch /\ ph ) <-> ( th /\ ps ) ) ) ;
	step 3 : wff = thm bicomd (step 2) |- ( A = y -> ( ( th /\ ps ) <-> ( ch /\ ph ) ) ) ;
	step 4 : wff = thm eqcoms (step 3) |- ( y = A -> ( ( th /\ ps ) <-> ( ch /\ ph ) ) ) ;
	step 5 : wff = thm ceqsexv (hyp 1, step 4) |- ( E. y ( y = A /\ ( th /\ ps ) ) <-> ( ch /\ ph ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. x E. y ( y = A /\ ( th /\ ps ) ) <-> E. x ( ch /\ ph ) ) ;
	step 7 : wff = thm anass () |- ( ( ( E. x y = A /\ th ) /\ ps ) <-> ( E. x y = A /\ ( th /\ ps ) ) ) ;
	step 8 : wff = thm pm5_32i (hyp 3) |- ( ( A = y /\ ch ) <-> ( A = y /\ th ) ) ;
	step 9 : wff = thm ancom () |- ( ( A = y /\ ch ) <-> ( ch /\ A = y ) ) ;
	step 10 : wff = thm eqcom () |- ( A = y <-> y = A ) ;
	step 11 : wff = thm anbi1i (step 10) |- ( ( A = y /\ th ) <-> ( y = A /\ th ) ) ;
	step 12 : wff = thm 3bitr3i (step 8, step 9, step 11) |- ( ( ch /\ A = y ) <-> ( y = A /\ th ) ) ;
	step 13 : wff = thm exbii (step 12) |- ( E. x ( ch /\ A = y ) <-> E. x ( y = A /\ th ) ) ;
	step 14 : wff = thm 19_41v () |- ( E. x ( y = A /\ th ) <-> ( E. x y = A /\ th ) ) ;
	step 15 : wff = thm 3bitri (hyp 4, step 13, step 14) |- ( th <-> ( E. x y = A /\ th ) ) ;
	step 16 : wff = thm anbi1i (step 15) |- ( ( th /\ ps ) <-> ( ( E. x y = A /\ th ) /\ ps ) ) ;
	step 17 : wff = thm 19_41v () |- ( E. x ( y = A /\ ( th /\ ps ) ) <-> ( E. x y = A /\ ( th /\ ps ) ) ) ;
	step 18 : wff = thm 3bitr4ri (step 7, step 16, step 17) |- ( E. x ( y = A /\ ( th /\ ps ) ) <-> ( th /\ ps ) ) ;
	step 19 : wff = thm exbii (step 18) |- ( E. y E. x ( y = A /\ ( th /\ ps ) ) <-> E. y ( th /\ ps ) ) ;
	step 20 : wff = thm 3bitr3i (step 1, step 6, step 19) |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) ;
	qed prop 1 = step 20 ;
}

theorem gencbvex2 (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( A = y -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ( A = y -> ( ch <-> th ) ) ;
	hyp 4 : wff = |- ( th -> E. x ( ch /\ A = y ) ) ;
	-----------------------
	prop 1 : wff = |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) ;
}

proof of gencbvex2 {
	step 1 : wff = thm biimpac (hyp 3) |- ( ( ch /\ A = y ) -> th ) ;
	step 2 : wff = thm 19_23aiv (step 1) |- ( E. x ( ch /\ A = y ) -> th ) ;
	step 3 : wff = thm impbii (hyp 4, step 2) |- ( th <-> E. x ( ch /\ A = y ) ) ;
	step 4 : wff = thm gencbvex (hyp 1, hyp 2, hyp 3, step 3) |- ( E. x ( ch /\ ph ) <-> E. y ( th /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem gencbval (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( A = y -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ( A = y -> ( ch <-> th ) ) ;
	hyp 4 : wff = |- ( th <-> E. x ( ch /\ A = y ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( ch -> ph ) <-> A. y ( th -> ps ) ) ;
}

proof of gencbval {
	step 1 : wff = thm notbid (hyp 2) |- ( A = y -> ( -. ph <-> -. ps ) ) ;
	step 2 : wff = thm gencbvex (hyp 1, step 1, hyp 3, hyp 4) |- ( E. x ( ch /\ -. ph ) <-> E. y ( th /\ -. ps ) ) ;
	step 3 : wff = thm exanali () |- ( E. x ( ch /\ -. ph ) <-> -. A. x ( ch -> ph ) ) ;
	step 4 : wff = thm exanali () |- ( E. y ( th /\ -. ps ) <-> -. A. y ( th -> ps ) ) ;
	step 5 : wff = thm 3bitr3i (step 2, step 3, step 4) |- ( -. A. x ( ch -> ph ) <-> -. A. y ( th -> ps ) ) ;
	step 6 : wff = thm con4bii (step 5) |- ( A. x ( ch -> ph ) <-> A. y ( th -> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem vtoclf (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- A e. _V ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of vtoclf {
	step 1 : wff = thm isseti (hyp 2) |- E. x x = A ;
	step 2 : wff = thm biimpd (hyp 3) |- ( x = A -> ( ph -> ps ) ) ;
	step 3 : wff = thm 19_22i (step 2) |- ( E. x x = A -> E. x ( ph -> ps ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- E. x ( ph -> ps ) ;
	step 5 : wff = thm 19_36i (hyp 1, step 4) |- ( A. x ph -> ps ) ;
	step 6 : wff = thm mpg (step 5, hyp 4) |- ps ;
	qed prop 1 = step 6 ;
}

theorem vtocl (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of vtocl {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm vtoclf (step 1, hyp 1, hyp 2, hyp 3) |- ps ;
	qed prop 1 = step 2 ;
}

theorem vtocl2 (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of vtocl2 {
	step 1 : wff = thm isseti (hyp 1) |- E. x x = A ;
	step 2 : wff = thm isseti (hyp 2) |- E. y y = B ;
	step 3 : wff = thm eeanv () |- ( E. x E. y ( x = A /\ y = B ) <-> ( E. x x = A /\ E. y y = B ) ) ;
	step 4 : wff = thm biimpd (hyp 3) |- ( ( x = A /\ y = B ) -> ( ph -> ps ) ) ;
	step 5 : wff = thm 19_22i2 (step 4) |- ( E. x E. y ( x = A /\ y = B ) -> E. x E. y ( ph -> ps ) ) ;
	step 6 : wff = thm sylbir (step 3, step 5) |- ( ( E. x x = A /\ E. y y = B ) -> E. x E. y ( ph -> ps ) ) ;
	step 7 : wff = thm mp2an (step 1, step 2, step 6) |- E. x E. y ( ph -> ps ) ;
	step 8 : wff = thm 19_36v () |- ( E. y ( ph -> ps ) <-> ( A. y ph -> ps ) ) ;
	step 9 : wff = thm exbii (step 8) |- ( E. x E. y ( ph -> ps ) <-> E. x ( A. y ph -> ps ) ) ;
	step 10 : wff = thm 19_36v () |- ( E. x ( A. y ph -> ps ) <-> ( A. x A. y ph -> ps ) ) ;
	step 11 : wff = thm bitri (step 9, step 10) |- ( E. x E. y ( ph -> ps ) <-> ( A. x A. y ph -> ps ) ) ;
	step 12 : wff = thm mpbi (step 7, step 11) |- ( A. x A. y ph -> ps ) ;
	step 13 : wff = axm ax-gen (hyp 4) |- A. y ph ;
	step 14 : wff = thm mpg (step 12, step 13) |- ps ;
	qed prop 1 = step 14 ;
}

theorem vtocl3 (ph : wff, ps : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	hyp 4 : wff = |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) ;
	hyp 5 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of vtocl3 {
	step 1 : wff = thm isseti (hyp 1) |- E. x x = A ;
	step 2 : wff = thm isseti (hyp 2) |- E. y y = B ;
	step 3 : wff = thm isseti (hyp 3) |- E. z z = C ;
	step 4 : wff = thm eeeanv () |- ( E. x E. y E. z ( x = A /\ y = B /\ z = C ) <-> ( E. x x = A /\ E. y y = B /\ E. z z = C ) ) ;
	step 5 : wff = thm biimpd (hyp 4) |- ( ( x = A /\ y = B /\ z = C ) -> ( ph -> ps ) ) ;
	step 6 : wff = thm 19_22i (step 5) |- ( E. z ( x = A /\ y = B /\ z = C ) -> E. z ( ph -> ps ) ) ;
	step 7 : wff = thm 19_22i2 (step 6) |- ( E. x E. y E. z ( x = A /\ y = B /\ z = C ) -> E. x E. y E. z ( ph -> ps ) ) ;
	step 8 : wff = thm sylbir (step 4, step 7) |- ( ( E. x x = A /\ E. y y = B /\ E. z z = C ) -> E. x E. y E. z ( ph -> ps ) ) ;
	step 9 : wff = thm mp3an (step 1, step 2, step 3, step 8) |- E. x E. y E. z ( ph -> ps ) ;
	step 10 : wff = thm 19_36v () |- ( E. z ( ph -> ps ) <-> ( A. z ph -> ps ) ) ;
	step 11 : wff = thm exbii (step 10) |- ( E. y E. z ( ph -> ps ) <-> E. y ( A. z ph -> ps ) ) ;
	step 12 : wff = thm 19_36v () |- ( E. y ( A. z ph -> ps ) <-> ( A. y A. z ph -> ps ) ) ;
	step 13 : wff = thm bitri (step 11, step 12) |- ( E. y E. z ( ph -> ps ) <-> ( A. y A. z ph -> ps ) ) ;
	step 14 : wff = thm exbii (step 13) |- ( E. x E. y E. z ( ph -> ps ) <-> E. x ( A. y A. z ph -> ps ) ) ;
	step 15 : wff = thm 19_36v () |- ( E. x ( A. y A. z ph -> ps ) <-> ( A. x A. y A. z ph -> ps ) ) ;
	step 16 : wff = thm bitri (step 14, step 15) |- ( E. x E. y E. z ( ph -> ps ) <-> ( A. x A. y A. z ph -> ps ) ) ;
	step 17 : wff = thm mpbi (step 9, step 16) |- ( A. x A. y A. z ph -> ps ) ;
	step 18 : wff = thm gen2 (hyp 5) |- A. y A. z ph ;
	step 19 : wff = thm mpg (step 17, step 18) |- ps ;
	qed prop 1 = step 19 ;
}

theorem vtoclb (ph : wff, ps : wff, ch : wff, th : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ch ) ) ;
	hyp 3 : wff = |- ( x = A -> ( ps <-> th ) ) ;
	hyp 4 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ch <-> th ) ;
}

proof of vtoclb {
	step 1 : wff = thm bibi12d (hyp 2, hyp 3) |- ( x = A -> ( ( ph <-> ps ) <-> ( ch <-> th ) ) ) ;
	step 2 : wff = thm vtocl (hyp 1, step 1, hyp 4) |- ( ch <-> th ) ;
	qed prop 1 = step 2 ;
}

theorem vtoclgf (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ps ) ;
}

proof of vtoclgf {
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = thm isset () |- ( A e. _V <-> E. y y = A ) ;
	step 3 : wff = thm hbeleq (hyp 1) |- ( y = A -> A. x y = A ) ;
	step 4 : wff = axm ax-17 () |- ( x = A -> A. y x = A ) ;
	step 5 : wff = thm eqeq1 () |- ( y = x -> ( y = A <-> x = A ) ) ;
	step 6 : wff = thm cbvex (step 3, step 4, step 5) |- ( E. y y = A <-> E. x x = A ) ;
	step 7 : wff = thm bitri (step 2, step 6) |- ( A e. _V <-> E. x x = A ) ;
	step 8 : wff = thm mpbii (hyp 4, hyp 3) |- ( x = A -> ps ) ;
	step 9 : wff = thm 19_23ai (hyp 2, step 8) |- ( E. x x = A -> ps ) ;
	step 10 : wff = thm sylbi (step 7, step 9) |- ( A e. _V -> ps ) ;
	step 11 : wff = thm syl (step 1, step 10) |- ( A e. B -> ps ) ;
	qed prop 1 = step 11 ;
}

theorem vtoclg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ps ) ;
}

proof of vtoclg {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm vtoclgf (step 1, step 2, hyp 1, hyp 2) |- ( A e. B -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem vtoclbg (ph : wff, ps : wff, ch : wff, th : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( x = A -> ( ps <-> th ) ) ;
	hyp 3 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( ch <-> th ) ) ;
}

proof of vtoclbg {
	step 1 : wff = thm bibi12d (hyp 1, hyp 2) |- ( x = A -> ( ( ph <-> ps ) <-> ( ch <-> th ) ) ) ;
	step 2 : wff = thm vtoclg (step 1, hyp 3) |- ( A e. B -> ( ch <-> th ) ) ;
	qed prop 1 = step 2 ;
}

theorem vtocl2gf (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( ch -> A. y ch ) ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	hyp 5 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ch ) ;
}

proof of vtocl2gf {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. B -> A. y z e. B ) ;
	step 2 : wff = axm ax-17 () |- ( A e. _V -> A. y A e. _V ) ;
	step 3 : wff = thm hbim (step 2, hyp 2) |- ( ( A e. _V -> ch ) -> A. y ( A e. _V -> ch ) ) ;
	step 4 : wff = thm imbi2d (hyp 4) |- ( y = B -> ( ( A e. _V -> ps ) <-> ( A e. _V -> ch ) ) ) ;
	step 5 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 6 : wff = thm vtoclgf (step 5, hyp 1, hyp 3, hyp 5) |- ( A e. _V -> ps ) ;
	step 7 : wff = thm vtoclgf (step 1, step 3, step 4, step 6) |- ( B e. D -> ( A e. _V -> ch ) ) ;
	step 8 : wff = thm impcom (step 7) |- ( ( A e. _V /\ B e. D ) -> ch ) ;
	step 9 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 10 : wff = thm sylan (step 8, step 9) |- ( ( A e. C /\ B e. D ) -> ch ) ;
	qed prop 1 = step 10 ;
}

theorem vtocl2g (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	hyp 3 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ch ) ;
}

proof of vtocl2g {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = axm ax-17 () |- ( ch -> A. y ch ) ;
	step 3 : wff = thm vtocl2gf (step 1, step 2, hyp 1, hyp 2, hyp 3) |- ( ( A e. C /\ B e. D ) -> ch ) ;
	qed prop 1 = step 3 ;
}

theorem vtoclgaf (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 4 : wff = |- ( x e. B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ps ) ;
}

proof of vtoclgaf {
	step 1 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 2 : wff = thm hbel (hyp 1, step 1) |- ( A e. B -> A. x A e. B ) ;
	step 3 : wff = thm hbim (step 2, hyp 2) |- ( ( A e. B -> ps ) -> A. x ( A e. B -> ps ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 5 : wff = thm imbi12d (step 4, hyp 3) |- ( x = A -> ( ( x e. B -> ph ) <-> ( A e. B -> ps ) ) ) ;
	step 6 : wff = thm vtoclgf (hyp 1, step 3, step 5, hyp 4) |- ( A e. B -> ( A e. B -> ps ) ) ;
	step 7 : wff = thm pm2_43i (step 6) |- ( A e. B -> ps ) ;
	qed prop 1 = step 7 ;
}

theorem vtoclga (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( x e. B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ps ) ;
}

proof of vtoclga {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm vtoclgaf (step 1, step 2, hyp 1, hyp 2) |- ( A e. B -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem vtocl2ga (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	hyp 3 : wff = |- ( ( x e. C /\ y e. D ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ch ) ;
}

proof of vtocl2ga {
	step 1 : wff = thm imbi2d (hyp 2) |- ( y = B -> ( ( A e. C -> ps ) <-> ( A e. C -> ch ) ) ) ;
	step 2 : wff = thm imbi2d (hyp 1) |- ( x = A -> ( ( y e. D -> ph ) <-> ( y e. D -> ps ) ) ) ;
	step 3 : wff = thm ex (hyp 3) |- ( x e. C -> ( y e. D -> ph ) ) ;
	step 4 : wff = thm vtoclga (step 2, step 3) |- ( A e. C -> ( y e. D -> ps ) ) ;
	step 5 : wff = thm com12 (step 4) |- ( y e. D -> ( A e. C -> ps ) ) ;
	step 6 : wff = thm vtoclga (step 1, step 5) |- ( B e. D -> ( A e. C -> ch ) ) ;
	step 7 : wff = thm impcom (step 6) |- ( ( A e. C /\ B e. D ) -> ch ) ;
	qed prop 1 = step 7 ;
}

theorem vtocl3ga (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, z : set, A : class, B : class, C : class, D : class, R : class, S : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	hyp 3 : wff = |- ( z = C -> ( ch <-> th ) ) ;
	hyp 4 : wff = |- ( ( x e. D /\ y e. R /\ z e. S ) -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. D /\ B e. R /\ C e. S ) -> th ) ;
}

proof of vtocl3ga {
	step 1 : wff = thm imbi2d (hyp 2) |- ( y = B -> ( ( A e. D -> ps ) <-> ( A e. D -> ch ) ) ) ;
	step 2 : wff = thm imbi2d (hyp 3) |- ( z = C -> ( ( A e. D -> ch ) <-> ( A e. D -> th ) ) ) ;
	step 3 : wff = thm imbi2d (hyp 1) |- ( x = A -> ( ( ( y e. R /\ z e. S ) -> ph ) <-> ( ( y e. R /\ z e. S ) -> ps ) ) ) ;
	step 4 : wff = thm 3expib (hyp 4) |- ( x e. D -> ( ( y e. R /\ z e. S ) -> ph ) ) ;
	step 5 : wff = thm vtoclga (step 3, step 4) |- ( A e. D -> ( ( y e. R /\ z e. S ) -> ps ) ) ;
	step 6 : wff = thm com12 (step 5) |- ( ( y e. R /\ z e. S ) -> ( A e. D -> ps ) ) ;
	step 7 : wff = thm vtocl2ga (step 1, step 2, step 6) |- ( ( B e. R /\ C e. S ) -> ( A e. D -> th ) ) ;
	step 8 : wff = thm ex (step 7) |- ( B e. R -> ( C e. S -> ( A e. D -> th ) ) ) ;
	step 9 : wff = thm com3r (step 8) |- ( A e. D -> ( B e. R -> ( C e. S -> th ) ) ) ;
	step 10 : wff = thm 3imp (step 9) |- ( ( A e. D /\ B e. R /\ C e. S ) -> th ) ;
	qed prop 1 = step 10 ;
}

theorem vtocleg (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ph ) ;
}

proof of vtocleg {
	step 1 : wff = thm elex () |- ( A e. B -> E. x x = A ) ;
	step 2 : wff = thm 19_23aiv (hyp 1) |- ( E. x x = A -> ph ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A e. B -> ph ) ;
	qed prop 1 = step 3 ;
}

theorem vtoclegft (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A. x ( ph -> A. x ph ) /\ A. x ( x = A -> ph ) ) -> ph ) ;
}

proof of vtoclegft {
	step 1 : wff = thm 19_23t () |- ( A. x ( ph -> A. x ph ) -> ( A. x ( x = A -> ph ) <-> ( E. x x = A -> ph ) ) ) ;
	step 2 : wff = thm adantl (step 1) |- ( ( A e. B /\ A. x ( ph -> A. x ph ) ) -> ( A. x ( x = A -> ph ) <-> ( E. x x = A -> ph ) ) ) ;
	step 3 : wff = thm elex () |- ( A e. B -> E. x x = A ) ;
	step 4 : wff = thm pm2_27 () |- ( E. x x = A -> ( ( E. x x = A -> ph ) -> ph ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A e. B -> ( ( E. x x = A -> ph ) -> ph ) ) ;
	step 6 : wff = thm adantr (step 5) |- ( ( A e. B /\ A. x ( ph -> A. x ph ) ) -> ( ( E. x x = A -> ph ) -> ph ) ) ;
	step 7 : wff = thm sylbid (step 2, step 6) |- ( ( A e. B /\ A. x ( ph -> A. x ph ) ) -> ( A. x ( x = A -> ph ) -> ph ) ) ;
	step 8 : wff = thm 3impia (step 7) |- ( ( A e. B /\ A. x ( ph -> A. x ph ) /\ A. x ( x = A -> ph ) ) -> ph ) ;
	qed prop 1 = step 8 ;
}

theorem vtoclef (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- A e. _V ;
	hyp 3 : wff = |- ( x = A -> ph ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of vtoclef {
	step 1 : wff = thm isseti (hyp 2) |- E. x x = A ;
	step 2 : wff = thm 19_23ai (hyp 1, hyp 3) |- ( E. x x = A -> ph ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ph ;
	qed prop 1 = step 3 ;
}

theorem vtocle (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ph ) ;
	-----------------------
	prop 1 : wff = |- ph ;
}

proof of vtocle {
	step 1 : wff = thm vtocleg (hyp 2) |- ( A e. _V -> ph ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ph ;
	qed prop 1 = step 2 ;
}

theorem vtoclri (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- A. x e. B ph ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ps ) ;
}

proof of vtoclri {
	step 1 : wff = thm rspec (hyp 2) |- ( x e. B -> ph ) ;
	step 2 : wff = thm vtoclga (hyp 1, step 1) |- ( A e. B -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem cla4gf (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A. x ph -> ps ) ) ;
}

proof of cla4gf {
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = thm isset () |- ( A e. _V <-> E. y y = A ) ;
	step 3 : wff = thm hbeleq (hyp 1) |- ( y = A -> A. x y = A ) ;
	step 4 : wff = axm ax-17 () |- ( x = A -> A. y x = A ) ;
	step 5 : wff = thm eqeq1 () |- ( y = x -> ( y = A <-> x = A ) ) ;
	step 6 : wff = thm cbvex (step 3, step 4, step 5) |- ( E. y y = A <-> E. x x = A ) ;
	step 7 : wff = thm bitri (step 2, step 6) |- ( A e. _V <-> E. x x = A ) ;
	step 8 : wff = thm biimpd (hyp 3) |- ( x = A -> ( ph -> ps ) ) ;
	step 9 : wff = thm 19_22i (step 8) |- ( E. x x = A -> E. x ( ph -> ps ) ) ;
	step 10 : wff = thm sylbi (step 7, step 9) |- ( A e. _V -> E. x ( ph -> ps ) ) ;
	step 11 : wff = thm 19_36 (hyp 2) |- ( E. x ( ph -> ps ) <-> ( A. x ph -> ps ) ) ;
	step 12 : wff = thm sylib (step 10, step 11) |- ( A e. _V -> ( A. x ph -> ps ) ) ;
	step 13 : wff = thm syl (step 1, step 12) |- ( A e. B -> ( A. x ph -> ps ) ) ;
	qed prop 1 = step 13 ;
}

theorem cla4egf (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( ps -> E. x ph ) ) ;
}

proof of cla4egf {
	step 1 : wff = thm hbn (hyp 2) |- ( -. ps -> A. x -. ps ) ;
	step 2 : wff = thm notbid (hyp 3) |- ( x = A -> ( -. ph <-> -. ps ) ) ;
	step 3 : wff = thm cla4gf (hyp 1, step 1, step 2) |- ( A e. B -> ( A. x -. ph -> -. ps ) ) ;
	step 4 : wff = thm con2d (step 3) |- ( A e. B -> ( ps -> -. A. x -. ph ) ) ;
	step 5 : wff = def df-ex () |- ( E. x ph <-> -. A. x -. ph ) ;
	step 6 : wff = thm syl6ibr (step 4, step 5) |- ( A e. B -> ( ps -> E. x ph ) ) ;
	qed prop 1 = step 6 ;
}

theorem cla4gv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A. x ph -> ps ) ) ;
}

proof of cla4gv {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cla4gf (step 1, step 2, hyp 1) |- ( A e. B -> ( A. x ph -> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem cla4egv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( ps -> E. x ph ) ) ;
}

proof of cla4egv {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cla4egf (step 1, step 2, hyp 1) |- ( A e. B -> ( ps -> E. x ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem cla42egv (ph : wff, ps : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( ps -> E. x E. y ph ) ) ;
}

proof of cla42egv {
	step 1 : wff = thm biimprcd (hyp 1) |- ( ps -> ( ( x = A /\ y = B ) -> ph ) ) ;
	step 2 : wff = thm 19_22dvv (step 1) |- ( ps -> ( E. x E. y ( x = A /\ y = B ) -> E. x E. y ph ) ) ;
	step 3 : wff = thm elex () |- ( A e. C -> E. x x = A ) ;
	step 4 : wff = thm elex () |- ( B e. D -> E. y y = B ) ;
	step 5 : wff = thm anim12i (step 3, step 4) |- ( ( A e. C /\ B e. D ) -> ( E. x x = A /\ E. y y = B ) ) ;
	step 6 : wff = thm eeanv () |- ( E. x E. y ( x = A /\ y = B ) <-> ( E. x x = A /\ E. y y = B ) ) ;
	step 7 : wff = thm sylibr (step 5, step 6) |- ( ( A e. C /\ B e. D ) -> E. x E. y ( x = A /\ y = B ) ) ;
	step 8 : wff = thm syl5com (step 2, step 7) |- ( ( A e. C /\ B e. D ) -> ( ps -> E. x E. y ph ) ) ;
	qed prop 1 = step 8 ;
}

theorem cla42gv (ph : wff, ps : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( A. x A. y ph -> ps ) ) ;
}

proof of cla42gv {
	step 1 : wff = thm notbid (hyp 1) |- ( ( x = A /\ y = B ) -> ( -. ph <-> -. ps ) ) ;
	step 2 : wff = thm cla42egv (step 1) |- ( ( A e. C /\ B e. D ) -> ( -. ps -> E. x E. y -. ph ) ) ;
	step 3 : wff = thm exnal () |- ( E. y -. ph <-> -. A. y ph ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. x E. y -. ph <-> E. x -. A. y ph ) ;
	step 5 : wff = thm exnal () |- ( E. x -. A. y ph <-> -. A. x A. y ph ) ;
	step 6 : wff = thm bitr2i (step 4, step 5) |- ( -. A. x A. y ph <-> E. x E. y -. ph ) ;
	step 7 : wff = thm syl6ibr (step 2, step 6) |- ( ( A e. C /\ B e. D ) -> ( -. ps -> -. A. x A. y ph ) ) ;
	step 8 : wff = thm con4d (step 7) |- ( ( A e. C /\ B e. D ) -> ( A. x A. y ph -> ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem cla43egv (ph : wff, ps : wff, x : set, y : set, z : set, A : class, B : class, C : class, R : class, S : class, T : class)  {
	hyp 1 : wff = |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( ps -> E. x E. y E. z ph ) ) ;
}

proof of cla43egv {
	step 1 : wff = thm biimprcd (hyp 1) |- ( ps -> ( ( x = A /\ y = B /\ z = C ) -> ph ) ) ;
	step 2 : wff = thm 19_22dv (step 1) |- ( ps -> ( E. z ( x = A /\ y = B /\ z = C ) -> E. z ph ) ) ;
	step 3 : wff = thm 19_22dvv (step 2) |- ( ps -> ( E. x E. y E. z ( x = A /\ y = B /\ z = C ) -> E. x E. y E. z ph ) ) ;
	step 4 : wff = thm elex () |- ( A e. R -> E. x x = A ) ;
	step 5 : wff = thm elex () |- ( B e. S -> E. y y = B ) ;
	step 6 : wff = thm elex () |- ( C e. T -> E. z z = C ) ;
	step 7 : wff = thm 3anim123i (step 4, step 5, step 6) |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( E. x x = A /\ E. y y = B /\ E. z z = C ) ) ;
	step 8 : wff = thm eeeanv () |- ( E. x E. y E. z ( x = A /\ y = B /\ z = C ) <-> ( E. x x = A /\ E. y y = B /\ E. z z = C ) ) ;
	step 9 : wff = thm sylibr (step 7, step 8) |- ( ( A e. R /\ B e. S /\ C e. T ) -> E. x E. y E. z ( x = A /\ y = B /\ z = C ) ) ;
	step 10 : wff = thm syl5com (step 3, step 9) |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( ps -> E. x E. y E. z ph ) ) ;
	qed prop 1 = step 10 ;
}

theorem cla43gv (ph : wff, ps : wff, x : set, y : set, z : set, A : class, B : class, C : class, R : class, S : class, T : class)  {
	hyp 1 : wff = |- ( ( x = A /\ y = B /\ z = C ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( A. x A. y A. z ph -> ps ) ) ;
}

proof of cla43gv {
	step 1 : wff = thm notbid (hyp 1) |- ( ( x = A /\ y = B /\ z = C ) -> ( -. ph <-> -. ps ) ) ;
	step 2 : wff = thm cla43egv (step 1) |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( -. ps -> E. x E. y E. z -. ph ) ) ;
	step 3 : wff = thm exnal () |- ( E. z -. ph <-> -. A. z ph ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. y E. z -. ph <-> E. y -. A. z ph ) ;
	step 5 : wff = thm exnal () |- ( E. y -. A. z ph <-> -. A. y A. z ph ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( E. y E. z -. ph <-> -. A. y A. z ph ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. x E. y E. z -. ph <-> E. x -. A. y A. z ph ) ;
	step 8 : wff = thm exnal () |- ( E. x -. A. y A. z ph <-> -. A. x A. y A. z ph ) ;
	step 9 : wff = thm bitr2i (step 7, step 8) |- ( -. A. x A. y A. z ph <-> E. x E. y E. z -. ph ) ;
	step 10 : wff = thm syl6ibr (step 2, step 9) |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( -. ps -> -. A. x A. y A. z ph ) ) ;
	step 11 : wff = thm con4d (step 10) |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( A. x A. y A. z ph -> ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem cla4v (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ph -> ps ) ;
}

proof of cla4v {
	step 1 : wff = thm cla4gv (hyp 2) |- ( A e. _V -> ( A. x ph -> ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A. x ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem cla4ev (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> E. x ph ) ;
}

proof of cla4ev {
	step 1 : wff = thm cla4egv (hyp 2) |- ( A e. _V -> ( ps -> E. x ph ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( ps -> E. x ph ) ;
	qed prop 1 = step 2 ;
}

theorem cla42ev (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps -> E. x E. y ph ) ;
}

proof of cla42ev {
	step 1 : wff = thm cla42egv (hyp 3) |- ( ( A e. _V /\ B e. _V ) -> ( ps -> E. x E. y ph ) ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- ( ps -> E. x E. y ph ) ;
	qed prop 1 = step 2 ;
}

theorem rcla4 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A. x e. B ph -> ps ) ) ;
}

proof of rcla4 {
	var y : set;
	step 1 : wff = def df-ral () |- ( A. x e. B ph <-> A. x ( x e. B -> ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 3 : wff = axm ax-17 () |- ( A e. B -> A. x A e. B ) ;
	step 4 : wff = thm hbim (step 3, hyp 1) |- ( ( A e. B -> ps ) -> A. x ( A e. B -> ps ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 6 : wff = thm imbi12d (step 5, hyp 2) |- ( x = A -> ( ( x e. B -> ph ) <-> ( A e. B -> ps ) ) ) ;
	step 7 : wff = thm cla4gf (step 2, step 4, step 6) |- ( A e. B -> ( A. x ( x e. B -> ph ) -> ( A e. B -> ps ) ) ) ;
	step 8 : wff = thm pm2_43b (step 7) |- ( A. x ( x e. B -> ph ) -> ( A e. B -> ps ) ) ;
	step 9 : wff = thm sylbi (step 1, step 8) |- ( A. x e. B ph -> ( A e. B -> ps ) ) ;
	step 10 : wff = thm com12 (step 9) |- ( A e. B -> ( A. x e. B ph -> ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem rcla4e (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. B /\ ps ) -> E. x e. B ph ) ;
}

proof of rcla4e {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( A e. B -> A. x A e. B ) ;
	step 3 : wff = thm hban (step 2, hyp 1) |- ( ( A e. B /\ ps ) -> A. x ( A e. B /\ ps ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 5 : wff = thm anbi12d (step 4, hyp 2) |- ( x = A -> ( ( x e. B /\ ph ) <-> ( A e. B /\ ps ) ) ) ;
	step 6 : wff = thm cla4egf (step 1, step 3, step 5) |- ( A e. B -> ( ( A e. B /\ ps ) -> E. x ( x e. B /\ ph ) ) ) ;
	step 7 : wff = thm anabsi5 (step 6) |- ( ( A e. B /\ ps ) -> E. x ( x e. B /\ ph ) ) ;
	step 8 : wff = def df-rex () |- ( E. x e. B ph <-> E. x ( x e. B /\ ph ) ) ;
	step 9 : wff = thm sylibr (step 7, step 8) |- ( ( A e. B /\ ps ) -> E. x e. B ph ) ;
	qed prop 1 = step 9 ;
}

theorem rcla4v (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A. x e. B ph -> ps ) ) ;
}

proof of rcla4v {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm rcla4 (step 1, hyp 1) |- ( A e. B -> ( A. x e. B ph -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem rcla4cv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. B ph -> ( A e. B -> ps ) ) ;
}

proof of rcla4cv {
	step 1 : wff = thm rcla4v (hyp 1) |- ( A e. B -> ( A. x e. B ph -> ps ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( A. x e. B ph -> ( A e. B -> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem rcla4va (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. B /\ A. x e. B ph ) -> ps ) ;
}

proof of rcla4va {
	step 1 : wff = thm rcla4v (hyp 1) |- ( A e. B -> ( A. x e. B ph -> ps ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( A e. B /\ A. x e. B ph ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem rcla4cva (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A. x e. B ph /\ A e. B ) -> ps ) ;
}

proof of rcla4cva {
	step 1 : wff = thm rcla4va (hyp 1) |- ( ( A e. B /\ A. x e. B ph ) -> ps ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( A. x e. B ph /\ A e. B ) -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem rcla4ev (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. B /\ ps ) -> E. x e. B ph ) ;
}

proof of rcla4ev {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm rcla4e (step 1, hyp 1) |- ( ( A e. B /\ ps ) -> E. x e. B ph ) ;
	qed prop 1 = step 2 ;
}

theorem rcla4dv (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> ( A. x e. B ps -> ch ) ) ;
}

proof of rcla4dv {
	step 1 : wff = thm expcom (hyp 1) |- ( x = A -> ( ph -> ( ps <-> ch ) ) ) ;
	step 2 : wff = thm pm5_74d (step 1) |- ( x = A -> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 3 : wff = thm rcla4v (step 2) |- ( A e. B -> ( A. x e. B ( ph -> ps ) -> ( ph -> ch ) ) ) ;
	step 4 : wff = thm r19_21v () |- ( A. x e. B ( ph -> ps ) <-> ( ph -> A. x e. B ps ) ) ;
	step 5 : wff = thm syl5ibr (step 3, step 4) |- ( A e. B -> ( ( ph -> A. x e. B ps ) -> ( ph -> ch ) ) ) ;
	step 6 : wff = thm pm2_86d (step 5) |- ( A e. B -> ( ph -> ( A. x e. B ps -> ch ) ) ) ;
	step 7 : wff = thm impcom (step 6) |- ( ( ph /\ A e. B ) -> ( A. x e. B ps -> ch ) ) ;
	qed prop 1 = step 7 ;
}

theorem rcla4edv (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ( ph /\ x = A ) -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> ( ch -> E. x e. B ps ) ) ;
}

proof of rcla4edv {
	step 1 : wff = thm expcom (hyp 1) |- ( x = A -> ( ph -> ( ps <-> ch ) ) ) ;
	step 2 : wff = thm pm5_74d (step 1) |- ( x = A -> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 3 : wff = thm rcla4ev (step 2) |- ( ( A e. B /\ ( ph -> ch ) ) -> E. x e. B ( ph -> ps ) ) ;
	step 4 : wff = thm r19_37av () |- ( E. x e. B ( ph -> ps ) -> ( ph -> E. x e. B ps ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( ( A e. B /\ ( ph -> ch ) ) -> ( ph -> E. x e. B ps ) ) ;
	step 6 : wff = thm ex (step 5) |- ( A e. B -> ( ( ph -> ch ) -> ( ph -> E. x e. B ps ) ) ) ;
	step 7 : wff = thm pm2_86d (step 6) |- ( A e. B -> ( ph -> ( ch -> E. x e. B ps ) ) ) ;
	step 8 : wff = thm impcom (step 7) |- ( ( ph /\ A e. B ) -> ( ch -> E. x e. B ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem rcla42v (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ch <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph -> ps ) ) ;
}

proof of rcla42v {
	step 1 : wff = thm ralbidv (hyp 1) |- ( x = A -> ( A. y e. D ph <-> A. y e. D ch ) ) ;
	step 2 : wff = thm rcla4v (step 1) |- ( A e. C -> ( A. x e. C A. y e. D ph -> A. y e. D ch ) ) ;
	step 3 : wff = thm rcla4v (hyp 2) |- ( B e. D -> ( A. y e. D ch -> ps ) ) ;
	step 4 : wff = thm sylan9 (step 2, step 3) |- ( ( A e. C /\ B e. D ) -> ( A. x e. C A. y e. D ph -> ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem rcla42ev (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ch <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D /\ ps ) -> E. x e. C E. y e. D ph ) ;
}

proof of rcla42ev {
	step 1 : wff = thm rcla4ev (hyp 2) |- ( ( B e. D /\ ps ) -> E. y e. D ch ) ;
	step 2 : wff = thm anim2i (step 1) |- ( ( A e. C /\ ( B e. D /\ ps ) ) -> ( A e. C /\ E. y e. D ch ) ) ;
	step 3 : wff = thm 3impb (step 2) |- ( ( A e. C /\ B e. D /\ ps ) -> ( A e. C /\ E. y e. D ch ) ) ;
	step 4 : wff = thm rexbidv (hyp 1) |- ( x = A -> ( E. y e. D ph <-> E. y e. D ch ) ) ;
	step 5 : wff = thm rcla4ev (step 4) |- ( ( A e. C /\ E. y e. D ch ) -> E. x e. C E. y e. D ph ) ;
	step 6 : wff = thm syl (step 3, step 5) |- ( ( A e. C /\ B e. D /\ ps ) -> E. x e. C E. y e. D ph ) ;
	qed prop 1 = step 6 ;
}

theorem rcla43v (ph : wff, ps : wff, ch : wff, th : wff, x : set, y : set, z : set, A : class, B : class, C : class, R : class, S : class, T : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( z = C -> ( th <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) ;
}

proof of rcla43v {
	step 1 : wff = thm ralbidv (hyp 1) |- ( x = A -> ( A. z e. T ph <-> A. z e. T ch ) ) ;
	step 2 : wff = thm ralbidv (hyp 2) |- ( y = B -> ( A. z e. T ch <-> A. z e. T th ) ) ;
	step 3 : wff = thm rcla42v (step 1, step 2) |- ( ( A e. R /\ B e. S ) -> ( A. x e. R A. y e. S A. z e. T ph -> A. z e. T th ) ) ;
	step 4 : wff = thm rcla4v (hyp 3) |- ( C e. T -> ( A. z e. T th -> ps ) ) ;
	step 5 : wff = thm sylan9 (step 3, step 4) |- ( ( ( A e. R /\ B e. S ) /\ C e. T ) -> ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) ;
	step 6 : wff = thm 3impa (step 5) |- ( ( A e. R /\ B e. S /\ C e. T ) -> ( A. x e. R A. y e. S A. z e. T ph -> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem eqvinc (x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A = B <-> E. x ( x = A /\ x = B ) ) ;
}

proof of eqvinc {
	var y : set, z : set;
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. _V <-> B e. _V ) ) ;
	step 2 : wff = thm mpbii (hyp 1, step 1) |- ( A = B -> B e. _V ) ;
	step 3 : wff = thm visset () |- x e. _V ;
	step 4 : wff = thm eleq1 () |- ( x = B -> ( x e. _V <-> B e. _V ) ) ;
	step 5 : wff = thm mpbii (step 3, step 4) |- ( x = B -> B e. _V ) ;
	step 6 : wff = thm adantl (step 5) |- ( ( x = A /\ x = B ) -> B e. _V ) ;
	step 7 : wff = thm 19_23aiv (step 6) |- ( E. x ( x = A /\ x = B ) -> B e. _V ) ;
	step 8 : wff = thm eqeq2 () |- ( z = B -> ( A = z <-> A = B ) ) ;
	step 9 : wff = thm eqeq2 () |- ( z = B -> ( x = z <-> x = B ) ) ;
	step 10 : wff = thm anbi2d (step 9) |- ( z = B -> ( ( x = A /\ x = z ) <-> ( x = A /\ x = B ) ) ) ;
	step 11 : wff = thm exbidv (step 10) |- ( z = B -> ( E. x ( x = A /\ x = z ) <-> E. x ( x = A /\ x = B ) ) ) ;
	step 12 : wff = thm eqeq1 () |- ( y = A -> ( y = z <-> A = z ) ) ;
	step 13 : wff = thm eqeq1 () |- ( y = A -> ( y = x <-> A = x ) ) ;
	step 14 : wff = thm eqcom () |- ( A = x <-> x = A ) ;
	step 15 : wff = thm syl6bb (step 13, step 14) |- ( y = A -> ( y = x <-> x = A ) ) ;
	step 16 : wff = thm anbi1d (step 15) |- ( y = A -> ( ( y = x /\ x = z ) <-> ( x = A /\ x = z ) ) ) ;
	step 17 : wff = thm exbidv (step 16) |- ( y = A -> ( E. x ( y = x /\ x = z ) <-> E. x ( x = A /\ x = z ) ) ) ;
	step 18 : wff = thm equvin () |- ( y = z <-> E. x ( y = x /\ x = z ) ) ;
	step 19 : wff = thm vtoclb (hyp 1, step 12, step 17, step 18) |- ( A = z <-> E. x ( x = A /\ x = z ) ) ;
	step 20 : wff = thm vtoclbg (step 8, step 11, step 19) |- ( B e. _V -> ( A = B <-> E. x ( x = A /\ x = B ) ) ) ;
	step 21 : wff = thm pm5_21nii (step 2, step 7, step 20) |- ( A = B <-> E. x ( x = A /\ x = B ) ) ;
	qed prop 1 = step 21 ;
}

theorem eqvincf (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	hyp 3 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A = B <-> E. x ( x = A /\ x = B ) ) ;
}

proof of eqvincf {
	step 1 : wff = thm eqvinc (hyp 3) |- ( A = B <-> E. y ( y = A /\ y = B ) ) ;
	step 2 : wff = thm hbeleq (hyp 1) |- ( y = A -> A. x y = A ) ;
	step 3 : wff = thm hbeleq (hyp 2) |- ( y = B -> A. x y = B ) ;
	step 4 : wff = thm hban (step 2, step 3) |- ( ( y = A /\ y = B ) -> A. x ( y = A /\ y = B ) ) ;
	step 5 : wff = axm ax-17 () |- ( ( x = A /\ x = B ) -> A. y ( x = A /\ x = B ) ) ;
	step 6 : wff = thm eqeq1 () |- ( y = x -> ( y = A <-> x = A ) ) ;
	step 7 : wff = thm eqeq1 () |- ( y = x -> ( y = B <-> x = B ) ) ;
	step 8 : wff = thm anbi12d (step 6, step 7) |- ( y = x -> ( ( y = A /\ y = B ) <-> ( x = A /\ x = B ) ) ) ;
	step 9 : wff = thm cbvex (step 4, step 5, step 8) |- ( E. y ( y = A /\ y = B ) <-> E. x ( x = A /\ x = B ) ) ;
	step 10 : wff = thm bitri (step 1, step 9) |- ( A = B <-> E. x ( x = A /\ x = B ) ) ;
	qed prop 1 = step 10 ;
}

theorem alexeq (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A. x ( x = A -> ph ) <-> E. x ( x = A /\ ph ) ) ;
}

proof of alexeq {
	var y : set;
	step 1 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( y = A -> ( ( x = y /\ ph ) <-> ( x = A /\ ph ) ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( y = A -> ( E. x ( x = y /\ ph ) <-> E. x ( x = A /\ ph ) ) ) ;
	step 4 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 5 : wff = thm imbi1d (step 4) |- ( y = A -> ( ( x = y -> ph ) <-> ( x = A -> ph ) ) ) ;
	step 6 : wff = thm albidv (step 5) |- ( y = A -> ( A. x ( x = y -> ph ) <-> A. x ( x = A -> ph ) ) ) ;
	step 7 : wff = thm sb56 () |- ( E. x ( x = y /\ ph ) <-> A. x ( x = y -> ph ) ) ;
	step 8 : wff = thm vtoclb (hyp 1, step 3, step 6, step 7) |- ( E. x ( x = A /\ ph ) <-> A. x ( x = A -> ph ) ) ;
	step 9 : wff = thm bicomi (step 8) |- ( A. x ( x = A -> ph ) <-> E. x ( x = A /\ ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem ceqex (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) ;
}

proof of ceqex {
	var y : set;
	step 1 : wff = thm 19_8a () |- ( x = A -> E. x x = A ) ;
	step 2 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( x = A -> A e. _V ) ;
	step 4 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 5 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 6 : wff = thm anbi1d (step 5) |- ( y = A -> ( ( x = y /\ ph ) <-> ( x = A /\ ph ) ) ) ;
	step 7 : wff = thm exbidv (step 6) |- ( y = A -> ( E. x ( x = y /\ ph ) <-> E. x ( x = A /\ ph ) ) ) ;
	step 8 : wff = thm bibi2d (step 7) |- ( y = A -> ( ( ph <-> E. x ( x = y /\ ph ) ) <-> ( ph <-> E. x ( x = A /\ ph ) ) ) ) ;
	step 9 : wff = thm imbi12d (step 4, step 8) |- ( y = A -> ( ( x = y -> ( ph <-> E. x ( x = y /\ ph ) ) ) <-> ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) ) ) ;
	step 10 : wff = thm 19_8a () |- ( ( x = y /\ ph ) -> E. x ( x = y /\ ph ) ) ;
	step 11 : wff = thm ex (step 10) |- ( x = y -> ( ph -> E. x ( x = y /\ ph ) ) ) ;
	step 12 : wff = axm ax-4 () |- ( A. x ( x = y -> ph ) -> ( x = y -> ph ) ) ;
	step 13 : wff = thm com12 (step 12) |- ( x = y -> ( A. x ( x = y -> ph ) -> ph ) ) ;
	step 14 : wff = thm visset () |- y e. _V ;
	step 15 : wff = thm alexeq (step 14) |- ( A. x ( x = y -> ph ) <-> E. x ( x = y /\ ph ) ) ;
	step 16 : wff = thm syl5ibr (step 13, step 15) |- ( x = y -> ( E. x ( x = y /\ ph ) -> ph ) ) ;
	step 17 : wff = thm impbid (step 11, step 16) |- ( x = y -> ( ph <-> E. x ( x = y /\ ph ) ) ) ;
	step 18 : wff = thm vtoclg (step 9, step 17) |- ( A e. _V -> ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) ) ;
	step 19 : wff = thm mpcom (step 3, step 18) |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) ;
	qed prop 1 = step 19 ;
}

theorem ceqsexg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> ps ) ) ;
}

proof of ceqsexg {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = thm hbe1 () |- ( E. x ( x = A /\ ph ) -> A. x E. x ( x = A /\ ph ) ) ;
	step 3 : wff = thm hbbi (step 2, hyp 1) |- ( ( E. x ( x = A /\ ph ) <-> ps ) -> A. x ( E. x ( x = A /\ ph ) <-> ps ) ) ;
	step 4 : wff = thm ceqex () |- ( x = A -> ( ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 5 : wff = thm bibi12d (step 4, hyp 2) |- ( x = A -> ( ( ph <-> ph ) <-> ( E. x ( x = A /\ ph ) <-> ps ) ) ) ;
	step 6 : wff = thm biid () |- ( ph <-> ph ) ;
	step 7 : wff = thm vtoclgf (step 1, step 3, step 5, step 6) |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem ceqsexgv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> ps ) ) ;
}

proof of ceqsexgv {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm ceqsexg (step 1, hyp 1) |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem ceqsrexv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( E. x e. B ( x = A /\ ph ) <-> ps ) ) ;
}

proof of ceqsrexv {
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 2 : wff = thm anbi12d (step 1, hyp 1) |- ( x = A -> ( ( x e. B /\ ph ) <-> ( A e. B /\ ps ) ) ) ;
	step 3 : wff = thm ceqsexgv (step 2) |- ( A e. B -> ( E. x ( x = A /\ ( x e. B /\ ph ) ) <-> ( A e. B /\ ps ) ) ) ;
	step 4 : wff = thm bianabs (step 3) |- ( A e. B -> ( E. x ( x = A /\ ( x e. B /\ ph ) ) <-> ps ) ) ;
	step 5 : wff = def df-rex () |- ( E. x e. B ( x = A /\ ph ) <-> E. x ( x e. B /\ ( x = A /\ ph ) ) ) ;
	step 6 : wff = thm an12 () |- ( ( x = A /\ ( x e. B /\ ph ) ) <-> ( x e. B /\ ( x = A /\ ph ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. x ( x = A /\ ( x e. B /\ ph ) ) <-> E. x ( x e. B /\ ( x = A /\ ph ) ) ) ;
	step 8 : wff = thm bitr4i (step 5, step 7) |- ( E. x e. B ( x = A /\ ph ) <-> E. x ( x = A /\ ( x e. B /\ ph ) ) ) ;
	step 9 : wff = thm syl5bb (step 4, step 8) |- ( A e. B -> ( E. x e. B ( x = A /\ ph ) <-> ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem ceqsrex2v (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( y = B -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ) ;
}

proof of ceqsrex2v {
	step 1 : wff = thm anbi2d (hyp 1) |- ( x = A -> ( ( y = B /\ ph ) <-> ( y = B /\ ps ) ) ) ;
	step 2 : wff = thm rexbidv (step 1) |- ( x = A -> ( E. y e. D ( y = B /\ ph ) <-> E. y e. D ( y = B /\ ps ) ) ) ;
	step 3 : wff = thm ceqsrexv (step 2) |- ( A e. C -> ( E. x e. C ( x = A /\ E. y e. D ( y = B /\ ph ) ) <-> E. y e. D ( y = B /\ ps ) ) ) ;
	step 4 : wff = thm anass () |- ( ( ( x = A /\ y = B ) /\ ph ) <-> ( x = A /\ ( y = B /\ ph ) ) ) ;
	step 5 : wff = thm rexbii (step 4) |- ( E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> E. y e. D ( x = A /\ ( y = B /\ ph ) ) ) ;
	step 6 : wff = thm r19_42v () |- ( E. y e. D ( x = A /\ ( y = B /\ ph ) ) <-> ( x = A /\ E. y e. D ( y = B /\ ph ) ) ) ;
	step 7 : wff = thm bitri (step 5, step 6) |- ( E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ( x = A /\ E. y e. D ( y = B /\ ph ) ) ) ;
	step 8 : wff = thm rexbii (step 7) |- ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> E. x e. C ( x = A /\ E. y e. D ( y = B /\ ph ) ) ) ;
	step 9 : wff = thm syl5bb (step 3, step 8) |- ( A e. C -> ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> E. y e. D ( y = B /\ ps ) ) ) ;
	step 10 : wff = thm ceqsrexv (hyp 2) |- ( B e. D -> ( E. y e. D ( y = B /\ ps ) <-> ch ) ) ;
	step 11 : wff = thm sylan9bb (step 9, step 10) |- ( ( A e. C /\ B e. D ) -> ( E. x e. C E. y e. D ( ( x = A /\ y = B ) /\ ph ) <-> ch ) ) ;
	qed prop 1 = step 11 ;
}

theorem clel2 (x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. B <-> A. x ( x = A -> x e. B ) ) ;
}

proof of clel2 {
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 2 : wff = thm ceqsalv (hyp 1, step 1) |- ( A. x ( x = A -> x e. B ) <-> A e. B ) ;
	step 3 : wff = thm bicomi (step 2) |- ( A e. B <-> A. x ( x = A -> x e. B ) ) ;
	qed prop 1 = step 3 ;
}

theorem clel3g (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( B e. C -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) ;
}

proof of clel3g {
	step 1 : wff = thm eleq2 () |- ( x = B -> ( A e. x <-> A e. B ) ) ;
	step 2 : wff = thm ceqsexgv (step 1) |- ( B e. C -> ( E. x ( x = B /\ A e. x ) <-> A e. B ) ) ;
	step 3 : wff = thm bicomd (step 2) |- ( B e. C -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem clel3 (x : set, A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. B <-> E. x ( x = B /\ A e. x ) ) ;
}

proof of clel3 {
	step 1 : wff = thm clel3g () |- ( B e. _V -> ( A e. B <-> E. x ( x = B /\ A e. x ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. B <-> E. x ( x = B /\ A e. x ) ) ;
	qed prop 1 = step 2 ;
}

theorem clel4 (x : set, A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. B <-> A. x ( x = B -> A e. x ) ) ;
}

proof of clel4 {
	step 1 : wff = thm eleq2 () |- ( x = B -> ( A e. x <-> A e. B ) ) ;
	step 2 : wff = thm ceqsalv (hyp 1, step 1) |- ( A. x ( x = B -> A e. x ) <-> A e. B ) ;
	step 3 : wff = thm bicomi (step 2) |- ( A e. B <-> A. x ( x = B -> A e. x ) ) ;
	qed prop 1 = step 3 ;
}

theorem elabgt (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( A e. { x | ph } <-> ps ) ) ;
}

proof of elabgt {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 3 : wff = thm hbel (step 1, step 2) |- ( A e. { x | ph } -> A. x A e. { x | ph } ) ;
	step 4 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 5 : wff = thm hbbi (step 3, step 4) |- ( ( A e. { x | ph } <-> ps ) -> A. x ( A e. { x | ph } <-> ps ) ) ;
	step 6 : wff = axm ax-gen (step 5) |- A. x ( ( A e. { x | ph } <-> ps ) -> A. x ( A e. { x | ph } <-> ps ) ) ;
	step 7 : wff = thm vtoclegft () |- ( ( A e. B /\ A. x ( ( A e. { x | ph } <-> ps ) -> A. x ( A e. { x | ph } <-> ps ) ) /\ A. x ( x = A -> ( A e. { x | ph } <-> ps ) ) ) -> ( A e. { x | ph } <-> ps ) ) ;
	step 8 : wff = thm mp3an2 (step 6, step 7) |- ( ( A e. B /\ A. x ( x = A -> ( A e. { x | ph } <-> ps ) ) ) -> ( A e. { x | ph } <-> ps ) ) ;
	step 9 : wff = thm eleq1 () |- ( x = A -> ( x e. { x | ph } <-> A e. { x | ph } ) ) ;
	step 10 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 11 : wff = thm syl5rbbr (step 9, step 10) |- ( x = A -> ( A e. { x | ph } <-> ph ) ) ;
	step 12 : wff = thm bibi1d (step 11) |- ( x = A -> ( ( A e. { x | ph } <-> ps ) <-> ( ph <-> ps ) ) ) ;
	step 13 : wff = thm biimprd (step 12) |- ( x = A -> ( ( ph <-> ps ) -> ( A e. { x | ph } <-> ps ) ) ) ;
	step 14 : wff = thm a2i (step 13) |- ( ( x = A -> ( ph <-> ps ) ) -> ( x = A -> ( A e. { x | ph } <-> ps ) ) ) ;
	step 15 : wff = thm 19_20i (step 14) |- ( A. x ( x = A -> ( ph <-> ps ) ) -> A. x ( x = A -> ( A e. { x | ph } <-> ps ) ) ) ;
	step 16 : wff = thm sylan2 (step 8, step 15) |- ( ( A e. B /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( A e. { x | ph } <-> ps ) ) ;
	qed prop 1 = step 16 ;
}

theorem elabf (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- A e. _V ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. { x | ph } <-> ps ) ;
}

proof of elabf {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 3 : wff = thm hbel (step 1, step 2) |- ( A e. { x | ph } -> A. x A e. { x | ph } ) ;
	step 4 : wff = thm hbbi (step 3, hyp 1) |- ( ( A e. { x | ph } <-> ps ) -> A. x ( A e. { x | ph } <-> ps ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = A -> ( x e. { x | ph } <-> A e. { x | ph } ) ) ;
	step 6 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 7 : wff = thm syl5bbr (step 5, step 6) |- ( x = A -> ( ph <-> A e. { x | ph } ) ) ;
	step 8 : wff = thm bitr3d (step 7, hyp 3) |- ( x = A -> ( A e. { x | ph } <-> ps ) ) ;
	step 9 : wff = thm vtoclef (step 4, hyp 2, step 8) |- ( A e. { x | ph } <-> ps ) ;
	qed prop 1 = step 9 ;
}

theorem elab (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. { x | ph } <-> ps ) ;
}

proof of elab {
	step 1 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 2 : wff = thm elabf (step 1, hyp 1, hyp 2) |- ( A e. { x | ph } <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem elabgf (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) ;
}

proof of elabgf {
	var z : set;
	step 1 : wff = thm hbab1 () |- ( z e. { x | ph } -> A. x z e. { x | ph } ) ;
	step 2 : wff = thm hbel (hyp 1, step 1) |- ( A e. { x | ph } -> A. x A e. { x | ph } ) ;
	step 3 : wff = thm hbbi (step 2, hyp 2) |- ( ( A e. { x | ph } <-> ps ) -> A. x ( A e. { x | ph } <-> ps ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = A -> ( x e. { x | ph } <-> A e. { x | ph } ) ) ;
	step 5 : wff = thm bibi12d (step 4, hyp 3) |- ( x = A -> ( ( x e. { x | ph } <-> ph ) <-> ( A e. { x | ph } <-> ps ) ) ) ;
	step 6 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 7 : wff = thm vtoclgf (hyp 1, step 3, step 5, step 6) |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem elabg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) ;
}

proof of elabg {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm elabgf (step 1, step 2, hyp 1) |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem elab2g (ph : wff, ps : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- B = { x | ph } ;
	-----------------------
	prop 1 : wff = |- ( A e. C -> ( A e. B <-> ps ) ) ;
}

proof of elab2g {
	step 1 : wff = thm elabg (hyp 1) |- ( A e. C -> ( A e. { x | ph } <-> ps ) ) ;
	step 2 : wff = thm eleq2i (hyp 2) |- ( A e. B <-> A e. { x | ph } ) ;
	step 3 : wff = thm syl5bb (step 1, step 2) |- ( A e. C -> ( A e. B <-> ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem elab2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- B = { x | ph } ;
	-----------------------
	prop 1 : wff = |- ( A e. B <-> ps ) ;
}

proof of elab2 {
	step 1 : wff = thm elab2g (hyp 2, hyp 3) |- ( A e. _V -> ( A e. B <-> ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. B <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem elab3g (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) ;
}

proof of elab3g {
	step 1 : wff = thm elabg (hyp 1) |- ( A e. { x | ph } -> ( A e. { x | ph } <-> ps ) ) ;
	step 2 : wff = thm ibi (step 1) |- ( A e. { x | ph } -> ps ) ;
	step 3 : wff = thm elabg (hyp 1) |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) ;
	step 4 : wff = thm imim2i (step 3) |- ( ( ps -> A e. B ) -> ( ps -> ( A e. { x | ph } <-> ps ) ) ) ;
	step 5 : wff = thm ibibr () |- ( ( ps -> A e. { x | ph } ) <-> ( ps -> ( A e. { x | ph } <-> ps ) ) ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( ( ps -> A e. B ) -> ( ps -> A e. { x | ph } ) ) ;
	step 7 : wff = thm impbid2 (step 2, step 6) |- ( ( ps -> A e. B ) -> ( A e. { x | ph } <-> ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem elab3 (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A e. _V ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. { x | ph } <-> ps ) ;
}

proof of elab3 {
	step 1 : wff = thm elab3g (hyp 2) |- ( ( ps -> A e. _V ) -> ( A e. { x | ph } <-> ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. { x | ph } <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem elrabf (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	hyp 3 : wff = |- ( ps -> A. x ps ) ;
	hyp 4 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ;
}

proof of elrabf {
	step 1 : wff = thm elisset () |- ( A e. { x e. B | ph } -> A e. _V ) ;
	step 2 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 3 : wff = thm adantr (step 2) |- ( ( A e. B /\ ps ) -> A e. _V ) ;
	step 4 : wff = thm hbel (hyp 1, hyp 2) |- ( A e. B -> A. x A e. B ) ;
	step 5 : wff = thm hban (step 4, hyp 3) |- ( ( A e. B /\ ps ) -> A. x ( A e. B /\ ps ) ) ;
	step 6 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 7 : wff = thm anbi12d (step 6, hyp 4) |- ( x = A -> ( ( x e. B /\ ph ) <-> ( A e. B /\ ps ) ) ) ;
	step 8 : wff = thm elabgf (hyp 1, step 5, step 7) |- ( A e. _V -> ( A e. { x | ( x e. B /\ ph ) } <-> ( A e. B /\ ps ) ) ) ;
	step 9 : wff = def df-rab () |- { x e. B | ph } = { x | ( x e. B /\ ph ) } ;
	step 10 : wff = thm eleq2i (step 9) |- ( A e. { x e. B | ph } <-> A e. { x | ( x e. B /\ ph ) } ) ;
	step 11 : wff = thm syl5bb (step 8, step 10) |- ( A e. _V -> ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ) ;
	step 12 : wff = thm pm5_21nii (step 1, step 3, step 11) |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ;
	qed prop 1 = step 12 ;
}

theorem elrab (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ;
}

proof of elrab {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 4 : wff = thm elrabf (step 1, step 2, step 3, hyp 1) |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem elrab3 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( A e. { x e. B | ph } <-> ps ) ) ;
}

proof of elrab3 {
	step 1 : wff = thm elrab (hyp 1) |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ;
	step 2 : wff = thm baib (step 1) |- ( A e. B -> ( A e. { x e. B | ph } <-> ps ) ) ;
	qed prop 1 = step 2 ;
}

theorem elrab2 (ph : wff, ps : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- C = { x e. B | ph } ;
	-----------------------
	prop 1 : wff = |- ( A e. C <-> ( A e. B /\ ps ) ) ;
}

proof of elrab2 {
	step 1 : wff = thm eleq2i (hyp 2) |- ( A e. C <-> A e. { x e. B | ph } ) ;
	step 2 : wff = thm elrab (hyp 1) |- ( A e. { x e. B | ph } <-> ( A e. B /\ ps ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A e. C <-> ( A e. B /\ ps ) ) ;
	qed prop 1 = step 3 ;
}

theorem cbvab (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( ph -> A. y ph ) ;
	hyp 2 : wff = |- ( ps -> A. x ps ) ;
	hyp 3 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- { x | ph } = { y | ps } ;
}

proof of cbvab {
	var z : set;
	step 1 : wff = thm hbab (hyp 1) |- ( z e. { x | ph } -> A. y z e. { x | ph } ) ;
	step 2 : wff = thm hbab1 () |- ( z e. { y | ps } -> A. y z e. { y | ps } ) ;
	step 3 : wff = thm cleqf (step 1, step 2) |- ( { x | ph } = { y | ps } <-> A. y ( y e. { x | ph } <-> y e. { y | ps } ) ) ;
	step 4 : wff = thm visset () |- y e. _V ;
	step 5 : wff = thm elabf (hyp 2, step 4, hyp 3) |- ( y e. { x | ph } <-> ps ) ;
	step 6 : wff = thm abid () |- ( y e. { y | ps } <-> ps ) ;
	step 7 : wff = thm bitr4i (step 5, step 6) |- ( y e. { x | ph } <-> y e. { y | ps } ) ;
	step 8 : wff = thm mpgbir (step 3, step 7) |- { x | ph } = { y | ps } ;
	qed prop 1 = step 8 ;
}

theorem cbvabv (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- { x | ph } = { y | ps } ;
}

proof of cbvabv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm cbvab (step 1, step 2, hyp 1) |- { x | ph } = { y | ps } ;
	qed prop 1 = step 3 ;
}

theorem cbvrab (ph : wff, ps : wff, x : set, y : set, z : set, A : class)  {
	hyp 1 : wff = |- ( z e. A -> A. x z e. A ) ;
	hyp 2 : wff = |- ( z e. A -> A. y z e. A ) ;
	hyp 3 : wff = |- ( ph -> A. y ph ) ;
	hyp 4 : wff = |- ( ps -> A. x ps ) ;
	hyp 5 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- { x e. A | ph } = { y e. A | ps } ;
}

proof of cbvrab {
	step 1 : wff = axm ax-17 () |- ( z e. x -> A. y z e. x ) ;
	step 2 : wff = thm hbel (step 1, hyp 2) |- ( x e. A -> A. y x e. A ) ;
	step 3 : wff = thm hban (step 2, hyp 3) |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 4 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 5 : wff = thm hbel (step 4, hyp 1) |- ( y e. A -> A. x y e. A ) ;
	step 6 : wff = thm hban (step 5, hyp 4) |- ( ( y e. A /\ ps ) -> A. x ( y e. A /\ ps ) ) ;
	step 7 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 8 : wff = thm anbi12d (step 7, hyp 5) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ ps ) ) ) ;
	step 9 : wff = thm cbvab (step 3, step 6, step 8) |- { x | ( x e. A /\ ph ) } = { y | ( y e. A /\ ps ) } ;
	step 10 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 11 : wff = def df-rab () |- { y e. A | ps } = { y | ( y e. A /\ ps ) } ;
	step 12 : wff = thm 3eqtr4i (step 9, step 10, step 11) |- { x e. A | ph } = { y e. A | ps } ;
	qed prop 1 = step 12 ;
}

theorem cbvrabv (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- { x e. A | ph } = { y e. A | ps } ;
}

proof of cbvrabv {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 2 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 3 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 4 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 5 : wff = thm cbvrab (step 1, step 2, step 3, step 4, hyp 1) |- { x e. A | ph } = { y e. A | ps } ;
	qed prop 1 = step 5 ;
}

theorem abidhb (x : set, y : set, z : set, A : class)  {
	prop 1 : wff = |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
}

proof of abidhb {
	step 1 : wff = thm hba1 () |- ( A. y ( y e. A -> A. x y e. A ) -> A. y A. y ( y e. A -> A. x y e. A ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x y e. A -> y e. A ) ;
	step 3 : wff = axm ax-4 () |- ( A. y ( y e. A -> A. x y e. A ) -> ( y e. A -> A. x y e. A ) ) ;
	step 4 : wff = thm impbid2 (step 2, step 3) |- ( A. y ( y e. A -> A. x y e. A ) -> ( A. x y e. A <-> y e. A ) ) ;
	step 5 : wff = thm abbid (step 1, step 4) |- ( A. y ( y e. A -> A. x y e. A ) -> { y | A. x y e. A } = { y | y e. A } ) ;
	step 6 : wff = thm eleq1 () |- ( y = z -> ( y e. A <-> z e. A ) ) ;
	step 7 : wff = thm albidv (step 6) |- ( y = z -> ( A. x y e. A <-> A. x z e. A ) ) ;
	step 8 : wff = thm cbvabv (step 7) |- { y | A. x y e. A } = { z | A. x z e. A } ;
	step 9 : wff = thm abid2 () |- { y | y e. A } = A ;
	step 10 : wff = thm 3eqtr3g (step 5, step 8, step 9) |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	qed prop 1 = step 10 ;
}

theorem hbeqd (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( y e. A -> A. x y e. A ) ) ;
	hyp 3 : wff = |- ( ph -> ( y e. B -> A. x y e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A = B -> A. x A = B ) ) ;
}

proof of hbeqd {
	var z : set;
	step 1 : wff = thm hba1 () |- ( A. x z e. A -> A. x A. x z e. A ) ;
	step 2 : wff = thm hbab (step 1) |- ( y e. { z | A. x z e. A } -> A. x y e. { z | A. x z e. A } ) ;
	step 3 : wff = thm hba1 () |- ( A. x z e. B -> A. x A. x z e. B ) ;
	step 4 : wff = thm hbab (step 3) |- ( y e. { z | A. x z e. B } -> A. x y e. { z | A. x z e. B } ) ;
	step 5 : wff = thm hbeq (step 2, step 4) |- ( { z | A. x z e. A } = { z | A. x z e. B } -> A. x { z | A. x z e. A } = { z | A. x z e. B } ) ;
	step 6 : wff = thm a1i (step 5) |- ( ph -> ( { z | A. x z e. A } = { z | A. x z e. B } -> A. x { z | A. x z e. A } = { z | A. x z e. B } ) ) ;
	step 7 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 8 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 10 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 11 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 12 : wff = thm syl (step 10, step 11) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 13 : wff = thm eqeq12d (step 9, step 12) |- ( ph -> ( { z | A. x z e. A } = { z | A. x z e. B } <-> A = B ) ) ;
	step 14 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 15 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 16 : wff = thm syl (step 14, step 15) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 17 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 18 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 19 : wff = thm syl (step 17, step 18) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 20 : wff = thm eqeq12d (step 16, step 19) |- ( ph -> ( { z | A. x z e. A } = { z | A. x z e. B } <-> A = B ) ) ;
	step 21 : wff = thm albid (hyp 1, step 20) |- ( ph -> ( A. x { z | A. x z e. A } = { z | A. x z e. B } <-> A. x A = B ) ) ;
	step 22 : wff = thm 3imtr3d (step 6, step 13, step 21) |- ( ph -> ( A = B -> A. x A = B ) ) ;
	qed prop 1 = step 22 ;
}

theorem hbeld (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( y e. A -> A. x y e. A ) ) ;
	hyp 3 : wff = |- ( ph -> ( y e. B -> A. x y e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A e. B -> A. x A e. B ) ) ;
}

proof of hbeld {
	var z : set;
	step 1 : wff = thm hba1 () |- ( A. x z e. A -> A. x A. x z e. A ) ;
	step 2 : wff = thm hbab (step 1) |- ( y e. { z | A. x z e. A } -> A. x y e. { z | A. x z e. A } ) ;
	step 3 : wff = thm hba1 () |- ( A. x z e. B -> A. x A. x z e. B ) ;
	step 4 : wff = thm hbab (step 3) |- ( y e. { z | A. x z e. B } -> A. x y e. { z | A. x z e. B } ) ;
	step 5 : wff = thm hbel (step 2, step 4) |- ( { z | A. x z e. A } e. { z | A. x z e. B } -> A. x { z | A. x z e. A } e. { z | A. x z e. B } ) ;
	step 6 : wff = thm a1i (step 5) |- ( ph -> ( { z | A. x z e. A } e. { z | A. x z e. B } -> A. x { z | A. x z e. A } e. { z | A. x z e. B } ) ) ;
	step 7 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 8 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 10 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 11 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 12 : wff = thm syl (step 10, step 11) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 13 : wff = thm eleq12d (step 9, step 12) |- ( ph -> ( { z | A. x z e. A } e. { z | A. x z e. B } <-> A e. B ) ) ;
	step 14 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 15 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 16 : wff = thm syl (step 14, step 15) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 17 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 18 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 19 : wff = thm syl (step 17, step 18) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 20 : wff = thm eleq12d (step 16, step 19) |- ( ph -> ( { z | A. x z e. A } e. { z | A. x z e. B } <-> A e. B ) ) ;
	step 21 : wff = thm albid (hyp 1, step 20) |- ( ph -> ( A. x { z | A. x z e. A } e. { z | A. x z e. B } <-> A. x A e. B ) ) ;
	step 22 : wff = thm 3imtr3d (step 6, step 13, step 21) |- ( ph -> ( A e. B -> A. x A e. B ) ) ;
	qed prop 1 = step 22 ;
}

theorem dedhb (ph : wff, ps : wff, x : set, y : set, z : set, A : class)  {
	hyp 1 : wff = |- ( A = { z | A. x z e. A } -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( A. y ( y e. A -> A. x y e. A ) -> ph ) ;
}

proof of dedhb {
	step 1 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( A. y ( y e. A -> A. x y e. A ) -> A = { z | A. x z e. A } ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( A. y ( y e. A -> A. x y e. A ) -> ( ph <-> ps ) ) ;
	step 4 : wff = thm mpbiri (hyp 2, step 3) |- ( A. y ( y e. A -> A. x y e. A ) -> ph ) ;
	qed prop 1 = step 4 ;
}

theorem eueq (x : set, A : class)  {
	prop 1 : wff = |- ( A e. _V <-> E! x x = A ) ;
}

proof of eueq {
	var y : set;
	step 1 : wff = thm eqtr3 () |- ( ( x = A /\ y = A ) -> x = y ) ;
	step 2 : wff = thm gen2 (step 1) |- A. x A. y ( ( x = A /\ y = A ) -> x = y ) ;
	step 3 : wff = thm biantru (step 2) |- ( E. x x = A <-> ( E. x x = A /\ A. x A. y ( ( x = A /\ y = A ) -> x = y ) ) ) ;
	step 4 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 5 : wff = thm eqeq1 () |- ( x = y -> ( x = A <-> y = A ) ) ;
	step 6 : wff = thm eu4 (step 5) |- ( E! x x = A <-> ( E. x x = A /\ A. x A. y ( ( x = A /\ y = A ) -> x = y ) ) ) ;
	step 7 : wff = thm 3bitr4i (step 3, step 4, step 6) |- ( A e. _V <-> E! x x = A ) ;
	qed prop 1 = step 7 ;
}

theorem eueq1 (x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- E! x x = A ;
}

proof of eueq1 {
	step 1 : wff = thm eueq () |- ( A e. _V <-> E! x x = A ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- E! x x = A ;
	qed prop 1 = step 2 ;
}

theorem eueq2 (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ;
}

proof of eueq2 {
	step 1 : wff = thm euorv () |- ( ( -. -. ph /\ E! x ( ph /\ x = A ) ) -> E! x ( -. ph \/ ( ph /\ x = A ) ) ) ;
	step 2 : wff = thm notnot1 () |- ( ph -> -. -. ph ) ;
	step 3 : wff = thm eueq1 (hyp 1) |- E! x x = A ;
	step 4 : wff = thm euanv () |- ( E! x ( ph /\ x = A ) <-> ( ph /\ E! x x = A ) ) ;
	step 5 : wff = thm biimpri (step 4) |- ( ( ph /\ E! x x = A ) -> E! x ( ph /\ x = A ) ) ;
	step 6 : wff = thm mpan2 (step 3, step 5) |- ( ph -> E! x ( ph /\ x = A ) ) ;
	step 7 : wff = thm sylanc (step 1, step 2, step 6) |- ( ph -> E! x ( -. ph \/ ( ph /\ x = A ) ) ) ;
	step 8 : wff = thm notnot1 () |- ( ph -> -. -. ph ) ;
	step 9 : wff = thm bianfd (step 8) |- ( ph -> ( -. ph <-> ( -. ph /\ x = B ) ) ) ;
	step 10 : wff = thm orbi2d (step 9) |- ( ph -> ( ( ( ph /\ x = A ) \/ -. ph ) <-> ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ) ;
	step 11 : wff = thm orcom () |- ( ( -. ph \/ ( ph /\ x = A ) ) <-> ( ( ph /\ x = A ) \/ -. ph ) ) ;
	step 12 : wff = thm syl5bb (step 10, step 11) |- ( ph -> ( ( -. ph \/ ( ph /\ x = A ) ) <-> ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ) ;
	step 13 : wff = thm eubidv (step 12) |- ( ph -> ( E! x ( -. ph \/ ( ph /\ x = A ) ) <-> E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ) ;
	step 14 : wff = thm mpbid (step 7, step 13) |- ( ph -> E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ;
	step 15 : wff = thm eueq1 (hyp 2) |- E! x x = B ;
	step 16 : wff = thm euanv () |- ( E! x ( -. ph /\ x = B ) <-> ( -. ph /\ E! x x = B ) ) ;
	step 17 : wff = thm biimpri (step 16) |- ( ( -. ph /\ E! x x = B ) -> E! x ( -. ph /\ x = B ) ) ;
	step 18 : wff = thm mpan2 (step 15, step 17) |- ( -. ph -> E! x ( -. ph /\ x = B ) ) ;
	step 19 : wff = thm euorv () |- ( ( -. ph /\ E! x ( -. ph /\ x = B ) ) -> E! x ( ph \/ ( -. ph /\ x = B ) ) ) ;
	step 20 : wff = thm mpdan (step 18, step 19) |- ( -. ph -> E! x ( ph \/ ( -. ph /\ x = B ) ) ) ;
	step 21 : wff = thm id () |- ( -. ph -> -. ph ) ;
	step 22 : wff = thm bianfd (step 21) |- ( -. ph -> ( ph <-> ( ph /\ x = A ) ) ) ;
	step 23 : wff = thm orbi1d (step 22) |- ( -. ph -> ( ( ph \/ ( -. ph /\ x = B ) ) <-> ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ) ;
	step 24 : wff = thm eubidv (step 23) |- ( -. ph -> ( E! x ( ph \/ ( -. ph /\ x = B ) ) <-> E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ) ;
	step 25 : wff = thm mpbid (step 20, step 24) |- ( -. ph -> E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ) ;
	step 26 : wff = thm pm2_61i (step 14, step 25) |- E! x ( ( ph /\ x = A ) \/ ( -. ph /\ x = B ) ) ;
	qed prop 1 = step 26 ;
}

theorem eueq3 (ph : wff, ps : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	hyp 4 : wff = |- -. ( ph /\ ps ) ;
	-----------------------
	prop 1 : wff = |- E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ;
}

proof of eueq3 {
	step 1 : wff = thm euorv () |- ( ( -. ( -. ( ph \/ ps ) \/ ps ) /\ E! x ( ph /\ x = A ) ) -> E! x ( ( -. ( ph \/ ps ) \/ ps ) \/ ( ph /\ x = A ) ) ) ;
	step 2 : wff = thm pm2_45 () |- ( -. ( ph \/ ps ) -> -. ph ) ;
	step 3 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 4 : wff = thm mpbir (hyp 4, step 3) |- ( ph -> -. ps ) ;
	step 5 : wff = thm con2i (step 4) |- ( ps -> -. ph ) ;
	step 6 : wff = thm jaoi (step 2, step 5) |- ( ( -. ( ph \/ ps ) \/ ps ) -> -. ph ) ;
	step 7 : wff = thm con2i (step 6) |- ( ph -> -. ( -. ( ph \/ ps ) \/ ps ) ) ;
	step 8 : wff = thm eueq1 (hyp 1) |- E! x x = A ;
	step 9 : wff = thm euanv () |- ( E! x ( ph /\ x = A ) <-> ( ph /\ E! x x = A ) ) ;
	step 10 : wff = thm biimpri (step 9) |- ( ( ph /\ E! x x = A ) -> E! x ( ph /\ x = A ) ) ;
	step 11 : wff = thm mpan2 (step 8, step 10) |- ( ph -> E! x ( ph /\ x = A ) ) ;
	step 12 : wff = thm sylanc (step 1, step 7, step 11) |- ( ph -> E! x ( ( -. ( ph \/ ps ) \/ ps ) \/ ( ph /\ x = A ) ) ) ;
	step 13 : wff = thm notnot1 () |- ( ( ph \/ ps ) -> -. -. ( ph \/ ps ) ) ;
	step 14 : wff = thm orcs (step 13) |- ( ph -> -. -. ( ph \/ ps ) ) ;
	step 15 : wff = thm bianfd (step 14) |- ( ph -> ( -. ( ph \/ ps ) <-> ( -. ( ph \/ ps ) /\ x = B ) ) ) ;
	step 16 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 17 : wff = thm mpbir (hyp 4, step 16) |- ( ph -> -. ps ) ;
	step 18 : wff = thm bianfd (step 17) |- ( ph -> ( ps <-> ( ps /\ x = C ) ) ) ;
	step 19 : wff = thm orbi12d (step 15, step 18) |- ( ph -> ( ( -. ( ph \/ ps ) \/ ps ) <-> ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 20 : wff = thm orbi2d (step 19) |- ( ph -> ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) \/ ps ) ) <-> ( ( ph /\ x = A ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ) ;
	step 21 : wff = thm orcom () |- ( ( ( -. ( ph \/ ps ) \/ ps ) \/ ( ph /\ x = A ) ) <-> ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) \/ ps ) ) ) ;
	step 22 : wff = thm 3orass () |- ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> ( ( ph /\ x = A ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 23 : wff = thm 3bitr4g (step 20, step 21, step 22) |- ( ph -> ( ( ( -. ( ph \/ ps ) \/ ps ) \/ ( ph /\ x = A ) ) <-> ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 24 : wff = thm eubidv (step 23) |- ( ph -> ( E! x ( ( -. ( ph \/ ps ) \/ ps ) \/ ( ph /\ x = A ) ) <-> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 25 : wff = thm mpbid (step 12, step 24) |- ( ph -> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 26 : wff = thm euorv () |- ( ( -. ( ph \/ -. ( ph \/ ps ) ) /\ E! x ( ps /\ x = C ) ) -> E! x ( ( ph \/ -. ( ph \/ ps ) ) \/ ( ps /\ x = C ) ) ) ;
	step 27 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 28 : wff = thm mpbir (hyp 4, step 27) |- ( ph -> -. ps ) ;
	step 29 : wff = thm pm2_46 () |- ( -. ( ph \/ ps ) -> -. ps ) ;
	step 30 : wff = thm jaoi (step 28, step 29) |- ( ( ph \/ -. ( ph \/ ps ) ) -> -. ps ) ;
	step 31 : wff = thm con2i (step 30) |- ( ps -> -. ( ph \/ -. ( ph \/ ps ) ) ) ;
	step 32 : wff = thm eueq1 (hyp 3) |- E! x x = C ;
	step 33 : wff = thm euanv () |- ( E! x ( ps /\ x = C ) <-> ( ps /\ E! x x = C ) ) ;
	step 34 : wff = thm biimpri (step 33) |- ( ( ps /\ E! x x = C ) -> E! x ( ps /\ x = C ) ) ;
	step 35 : wff = thm mpan2 (step 32, step 34) |- ( ps -> E! x ( ps /\ x = C ) ) ;
	step 36 : wff = thm sylanc (step 26, step 31, step 35) |- ( ps -> E! x ( ( ph \/ -. ( ph \/ ps ) ) \/ ( ps /\ x = C ) ) ) ;
	step 37 : wff = thm imnan () |- ( ( ph -> -. ps ) <-> -. ( ph /\ ps ) ) ;
	step 38 : wff = thm mpbir (hyp 4, step 37) |- ( ph -> -. ps ) ;
	step 39 : wff = thm con2i (step 38) |- ( ps -> -. ph ) ;
	step 40 : wff = thm bianfd (step 39) |- ( ps -> ( ph <-> ( ph /\ x = A ) ) ) ;
	step 41 : wff = thm notnot1 () |- ( ( ph \/ ps ) -> -. -. ( ph \/ ps ) ) ;
	step 42 : wff = thm olcs (step 41) |- ( ps -> -. -. ( ph \/ ps ) ) ;
	step 43 : wff = thm bianfd (step 42) |- ( ps -> ( -. ( ph \/ ps ) <-> ( -. ( ph \/ ps ) /\ x = B ) ) ) ;
	step 44 : wff = thm orbi12d (step 40, step 43) |- ( ps -> ( ( ph \/ -. ( ph \/ ps ) ) <-> ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) ) ) ;
	step 45 : wff = thm orbi1d (step 44) |- ( ps -> ( ( ( ph \/ -. ( ph \/ ps ) ) \/ ( ps /\ x = C ) ) <-> ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) \/ ( ps /\ x = C ) ) ) ) ;
	step 46 : wff = def df-3or () |- ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) \/ ( ps /\ x = C ) ) ) ;
	step 47 : wff = thm syl6bbr (step 45, step 46) |- ( ps -> ( ( ( ph \/ -. ( ph \/ ps ) ) \/ ( ps /\ x = C ) ) <-> ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 48 : wff = thm eubidv (step 47) |- ( ps -> ( E! x ( ( ph \/ -. ( ph \/ ps ) ) \/ ( ps /\ x = C ) ) <-> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 49 : wff = thm mpbid (step 36, step 48) |- ( ps -> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 50 : wff = thm eueq1 (hyp 2) |- E! x x = B ;
	step 51 : wff = thm euanv () |- ( E! x ( -. ( ph \/ ps ) /\ x = B ) <-> ( -. ( ph \/ ps ) /\ E! x x = B ) ) ;
	step 52 : wff = thm biimpri (step 51) |- ( ( -. ( ph \/ ps ) /\ E! x x = B ) -> E! x ( -. ( ph \/ ps ) /\ x = B ) ) ;
	step 53 : wff = thm mpan2 (step 50, step 52) |- ( -. ( ph \/ ps ) -> E! x ( -. ( ph \/ ps ) /\ x = B ) ) ;
	step 54 : wff = thm euorv () |- ( ( -. ( ph \/ ps ) /\ E! x ( -. ( ph \/ ps ) /\ x = B ) ) -> E! x ( ( ph \/ ps ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) ) ;
	step 55 : wff = thm mpdan (step 53, step 54) |- ( -. ( ph \/ ps ) -> E! x ( ( ph \/ ps ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) ) ;
	step 56 : wff = thm pm2_45 () |- ( -. ( ph \/ ps ) -> -. ph ) ;
	step 57 : wff = thm bianfd (step 56) |- ( -. ( ph \/ ps ) -> ( ph <-> ( ph /\ x = A ) ) ) ;
	step 58 : wff = thm pm2_46 () |- ( -. ( ph \/ ps ) -> -. ps ) ;
	step 59 : wff = thm bianfd (step 58) |- ( -. ( ph \/ ps ) -> ( ps <-> ( ps /\ x = C ) ) ) ;
	step 60 : wff = thm orbi1d (step 59) |- ( -. ( ph \/ ps ) -> ( ( ps \/ ( -. ( ph \/ ps ) /\ x = B ) ) <-> ( ( ps /\ x = C ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) ) ) ;
	step 61 : wff = thm orcom () |- ( ( ( ps /\ x = C ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) <-> ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 62 : wff = thm syl6bb (step 60, step 61) |- ( -. ( ph \/ ps ) -> ( ( ps \/ ( -. ( ph \/ ps ) /\ x = B ) ) <-> ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 63 : wff = thm orbi12d (step 57, step 62) |- ( -. ( ph \/ ps ) -> ( ( ph \/ ( ps \/ ( -. ( ph \/ ps ) /\ x = B ) ) ) <-> ( ( ph /\ x = A ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ) ;
	step 64 : wff = thm orass () |- ( ( ( ph \/ ps ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) <-> ( ph \/ ( ps \/ ( -. ( ph \/ ps ) /\ x = B ) ) ) ) ;
	step 65 : wff = thm 3orass () |- ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> ( ( ph /\ x = A ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 66 : wff = thm 3bitr4g (step 63, step 64, step 65) |- ( -. ( ph \/ ps ) -> ( ( ( ph \/ ps ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) <-> ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 67 : wff = thm eubidv (step 66) |- ( -. ( ph \/ ps ) -> ( E! x ( ( ph \/ ps ) \/ ( -. ( ph \/ ps ) /\ x = B ) ) <-> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 68 : wff = thm mpbid (step 55, step 67) |- ( -. ( ph \/ ps ) -> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 69 : wff = thm ecase3 (step 25, step 49, step 68) |- E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ;
	qed prop 1 = step 69 ;
}

theorem moeq (x : set, A : class)  {
	prop 1 : wff = |- E* x x = A ;
}

proof of moeq {
	step 1 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 2 : wff = thm eueq () |- ( A e. _V <-> E! x x = A ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( E. x x = A <-> E! x x = A ) ;
	step 4 : wff = thm biimpi (step 3) |- ( E. x x = A -> E! x x = A ) ;
	step 5 : wff = def df-mo () |- ( E* x x = A <-> ( E. x x = A -> E! x x = A ) ) ;
	step 6 : wff = thm mpbir (step 4, step 5) |- E* x x = A ;
	qed prop 1 = step 6 ;
}

theorem moeq3 (ph : wff, ps : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- B e. _V ;
	hyp 2 : wff = |- C e. _V ;
	hyp 3 : wff = |- -. ( ph /\ ps ) ;
	-----------------------
	prop 1 : wff = |- E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ;
}

proof of moeq3 {
	var y : set;
	step 1 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 2 : wff = thm anbi2d (step 1) |- ( y = A -> ( ( ph /\ x = y ) <-> ( ph /\ x = A ) ) ) ;
	step 3 : wff = thm biidd () |- ( y = A -> ( ( -. ( ph \/ ps ) /\ x = B ) <-> ( -. ( ph \/ ps ) /\ x = B ) ) ) ;
	step 4 : wff = thm biidd () |- ( y = A -> ( ( ps /\ x = C ) <-> ( ps /\ x = C ) ) ) ;
	step 5 : wff = thm 3orbi123d (step 2, step 3, step 4) |- ( y = A -> ( ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 6 : wff = thm eubidv (step 5) |- ( y = A -> ( E! x ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 7 : wff = thm visset () |- y e. _V ;
	step 8 : wff = thm eueq3 (step 7, hyp 1, hyp 2, hyp 3) |- E! x ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ;
	step 9 : wff = thm vtoclg (step 6, step 8) |- ( A e. _V -> E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 10 : wff = thm eumo () |- ( E! x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) -> E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 11 : wff = thm syl (step 9, step 10) |- ( A e. _V -> E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 12 : wff = thm visset () |- y e. _V ;
	step 13 : wff = thm eueq3 (step 12, hyp 1, hyp 2, hyp 3) |- E! x ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ;
	step 14 : wff = thm pm2_21 () |- ( -. A e. _V -> ( A e. _V -> x = y ) ) ;
	step 15 : wff = thm visset () |- x e. _V ;
	step 16 : wff = thm eleq1 () |- ( x = A -> ( x e. _V <-> A e. _V ) ) ;
	step 17 : wff = thm mpbii (step 15, step 16) |- ( x = A -> A e. _V ) ;
	step 18 : wff = thm syl5 (step 14, step 17) |- ( -. A e. _V -> ( x = A -> x = y ) ) ;
	step 19 : wff = thm anim2d (step 18) |- ( -. A e. _V -> ( ( ph /\ x = A ) -> ( ph /\ x = y ) ) ) ;
	step 20 : wff = thm orim1d (step 19) |- ( -. A e. _V -> ( ( ( ph /\ x = A ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) -> ( ( ph /\ x = y ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ) ;
	step 21 : wff = thm 3orass () |- ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> ( ( ph /\ x = A ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 22 : wff = thm 3orass () |- ( ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) <-> ( ( ph /\ x = y ) \/ ( ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 23 : wff = thm 3imtr4g (step 20, step 21, step 22) |- ( -. A e. _V -> ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) -> ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 24 : wff = thm 19_21aiv (step 23) |- ( -. A e. _V -> A. x ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) -> ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 25 : wff = thm euimmo () |- ( A. x ( ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) -> ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) -> ( E! x ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) -> E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 26 : wff = thm syl (step 24, step 25) |- ( -. A e. _V -> ( E! x ( ( ph /\ x = y ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) -> E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ) ;
	step 27 : wff = thm mpi (step 13, step 26) |- ( -. A e. _V -> E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ) ;
	step 28 : wff = thm pm2_61i (step 11, step 27) |- E* x ( ( ph /\ x = A ) \/ ( -. ( ph \/ ps ) /\ x = B ) \/ ( ps /\ x = C ) ) ;
	qed prop 1 = step 28 ;
}

theorem mosub (ph : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- E* x ph ;
	-----------------------
	prop 1 : wff = |- E* x E. y ( y = A /\ ph ) ;
}

proof of mosub {
	step 1 : wff = thm moeq () |- E* y y = A ;
	step 2 : wff = axm ax-gen (hyp 1) |- A. y E* x ph ;
	step 3 : wff = thm moexexv () |- ( ( E* y y = A /\ A. y E* x ph ) -> E* x E. y ( y = A /\ ph ) ) ;
	step 4 : wff = thm mp2an (step 1, step 2, step 3) |- E* x E. y ( y = A /\ ph ) ;
	qed prop 1 = step 4 ;
}

theorem mo2icl (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x ( ph -> x = A ) -> E* x ph ) ;
}

proof of mo2icl {
	var y : set;
	step 1 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( y = A -> ( ( ph -> x = y ) <-> ( ph -> x = A ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( y = A -> ( A. x ( ph -> x = y ) <-> A. x ( ph -> x = A ) ) ) ;
	step 4 : wff = thm imbi1d (step 3) |- ( y = A -> ( ( A. x ( ph -> x = y ) -> E* x ph ) <-> ( A. x ( ph -> x = A ) -> E* x ph ) ) ) ;
	step 5 : wff = thm 19_8a () |- ( A. x ( ph -> x = y ) -> E. y A. x ( ph -> x = y ) ) ;
	step 6 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 7 : wff = thm mo2 (step 6) |- ( E* x ph <-> E. y A. x ( ph -> x = y ) ) ;
	step 8 : wff = thm sylibr (step 5, step 7) |- ( A. x ( ph -> x = y ) -> E* x ph ) ;
	step 9 : wff = thm vtoclg (step 4, step 8) |- ( A e. _V -> ( A. x ( ph -> x = A ) -> E* x ph ) ) ;
	step 10 : wff = thm visset () |- x e. _V ;
	step 11 : wff = thm eleq1 () |- ( x = A -> ( x e. _V <-> A e. _V ) ) ;
	step 12 : wff = thm mpbii (step 10, step 11) |- ( x = A -> A e. _V ) ;
	step 13 : wff = thm imim2i (step 12) |- ( ( ph -> x = A ) -> ( ph -> A e. _V ) ) ;
	step 14 : wff = thm con3d (step 13) |- ( ( ph -> x = A ) -> ( -. A e. _V -> -. ph ) ) ;
	step 15 : wff = thm com12 (step 14) |- ( -. A e. _V -> ( ( ph -> x = A ) -> -. ph ) ) ;
	step 16 : wff = thm 19_20dv (step 15) |- ( -. A e. _V -> ( A. x ( ph -> x = A ) -> A. x -. ph ) ) ;
	step 17 : wff = thm alnex () |- ( A. x -. ph <-> -. E. x ph ) ;
	step 18 : wff = thm exmo () |- ( E. x ph \/ E* x ph ) ;
	step 19 : wff = thm ori (step 18) |- ( -. E. x ph -> E* x ph ) ;
	step 20 : wff = thm sylbi (step 17, step 19) |- ( A. x -. ph -> E* x ph ) ;
	step 21 : wff = thm syl6 (step 16, step 20) |- ( -. A e. _V -> ( A. x ( ph -> x = A ) -> E* x ph ) ) ;
	step 22 : wff = thm pm2_61i (step 9, step 21) |- ( A. x ( ph -> x = A ) -> E* x ph ) ;
	qed prop 1 = step 22 ;
}

theorem moi2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( A e. B /\ E* x ph ) /\ ( ph /\ ps ) ) -> x = A ) ;
}

proof of moi2 {
	var y : set;
	step 1 : wff = thm visset () |- y e. _V ;
	step 2 : wff = thm eqvinc (step 1) |- ( y = A <-> E. x ( x = y /\ x = A ) ) ;
	step 3 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 4 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 5 : wff = thm hbbi (step 3, step 4) |- ( ( [ y / x ] ph <-> ps ) -> A. x ( [ y / x ] ph <-> ps ) ) ;
	step 6 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 7 : wff = thm bicomd (step 6) |- ( x = y -> ( [ y / x ] ph <-> ph ) ) ;
	step 8 : wff = thm sylan9bb (step 7, hyp 1) |- ( ( x = y /\ x = A ) -> ( [ y / x ] ph <-> ps ) ) ;
	step 9 : wff = thm 19_23ai (step 5, step 8) |- ( E. x ( x = y /\ x = A ) -> ( [ y / x ] ph <-> ps ) ) ;
	step 10 : wff = thm sylbi (step 2, step 9) |- ( y = A -> ( [ y / x ] ph <-> ps ) ) ;
	step 11 : wff = thm anbi2d (step 10) |- ( y = A -> ( ( ph /\ [ y / x ] ph ) <-> ( ph /\ ps ) ) ) ;
	step 12 : wff = thm eqeq2 () |- ( y = A -> ( x = y <-> x = A ) ) ;
	step 13 : wff = thm imbi12d (step 11, step 12) |- ( y = A -> ( ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( ( ph /\ ps ) -> x = A ) ) ) ;
	step 14 : wff = thm cla4gv (step 13) |- ( A e. B -> ( A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ( ph /\ ps ) -> x = A ) ) ) ;
	step 15 : wff = thm a4sd (step 14) |- ( A e. B -> ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ( ph /\ ps ) -> x = A ) ) ) ;
	step 16 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 17 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 18 : wff = thm mo4f (step 16, step 17) |- ( E* x ph <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 19 : wff = thm syl5ib (step 15, step 18) |- ( A e. B -> ( E* x ph -> ( ( ph /\ ps ) -> x = A ) ) ) ;
	step 20 : wff = thm imp31 (step 19) |- ( ( ( A e. B /\ E* x ph ) /\ ( ph /\ ps ) ) -> x = A ) ;
	qed prop 1 = step 20 ;
}

theorem moi (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( x = B -> ( ph <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ( ps /\ ch ) ) -> A = B ) ;
}

proof of moi {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 4 : wff = thm hban (step 2, step 3) |- ( ( ps /\ [ y / x ] ph ) -> A. x ( ps /\ [ y / x ] ph ) ) ;
	step 5 : wff = axm ax-17 () |- ( A = y -> A. x A = y ) ;
	step 6 : wff = thm hbim (step 4, step 5) |- ( ( ( ps /\ [ y / x ] ph ) -> A = y ) -> A. x ( ( ps /\ [ y / x ] ph ) -> A = y ) ) ;
	step 7 : wff = thm hbal (step 6) |- ( A. y ( ( ps /\ [ y / x ] ph ) -> A = y ) -> A. x A. y ( ( ps /\ [ y / x ] ph ) -> A = y ) ) ;
	step 8 : wff = thm anbi1d (hyp 1) |- ( x = A -> ( ( ph /\ [ y / x ] ph ) <-> ( ps /\ [ y / x ] ph ) ) ) ;
	step 9 : wff = thm eqeq1 () |- ( x = A -> ( x = y <-> A = y ) ) ;
	step 10 : wff = thm imbi12d (step 8, step 9) |- ( x = A -> ( ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> ( ( ps /\ [ y / x ] ph ) -> A = y ) ) ) ;
	step 11 : wff = thm albidv (step 10) |- ( x = A -> ( A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. y ( ( ps /\ [ y / x ] ph ) -> A = y ) ) ) ;
	step 12 : wff = thm cla4gf (step 1, step 7, step 11) |- ( A e. C -> ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> A. y ( ( ps /\ [ y / x ] ph ) -> A = y ) ) ) ;
	step 13 : wff = thm visset () |- y e. _V ;
	step 14 : wff = thm eqvinc (step 13) |- ( y = B <-> E. x ( x = y /\ x = B ) ) ;
	step 15 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 16 : wff = axm ax-17 () |- ( ch -> A. x ch ) ;
	step 17 : wff = thm hbbi (step 15, step 16) |- ( ( [ y / x ] ph <-> ch ) -> A. x ( [ y / x ] ph <-> ch ) ) ;
	step 18 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 19 : wff = thm bicomd (step 18) |- ( x = y -> ( [ y / x ] ph <-> ph ) ) ;
	step 20 : wff = thm sylan9bb (step 19, hyp 2) |- ( ( x = y /\ x = B ) -> ( [ y / x ] ph <-> ch ) ) ;
	step 21 : wff = thm 19_23ai (step 17, step 20) |- ( E. x ( x = y /\ x = B ) -> ( [ y / x ] ph <-> ch ) ) ;
	step 22 : wff = thm sylbi (step 14, step 21) |- ( y = B -> ( [ y / x ] ph <-> ch ) ) ;
	step 23 : wff = thm anbi2d (step 22) |- ( y = B -> ( ( ps /\ [ y / x ] ph ) <-> ( ps /\ ch ) ) ) ;
	step 24 : wff = thm eqeq2 () |- ( y = B -> ( A = y <-> A = B ) ) ;
	step 25 : wff = thm imbi12d (step 23, step 24) |- ( y = B -> ( ( ( ps /\ [ y / x ] ph ) -> A = y ) <-> ( ( ps /\ ch ) -> A = B ) ) ) ;
	step 26 : wff = thm cla4gv (step 25) |- ( B e. D -> ( A. y ( ( ps /\ [ y / x ] ph ) -> A = y ) -> ( ( ps /\ ch ) -> A = B ) ) ) ;
	step 27 : wff = thm sylan9 (step 12, step 26) |- ( ( A e. C /\ B e. D ) -> ( A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) -> ( ( ps /\ ch ) -> A = B ) ) ) ;
	step 28 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 29 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 30 : wff = thm mo4f (step 28, step 29) |- ( E* x ph <-> A. x A. y ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ;
	step 31 : wff = thm syl5ib (step 27, step 30) |- ( ( A e. C /\ B e. D ) -> ( E* x ph -> ( ( ps /\ ch ) -> A = B ) ) ) ;
	step 32 : wff = thm 3imp (step 31) |- ( ( ( A e. C /\ B e. D ) /\ E* x ph /\ ( ps /\ ch ) ) -> A = B ) ;
	qed prop 1 = step 32 ;
}

theorem euxfr2 (ph : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- E* y x = A ;
	-----------------------
	prop 1 : wff = |- ( E! x E. y ( x = A /\ ph ) <-> E! y ph ) ;
}

proof of euxfr2 {
	step 1 : wff = thm 2euswap () |- ( A. x E* y ( x = A /\ ph ) -> ( E! x E. y ( x = A /\ ph ) -> E! y E. x ( x = A /\ ph ) ) ) ;
	step 2 : wff = thm moani (hyp 2) |- E* y ( ph /\ x = A ) ;
	step 3 : wff = thm ancom () |- ( ( ph /\ x = A ) <-> ( x = A /\ ph ) ) ;
	step 4 : wff = thm mobii (step 3) |- ( E* y ( ph /\ x = A ) <-> E* y ( x = A /\ ph ) ) ;
	step 5 : wff = thm mpbi (step 2, step 4) |- E* y ( x = A /\ ph ) ;
	step 6 : wff = thm mpg (step 1, step 5) |- ( E! x E. y ( x = A /\ ph ) -> E! y E. x ( x = A /\ ph ) ) ;
	step 7 : wff = thm 2euswap () |- ( A. y E* x ( x = A /\ ph ) -> ( E! y E. x ( x = A /\ ph ) -> E! x E. y ( x = A /\ ph ) ) ) ;
	step 8 : wff = thm moeq () |- E* x x = A ;
	step 9 : wff = thm moani (step 8) |- E* x ( ph /\ x = A ) ;
	step 10 : wff = thm ancom () |- ( ( ph /\ x = A ) <-> ( x = A /\ ph ) ) ;
	step 11 : wff = thm mobii (step 10) |- ( E* x ( ph /\ x = A ) <-> E* x ( x = A /\ ph ) ) ;
	step 12 : wff = thm mpbi (step 9, step 11) |- E* x ( x = A /\ ph ) ;
	step 13 : wff = thm mpg (step 7, step 12) |- ( E! y E. x ( x = A /\ ph ) -> E! x E. y ( x = A /\ ph ) ) ;
	step 14 : wff = thm impbii (step 6, step 13) |- ( E! x E. y ( x = A /\ ph ) <-> E! y E. x ( x = A /\ ph ) ) ;
	step 15 : wff = thm biidd () |- ( x = A -> ( ph <-> ph ) ) ;
	step 16 : wff = thm ceqsexv (hyp 1, step 15) |- ( E. x ( x = A /\ ph ) <-> ph ) ;
	step 17 : wff = thm eubii (step 16) |- ( E! y E. x ( x = A /\ ph ) <-> E! y ph ) ;
	step 18 : wff = thm bitri (step 14, step 17) |- ( E! x E. y ( x = A /\ ph ) <-> E! y ph ) ;
	qed prop 1 = step 18 ;
}

theorem euxfr (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- E! y x = A ;
	hyp 3 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x ph <-> E! y ps ) ;
}

proof of euxfr {
	step 1 : wff = thm euex () |- ( E! y x = A -> E. y x = A ) ;
	step 2 : wff = axm ax-mp (hyp 2, step 1) |- E. y x = A ;
	step 3 : wff = thm biantrur (step 2) |- ( ph <-> ( E. y x = A /\ ph ) ) ;
	step 4 : wff = thm 19_41v () |- ( E. y ( x = A /\ ph ) <-> ( E. y x = A /\ ph ) ) ;
	step 5 : wff = thm pm5_32i (hyp 3) |- ( ( x = A /\ ph ) <-> ( x = A /\ ps ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. y ( x = A /\ ph ) <-> E. y ( x = A /\ ps ) ) ;
	step 7 : wff = thm 3bitr2i (step 3, step 4, step 6) |- ( ph <-> E. y ( x = A /\ ps ) ) ;
	step 8 : wff = thm eubii (step 7) |- ( E! x ph <-> E! x E. y ( x = A /\ ps ) ) ;
	step 9 : wff = thm eumoi (hyp 2) |- E* y x = A ;
	step 10 : wff = thm euxfr2 (hyp 1, step 9) |- ( E! x E. y ( x = A /\ ps ) <-> E! y ps ) ;
	step 11 : wff = thm bitri (step 8, step 10) |- ( E! x ph <-> E! y ps ) ;
	qed prop 1 = step 11 ;
}

theorem euind (ph : wff, ps : wff, x : set, y : set, z : set, A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	hyp 2 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	hyp 3 : wff = |- ( x = y -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph ) -> E! z A. x ( ph -> z = A ) ) ;
}

proof of euind {
	var w : set;
	step 1 : wff = thm eqeq1 () |- ( z = w -> ( z = A <-> w = A ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( z = w -> ( ( ph -> z = A ) <-> ( ph -> w = A ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( z = w -> ( A. x ( ph -> z = A ) <-> A. x ( ph -> w = A ) ) ) ;
	step 4 : wff = thm eu4 (step 3) |- ( E! z A. x ( ph -> z = A ) <-> ( E. z A. x ( ph -> z = A ) /\ A. z A. w ( ( A. x ( ph -> z = A ) /\ A. x ( ph -> w = A ) ) -> z = w ) ) ) ;
	step 5 : wff = thm eqeq2 () |- ( A = B -> ( z = A <-> z = B ) ) ;
	step 6 : wff = thm imim2i (step 5) |- ( ( ( ph /\ ps ) -> A = B ) -> ( ( ph /\ ps ) -> ( z = A <-> z = B ) ) ) ;
	step 7 : wff = thm bi2 () |- ( ( z = A <-> z = B ) -> ( z = B -> z = A ) ) ;
	step 8 : wff = thm imim2i (step 7) |- ( ( ( ph /\ ps ) -> ( z = A <-> z = B ) ) -> ( ( ph /\ ps ) -> ( z = B -> z = A ) ) ) ;
	step 9 : wff = thm an23 () |- ( ( ( ph /\ ps ) /\ z = B ) <-> ( ( ph /\ z = B ) /\ ps ) ) ;
	step 10 : wff = thm ancom () |- ( ( ph /\ z = B ) <-> ( z = B /\ ph ) ) ;
	step 11 : wff = thm anbi1i (step 10) |- ( ( ( ph /\ z = B ) /\ ps ) <-> ( ( z = B /\ ph ) /\ ps ) ) ;
	step 12 : wff = thm an23 () |- ( ( ( z = B /\ ph ) /\ ps ) <-> ( ( z = B /\ ps ) /\ ph ) ) ;
	step 13 : wff = thm 3bitri (step 9, step 11, step 12) |- ( ( ( ph /\ ps ) /\ z = B ) <-> ( ( z = B /\ ps ) /\ ph ) ) ;
	step 14 : wff = thm imbi1i (step 13) |- ( ( ( ( ph /\ ps ) /\ z = B ) -> z = A ) <-> ( ( ( z = B /\ ps ) /\ ph ) -> z = A ) ) ;
	step 15 : wff = thm impexp () |- ( ( ( ( ph /\ ps ) /\ z = B ) -> z = A ) <-> ( ( ph /\ ps ) -> ( z = B -> z = A ) ) ) ;
	step 16 : wff = thm impexp () |- ( ( ( ( z = B /\ ps ) /\ ph ) -> z = A ) <-> ( ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 17 : wff = thm 3bitr3i (step 14, step 15, step 16) |- ( ( ( ph /\ ps ) -> ( z = B -> z = A ) ) <-> ( ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 18 : wff = thm sylib (step 8, step 17) |- ( ( ( ph /\ ps ) -> ( z = A <-> z = B ) ) -> ( ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 19 : wff = thm syl (step 6, step 18) |- ( ( ( ph /\ ps ) -> A = B ) -> ( ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 20 : wff = thm 19_20i2 (step 19) |- ( A. x A. y ( ( ph /\ ps ) -> A = B ) -> A. x A. y ( ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 21 : wff = thm 19_23v () |- ( A. y ( ( z = B /\ ps ) -> ( ph -> z = A ) ) <-> ( E. y ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 22 : wff = thm albii (step 21) |- ( A. x A. y ( ( z = B /\ ps ) -> ( ph -> z = A ) ) <-> A. x ( E. y ( z = B /\ ps ) -> ( ph -> z = A ) ) ) ;
	step 23 : wff = thm 19_21v () |- ( A. x ( E. y ( z = B /\ ps ) -> ( ph -> z = A ) ) <-> ( E. y ( z = B /\ ps ) -> A. x ( ph -> z = A ) ) ) ;
	step 24 : wff = thm bitri (step 22, step 23) |- ( A. x A. y ( ( z = B /\ ps ) -> ( ph -> z = A ) ) <-> ( E. y ( z = B /\ ps ) -> A. x ( ph -> z = A ) ) ) ;
	step 25 : wff = thm sylib (step 20, step 24) |- ( A. x A. y ( ( ph /\ ps ) -> A = B ) -> ( E. y ( z = B /\ ps ) -> A. x ( ph -> z = A ) ) ) ;
	step 26 : wff = thm 19_22dv (step 25) |- ( A. x A. y ( ( ph /\ ps ) -> A = B ) -> ( E. z E. y ( z = B /\ ps ) -> E. z A. x ( ph -> z = A ) ) ) ;
	step 27 : wff = thm cbvexv (hyp 2) |- ( E. x ph <-> E. y ps ) ;
	step 28 : wff = thm isseti (hyp 1) |- E. z z = B ;
	step 29 : wff = thm biantrur (step 28) |- ( ps <-> ( E. z z = B /\ ps ) ) ;
	step 30 : wff = thm exbii (step 29) |- ( E. y ps <-> E. y ( E. z z = B /\ ps ) ) ;
	step 31 : wff = thm 19_41v () |- ( E. z ( z = B /\ ps ) <-> ( E. z z = B /\ ps ) ) ;
	step 32 : wff = thm exbii (step 31) |- ( E. y E. z ( z = B /\ ps ) <-> E. y ( E. z z = B /\ ps ) ) ;
	step 33 : wff = thm excom () |- ( E. y E. z ( z = B /\ ps ) <-> E. z E. y ( z = B /\ ps ) ) ;
	step 34 : wff = thm bitr3i (step 32, step 33) |- ( E. y ( E. z z = B /\ ps ) <-> E. z E. y ( z = B /\ ps ) ) ;
	step 35 : wff = thm 3bitri (step 27, step 30, step 34) |- ( E. x ph <-> E. z E. y ( z = B /\ ps ) ) ;
	step 36 : wff = thm syl5ib (step 26, step 35) |- ( A. x A. y ( ( ph /\ ps ) -> A = B ) -> ( E. x ph -> E. z A. x ( ph -> z = A ) ) ) ;
	step 37 : wff = thm imp (step 36) |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph ) -> E. z A. x ( ph -> z = A ) ) ;
	step 38 : wff = thm 19_23v () |- ( A. x ( ph -> z = w ) <-> ( E. x ph -> z = w ) ) ;
	step 39 : wff = thm biimpi (step 38) |- ( A. x ( ph -> z = w ) -> ( E. x ph -> z = w ) ) ;
	step 40 : wff = thm com12 (step 39) |- ( E. x ph -> ( A. x ( ph -> z = w ) -> z = w ) ) ;
	step 41 : wff = thm 19_26 () |- ( A. x ( ( ph -> z = A ) /\ ( ph -> w = A ) ) <-> ( A. x ( ph -> z = A ) /\ A. x ( ph -> w = A ) ) ) ;
	step 42 : wff = thm prth () |- ( ( ( ph -> z = A ) /\ ( ph -> w = A ) ) -> ( ( ph /\ ph ) -> ( z = A /\ w = A ) ) ) ;
	step 43 : wff = thm pm4_24 () |- ( ph <-> ( ph /\ ph ) ) ;
	step 44 : wff = thm biimpi (step 43) |- ( ph -> ( ph /\ ph ) ) ;
	step 45 : wff = thm eqtr3 () |- ( ( z = A /\ w = A ) -> z = w ) ;
	step 46 : wff = thm imim12i (step 44, step 45) |- ( ( ( ph /\ ph ) -> ( z = A /\ w = A ) ) -> ( ph -> z = w ) ) ;
	step 47 : wff = thm syl (step 42, step 46) |- ( ( ( ph -> z = A ) /\ ( ph -> w = A ) ) -> ( ph -> z = w ) ) ;
	step 48 : wff = thm 19_20i (step 47) |- ( A. x ( ( ph -> z = A ) /\ ( ph -> w = A ) ) -> A. x ( ph -> z = w ) ) ;
	step 49 : wff = thm sylbir (step 41, step 48) |- ( ( A. x ( ph -> z = A ) /\ A. x ( ph -> w = A ) ) -> A. x ( ph -> z = w ) ) ;
	step 50 : wff = thm syl5 (step 40, step 49) |- ( E. x ph -> ( ( A. x ( ph -> z = A ) /\ A. x ( ph -> w = A ) ) -> z = w ) ) ;
	step 51 : wff = thm 19_21aivv (step 50) |- ( E. x ph -> A. z A. w ( ( A. x ( ph -> z = A ) /\ A. x ( ph -> w = A ) ) -> z = w ) ) ;
	step 52 : wff = thm adantl (step 51) |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph ) -> A. z A. w ( ( A. x ( ph -> z = A ) /\ A. x ( ph -> w = A ) ) -> z = w ) ) ;
	step 53 : wff = thm sylanbrc (step 4, step 37, step 52) |- ( ( A. x A. y ( ( ph /\ ps ) -> A = B ) /\ E. x ph ) -> E! z A. x ( ph -> z = A ) ) ;
	qed prop 1 = step 53 ;
}

theorem reurex (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph -> E. x e. A ph ) ;
}

proof of reurex {
	step 1 : wff = thm euex () |- ( E! x ( x e. A /\ ph ) -> E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 4 : wff = thm 3imtr4i (step 1, step 2, step 3) |- ( E! x e. A ph -> E. x e. A ph ) ;
	qed prop 1 = step 4 ;
}

theorem reu5 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) ) ;
}

proof of reu5 {
	step 1 : wff = thm eu5 () |- ( E! x ( x e. A /\ ph ) <-> ( E. x ( x e. A /\ ph ) /\ E* x ( x e. A /\ ph ) ) ) ;
	step 2 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 4 : wff = thm anbi1i (step 3) |- ( ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) <-> ( E. x ( x e. A /\ ph ) /\ E* x ( x e. A /\ ph ) ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem reu2 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph <-> ( E. x e. A ph /\ A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
}

proof of reu2 {
	step 1 : wff = axm ax-17 () |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 2 : wff = thm eu2 (step 1) |- ( E! x ( x e. A /\ ph ) <-> ( E. x ( x e. A /\ ph ) /\ A. x A. y ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) ) ) ;
	step 3 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 4 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. x ( x e. A -> A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 6 : wff = thm 19_21v () |- ( A. y ( x e. A -> ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) <-> ( x e. A -> A. y ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ) ;
	step 7 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 8 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 9 : wff = thm hban (step 7, step 8) |- ( ( y e. A /\ [ y / x ] ph ) -> A. x ( y e. A /\ [ y / x ] ph ) ) ;
	step 10 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 11 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 12 : wff = thm anbi12d (step 10, step 11) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ [ y / x ] ph ) ) ) ;
	step 13 : wff = thm sbie (step 9, step 12) |- ( [ y / x ] ( x e. A /\ ph ) <-> ( y e. A /\ [ y / x ] ph ) ) ;
	step 14 : wff = thm anbi2i (step 13) |- ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) <-> ( ( x e. A /\ ph ) /\ ( y e. A /\ [ y / x ] ph ) ) ) ;
	step 15 : wff = thm an4 () |- ( ( ( x e. A /\ ph ) /\ ( y e. A /\ [ y / x ] ph ) ) <-> ( ( x e. A /\ y e. A ) /\ ( ph /\ [ y / x ] ph ) ) ) ;
	step 16 : wff = thm bitri (step 14, step 15) |- ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) <-> ( ( x e. A /\ y e. A ) /\ ( ph /\ [ y / x ] ph ) ) ) ;
	step 17 : wff = thm imbi1i (step 16) |- ( ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) <-> ( ( ( x e. A /\ y e. A ) /\ ( ph /\ [ y / x ] ph ) ) -> x = y ) ) ;
	step 18 : wff = thm impexp () |- ( ( ( ( x e. A /\ y e. A ) /\ ( ph /\ [ y / x ] ph ) ) -> x = y ) <-> ( ( x e. A /\ y e. A ) -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 19 : wff = thm impexp () |- ( ( ( x e. A /\ y e. A ) -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) <-> ( x e. A -> ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ) ;
	step 20 : wff = thm 3bitri (step 17, step 18, step 19) |- ( ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) <-> ( x e. A -> ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ) ;
	step 21 : wff = thm albii (step 20) |- ( A. y ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) <-> A. y ( x e. A -> ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ) ;
	step 22 : wff = def df-ral () |- ( A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. y ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 23 : wff = thm imbi2i (step 22) |- ( ( x e. A -> A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) <-> ( x e. A -> A. y ( y e. A -> ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ) ;
	step 24 : wff = thm 3bitr4i (step 6, step 21, step 23) |- ( A. y ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) <-> ( x e. A -> A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 25 : wff = thm albii (step 24) |- ( A. x A. y ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) <-> A. x ( x e. A -> A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	step 26 : wff = thm bitr4i (step 5, step 25) |- ( A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) <-> A. x A. y ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) ) ;
	step 27 : wff = thm anbi12i (step 4, step 26) |- ( ( E. x e. A ph /\ A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) <-> ( E. x ( x e. A /\ ph ) /\ A. x A. y ( ( ( x e. A /\ ph ) /\ [ y / x ] ( x e. A /\ ph ) ) -> x = y ) ) ) ;
	step 28 : wff = thm 3bitr4i (step 2, step 3, step 27) |- ( E! x e. A ph <-> ( E. x e. A ph /\ A. x e. A A. y e. A ( ( ph /\ [ y / x ] ph ) -> x = y ) ) ) ;
	qed prop 1 = step 28 ;
}

theorem reu6 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) ;
}

proof of reu6 {
	step 1 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-eu () |- ( E! x ( x e. A /\ ph ) <-> E. y A. x ( ( x e. A /\ ph ) <-> x = y ) ) ;
	step 3 : wff = thm 19_28v () |- ( A. x ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) <-> ( y e. A /\ A. x ( x e. A -> ( ph <-> x = y ) ) ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 5 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 6 : wff = thm anbi12d (step 4, step 5) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ [ y / x ] ph ) ) ) ;
	step 7 : wff = thm eqeq1 () |- ( x = y -> ( x = y <-> y = y ) ) ;
	step 8 : wff = thm bibi12d (step 6, step 7) |- ( x = y -> ( ( ( x e. A /\ ph ) <-> x = y ) <-> ( ( y e. A /\ [ y / x ] ph ) <-> y = y ) ) ) ;
	step 9 : wff = thm eqid () |- y = y ;
	step 10 : wff = thm tbt (step 9) |- ( ( y e. A /\ [ y / x ] ph ) <-> ( ( y e. A /\ [ y / x ] ph ) <-> y = y ) ) ;
	step 11 : wff = thm pm3_26 () |- ( ( y e. A /\ [ y / x ] ph ) -> y e. A ) ;
	step 12 : wff = thm sylbir (step 10, step 11) |- ( ( ( y e. A /\ [ y / x ] ph ) <-> y = y ) -> y e. A ) ;
	step 13 : wff = thm syl6bi (step 8, step 12) |- ( x = y -> ( ( ( x e. A /\ ph ) <-> x = y ) -> y e. A ) ) ;
	step 14 : wff = thm a4imv (step 13) |- ( A. x ( ( x e. A /\ ph ) <-> x = y ) -> y e. A ) ;
	step 15 : wff = thm bi1 () |- ( ( ( x e. A /\ ph ) <-> x = y ) -> ( ( x e. A /\ ph ) -> x = y ) ) ;
	step 16 : wff = thm expdimp (step 15) |- ( ( ( ( x e. A /\ ph ) <-> x = y ) /\ x e. A ) -> ( ph -> x = y ) ) ;
	step 17 : wff = thm bi2 () |- ( ( ( x e. A /\ ph ) <-> x = y ) -> ( x = y -> ( x e. A /\ ph ) ) ) ;
	step 18 : wff = thm pm3_27 () |- ( ( x e. A /\ ph ) -> ph ) ;
	step 19 : wff = thm syl6 (step 17, step 18) |- ( ( ( x e. A /\ ph ) <-> x = y ) -> ( x = y -> ph ) ) ;
	step 20 : wff = thm adantr (step 19) |- ( ( ( ( x e. A /\ ph ) <-> x = y ) /\ x e. A ) -> ( x = y -> ph ) ) ;
	step 21 : wff = thm impbid (step 16, step 20) |- ( ( ( ( x e. A /\ ph ) <-> x = y ) /\ x e. A ) -> ( ph <-> x = y ) ) ;
	step 22 : wff = thm ex (step 21) |- ( ( ( x e. A /\ ph ) <-> x = y ) -> ( x e. A -> ( ph <-> x = y ) ) ) ;
	step 23 : wff = thm a4s (step 22) |- ( A. x ( ( x e. A /\ ph ) <-> x = y ) -> ( x e. A -> ( ph <-> x = y ) ) ) ;
	step 24 : wff = thm jca (step 14, step 23) |- ( A. x ( ( x e. A /\ ph ) <-> x = y ) -> ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) ) ;
	step 25 : wff = thm a5i (step 24) |- ( A. x ( ( x e. A /\ ph ) <-> x = y ) -> A. x ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) ) ;
	step 26 : wff = thm bi1 () |- ( ( ph <-> x = y ) -> ( ph -> x = y ) ) ;
	step 27 : wff = thm imim2i (step 26) |- ( ( x e. A -> ( ph <-> x = y ) ) -> ( x e. A -> ( ph -> x = y ) ) ) ;
	step 28 : wff = thm imp3a (step 27) |- ( ( x e. A -> ( ph <-> x = y ) ) -> ( ( x e. A /\ ph ) -> x = y ) ) ;
	step 29 : wff = thm adantl (step 28) |- ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) -> ( ( x e. A /\ ph ) -> x = y ) ) ;
	step 30 : wff = thm eleq1a () |- ( y e. A -> ( x = y -> x e. A ) ) ;
	step 31 : wff = thm adantr (step 30) |- ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) -> ( x = y -> x e. A ) ) ;
	step 32 : wff = thm imp (step 31) |- ( ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) /\ x = y ) -> x e. A ) ;
	step 33 : wff = thm bi2 () |- ( ( ph <-> x = y ) -> ( x = y -> ph ) ) ;
	step 34 : wff = thm imim2i (step 33) |- ( ( x e. A -> ( ph <-> x = y ) ) -> ( x e. A -> ( x = y -> ph ) ) ) ;
	step 35 : wff = thm com23 (step 34) |- ( ( x e. A -> ( ph <-> x = y ) ) -> ( x = y -> ( x e. A -> ph ) ) ) ;
	step 36 : wff = thm imp (step 35) |- ( ( ( x e. A -> ( ph <-> x = y ) ) /\ x = y ) -> ( x e. A -> ph ) ) ;
	step 37 : wff = thm adantll (step 36) |- ( ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) /\ x = y ) -> ( x e. A -> ph ) ) ;
	step 38 : wff = thm jcai (step 32, step 37) |- ( ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) /\ x = y ) -> ( x e. A /\ ph ) ) ;
	step 39 : wff = thm ex (step 38) |- ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) -> ( x = y -> ( x e. A /\ ph ) ) ) ;
	step 40 : wff = thm impbid (step 29, step 39) |- ( ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) -> ( ( x e. A /\ ph ) <-> x = y ) ) ;
	step 41 : wff = thm 19_20i (step 40) |- ( A. x ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) -> A. x ( ( x e. A /\ ph ) <-> x = y ) ) ;
	step 42 : wff = thm impbii (step 25, step 41) |- ( A. x ( ( x e. A /\ ph ) <-> x = y ) <-> A. x ( y e. A /\ ( x e. A -> ( ph <-> x = y ) ) ) ) ;
	step 43 : wff = def df-ral () |- ( A. x e. A ( ph <-> x = y ) <-> A. x ( x e. A -> ( ph <-> x = y ) ) ) ;
	step 44 : wff = thm anbi2i (step 43) |- ( ( y e. A /\ A. x e. A ( ph <-> x = y ) ) <-> ( y e. A /\ A. x ( x e. A -> ( ph <-> x = y ) ) ) ) ;
	step 45 : wff = thm 3bitr4i (step 3, step 42, step 44) |- ( A. x ( ( x e. A /\ ph ) <-> x = y ) <-> ( y e. A /\ A. x e. A ( ph <-> x = y ) ) ) ;
	step 46 : wff = thm exbii (step 45) |- ( E. y A. x ( ( x e. A /\ ph ) <-> x = y ) <-> E. y ( y e. A /\ A. x e. A ( ph <-> x = y ) ) ) ;
	step 47 : wff = def df-rex () |- ( E. y e. A A. x e. A ( ph <-> x = y ) <-> E. y ( y e. A /\ A. x e. A ( ph <-> x = y ) ) ) ;
	step 48 : wff = thm bitr4i (step 46, step 47) |- ( E. y A. x ( ( x e. A /\ ph ) <-> x = y ) <-> E. y e. A A. x e. A ( ph <-> x = y ) ) ;
	step 49 : wff = thm 3bitri (step 1, step 2, step 48) |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) ;
	qed prop 1 = step 49 ;
}

theorem reu3 (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph <-> ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) ;
}

proof of reu3 {
	step 1 : wff = thm reurex () |- ( E! x e. A ph -> E. x e. A ph ) ;
	step 2 : wff = thm reu6 () |- ( E! x e. A ph <-> E. y e. A A. x e. A ( ph <-> x = y ) ) ;
	step 3 : wff = thm bi1 () |- ( ( ph <-> x = y ) -> ( ph -> x = y ) ) ;
	step 4 : wff = thm r19_20si (step 3) |- ( A. x e. A ( ph <-> x = y ) -> A. x e. A ( ph -> x = y ) ) ;
	step 5 : wff = thm r19_22si (step 4) |- ( E. y e. A A. x e. A ( ph <-> x = y ) -> E. y e. A A. x e. A ( ph -> x = y ) ) ;
	step 6 : wff = thm sylbi (step 2, step 5) |- ( E! x e. A ph -> E. y e. A A. x e. A ( ph -> x = y ) ) ;
	step 7 : wff = thm jca (step 1, step 6) |- ( E! x e. A ph -> ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) ;
	step 8 : wff = thm rexex () |- ( E. y e. A A. x e. A ( ph -> x = y ) -> E. y A. x e. A ( ph -> x = y ) ) ;
	step 9 : wff = thm anim2i (step 8) |- ( ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) -> ( E. x e. A ph /\ E. y A. x e. A ( ph -> x = y ) ) ) ;
	step 10 : wff = axm ax-17 () |- ( ( x e. A /\ ph ) -> A. y ( x e. A /\ ph ) ) ;
	step 11 : wff = thm eu3 (step 10) |- ( E! x ( x e. A /\ ph ) <-> ( E. x ( x e. A /\ ph ) /\ E. y A. x ( ( x e. A /\ ph ) -> x = y ) ) ) ;
	step 12 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 13 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 14 : wff = def df-ral () |- ( A. x e. A ( ph -> x = y ) <-> A. x ( x e. A -> ( ph -> x = y ) ) ) ;
	step 15 : wff = thm impexp () |- ( ( ( x e. A /\ ph ) -> x = y ) <-> ( x e. A -> ( ph -> x = y ) ) ) ;
	step 16 : wff = thm albii (step 15) |- ( A. x ( ( x e. A /\ ph ) -> x = y ) <-> A. x ( x e. A -> ( ph -> x = y ) ) ) ;
	step 17 : wff = thm bitr4i (step 14, step 16) |- ( A. x e. A ( ph -> x = y ) <-> A. x ( ( x e. A /\ ph ) -> x = y ) ) ;
	step 18 : wff = thm exbii (step 17) |- ( E. y A. x e. A ( ph -> x = y ) <-> E. y A. x ( ( x e. A /\ ph ) -> x = y ) ) ;
	step 19 : wff = thm anbi12i (step 13, step 18) |- ( ( E. x e. A ph /\ E. y A. x e. A ( ph -> x = y ) ) <-> ( E. x ( x e. A /\ ph ) /\ E. y A. x ( ( x e. A /\ ph ) -> x = y ) ) ) ;
	step 20 : wff = thm 3bitr4i (step 11, step 12, step 19) |- ( E! x e. A ph <-> ( E. x e. A ph /\ E. y A. x e. A ( ph -> x = y ) ) ) ;
	step 21 : wff = thm sylibr (step 9, step 20) |- ( ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) -> E! x e. A ph ) ;
	step 22 : wff = thm impbii (step 7, step 21) |- ( E! x e. A ph <-> ( E. x e. A ph /\ E. y e. A A. x e. A ( ph -> x = y ) ) ) ;
	qed prop 1 = step 22 ;
}

theorem rmo4 (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E* x ( x e. A /\ ph ) <-> A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ;
}

proof of rmo4 {
	step 1 : wff = thm an4 () |- ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) <-> ( ( x e. A /\ y e. A ) /\ ( ph /\ ps ) ) ) ;
	step 2 : wff = thm ancom () |- ( ( x e. A /\ y e. A ) <-> ( y e. A /\ x e. A ) ) ;
	step 3 : wff = thm anbi1i (step 2) |- ( ( ( x e. A /\ y e. A ) /\ ( ph /\ ps ) ) <-> ( ( y e. A /\ x e. A ) /\ ( ph /\ ps ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) <-> ( ( y e. A /\ x e. A ) /\ ( ph /\ ps ) ) ) ;
	step 5 : wff = thm imbi1i (step 4) |- ( ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) -> x = y ) <-> ( ( ( y e. A /\ x e. A ) /\ ( ph /\ ps ) ) -> x = y ) ) ;
	step 6 : wff = thm impexp () |- ( ( ( ( y e. A /\ x e. A ) /\ ( ph /\ ps ) ) -> x = y ) <-> ( ( y e. A /\ x e. A ) -> ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 7 : wff = thm impexp () |- ( ( ( y e. A /\ x e. A ) -> ( ( ph /\ ps ) -> x = y ) ) <-> ( y e. A -> ( x e. A -> ( ( ph /\ ps ) -> x = y ) ) ) ) ;
	step 8 : wff = thm 3bitri (step 5, step 6, step 7) |- ( ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) -> x = y ) <-> ( y e. A -> ( x e. A -> ( ( ph /\ ps ) -> x = y ) ) ) ) ;
	step 9 : wff = thm albii (step 8) |- ( A. y ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) -> x = y ) <-> A. y ( y e. A -> ( x e. A -> ( ( ph /\ ps ) -> x = y ) ) ) ) ;
	step 10 : wff = def df-ral () |- ( A. y e. A ( x e. A -> ( ( ph /\ ps ) -> x = y ) ) <-> A. y ( y e. A -> ( x e. A -> ( ( ph /\ ps ) -> x = y ) ) ) ) ;
	step 11 : wff = thm r19_21v () |- ( A. y e. A ( x e. A -> ( ( ph /\ ps ) -> x = y ) ) <-> ( x e. A -> A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 12 : wff = thm 3bitr2i (step 9, step 10, step 11) |- ( A. y ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) -> x = y ) <-> ( x e. A -> A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 13 : wff = thm albii (step 12) |- ( A. x A. y ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) -> x = y ) <-> A. x ( x e. A -> A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 14 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 15 : wff = thm anbi12d (step 14, hyp 1) |- ( x = y -> ( ( x e. A /\ ph ) <-> ( y e. A /\ ps ) ) ) ;
	step 16 : wff = thm mo4 (step 15) |- ( E* x ( x e. A /\ ph ) <-> A. x A. y ( ( ( x e. A /\ ph ) /\ ( y e. A /\ ps ) ) -> x = y ) ) ;
	step 17 : wff = def df-ral () |- ( A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) <-> A. x ( x e. A -> A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 18 : wff = thm 3bitr4i (step 13, step 16, step 17) |- ( E* x ( x e. A /\ ph ) <-> A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ;
	qed prop 1 = step 18 ;
}

theorem reu4 (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x e. A ph <-> ( E. x e. A ph /\ A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
}

proof of reu4 {
	step 1 : wff = thm reu5 () |- ( E! x e. A ph <-> ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) ) ;
	step 2 : wff = thm rmo4 (hyp 1) |- ( E* x ( x e. A /\ ph ) <-> A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( E. x e. A ph /\ E* x ( x e. A /\ ph ) ) <-> ( E. x e. A ph /\ A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( E! x e. A ph <-> ( E. x e. A ph /\ A. x e. A A. y e. A ( ( ph /\ ps ) -> x = y ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem reu7 (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x e. A ph <-> ( E. x e. A ph /\ E. x e. A A. y e. A ( ps -> x = y ) ) ) ;
}

proof of reu7 {
	var z : set;
	step 1 : wff = thm reu3 () |- ( E! x e. A ph <-> ( E. x e. A ph /\ E. z e. A A. x e. A ( ph -> x = z ) ) ) ;
	step 2 : wff = thm eqeq1 () |- ( x = y -> ( x = z <-> y = z ) ) ;
	step 3 : wff = thm eqcom () |- ( y = z <-> z = y ) ;
	step 4 : wff = thm syl6bb (step 2, step 3) |- ( x = y -> ( x = z <-> z = y ) ) ;
	step 5 : wff = thm imbi12d (hyp 1, step 4) |- ( x = y -> ( ( ph -> x = z ) <-> ( ps -> z = y ) ) ) ;
	step 6 : wff = thm cbvralv (step 5) |- ( A. x e. A ( ph -> x = z ) <-> A. y e. A ( ps -> z = y ) ) ;
	step 7 : wff = thm rexbii (step 6) |- ( E. z e. A A. x e. A ( ph -> x = z ) <-> E. z e. A A. y e. A ( ps -> z = y ) ) ;
	step 8 : wff = thm eqeq1 () |- ( z = x -> ( z = y <-> x = y ) ) ;
	step 9 : wff = thm imbi2d (step 8) |- ( z = x -> ( ( ps -> z = y ) <-> ( ps -> x = y ) ) ) ;
	step 10 : wff = thm ralbidv (step 9) |- ( z = x -> ( A. y e. A ( ps -> z = y ) <-> A. y e. A ( ps -> x = y ) ) ) ;
	step 11 : wff = thm cbvrexv (step 10) |- ( E. z e. A A. y e. A ( ps -> z = y ) <-> E. x e. A A. y e. A ( ps -> x = y ) ) ;
	step 12 : wff = thm bitri (step 7, step 11) |- ( E. z e. A A. x e. A ( ph -> x = z ) <-> E. x e. A A. y e. A ( ps -> x = y ) ) ;
	step 13 : wff = thm anbi2i (step 12) |- ( ( E. x e. A ph /\ E. z e. A A. x e. A ( ph -> x = z ) ) <-> ( E. x e. A ph /\ E. x e. A A. y e. A ( ps -> x = y ) ) ) ;
	step 14 : wff = thm bitri (step 1, step 13) |- ( E! x e. A ph <-> ( E. x e. A ph /\ E. x e. A A. y e. A ( ps -> x = y ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem reu8 (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( E! x e. A ph <-> E. x e. A ( ph /\ A. y e. A ( ps -> x = y ) ) ) ;
}

proof of reu8 {
	step 1 : wff = thm cbvreuv (hyp 1) |- ( E! x e. A ph <-> E! y e. A ps ) ;
	step 2 : wff = thm reu6 () |- ( E! y e. A ps <-> E. x e. A A. y e. A ( ps <-> y = x ) ) ;
	step 3 : wff = thm eqcom () |- ( x = y <-> y = x ) ;
	step 4 : wff = thm imbi2i (step 3) |- ( ( ps -> x = y ) <-> ( ps -> y = x ) ) ;
	step 5 : wff = thm ralbii (step 4) |- ( A. y e. A ( ps -> x = y ) <-> A. y e. A ( ps -> y = x ) ) ;
	step 6 : wff = thm a1i (step 5) |- ( x e. A -> ( A. y e. A ( ps -> x = y ) <-> A. y e. A ( ps -> y = x ) ) ) ;
	step 7 : wff = thm biimt () |- ( x e. A -> ( ph <-> ( x e. A -> ph ) ) ) ;
	step 8 : wff = def df-ral () |- ( A. y e. A ( y = x -> ps ) <-> A. y ( y e. A -> ( y = x -> ps ) ) ) ;
	step 9 : wff = thm bi2_04 () |- ( ( y e. A -> ( y = x -> ps ) ) <-> ( y = x -> ( y e. A -> ps ) ) ) ;
	step 10 : wff = thm albii (step 9) |- ( A. y ( y e. A -> ( y = x -> ps ) ) <-> A. y ( y = x -> ( y e. A -> ps ) ) ) ;
	step 11 : wff = thm visset () |- x e. _V ;
	step 12 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 13 : wff = thm imbi12d (step 12, hyp 1) |- ( x = y -> ( ( x e. A -> ph ) <-> ( y e. A -> ps ) ) ) ;
	step 14 : wff = thm bicomd (step 13) |- ( x = y -> ( ( y e. A -> ps ) <-> ( x e. A -> ph ) ) ) ;
	step 15 : wff = thm eqcoms (step 14) |- ( y = x -> ( ( y e. A -> ps ) <-> ( x e. A -> ph ) ) ) ;
	step 16 : wff = thm ceqsalv (step 11, step 15) |- ( A. y ( y = x -> ( y e. A -> ps ) ) <-> ( x e. A -> ph ) ) ;
	step 17 : wff = thm 3bitrri (step 8, step 10, step 16) |- ( ( x e. A -> ph ) <-> A. y e. A ( y = x -> ps ) ) ;
	step 18 : wff = thm syl6bb (step 7, step 17) |- ( x e. A -> ( ph <-> A. y e. A ( y = x -> ps ) ) ) ;
	step 19 : wff = thm anbi12d (step 6, step 18) |- ( x e. A -> ( ( A. y e. A ( ps -> x = y ) /\ ph ) <-> ( A. y e. A ( ps -> y = x ) /\ A. y e. A ( y = x -> ps ) ) ) ) ;
	step 20 : wff = thm ancom () |- ( ( ph /\ A. y e. A ( ps -> x = y ) ) <-> ( A. y e. A ( ps -> x = y ) /\ ph ) ) ;
	step 21 : wff = thm syl5bb (step 19, step 20) |- ( x e. A -> ( ( ph /\ A. y e. A ( ps -> x = y ) ) <-> ( A. y e. A ( ps -> y = x ) /\ A. y e. A ( y = x -> ps ) ) ) ) ;
	step 22 : wff = thm r19_26 () |- ( A. y e. A ( ( ps -> y = x ) /\ ( y = x -> ps ) ) <-> ( A. y e. A ( ps -> y = x ) /\ A. y e. A ( y = x -> ps ) ) ) ;
	step 23 : wff = thm syl6rbbr (step 21, step 22) |- ( x e. A -> ( A. y e. A ( ( ps -> y = x ) /\ ( y = x -> ps ) ) <-> ( ph /\ A. y e. A ( ps -> x = y ) ) ) ) ;
	step 24 : wff = thm dfbi2 () |- ( ( ps <-> y = x ) <-> ( ( ps -> y = x ) /\ ( y = x -> ps ) ) ) ;
	step 25 : wff = thm ralbii (step 24) |- ( A. y e. A ( ps <-> y = x ) <-> A. y e. A ( ( ps -> y = x ) /\ ( y = x -> ps ) ) ) ;
	step 26 : wff = thm syl5bb (step 23, step 25) |- ( x e. A -> ( A. y e. A ( ps <-> y = x ) <-> ( ph /\ A. y e. A ( ps -> x = y ) ) ) ) ;
	step 27 : wff = thm rexbiia (step 26) |- ( E. x e. A A. y e. A ( ps <-> y = x ) <-> E. x e. A ( ph /\ A. y e. A ( ps -> x = y ) ) ) ;
	step 28 : wff = thm 3bitri (step 1, step 2, step 27) |- ( E! x e. A ph <-> E. x e. A ( ph /\ A. y e. A ( ps -> x = y ) ) ) ;
	qed prop 1 = step 28 ;
}

theorem 2reuswap (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A E* y ( y e. A /\ ph ) -> ( E! x e. A E. y e. A ph -> E! y e. A E. x e. A ph ) ) ;
}

proof of 2reuswap {
	step 1 : wff = def df-ral () |- ( A. x e. A E* y ( y e. A /\ ph ) <-> A. x ( x e. A -> E* y ( y e. A /\ ph ) ) ) ;
	step 2 : wff = thm moanimv () |- ( E* y ( x e. A /\ ( y e. A /\ ph ) ) <-> ( x e. A -> E* y ( y e. A /\ ph ) ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x E* y ( x e. A /\ ( y e. A /\ ph ) ) <-> A. x ( x e. A -> E* y ( y e. A /\ ph ) ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( A. x e. A E* y ( y e. A /\ ph ) <-> A. x E* y ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 5 : wff = thm 2euswap () |- ( A. x E* y ( x e. A /\ ( y e. A /\ ph ) ) -> ( E! x E. y ( x e. A /\ ( y e. A /\ ph ) ) -> E! y E. x ( x e. A /\ ( y e. A /\ ph ) ) ) ) ;
	step 6 : wff = def df-reu () |- ( E! x e. A E. y e. A ph <-> E! x ( x e. A /\ E. y e. A ph ) ) ;
	step 7 : wff = def df-rex () |- ( E. y e. A ( x e. A /\ ph ) <-> E. y ( y e. A /\ ( x e. A /\ ph ) ) ) ;
	step 8 : wff = thm r19_42v () |- ( E. y e. A ( x e. A /\ ph ) <-> ( x e. A /\ E. y e. A ph ) ) ;
	step 9 : wff = thm an12 () |- ( ( y e. A /\ ( x e. A /\ ph ) ) <-> ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 10 : wff = thm exbii (step 9) |- ( E. y ( y e. A /\ ( x e. A /\ ph ) ) <-> E. y ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 11 : wff = thm 3bitr3i (step 7, step 8, step 10) |- ( ( x e. A /\ E. y e. A ph ) <-> E. y ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 12 : wff = thm eubii (step 11) |- ( E! x ( x e. A /\ E. y e. A ph ) <-> E! x E. y ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 13 : wff = thm bitri (step 6, step 12) |- ( E! x e. A E. y e. A ph <-> E! x E. y ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 14 : wff = def df-reu () |- ( E! y e. A E. x e. A ph <-> E! y ( y e. A /\ E. x e. A ph ) ) ;
	step 15 : wff = thm r19_42v () |- ( E. x e. A ( y e. A /\ ph ) <-> ( y e. A /\ E. x e. A ph ) ) ;
	step 16 : wff = def df-rex () |- ( E. x e. A ( y e. A /\ ph ) <-> E. x ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 17 : wff = thm bitr3i (step 15, step 16) |- ( ( y e. A /\ E. x e. A ph ) <-> E. x ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 18 : wff = thm eubii (step 17) |- ( E! y ( y e. A /\ E. x e. A ph ) <-> E! y E. x ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 19 : wff = thm bitri (step 14, step 18) |- ( E! y e. A E. x e. A ph <-> E! y E. x ( x e. A /\ ( y e. A /\ ph ) ) ) ;
	step 20 : wff = thm 3imtr4g (step 5, step 13, step 19) |- ( A. x E* y ( x e. A /\ ( y e. A /\ ph ) ) -> ( E! x e. A E. y e. A ph -> E! y e. A E. x e. A ph ) ) ;
	step 21 : wff = thm sylbi (step 4, step 20) |- ( A. x e. A E* y ( y e. A /\ ph ) -> ( E! x e. A E. y e. A ph -> E! y e. A E. x e. A ph ) ) ;
	qed prop 1 = step 21 ;
}

theorem reuind (ph : wff, ps : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( x = y -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) /\ E. x ( A e. C /\ ph ) ) -> E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) ;
}

proof of reuind {
	var w : set;
	step 1 : wff = thm eqeq1 () |- ( z = w -> ( z = A <-> w = A ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( z = w -> ( ( ( A e. C /\ ph ) -> z = A ) <-> ( ( A e. C /\ ph ) -> w = A ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( z = w -> ( A. x ( ( A e. C /\ ph ) -> z = A ) <-> A. x ( ( A e. C /\ ph ) -> w = A ) ) ) ;
	step 4 : wff = thm reu4 (step 3) |- ( E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) <-> ( E. z e. C A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. z e. C A. w e. C ( ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) -> z = w ) ) ) ;
	step 5 : wff = thm eqeq2 () |- ( A = B -> ( z = A <-> z = B ) ) ;
	step 6 : wff = thm imim2i (step 5) |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> ( z = A <-> z = B ) ) ) ;
	step 7 : wff = thm bi2 () |- ( ( z = A <-> z = B ) -> ( z = B -> z = A ) ) ;
	step 8 : wff = thm imim2i (step 7) |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> ( z = A <-> z = B ) ) -> ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> ( z = B -> z = A ) ) ) ;
	step 9 : wff = thm an23 () |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) /\ z = B ) <-> ( ( ( A e. C /\ ph ) /\ z = B ) /\ ( B e. C /\ ps ) ) ) ;
	step 10 : wff = thm ancom () |- ( ( ( A e. C /\ ph ) /\ z = B ) <-> ( z = B /\ ( A e. C /\ ph ) ) ) ;
	step 11 : wff = thm anbi1i (step 10) |- ( ( ( ( A e. C /\ ph ) /\ z = B ) /\ ( B e. C /\ ps ) ) <-> ( ( z = B /\ ( A e. C /\ ph ) ) /\ ( B e. C /\ ps ) ) ) ;
	step 12 : wff = thm an23 () |- ( ( ( z = B /\ ( A e. C /\ ph ) ) /\ ( B e. C /\ ps ) ) <-> ( ( z = B /\ ( B e. C /\ ps ) ) /\ ( A e. C /\ ph ) ) ) ;
	step 13 : wff = thm 3bitri (step 9, step 11, step 12) |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) /\ z = B ) <-> ( ( z = B /\ ( B e. C /\ ps ) ) /\ ( A e. C /\ ph ) ) ) ;
	step 14 : wff = thm imbi1i (step 13) |- ( ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) /\ z = B ) -> z = A ) <-> ( ( ( z = B /\ ( B e. C /\ ps ) ) /\ ( A e. C /\ ph ) ) -> z = A ) ) ;
	step 15 : wff = thm impexp () |- ( ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) /\ z = B ) -> z = A ) <-> ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> ( z = B -> z = A ) ) ) ;
	step 16 : wff = thm impexp () |- ( ( ( ( z = B /\ ( B e. C /\ ps ) ) /\ ( A e. C /\ ph ) ) -> z = A ) <-> ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 17 : wff = thm 3bitr3i (step 14, step 15, step 16) |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> ( z = B -> z = A ) ) <-> ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 18 : wff = thm sylib (step 8, step 17) |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> ( z = A <-> z = B ) ) -> ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 19 : wff = thm syl (step 6, step 18) |- ( ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 20 : wff = thm 19_20i2 (step 19) |- ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> A. x A. y ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 21 : wff = thm 19_23v () |- ( A. y ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) <-> ( E. y ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 22 : wff = thm an12 () |- ( ( z = B /\ ( B e. C /\ ps ) ) <-> ( B e. C /\ ( z = B /\ ps ) ) ) ;
	step 23 : wff = thm eleq1 () |- ( z = B -> ( z e. C <-> B e. C ) ) ;
	step 24 : wff = thm adantr (step 23) |- ( ( z = B /\ ps ) -> ( z e. C <-> B e. C ) ) ;
	step 25 : wff = thm pm5_32ri (step 24) |- ( ( z e. C /\ ( z = B /\ ps ) ) <-> ( B e. C /\ ( z = B /\ ps ) ) ) ;
	step 26 : wff = thm bitr4i (step 22, step 25) |- ( ( z = B /\ ( B e. C /\ ps ) ) <-> ( z e. C /\ ( z = B /\ ps ) ) ) ;
	step 27 : wff = thm exbii (step 26) |- ( E. y ( z = B /\ ( B e. C /\ ps ) ) <-> E. y ( z e. C /\ ( z = B /\ ps ) ) ) ;
	step 28 : wff = thm 19_42v () |- ( E. y ( z e. C /\ ( z = B /\ ps ) ) <-> ( z e. C /\ E. y ( z = B /\ ps ) ) ) ;
	step 29 : wff = thm bitri (step 27, step 28) |- ( E. y ( z = B /\ ( B e. C /\ ps ) ) <-> ( z e. C /\ E. y ( z = B /\ ps ) ) ) ;
	step 30 : wff = thm imbi1i (step 29) |- ( ( E. y ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) <-> ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 31 : wff = thm bitri (step 21, step 30) |- ( A. y ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) <-> ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 32 : wff = thm albii (step 31) |- ( A. x A. y ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) <-> A. x ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 33 : wff = thm 19_21v () |- ( A. x ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) <-> ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> A. x ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 34 : wff = thm bitri (step 32, step 33) |- ( A. x A. y ( ( z = B /\ ( B e. C /\ ps ) ) -> ( ( A e. C /\ ph ) -> z = A ) ) <-> ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> A. x ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 35 : wff = thm sylib (step 20, step 34) |- ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> ( ( z e. C /\ E. y ( z = B /\ ps ) ) -> A. x ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 36 : wff = thm exp3a (step 35) |- ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> ( z e. C -> ( E. y ( z = B /\ ps ) -> A. x ( ( A e. C /\ ph ) -> z = A ) ) ) ) ;
	step 37 : wff = thm r19_22dv (step 36) |- ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> ( E. z e. C E. y ( z = B /\ ps ) -> E. z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 38 : wff = thm eleq1d (hyp 2) |- ( x = y -> ( A e. C <-> B e. C ) ) ;
	step 39 : wff = thm anbi12d (step 38, hyp 1) |- ( x = y -> ( ( A e. C /\ ph ) <-> ( B e. C /\ ps ) ) ) ;
	step 40 : wff = thm cbvexv (step 39) |- ( E. x ( A e. C /\ ph ) <-> E. y ( B e. C /\ ps ) ) ;
	step 41 : wff = thm risset () |- ( B e. C <-> E. z e. C z = B ) ;
	step 42 : wff = thm anbi1i (step 41) |- ( ( B e. C /\ ps ) <-> ( E. z e. C z = B /\ ps ) ) ;
	step 43 : wff = thm exbii (step 42) |- ( E. y ( B e. C /\ ps ) <-> E. y ( E. z e. C z = B /\ ps ) ) ;
	step 44 : wff = thm rexcom4 () |- ( E. z e. C E. y ( z = B /\ ps ) <-> E. y E. z e. C ( z = B /\ ps ) ) ;
	step 45 : wff = thm r19_41v () |- ( E. z e. C ( z = B /\ ps ) <-> ( E. z e. C z = B /\ ps ) ) ;
	step 46 : wff = thm exbii (step 45) |- ( E. y E. z e. C ( z = B /\ ps ) <-> E. y ( E. z e. C z = B /\ ps ) ) ;
	step 47 : wff = thm bitr2i (step 44, step 46) |- ( E. y ( E. z e. C z = B /\ ps ) <-> E. z e. C E. y ( z = B /\ ps ) ) ;
	step 48 : wff = thm 3bitri (step 40, step 43, step 47) |- ( E. x ( A e. C /\ ph ) <-> E. z e. C E. y ( z = B /\ ps ) ) ;
	step 49 : wff = thm syl5ib (step 37, step 48) |- ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) -> ( E. x ( A e. C /\ ph ) -> E. z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) ) ;
	step 50 : wff = thm imp (step 49) |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) /\ E. x ( A e. C /\ ph ) ) -> E. z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) ;
	step 51 : wff = thm 19_23v () |- ( A. x ( ( A e. C /\ ph ) -> z = w ) <-> ( E. x ( A e. C /\ ph ) -> z = w ) ) ;
	step 52 : wff = thm biimpi (step 51) |- ( A. x ( ( A e. C /\ ph ) -> z = w ) -> ( E. x ( A e. C /\ ph ) -> z = w ) ) ;
	step 53 : wff = thm com12 (step 52) |- ( E. x ( A e. C /\ ph ) -> ( A. x ( ( A e. C /\ ph ) -> z = w ) -> z = w ) ) ;
	step 54 : wff = thm 19_26 () |- ( A. x ( ( ( A e. C /\ ph ) -> z = A ) /\ ( ( A e. C /\ ph ) -> w = A ) ) <-> ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) ) ;
	step 55 : wff = thm prth () |- ( ( ( ( A e. C /\ ph ) -> z = A ) /\ ( ( A e. C /\ ph ) -> w = A ) ) -> ( ( ( A e. C /\ ph ) /\ ( A e. C /\ ph ) ) -> ( z = A /\ w = A ) ) ) ;
	step 56 : wff = thm pm4_24 () |- ( ( A e. C /\ ph ) <-> ( ( A e. C /\ ph ) /\ ( A e. C /\ ph ) ) ) ;
	step 57 : wff = thm biimpi (step 56) |- ( ( A e. C /\ ph ) -> ( ( A e. C /\ ph ) /\ ( A e. C /\ ph ) ) ) ;
	step 58 : wff = thm eqtr3 () |- ( ( z = A /\ w = A ) -> z = w ) ;
	step 59 : wff = thm imim12i (step 57, step 58) |- ( ( ( ( A e. C /\ ph ) /\ ( A e. C /\ ph ) ) -> ( z = A /\ w = A ) ) -> ( ( A e. C /\ ph ) -> z = w ) ) ;
	step 60 : wff = thm syl (step 55, step 59) |- ( ( ( ( A e. C /\ ph ) -> z = A ) /\ ( ( A e. C /\ ph ) -> w = A ) ) -> ( ( A e. C /\ ph ) -> z = w ) ) ;
	step 61 : wff = thm 19_20i (step 60) |- ( A. x ( ( ( A e. C /\ ph ) -> z = A ) /\ ( ( A e. C /\ ph ) -> w = A ) ) -> A. x ( ( A e. C /\ ph ) -> z = w ) ) ;
	step 62 : wff = thm sylbir (step 54, step 61) |- ( ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) -> A. x ( ( A e. C /\ ph ) -> z = w ) ) ;
	step 63 : wff = thm syl5 (step 53, step 62) |- ( E. x ( A e. C /\ ph ) -> ( ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) -> z = w ) ) ;
	step 64 : wff = thm a1d (step 63) |- ( E. x ( A e. C /\ ph ) -> ( ( z e. C /\ w e. C ) -> ( ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) -> z = w ) ) ) ;
	step 65 : wff = thm r19_21aivv (step 64) |- ( E. x ( A e. C /\ ph ) -> A. z e. C A. w e. C ( ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) -> z = w ) ) ;
	step 66 : wff = thm adantl (step 65) |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) /\ E. x ( A e. C /\ ph ) ) -> A. z e. C A. w e. C ( ( A. x ( ( A e. C /\ ph ) -> z = A ) /\ A. x ( ( A e. C /\ ph ) -> w = A ) ) -> z = w ) ) ;
	step 67 : wff = thm sylanbrc (step 4, step 50, step 66) |- ( ( A. x A. y ( ( ( A e. C /\ ph ) /\ ( B e. C /\ ps ) ) -> A = B ) /\ E. x ( A e. C /\ ph ) ) -> E! z e. C A. x ( ( A e. C /\ ph ) -> z = A ) ) ;
	qed prop 1 = step 67 ;
}

theorem ru (x : set)  {
	prop 1 : wff = |- { x | x e/ x } e/ _V ;
}

proof of ru {
	var y : set;
	step 1 : wff = thm pm5_19 () |- -. ( y e. y <-> -. y e. y ) ;
	step 2 : wff = thm eleq1 () |- ( x = y -> ( x e. y <-> y e. y ) ) ;
	step 3 : wff = thm id () |- ( x = y -> x = y ) ;
	step 4 : wff = thm id () |- ( x = y -> x = y ) ;
	step 5 : wff = thm eleq12d (step 3, step 4) |- ( x = y -> ( x e. x <-> y e. y ) ) ;
	step 6 : wff = thm notbid (step 5) |- ( x = y -> ( -. x e. x <-> -. y e. y ) ) ;
	step 7 : wff = def df-nel () |- ( x e/ x <-> -. x e. x ) ;
	step 8 : wff = thm syl5bb (step 6, step 7) |- ( x = y -> ( x e/ x <-> -. y e. y ) ) ;
	step 9 : wff = thm bibi12d (step 2, step 8) |- ( x = y -> ( ( x e. y <-> x e/ x ) <-> ( y e. y <-> -. y e. y ) ) ) ;
	step 10 : wff = thm a4v (step 9) |- ( A. x ( x e. y <-> x e/ x ) -> ( y e. y <-> -. y e. y ) ) ;
	step 11 : wff = thm mto (step 1, step 10) |- -. A. x ( x e. y <-> x e/ x ) ;
	step 12 : wff = thm abeq2 () |- ( y = { x | x e/ x } <-> A. x ( x e. y <-> x e/ x ) ) ;
	step 13 : wff = thm mtbir (step 11, step 12) |- -. y = { x | x e/ x } ;
	step 14 : wff = thm nex (step 13) |- -. E. y y = { x | x e/ x } ;
	step 15 : wff = thm isset () |- ( { x | x e/ x } e. _V <-> E. y y = { x | x e/ x } ) ;
	step 16 : wff = thm mtbir (step 14, step 15) |- -. { x | x e/ x } e. _V ;
	step 17 : wff = def df-nel () |- ( { x | x e/ x } e/ _V <-> -. { x | x e/ x } e. _V ) ;
	step 18 : wff = thm mpbir (step 16, step 17) |- { x | x e/ x } e/ _V ;
	qed prop 1 = step 18 ;
}

theorem sbhypf (ph : wff, ps : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( ps -> A. x ps ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( y = A -> ( [ y / x ] ph <-> ps ) ) ;
}

proof of sbhypf {
	step 1 : wff = thm visset () |- y e. _V ;
	step 2 : wff = thm eqeq1 () |- ( x = y -> ( x = A <-> y = A ) ) ;
	step 3 : wff = thm ceqsexv (step 1, step 2) |- ( E. x ( x = y /\ x = A ) <-> y = A ) ;
	step 4 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 5 : wff = thm hbbi (step 4, hyp 1) |- ( ( [ y / x ] ph <-> ps ) -> A. x ( [ y / x ] ph <-> ps ) ) ;
	step 6 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 7 : wff = thm bicomd (step 6) |- ( x = y -> ( [ y / x ] ph <-> ph ) ) ;
	step 8 : wff = thm sylan9bb (step 7, hyp 2) |- ( ( x = y /\ x = A ) -> ( [ y / x ] ph <-> ps ) ) ;
	step 9 : wff = thm 19_23ai (step 5, step 8) |- ( E. x ( x = y /\ x = A ) -> ( [ y / x ] ph <-> ps ) ) ;
	step 10 : wff = thm sylbir (step 3, step 9) |- ( y = A -> ( [ y / x ] ph <-> ps ) ) ;
	qed prop 1 = step 10 ;
}

theorem sbralie (ph : wff, ps : wff, x : set, y : set)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) ;
}

proof of sbralie {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 2 : wff = thm hbs1 () |- ( [ z / x ] ph -> A. x [ z / x ] ph ) ;
	step 3 : wff = thm sbequ12 () |- ( x = z -> ( ph <-> [ z / x ] ph ) ) ;
	step 4 : wff = thm cbvral (step 1, step 2, step 3) |- ( A. x e. y ph <-> A. z e. y [ z / x ] ph ) ;
	step 5 : wff = thm sbbii (step 4) |- ( [ x / y ] A. x e. y ph <-> [ x / y ] A. z e. y [ z / x ] ph ) ;
	step 6 : wff = axm ax-17 () |- ( A. z e. x [ z / x ] ph -> A. y A. z e. x [ z / x ] ph ) ;
	step 7 : wff = thm raleq1 () |- ( y = x -> ( A. z e. y [ z / x ] ph <-> A. z e. x [ z / x ] ph ) ) ;
	step 8 : wff = thm sbie (step 6, step 7) |- ( [ x / y ] A. z e. y [ z / x ] ph <-> A. z e. x [ z / x ] ph ) ;
	step 9 : wff = thm bitri (step 5, step 8) |- ( [ x / y ] A. x e. y ph <-> A. z e. x [ z / x ] ph ) ;
	step 10 : wff = axm ax-17 () |- ( [ z / x ] ph -> A. y [ z / x ] ph ) ;
	step 11 : wff = thm hbs1 () |- ( [ y / z ] [ z / x ] ph -> A. z [ y / z ] [ z / x ] ph ) ;
	step 12 : wff = thm sbequ12 () |- ( z = y -> ( [ z / x ] ph <-> [ y / z ] [ z / x ] ph ) ) ;
	step 13 : wff = thm cbvral (step 10, step 11, step 12) |- ( A. z e. x [ z / x ] ph <-> A. y e. x [ y / z ] [ z / x ] ph ) ;
	step 14 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 15 : wff = thm sbco2 (step 14) |- ( [ y / z ] [ z / x ] ph <-> [ y / x ] ph ) ;
	step 16 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 17 : wff = thm sbie (step 16, hyp 1) |- ( [ y / x ] ph <-> ps ) ;
	step 18 : wff = thm bitri (step 15, step 17) |- ( [ y / z ] [ z / x ] ph <-> ps ) ;
	step 19 : wff = thm ralbii (step 18) |- ( A. y e. x [ y / z ] [ z / x ] ph <-> A. y e. x ps ) ;
	step 20 : wff = thm 3bitri (step 9, step 13, step 19) |- ( [ x / y ] A. x e. y ph <-> A. y e. x ps ) ;
	qed prop 1 = step 20 ;
}

definition df-sbc (ph : wff, x : set, A : class)  {
	defiendum : wff = # [ A / x ] ph ;
	definiens : wff = # A e. { x | ph } ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem dfsbcq (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) ;
}

proof of dfsbcq {
	step 1 : wff = thm eleq1 () |- ( A = B -> ( A e. { x | ph } <-> B e. { x | ph } ) ) ;
	step 2 : wff = def df-sbc () |- ( [ A / x ] ph <-> A e. { x | ph } ) ;
	step 3 : wff = def df-sbc () |- ( [ B / x ] ph <-> B e. { x | ph } ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( A = B -> ( [ A / x ] ph <-> [ B / x ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbceq1a (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( x = A -> ( ph <-> [ A / x ] ph ) ) ;
}

proof of sbceq1a {
	step 1 : wff = thm dfsbcq () |- ( x = A -> ( [ x / x ] ph <-> [ A / x ] ph ) ) ;
	step 2 : wff = thm sbid () |- ( [ x / x ] ph <-> ph ) ;
	step 3 : wff = thm syl5bbr (step 1, step 2) |- ( x = A -> ( ph <-> [ A / x ] ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem a4sbc (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( A. x ph -> [ A / x ] ph ) ) ;
}

proof of a4sbc {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 2 : wff = thm stdpc4 () |- ( A. x ph -> [ y / x ] ph ) ;
	step 3 : wff = thm syl5bi (step 1, step 2) |- ( y = A -> ( A. x ph -> [ A / x ] ph ) ) ;
	step 4 : wff = thm vtocleg (step 3) |- ( A e. B -> ( A. x ph -> [ A / x ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbcth (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ph ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> [ A / x ] ph ) ;
}

proof of sbcth {
	step 1 : wff = axm ax-gen (hyp 1) |- A. x ph ;
	step 2 : wff = thm a4sbc () |- ( A e. B -> ( A. x ph -> [ A / x ] ph ) ) ;
	step 3 : wff = thm mpi (step 1, step 2) |- ( A e. B -> [ A / x ] ph ) ;
	qed prop 1 = step 3 ;
}

theorem sbcthdv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> [ A / x ] ps ) ;
}

proof of sbcthdv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ps ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( ph /\ A e. B ) -> A. x ps ) ;
	step 3 : wff = thm a4sbc () |- ( A e. B -> ( A. x ps -> [ A / x ] ps ) ) ;
	step 4 : wff = thm adantl (step 3) |- ( ( ph /\ A e. B ) -> ( A. x ps -> [ A / x ] ps ) ) ;
	step 5 : wff = thm mpd (step 2, step 4) |- ( ( ph /\ A e. B ) -> [ A / x ] ps ) ;
	qed prop 1 = step 5 ;
}

theorem hbsbc1g (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) ;
}

proof of hbsbc1g {
	var z : set;
	step 1 : wff = thm dfsbcq () |- ( z = A -> ( [ z / x ] ph <-> [ A / x ] ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 3 : wff = thm hbeq (step 2, hyp 1) |- ( z = A -> A. x z = A ) ;
	step 4 : wff = thm dfsbcq () |- ( z = A -> ( [ z / x ] ph <-> [ A / x ] ph ) ) ;
	step 5 : wff = thm albid (step 3, step 4) |- ( z = A -> ( A. x [ z / x ] ph <-> A. x [ A / x ] ph ) ) ;
	step 6 : wff = thm hbs1 () |- ( [ z / x ] ph -> A. x [ z / x ] ph ) ;
	step 7 : wff = thm syl5bi (step 5, step 6) |- ( z = A -> ( [ z / x ] ph -> A. x [ A / x ] ph ) ) ;
	step 8 : wff = thm sylbird (step 1, step 7) |- ( z = A -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) ;
	step 9 : wff = thm vtocleg (step 8) |- ( A e. B -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem hbsbc1 (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. B -> [ A / x ] ph ) -> A. x ( A e. B -> [ A / x ] ph ) ) ;
}

proof of hbsbc1 {
	step 1 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 2 : wff = thm hbel (hyp 1, step 1) |- ( A e. B -> A. x A e. B ) ;
	step 3 : wff = thm hbsbc1g (hyp 1) |- ( A e. B -> ( [ A / x ] ph -> A. x [ A / x ] ph ) ) ;
	step 4 : wff = thm hbim1 (step 2, step 3) |- ( ( A e. B -> [ A / x ] ph ) -> A. x ( A e. B -> [ A / x ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem hbsbc1v (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( [ A / x ] ph -> A. x [ A / x ] ph ) ;
}

proof of hbsbc1v {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = thm hbsbc1 (step 1) |- ( ( A e. _V -> [ A / x ] ph ) -> A. x ( A e. _V -> [ A / x ] ph ) ) ;
	step 3 : wff = thm a1bi (hyp 1) |- ( [ A / x ] ph <-> ( A e. _V -> [ A / x ] ph ) ) ;
	step 4 : wff = thm a1bi (hyp 1) |- ( [ A / x ] ph <-> ( A e. _V -> [ A / x ] ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x [ A / x ] ph <-> A. x ( A e. _V -> [ A / x ] ph ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( [ A / x ] ph -> A. x [ A / x ] ph ) ;
	qed prop 1 = step 6 ;
}

theorem hbsbcg (ph : wff, x : set, y : set, z : set, A : class, B : class)  {
	hyp 1 : wff = |- ( z e. A -> A. x z e. A ) ;
	hyp 2 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) ;
}

proof of hbsbcg {
	var w : set;
	step 1 : wff = thm dfsbcq () |- ( w = A -> ( [ w / y ] ph <-> [ A / y ] ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( z e. w -> A. x z e. w ) ;
	step 3 : wff = thm hbeq (step 2, hyp 1) |- ( w = A -> A. x w = A ) ;
	step 4 : wff = thm dfsbcq () |- ( w = A -> ( [ w / y ] ph <-> [ A / y ] ph ) ) ;
	step 5 : wff = thm albid (step 3, step 4) |- ( w = A -> ( A. x [ w / y ] ph <-> A. x [ A / y ] ph ) ) ;
	step 6 : wff = thm imbi12d (step 1, step 5) |- ( w = A -> ( ( [ w / y ] ph -> A. x [ w / y ] ph ) <-> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) ) ;
	step 7 : wff = thm hbsb (hyp 2) |- ( [ w / y ] ph -> A. x [ w / y ] ph ) ;
	step 8 : wff = thm vtoclg (step 6, step 7) |- ( A e. B -> ( [ A / y ] ph -> A. x [ A / y ] ph ) ) ;
	qed prop 1 = step 8 ;
}

theorem sbccog (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) ;
}

proof of sbccog {
	var z : set;
	step 1 : wff = thm dfsbcq () |- ( z = A -> ( [ z / y ] [ y / x ] ph <-> [ A / y ] [ y / x ] ph ) ) ;
	step 2 : wff = thm dfsbcq () |- ( z = A -> ( [ z / x ] ph <-> [ A / x ] ph ) ) ;
	step 3 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 4 : wff = thm sbco2 (step 3) |- ( [ z / y ] [ y / x ] ph <-> [ z / x ] ph ) ;
	step 5 : wff = thm vtoclbg (step 1, step 2, step 4) |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcco2 (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = y -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) ;
}

proof of sbcco2 {
	step 1 : wff = axm ax-17 () |- ( [ A / x ] ph -> A. y [ A / x ] ph ) ;
	step 2 : wff = thm eqcom () |- ( y = x <-> x = y ) ;
	step 3 : wff = thm eqcom () |- ( B = A <-> A = B ) ;
	step 4 : wff = thm 3imtr4i (hyp 1, step 2, step 3) |- ( y = x -> B = A ) ;
	step 5 : wff = thm dfsbcq () |- ( B = A -> ( [ B / x ] ph <-> [ A / x ] ph ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( y = x -> ( [ B / x ] ph <-> [ A / x ] ph ) ) ;
	step 7 : wff = thm sbie (step 1, step 6) |- ( [ x / y ] [ B / x ] ph <-> [ A / x ] ph ) ;
	qed prop 1 = step 7 ;
}

theorem sbc5g (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
}

proof of sbc5g {
	var y : set;
	step 1 : wff = thm biimt () |- ( A e. _V -> ( ph <-> ( A e. _V -> ph ) ) ) ;
	step 2 : wff = thm anbi2d (step 1) |- ( A e. _V -> ( ( x = A /\ ph ) <-> ( x = A /\ ( A e. _V -> ph ) ) ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( A e. _V -> ( E. x ( x = A /\ ph ) <-> E. x ( x = A /\ ( A e. _V -> ph ) ) ) ) ;
	step 4 : wff = thm biimt () |- ( A e. _V -> ( E. x ( x = A /\ ph ) <-> ( A e. _V -> E. x ( x = A /\ ph ) ) ) ) ;
	step 5 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 6 : wff = thm hbsbc1 (step 5) |- ( ( A e. _V -> [ A / x ] ph ) -> A. x ( A e. _V -> [ A / x ] ph ) ) ;
	step 7 : wff = thm sbceq1a () |- ( x = A -> ( ph <-> [ A / x ] ph ) ) ;
	step 8 : wff = thm imbi2d (step 7) |- ( x = A -> ( ( A e. _V -> ph ) <-> ( A e. _V -> [ A / x ] ph ) ) ) ;
	step 9 : wff = thm ceqsexg (step 6, step 8) |- ( A e. _V -> ( E. x ( x = A /\ ( A e. _V -> ph ) ) <-> ( A e. _V -> [ A / x ] ph ) ) ) ;
	step 10 : wff = thm 3bitr3rd (step 3, step 4, step 9) |- ( A e. _V -> ( ( A e. _V -> [ A / x ] ph ) <-> ( A e. _V -> E. x ( x = A /\ ph ) ) ) ) ;
	step 11 : wff = thm pm5_74rd (step 10) |- ( A e. _V -> ( A e. _V -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ) ;
	step 12 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 13 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 14 : wff = thm sylc (step 11, step 12, step 13) |- ( A e. B -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem sbc6g (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
}

proof of sbc6g {
	var y : set;
	step 1 : wff = thm biimt () |- ( A e. _V -> ( ph <-> ( A e. _V -> ph ) ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( A e. _V -> ( ( x = A -> ph ) <-> ( x = A -> ( A e. _V -> ph ) ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( A e. _V -> ( A. x ( x = A -> ph ) <-> A. x ( x = A -> ( A e. _V -> ph ) ) ) ) ;
	step 4 : wff = thm biimt () |- ( A e. _V -> ( A. x ( x = A -> ph ) <-> ( A e. _V -> A. x ( x = A -> ph ) ) ) ) ;
	step 5 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 6 : wff = thm hbsbc1 (step 5) |- ( ( A e. _V -> [ A / x ] ph ) -> A. x ( A e. _V -> [ A / x ] ph ) ) ;
	step 7 : wff = thm sbceq1a () |- ( x = A -> ( ph <-> [ A / x ] ph ) ) ;
	step 8 : wff = thm imbi2d (step 7) |- ( x = A -> ( ( A e. _V -> ph ) <-> ( A e. _V -> [ A / x ] ph ) ) ) ;
	step 9 : wff = thm ceqsalg (step 6, step 8) |- ( A e. _V -> ( A. x ( x = A -> ( A e. _V -> ph ) ) <-> ( A e. _V -> [ A / x ] ph ) ) ) ;
	step 10 : wff = thm 3bitr3rd (step 3, step 4, step 9) |- ( A e. _V -> ( ( A e. _V -> [ A / x ] ph ) <-> ( A e. _V -> A. x ( x = A -> ph ) ) ) ) ;
	step 11 : wff = thm pm5_74rd (step 10) |- ( A e. _V -> ( A e. _V -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ) ;
	step 12 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 13 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 14 : wff = thm sylc (step 11, step 12, step 13) |- ( A e. B -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	qed prop 1 = step 14 ;
}

theorem sbc5 (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ;
}

proof of sbc5 {
	step 1 : wff = thm sbc5g () |- ( A e. _V -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem sbc6 (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ;
}

proof of sbc6 {
	step 1 : wff = thm sbc6g () |- ( A e. _V -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ;
	qed prop 1 = step 2 ;
}

theorem sbc7g (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> E. y ( y = A /\ [ y / x ] ph ) ) ) ;
}

proof of sbc7g {
	step 1 : wff = thm sbccog () |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 2 : wff = thm sbc5g () |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> E. y ( y = A /\ [ y / x ] ph ) ) ) ;
	step 3 : wff = thm bitr3d (step 1, step 2) |- ( A e. B -> ( [ A / x ] ph <-> E. y ( y = A /\ [ y / x ] ph ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem sbc8g (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> A e. { x | ph } ) ) ;
}

proof of sbc8g {
	var y : set;
	step 1 : wff = thm sbc7g () |- ( A e. B -> ( [ A / x ] ph <-> E. y ( y = A /\ [ y / x ] ph ) ) ) ;
	step 2 : wff = def df-clab () |- ( y e. { x | ph } <-> [ y / x ] ph ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( y = A /\ y e. { x | ph } ) <-> ( y = A /\ [ y / x ] ph ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. y ( y = A /\ y e. { x | ph } ) <-> E. y ( y = A /\ [ y / x ] ph ) ) ;
	step 5 : wff = thm a1i (step 4) |- ( A e. B -> ( E. y ( y = A /\ y e. { x | ph } ) <-> E. y ( y = A /\ [ y / x ] ph ) ) ) ;
	step 6 : wff = def df-clel () |- ( A e. { x | ph } <-> E. y ( y = A /\ y e. { x | ph } ) ) ;
	step 7 : wff = thm syl5rbb (step 5, step 6) |- ( A e. B -> ( E. y ( y = A /\ [ y / x ] ph ) <-> A e. { x | ph } ) ) ;
	step 8 : wff = thm bitrd (step 1, step 7) |- ( A e. B -> ( [ A / x ] ph <-> A e. { x | ph } ) ) ;
	qed prop 1 = step 8 ;
}

theorem cbvsbcv (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = y -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> [ A / y ] ps ) ) ;
}

proof of cbvsbcv {
	step 1 : wff = thm eqeq1 () |- ( x = y -> ( x = A <-> y = A ) ) ;
	step 2 : wff = thm anbi12d (step 1, hyp 1) |- ( x = y -> ( ( x = A /\ ph ) <-> ( y = A /\ ps ) ) ) ;
	step 3 : wff = thm cbvexv (step 2) |- ( E. x ( x = A /\ ph ) <-> E. y ( y = A /\ ps ) ) ;
	step 4 : wff = thm a1i (step 3) |- ( A e. B -> ( E. x ( x = A /\ ph ) <-> E. y ( y = A /\ ps ) ) ) ;
	step 5 : wff = thm sbc5g () |- ( A e. B -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 6 : wff = thm sbc5g () |- ( A e. B -> ( [ A / y ] ps <-> E. y ( y = A /\ ps ) ) ) ;
	step 7 : wff = thm 3bitr4d (step 4, step 5, step 6) |- ( A e. B -> ( [ A / x ] ph <-> [ A / y ] ps ) ) ;
	qed prop 1 = step 7 ;
}

theorem sbc2or (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
}

proof of sbc2or {
	step 1 : wff = thm sbc5g () |- ( A e. _V -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 2 : wff = thm orcd (step 1) |- ( A e. _V -> ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ) ;
	step 3 : wff = thm pm5_15 () |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> -. E. x ( x = A /\ ph ) ) ) ;
	step 4 : wff = thm pm5_1 () |- ( ( -. E. x ( x = A /\ ph ) /\ A. x ( x = A -> ph ) ) -> ( -. E. x ( x = A /\ ph ) <-> A. x ( x = A -> ph ) ) ) ;
	step 5 : wff = thm visset () |- x e. _V ;
	step 6 : wff = thm eleq1 () |- ( x = A -> ( x e. _V <-> A e. _V ) ) ;
	step 7 : wff = thm mpbii (step 5, step 6) |- ( x = A -> A e. _V ) ;
	step 8 : wff = thm adantr (step 7) |- ( ( x = A /\ ph ) -> A e. _V ) ;
	step 9 : wff = thm con3i (step 8) |- ( -. A e. _V -> -. ( x = A /\ ph ) ) ;
	step 10 : wff = thm nexdv (step 9) |- ( -. A e. _V -> -. E. x ( x = A /\ ph ) ) ;
	step 11 : wff = thm visset () |- x e. _V ;
	step 12 : wff = thm eleq1 () |- ( x = A -> ( x e. _V <-> A e. _V ) ) ;
	step 13 : wff = thm mpbii (step 11, step 12) |- ( x = A -> A e. _V ) ;
	step 14 : wff = thm con3i (step 13) |- ( -. A e. _V -> -. x = A ) ;
	step 15 : wff = thm pm2_21d (step 14) |- ( -. A e. _V -> ( x = A -> ph ) ) ;
	step 16 : wff = thm 19_21aiv (step 15) |- ( -. A e. _V -> A. x ( x = A -> ph ) ) ;
	step 17 : wff = thm sylanc (step 4, step 10, step 16) |- ( -. A e. _V -> ( -. E. x ( x = A /\ ph ) <-> A. x ( x = A -> ph ) ) ) ;
	step 18 : wff = thm bibi2d (step 17) |- ( -. A e. _V -> ( ( [ A / x ] ph <-> -. E. x ( x = A /\ ph ) ) <-> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ) ;
	step 19 : wff = thm orbi2d (step 18) |- ( -. A e. _V -> ( ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> -. E. x ( x = A /\ ph ) ) ) <-> ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ) ) ;
	step 20 : wff = thm mpbii (step 3, step 19) |- ( -. A e. _V -> ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ) ;
	step 21 : wff = thm pm2_61i (step 2, step 20) |- ( ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) \/ ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	qed prop 1 = step 21 ;
}

theorem sbciegft (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) ;
}

proof of sbciegft {
	step 1 : wff = thm sbc5g () |- ( A e. B -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 2 : wff = thm 3ad2ant1 (step 1) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 3 : wff = thm 19_23t () |- ( A. x ( ps -> A. x ps ) -> ( A. x ( ( x = A /\ ph ) -> ps ) <-> ( E. x ( x = A /\ ph ) -> ps ) ) ) ;
	step 4 : wff = thm biimpa (step 3) |- ( ( A. x ( ps -> A. x ps ) /\ A. x ( ( x = A /\ ph ) -> ps ) ) -> ( E. x ( x = A /\ ph ) -> ps ) ) ;
	step 5 : wff = thm bi1 () |- ( ( ph <-> ps ) -> ( ph -> ps ) ) ;
	step 6 : wff = thm imim2i (step 5) |- ( ( x = A -> ( ph <-> ps ) ) -> ( x = A -> ( ph -> ps ) ) ) ;
	step 7 : wff = thm imp3a (step 6) |- ( ( x = A -> ( ph <-> ps ) ) -> ( ( x = A /\ ph ) -> ps ) ) ;
	step 8 : wff = thm 19_20i (step 7) |- ( A. x ( x = A -> ( ph <-> ps ) ) -> A. x ( ( x = A /\ ph ) -> ps ) ) ;
	step 9 : wff = thm sylan2 (step 4, step 8) |- ( ( A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( E. x ( x = A /\ ph ) -> ps ) ) ;
	step 10 : wff = thm 3adant1 (step 9) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( E. x ( x = A /\ ph ) -> ps ) ) ;
	step 11 : wff = thm sylbid (step 2, step 10) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph -> ps ) ) ;
	step 12 : wff = thm 19_21t () |- ( A. x ( ps -> A. x ps ) -> ( A. x ( ps -> ( x = A -> ph ) ) <-> ( ps -> A. x ( x = A -> ph ) ) ) ) ;
	step 13 : wff = thm biimpa (step 12) |- ( ( A. x ( ps -> A. x ps ) /\ A. x ( ps -> ( x = A -> ph ) ) ) -> ( ps -> A. x ( x = A -> ph ) ) ) ;
	step 14 : wff = thm bi2 () |- ( ( ph <-> ps ) -> ( ps -> ph ) ) ;
	step 15 : wff = thm imim2i (step 14) |- ( ( x = A -> ( ph <-> ps ) ) -> ( x = A -> ( ps -> ph ) ) ) ;
	step 16 : wff = thm com23 (step 15) |- ( ( x = A -> ( ph <-> ps ) ) -> ( ps -> ( x = A -> ph ) ) ) ;
	step 17 : wff = thm 19_20i (step 16) |- ( A. x ( x = A -> ( ph <-> ps ) ) -> A. x ( ps -> ( x = A -> ph ) ) ) ;
	step 18 : wff = thm sylan2 (step 13, step 17) |- ( ( A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( ps -> A. x ( x = A -> ph ) ) ) ;
	step 19 : wff = thm 3adant1 (step 18) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( ps -> A. x ( x = A -> ph ) ) ) ;
	step 20 : wff = thm sbc6g () |- ( A e. B -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	step 21 : wff = thm 3ad2ant1 (step 20) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	step 22 : wff = thm sylibrd (step 19, step 21) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( ps -> [ A / x ] ph ) ) ;
	step 23 : wff = thm impbid (step 11, step 22) |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) ;
	qed prop 1 = step 23 ;
}

theorem sbciegf (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( A e. B -> ( ps -> A. x ps ) ) ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> ps ) ) ;
}

proof of sbciegf {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( A e. B -> A. x ( ps -> A. x ps ) ) ;
	step 2 : wff = axm ax-gen (hyp 2) |- A. x ( x = A -> ( ph <-> ps ) ) ;
	step 3 : wff = thm sbciegft () |- ( ( A e. B /\ A. x ( ps -> A. x ps ) /\ A. x ( x = A -> ( ph <-> ps ) ) ) -> ( [ A / x ] ph <-> ps ) ) ;
	step 4 : wff = thm 3exp (step 3) |- ( A e. B -> ( A. x ( ps -> A. x ps ) -> ( A. x ( x = A -> ( ph <-> ps ) ) -> ( [ A / x ] ph <-> ps ) ) ) ) ;
	step 5 : wff = thm mpii (step 2, step 4) |- ( A e. B -> ( A. x ( ps -> A. x ps ) -> ( [ A / x ] ph <-> ps ) ) ) ;
	step 6 : wff = thm mpd (step 1, step 5) |- ( A e. B -> ( [ A / x ] ph <-> ps ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcieg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> ps ) ) ;
}

proof of sbcieg {
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = axm ax-17 () |- ( ps -> A. x ps ) ;
	step 3 : wff = thm a1i (step 2) |- ( A e. _V -> ( ps -> A. x ps ) ) ;
	step 4 : wff = thm sbciegf (step 3, hyp 1) |- ( A e. _V -> ( [ A / x ] ph <-> ps ) ) ;
	step 5 : wff = thm syl (step 1, step 4) |- ( A e. B -> ( [ A / x ] ph <-> ps ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcie (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( [ A / x ] ph <-> ps ) ;
}

proof of sbcie {
	step 1 : wff = thm sbcieg (hyp 2) |- ( A e. _V -> ( [ A / x ] ph <-> ps ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( [ A / x ] ph <-> ps ) ;
	qed prop 1 = step 2 ;
}

theorem elrabsf (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) ;
}

proof of elrabsf {
	var z : set, w : set;
	step 1 : wff = axm ax-17 () |- ( y e. B -> A. z y e. B ) ;
	step 2 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 3 : wff = thm hbs1 () |- ( [ z / x ] ph -> A. x [ z / x ] ph ) ;
	step 4 : wff = thm sbequ12 () |- ( x = z -> ( ph <-> [ z / x ] ph ) ) ;
	step 5 : wff = thm cbvrab (hyp 1, step 1, step 2, step 3, step 4) |- { x e. B | ph } = { z e. B | [ z / x ] ph } ;
	step 6 : wff = thm eleq2i (step 5) |- ( A e. { x e. B | ph } <-> A e. { z e. B | [ z / x ] ph } ) ;
	step 7 : wff = axm ax-17 () |- ( w e. A -> A. z w e. A ) ;
	step 8 : wff = axm ax-17 () |- ( w e. B -> A. z w e. B ) ;
	step 9 : wff = axm ax-17 () |- ( w e. A -> A. z w e. A ) ;
	step 10 : wff = thm hbsbc1 (step 9) |- ( ( A e. _V -> [ A / z ] [ z / x ] ph ) -> A. z ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ;
	step 11 : wff = thm sbceq1a () |- ( z = A -> ( [ z / x ] ph <-> [ A / z ] [ z / x ] ph ) ) ;
	step 12 : wff = thm 19_8a () |- ( z = A -> E. z z = A ) ;
	step 13 : wff = thm isset () |- ( A e. _V <-> E. z z = A ) ;
	step 14 : wff = thm sylibr (step 12, step 13) |- ( z = A -> A e. _V ) ;
	step 15 : wff = thm biimt () |- ( A e. _V -> ( [ A / z ] [ z / x ] ph <-> ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 16 : wff = thm syl (step 14, step 15) |- ( z = A -> ( [ A / z ] [ z / x ] ph <-> ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 17 : wff = thm bitrd (step 11, step 16) |- ( z = A -> ( [ z / x ] ph <-> ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 18 : wff = thm elrabf (step 7, step 8, step 10, step 17) |- ( A e. { z e. B | [ z / x ] ph } <-> ( A e. B /\ ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 19 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 20 : wff = thm biimt () |- ( A e. _V -> ( [ A / z ] [ z / x ] ph <-> ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 21 : wff = thm syl (step 19, step 20) |- ( A e. B -> ( [ A / z ] [ z / x ] ph <-> ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 22 : wff = thm pm5_32i (step 21) |- ( ( A e. B /\ [ A / z ] [ z / x ] ph ) <-> ( A e. B /\ ( A e. _V -> [ A / z ] [ z / x ] ph ) ) ) ;
	step 23 : wff = thm bitr4i (step 18, step 22) |- ( A e. { z e. B | [ z / x ] ph } <-> ( A e. B /\ [ A / z ] [ z / x ] ph ) ) ;
	step 24 : wff = thm sbccog () |- ( A e. B -> ( [ A / z ] [ z / x ] ph <-> [ A / x ] ph ) ) ;
	step 25 : wff = thm pm5_32i (step 24) |- ( ( A e. B /\ [ A / z ] [ z / x ] ph ) <-> ( A e. B /\ [ A / x ] ph ) ) ;
	step 26 : wff = thm 3bitri (step 6, step 23, step 25) |- ( A e. { x e. B | ph } <-> ( A e. B /\ [ A / x ] ph ) ) ;
	qed prop 1 = step 26 ;
}

theorem elabs2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) ;
}

proof of elabs2 {
	var y : set;
	step 1 : wff = thm rabab () |- { x e. _V | ph } = { x | ph } ;
	step 2 : wff = thm eleq2i (step 1) |- ( A e. { x e. _V | ph } <-> A e. { x | ph } ) ;
	step 3 : wff = axm ax-17 () |- ( y e. _V -> A. x y e. _V ) ;
	step 4 : wff = thm elrabsf (step 3) |- ( A e. { x e. _V | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) ;
	step 5 : wff = thm bitr3i (step 2, step 4) |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem elabsg (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( A e. { x | ph } <-> [ A / x ] ph ) ) ;
}

proof of elabsg {
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = thm elabs2 () |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) ;
	step 3 : wff = thm baib (step 2) |- ( A e. _V -> ( A e. { x | ph } <-> [ A / x ] ph ) ) ;
	step 4 : wff = thm syl (step 1, step 3) |- ( A e. B -> ( A e. { x | ph } <-> [ A / x ] ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem elabs (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. { x | ph } <-> [ A / x ] ph ) ;
}

proof of elabs {
	step 1 : wff = thm elabs2 () |- ( A e. { x | ph } <-> ( A e. _V /\ [ A / x ] ph ) ) ;
	step 2 : wff = thm mpbiran (step 1, hyp 1) |- ( A e. { x | ph } <-> [ A / x ] ph ) ;
	qed prop 1 = step 2 ;
}

theorem cbvralsv (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A ph <-> A. y e. A [ y / x ] ph ) ;
}

proof of cbvralsv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 3 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 4 : wff = thm cbvral (step 1, step 2, step 3) |- ( A. x e. A ph <-> A. y e. A [ y / x ] ph ) ;
	qed prop 1 = step 4 ;
}

theorem cbvrexsv (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ph <-> E. y e. A [ y / x ] ph ) ;
}

proof of cbvrexsv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm hbs1 () |- ( [ y / x ] ph -> A. x [ y / x ] ph ) ;
	step 3 : wff = thm sbequ12 () |- ( x = y -> ( ph <-> [ y / x ] ph ) ) ;
	step 4 : wff = thm cbvrex (step 1, step 2, step 3) |- ( E. x e. A ph <-> E. y e. A [ y / x ] ph ) ;
	qed prop 1 = step 4 ;
}

theorem sbcng (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
}

proof of sbcng {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] -. ph <-> [ A / x ] -. ph ) ) ;
	step 2 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 3 : wff = thm notbid (step 2) |- ( y = A -> ( -. [ y / x ] ph <-> -. [ A / x ] ph ) ) ;
	step 4 : wff = thm sbn () |- ( [ y / x ] -. ph <-> -. [ y / x ] ph ) ;
	step 5 : wff = thm vtoclbg (step 1, step 3, step 4) |- ( A e. B -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcimg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) ;
}

proof of sbcimg {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ( ph -> ps ) <-> [ A / x ] ( ph -> ps ) ) ) ;
	step 2 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 3 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ps <-> [ A / x ] ps ) ) ;
	step 4 : wff = thm imbi12d (step 2, step 3) |- ( y = A -> ( ( [ y / x ] ph -> [ y / x ] ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) ;
	step 5 : wff = thm sbim () |- ( [ y / x ] ( ph -> ps ) <-> ( [ y / x ] ph -> [ y / x ] ps ) ) ;
	step 6 : wff = thm vtoclbg (step 1, step 4, step 5) |- ( A e. B -> ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcang (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) ;
}

proof of sbcang {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ( ph /\ ps ) <-> [ A / x ] ( ph /\ ps ) ) ) ;
	step 2 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 3 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ps <-> [ A / x ] ps ) ) ;
	step 4 : wff = thm anbi12d (step 2, step 3) |- ( y = A -> ( ( [ y / x ] ph /\ [ y / x ] ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) ;
	step 5 : wff = thm sban () |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	step 6 : wff = thm vtoclbg (step 1, step 4, step 5) |- ( A e. B -> ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcorg (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) ;
}

proof of sbcorg {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ( ph \/ ps ) <-> [ A / x ] ( ph \/ ps ) ) ) ;
	step 2 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 3 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ps <-> [ A / x ] ps ) ) ;
	step 4 : wff = thm orbi12d (step 2, step 3) |- ( y = A -> ( ( [ y / x ] ph \/ [ y / x ] ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) ;
	step 5 : wff = thm sbor () |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) ;
	step 6 : wff = thm vtoclbg (step 1, step 4, step 5) |- ( A e. B -> ( [ A / x ] ( ph \/ ps ) <-> ( [ A / x ] ph \/ [ A / x ] ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcbidig (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) ;
}

proof of sbcbidig {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ( ph <-> ps ) <-> [ A / x ] ( ph <-> ps ) ) ) ;
	step 2 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 3 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ps <-> [ A / x ] ps ) ) ;
	step 4 : wff = thm bibi12d (step 2, step 3) |- ( y = A -> ( ( [ y / x ] ph <-> [ y / x ] ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) ;
	step 5 : wff = thm sbbi () |- ( [ y / x ] ( ph <-> ps ) <-> ( [ y / x ] ph <-> [ y / x ] ps ) ) ;
	step 6 : wff = thm vtoclbg (step 1, step 4, step 5) |- ( A e. B -> ( [ A / x ] ( ph <-> ps ) <-> ( [ A / x ] ph <-> [ A / x ] ps ) ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcalg (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) ;
}

proof of sbcalg {
	var z : set;
	step 1 : wff = thm dfsbcq () |- ( z = A -> ( [ z / y ] A. x ph <-> [ A / y ] A. x ph ) ) ;
	step 2 : wff = thm dfsbcq () |- ( z = A -> ( [ z / y ] ph <-> [ A / y ] ph ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( z = A -> ( A. x [ z / y ] ph <-> A. x [ A / y ] ph ) ) ;
	step 4 : wff = thm sbal () |- ( [ z / y ] A. x ph <-> A. x [ z / y ] ph ) ;
	step 5 : wff = thm vtoclbg (step 1, step 3, step 4) |- ( A e. B -> ( [ A / y ] A. x ph <-> A. x [ A / y ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcexg (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) ;
}

proof of sbcexg {
	var z : set;
	step 1 : wff = thm dfsbcq () |- ( z = A -> ( [ z / y ] E. x ph <-> [ A / y ] E. x ph ) ) ;
	step 2 : wff = thm dfsbcq () |- ( z = A -> ( [ z / y ] ph <-> [ A / y ] ph ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( z = A -> ( E. x [ z / y ] ph <-> E. x [ A / y ] ph ) ) ;
	step 4 : wff = thm sbex () |- ( [ z / y ] E. x ph <-> E. x [ z / y ] ph ) ;
	step 5 : wff = thm vtoclbg (step 1, step 3, step 4) |- ( A e. B -> ( [ A / y ] E. x ph <-> E. x [ A / y ] ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcbid (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) ;
}

proof of sbcbid {
	step 1 : wff = thm a4sbc () |- ( A e. B -> ( A. x ( ps <-> ch ) -> [ A / x ] ( ps <-> ch ) ) ) ;
	step 2 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x ( ps <-> ch ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A e. B -> ( ph -> [ A / x ] ( ps <-> ch ) ) ) ;
	step 4 : wff = thm sbcbidig () |- ( A e. B -> ( [ A / x ] ( ps <-> ch ) <-> ( [ A / x ] ps <-> [ A / x ] ch ) ) ) ;
	step 5 : wff = thm sylibd (step 3, step 4) |- ( A e. B -> ( ph -> ( [ A / x ] ps <-> [ A / x ] ch ) ) ) ;
	step 6 : wff = thm impcom (step 5) |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcbidv (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) ;
}

proof of sbcbidv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm sbcbid (step 1, hyp 1) |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps <-> [ A / x ] ch ) ) ;
	qed prop 1 = step 2 ;
}

theorem sbcbii (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph <-> ps ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> [ A / x ] ps ) ) ;
}

proof of sbcbii {
	step 1 : wff = thm eqid () |- _V = _V ;
	step 2 : wff = thm a1i (hyp 1) |- ( _V = _V -> ( ph <-> ps ) ) ;
	step 3 : wff = thm sbcbidv (step 2) |- ( ( _V = _V /\ A e. B ) -> ( [ A / x ] ph <-> [ A / x ] ps ) ) ;
	step 4 : wff = thm mpan (step 1, step 3) |- ( A e. B -> ( [ A / x ] ph <-> [ A / x ] ps ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbc3ang (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ( ph /\ ps /\ ch ) <-> ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) ;
}

proof of sbc3ang {
	step 1 : wff = def df-3an () |- ( ( ph /\ ps /\ ch ) <-> ( ( ph /\ ps ) /\ ch ) ) ;
	step 2 : wff = thm sbcbii (step 1) |- ( A e. B -> ( [ A / x ] ( ph /\ ps /\ ch ) <-> [ A / x ] ( ( ph /\ ps ) /\ ch ) ) ) ;
	step 3 : wff = thm sbcang () |- ( A e. B -> ( [ A / x ] ( ( ph /\ ps ) /\ ch ) <-> ( [ A / x ] ( ph /\ ps ) /\ [ A / x ] ch ) ) ) ;
	step 4 : wff = thm sbcang () |- ( A e. B -> ( [ A / x ] ( ph /\ ps ) <-> ( [ A / x ] ph /\ [ A / x ] ps ) ) ) ;
	step 5 : wff = thm anbi1d (step 4) |- ( A e. B -> ( ( [ A / x ] ( ph /\ ps ) /\ [ A / x ] ch ) <-> ( ( [ A / x ] ph /\ [ A / x ] ps ) /\ [ A / x ] ch ) ) ) ;
	step 6 : wff = def df-3an () |- ( ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) <-> ( ( [ A / x ] ph /\ [ A / x ] ps ) /\ [ A / x ] ch ) ) ;
	step 7 : wff = thm syl6bbr (step 5, step 6) |- ( A e. B -> ( ( [ A / x ] ( ph /\ ps ) /\ [ A / x ] ch ) <-> ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) ;
	step 8 : wff = thm 3bitrd (step 2, step 3, step 7) |- ( A e. B -> ( [ A / x ] ( ph /\ ps /\ ch ) <-> ( [ A / x ] ph /\ [ A / x ] ps /\ [ A / x ] ch ) ) ) ;
	qed prop 1 = step 8 ;
}

theorem sbcel1gv (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( [ A / x ] x e. B <-> A e. B ) ) ;
}

proof of sbcel1gv {
	var y : set, z : set;
	step 1 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 2 : wff = thm eleq1 () |- ( x = y -> ( x e. B <-> y e. B ) ) ;
	step 3 : wff = thm sbie (step 1, step 2) |- ( [ y / x ] x e. B <-> y e. B ) ;
	step 4 : wff = thm sbcbii (step 3) |- ( A e. C -> ( [ A / y ] [ y / x ] x e. B <-> [ A / y ] y e. B ) ) ;
	step 5 : wff = thm sbccog () |- ( A e. C -> ( [ A / y ] [ y / x ] x e. B <-> [ A / x ] x e. B ) ) ;
	step 6 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 7 : wff = thm elex () |- ( A e. _V -> E. y y = A ) ;
	step 8 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 9 : wff = thm hbsbc1 (step 8) |- ( ( A e. _V -> [ A / y ] y e. B ) -> A. y ( A e. _V -> [ A / y ] y e. B ) ) ;
	step 10 : wff = axm ax-17 () |- ( ( A e. _V -> A e. B ) -> A. y ( A e. _V -> A e. B ) ) ;
	step 11 : wff = thm hbbi (step 9, step 10) |- ( ( ( A e. _V -> [ A / y ] y e. B ) <-> ( A e. _V -> A e. B ) ) -> A. y ( ( A e. _V -> [ A / y ] y e. B ) <-> ( A e. _V -> A e. B ) ) ) ;
	step 12 : wff = thm sbceq1a () |- ( y = A -> ( y e. B <-> [ A / y ] y e. B ) ) ;
	step 13 : wff = thm eleq1 () |- ( y = A -> ( y e. B <-> A e. B ) ) ;
	step 14 : wff = thm bitr3d (step 12, step 13) |- ( y = A -> ( [ A / y ] y e. B <-> A e. B ) ) ;
	step 15 : wff = thm imbi2d (step 14) |- ( y = A -> ( ( A e. _V -> [ A / y ] y e. B ) <-> ( A e. _V -> A e. B ) ) ) ;
	step 16 : wff = thm 19_23ai (step 11, step 15) |- ( E. y y = A -> ( ( A e. _V -> [ A / y ] y e. B ) <-> ( A e. _V -> A e. B ) ) ) ;
	step 17 : wff = thm pm5_74rd (step 16) |- ( E. y y = A -> ( A e. _V -> ( [ A / y ] y e. B <-> A e. B ) ) ) ;
	step 18 : wff = thm mpcom (step 7, step 17) |- ( A e. _V -> ( [ A / y ] y e. B <-> A e. B ) ) ;
	step 19 : wff = thm syl (step 6, step 18) |- ( A e. C -> ( [ A / y ] y e. B <-> A e. B ) ) ;
	step 20 : wff = thm 3bitr3d (step 4, step 5, step 19) |- ( A e. C -> ( [ A / x ] x e. B <-> A e. B ) ) ;
	qed prop 1 = step 20 ;
}

theorem sbcel2gv (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( B e. C -> ( [ B / x ] A e. x <-> A e. B ) ) ;
}

proof of sbcel2gv {
	var y : set, z : set;
	step 1 : wff = axm ax-17 () |- ( A e. y -> A. x A e. y ) ;
	step 2 : wff = thm eleq2 () |- ( x = y -> ( A e. x <-> A e. y ) ) ;
	step 3 : wff = thm sbie (step 1, step 2) |- ( [ y / x ] A e. x <-> A e. y ) ;
	step 4 : wff = thm sbcbii (step 3) |- ( B e. C -> ( [ B / y ] [ y / x ] A e. x <-> [ B / y ] A e. y ) ) ;
	step 5 : wff = thm sbccog () |- ( B e. C -> ( [ B / y ] [ y / x ] A e. x <-> [ B / x ] A e. x ) ) ;
	step 6 : wff = thm elisset () |- ( B e. C -> B e. _V ) ;
	step 7 : wff = thm elex () |- ( B e. _V -> E. y y = B ) ;
	step 8 : wff = axm ax-17 () |- ( z e. B -> A. y z e. B ) ;
	step 9 : wff = thm hbsbc1 (step 8) |- ( ( B e. _V -> [ B / y ] A e. y ) -> A. y ( B e. _V -> [ B / y ] A e. y ) ) ;
	step 10 : wff = axm ax-17 () |- ( ( B e. _V -> A e. B ) -> A. y ( B e. _V -> A e. B ) ) ;
	step 11 : wff = thm hbbi (step 9, step 10) |- ( ( ( B e. _V -> [ B / y ] A e. y ) <-> ( B e. _V -> A e. B ) ) -> A. y ( ( B e. _V -> [ B / y ] A e. y ) <-> ( B e. _V -> A e. B ) ) ) ;
	step 12 : wff = thm sbceq1a () |- ( y = B -> ( A e. y <-> [ B / y ] A e. y ) ) ;
	step 13 : wff = thm eleq2 () |- ( y = B -> ( A e. y <-> A e. B ) ) ;
	step 14 : wff = thm bitr3d (step 12, step 13) |- ( y = B -> ( [ B / y ] A e. y <-> A e. B ) ) ;
	step 15 : wff = thm imbi2d (step 14) |- ( y = B -> ( ( B e. _V -> [ B / y ] A e. y ) <-> ( B e. _V -> A e. B ) ) ) ;
	step 16 : wff = thm 19_23ai (step 11, step 15) |- ( E. y y = B -> ( ( B e. _V -> [ B / y ] A e. y ) <-> ( B e. _V -> A e. B ) ) ) ;
	step 17 : wff = thm pm5_74rd (step 16) |- ( E. y y = B -> ( B e. _V -> ( [ B / y ] A e. y <-> A e. B ) ) ) ;
	step 18 : wff = thm mpcom (step 7, step 17) |- ( B e. _V -> ( [ B / y ] A e. y <-> A e. B ) ) ;
	step 19 : wff = thm syl (step 6, step 18) |- ( B e. C -> ( [ B / y ] A e. y <-> A e. B ) ) ;
	step 20 : wff = thm 3bitr3d (step 4, step 5, step 19) |- ( B e. C -> ( [ B / x ] A e. x <-> A e. B ) ) ;
	qed prop 1 = step 20 ;
}

theorem sbcth2 (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x e. B -> ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> [ A / x ] ph ) ;
}

proof of sbcth2 {
	step 1 : wff = thm sbcth (hyp 1) |- ( A e. B -> [ A / x ] ( x e. B -> ph ) ) ;
	step 2 : wff = thm sbcimg () |- ( A e. B -> ( [ A / x ] ( x e. B -> ph ) <-> ( [ A / x ] x e. B -> [ A / x ] ph ) ) ) ;
	step 3 : wff = thm sbcel1gv () |- ( A e. B -> ( [ A / x ] x e. B <-> A e. B ) ) ;
	step 4 : wff = thm imbi1d (step 3) |- ( A e. B -> ( ( [ A / x ] x e. B -> [ A / x ] ph ) <-> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 5 : wff = thm bitrd (step 2, step 4) |- ( A e. B -> ( [ A / x ] ( x e. B -> ph ) <-> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 6 : wff = thm mpbid (step 1, step 5) |- ( A e. B -> ( A e. B -> [ A / x ] ph ) ) ;
	step 7 : wff = thm pm2_43i (step 6) |- ( A e. B -> [ A / x ] ph ) ;
	qed prop 1 = step 7 ;
}

theorem hbsbc1gd (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( y e. A -> A. x y e. A ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps -> A. x [ A / x ] ps ) ) ;
}

proof of hbsbc1gd {
	var z : set;
	step 1 : wff = axm ax-4 () |- ( A. x y e. A -> y e. A ) ;
	step 2 : wff = thm impbid2 (step 1, hyp 2) |- ( ph -> ( A. x y e. A <-> y e. A ) ) ;
	step 3 : wff = thm abbidv (step 2) |- ( ph -> { y | A. x y e. A } = { y | y e. A } ) ;
	step 4 : wff = thm eleq1 () |- ( y = z -> ( y e. A <-> z e. A ) ) ;
	step 5 : wff = thm albidv (step 4) |- ( y = z -> ( A. x y e. A <-> A. x z e. A ) ) ;
	step 6 : wff = thm cbvabv (step 5) |- { y | A. x y e. A } = { z | A. x z e. A } ;
	step 7 : wff = thm abid2 () |- { y | y e. A } = A ;
	step 8 : wff = thm 3eqtr3g (step 3, step 6, step 7) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 9 : wff = thm eleq1d (step 8) |- ( ph -> ( { z | A. x z e. A } e. _V <-> A e. _V ) ) ;
	step 10 : wff = thm biimpar (step 9) |- ( ( ph /\ A e. _V ) -> { z | A. x z e. A } e. _V ) ;
	step 11 : wff = thm hba1 () |- ( A. x z e. A -> A. x A. x z e. A ) ;
	step 12 : wff = thm hbab (step 11) |- ( y e. { z | A. x z e. A } -> A. x y e. { z | A. x z e. A } ) ;
	step 13 : wff = thm hbsbc1g (step 12) |- ( { z | A. x z e. A } e. _V -> ( [ { z | A. x z e. A } / x ] ps -> A. x [ { z | A. x z e. A } / x ] ps ) ) ;
	step 14 : wff = thm syl (step 10, step 13) |- ( ( ph /\ A e. _V ) -> ( [ { z | A. x z e. A } / x ] ps -> A. x [ { z | A. x z e. A } / x ] ps ) ) ;
	step 15 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 16 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 17 : wff = thm dfsbcq () |- ( { z | A. x z e. A } = A -> ( [ { z | A. x z e. A } / x ] ps <-> [ A / x ] ps ) ) ;
	step 18 : wff = thm 3syl (step 15, step 16, step 17) |- ( ph -> ( [ { z | A. x z e. A } / x ] ps <-> [ A / x ] ps ) ) ;
	step 19 : wff = thm adantr (step 18) |- ( ( ph /\ A e. _V ) -> ( [ { z | A. x z e. A } / x ] ps <-> [ A / x ] ps ) ) ;
	step 20 : wff = thm a1d (hyp 1) |- ( ph -> ( ph -> A. x ph ) ) ;
	step 21 : wff = axm ax-17 () |- ( y e. _V -> A. x y e. _V ) ;
	step 22 : wff = thm a1i (step 21) |- ( ph -> ( y e. _V -> A. x y e. _V ) ) ;
	step 23 : wff = thm hbeld (hyp 1, hyp 2, step 22) |- ( ph -> ( A e. _V -> A. x A e. _V ) ) ;
	step 24 : wff = thm hband (step 20, step 23) |- ( ph -> ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ) ;
	step 25 : wff = thm anabsi5 (step 24) |- ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ;
	step 26 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 27 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 28 : wff = thm dfsbcq () |- ( { z | A. x z e. A } = A -> ( [ { z | A. x z e. A } / x ] ps <-> [ A / x ] ps ) ) ;
	step 29 : wff = thm 3syl (step 26, step 27, step 28) |- ( ph -> ( [ { z | A. x z e. A } / x ] ps <-> [ A / x ] ps ) ) ;
	step 30 : wff = thm adantr (step 29) |- ( ( ph /\ A e. _V ) -> ( [ { z | A. x z e. A } / x ] ps <-> [ A / x ] ps ) ) ;
	step 31 : wff = thm albid (step 25, step 30) |- ( ( ph /\ A e. _V ) -> ( A. x [ { z | A. x z e. A } / x ] ps <-> A. x [ A / x ] ps ) ) ;
	step 32 : wff = thm 3imtr3d (step 14, step 19, step 31) |- ( ( ph /\ A e. _V ) -> ( [ A / x ] ps -> A. x [ A / x ] ps ) ) ;
	step 33 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 34 : wff = thm sylan2 (step 32, step 33) |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps -> A. x [ A / x ] ps ) ) ;
	qed prop 1 = step 34 ;
}

theorem hbsbcgd (ph : wff, ps : wff, x : set, y : set, z : set, A : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> A. y ph ) ;
	hyp 3 : wff = |- ( ph -> ( z e. A -> A. x z e. A ) ) ;
	hyp 4 : wff = |- ( ph -> ( ps -> A. x ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. C ) -> ( [ A / y ] ps -> A. x [ A / y ] ps ) ) ;
}

proof of hbsbcgd {
	var w : set;
	step 1 : wff = axm ax-4 () |- ( A. x z e. A -> z e. A ) ;
	step 2 : wff = thm impbid2 (step 1, hyp 3) |- ( ph -> ( A. x z e. A <-> z e. A ) ) ;
	step 3 : wff = thm abbidv (step 2) |- ( ph -> { z | A. x z e. A } = { z | z e. A } ) ;
	step 4 : wff = thm eleq1 () |- ( z = w -> ( z e. A <-> w e. A ) ) ;
	step 5 : wff = thm albidv (step 4) |- ( z = w -> ( A. x z e. A <-> A. x w e. A ) ) ;
	step 6 : wff = thm cbvabv (step 5) |- { z | A. x z e. A } = { w | A. x w e. A } ;
	step 7 : wff = thm abid2 () |- { z | z e. A } = A ;
	step 8 : wff = thm 3eqtr3g (step 3, step 6, step 7) |- ( ph -> { w | A. x w e. A } = A ) ;
	step 9 : wff = thm eleq1d (step 8) |- ( ph -> ( { w | A. x w e. A } e. _V <-> A e. _V ) ) ;
	step 10 : wff = thm biimpar (step 9) |- ( ( ph /\ A e. _V ) -> { w | A. x w e. A } e. _V ) ;
	step 11 : wff = thm hba1 () |- ( A. x w e. A -> A. x A. x w e. A ) ;
	step 12 : wff = thm hbab (step 11) |- ( z e. { w | A. x w e. A } -> A. x z e. { w | A. x w e. A } ) ;
	step 13 : wff = thm hba1 () |- ( A. x ps -> A. x A. x ps ) ;
	step 14 : wff = thm hbsbcg (step 12, step 13) |- ( { w | A. x w e. A } e. _V -> ( [ { w | A. x w e. A } / y ] A. x ps -> A. x [ { w | A. x w e. A } / y ] A. x ps ) ) ;
	step 15 : wff = thm syl (step 10, step 14) |- ( ( ph /\ A e. _V ) -> ( [ { w | A. x w e. A } / y ] A. x ps -> A. x [ { w | A. x w e. A } / y ] A. x ps ) ) ;
	step 16 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. z ( z e. A -> A. x z e. A ) ) ;
	step 17 : wff = thm abidhb () |- ( A. z ( z e. A -> A. x z e. A ) -> { w | A. x w e. A } = A ) ;
	step 18 : wff = thm dfsbcq () |- ( { w | A. x w e. A } = A -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] A. x ps ) ) ;
	step 19 : wff = thm 3syl (step 16, step 17, step 18) |- ( ph -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] A. x ps ) ) ;
	step 20 : wff = thm adantr (step 19) |- ( ( ph /\ A e. _V ) -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] A. x ps ) ) ;
	step 21 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 22 : wff = thm impbid2 (step 21, hyp 4) |- ( ph -> ( A. x ps <-> ps ) ) ;
	step 23 : wff = thm sbcbid (hyp 2, step 22) |- ( ( ph /\ A e. _V ) -> ( [ A / y ] A. x ps <-> [ A / y ] ps ) ) ;
	step 24 : wff = thm bitrd (step 20, step 23) |- ( ( ph /\ A e. _V ) -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] ps ) ) ;
	step 25 : wff = thm a1d (hyp 1) |- ( ph -> ( ph -> A. x ph ) ) ;
	step 26 : wff = axm ax-17 () |- ( z e. _V -> A. x z e. _V ) ;
	step 27 : wff = thm a1i (step 26) |- ( ph -> ( z e. _V -> A. x z e. _V ) ) ;
	step 28 : wff = thm hbeld (hyp 1, hyp 3, step 27) |- ( ph -> ( A e. _V -> A. x A e. _V ) ) ;
	step 29 : wff = thm hband (step 25, step 28) |- ( ph -> ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ) ;
	step 30 : wff = thm anabsi5 (step 29) |- ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ;
	step 31 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. z ( z e. A -> A. x z e. A ) ) ;
	step 32 : wff = thm abidhb () |- ( A. z ( z e. A -> A. x z e. A ) -> { w | A. x w e. A } = A ) ;
	step 33 : wff = thm dfsbcq () |- ( { w | A. x w e. A } = A -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] A. x ps ) ) ;
	step 34 : wff = thm 3syl (step 31, step 32, step 33) |- ( ph -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] A. x ps ) ) ;
	step 35 : wff = thm adantr (step 34) |- ( ( ph /\ A e. _V ) -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] A. x ps ) ) ;
	step 36 : wff = axm ax-4 () |- ( A. x ps -> ps ) ;
	step 37 : wff = thm impbid2 (step 36, hyp 4) |- ( ph -> ( A. x ps <-> ps ) ) ;
	step 38 : wff = thm sbcbid (hyp 2, step 37) |- ( ( ph /\ A e. _V ) -> ( [ A / y ] A. x ps <-> [ A / y ] ps ) ) ;
	step 39 : wff = thm bitrd (step 35, step 38) |- ( ( ph /\ A e. _V ) -> ( [ { w | A. x w e. A } / y ] A. x ps <-> [ A / y ] ps ) ) ;
	step 40 : wff = thm albid (step 30, step 39) |- ( ( ph /\ A e. _V ) -> ( A. x [ { w | A. x w e. A } / y ] A. x ps <-> A. x [ A / y ] ps ) ) ;
	step 41 : wff = thm 3imtr3d (step 15, step 24, step 40) |- ( ( ph /\ A e. _V ) -> ( [ A / y ] ps -> A. x [ A / y ] ps ) ) ;
	step 42 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 43 : wff = thm sylan2 (step 41, step 42) |- ( ( ph /\ A e. C ) -> ( [ A / y ] ps -> A. x [ A / y ] ps ) ) ;
	qed prop 1 = step 43 ;
}

theorem sbc19_20dv (ph : wff, ps : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps -> [ A / x ] ch ) ) ;
}

proof of sbc19_20dv {
	step 1 : wff = thm a4sbc () |- ( A e. B -> ( A. x ( ps -> ch ) -> [ A / x ] ( ps -> ch ) ) ) ;
	step 2 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ( ps -> ch ) ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A e. B -> ( ph -> [ A / x ] ( ps -> ch ) ) ) ;
	step 4 : wff = thm sbcimg () |- ( A e. B -> ( [ A / x ] ( ps -> ch ) <-> ( [ A / x ] ps -> [ A / x ] ch ) ) ) ;
	step 5 : wff = thm sylibd (step 3, step 4) |- ( A e. B -> ( ph -> ( [ A / x ] ps -> [ A / x ] ch ) ) ) ;
	step 6 : wff = thm impcom (step 5) |- ( ( ph /\ A e. B ) -> ( [ A / x ] ps -> [ A / x ] ch ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcgf (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> ph ) ) ;
}

proof of sbcgf {
	var y : set;
	step 1 : wff = thm sbccog () |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / x ] ph ) ) ;
	step 2 : wff = thm sbf (hyp 1) |- ( [ y / x ] ph <-> ph ) ;
	step 3 : wff = thm sbcbii (step 2) |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> [ A / y ] ph ) ) ;
	step 4 : wff = thm sbc5g () |- ( A e. B -> ( [ A / y ] ph <-> E. y ( y = A /\ ph ) ) ) ;
	step 5 : wff = thm elex () |- ( A e. B -> E. y y = A ) ;
	step 6 : wff = thm biantrurd (step 5) |- ( A e. B -> ( ph <-> ( E. y y = A /\ ph ) ) ) ;
	step 7 : wff = thm 19_41v () |- ( E. y ( y = A /\ ph ) <-> ( E. y y = A /\ ph ) ) ;
	step 8 : wff = thm syl6rbbr (step 6, step 7) |- ( A e. B -> ( E. y ( y = A /\ ph ) <-> ph ) ) ;
	step 9 : wff = thm 3bitrd (step 3, step 4, step 8) |- ( A e. B -> ( [ A / y ] [ y / x ] ph <-> ph ) ) ;
	step 10 : wff = thm bitr3d (step 1, step 9) |- ( A e. B -> ( [ A / x ] ph <-> ph ) ) ;
	qed prop 1 = step 10 ;
}

theorem sbc19_21g (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ( ph -> ps ) <-> ( ph -> [ A / x ] ps ) ) ) ;
}

proof of sbc19_21g {
	step 1 : wff = thm sbcimg () |- ( A e. B -> ( [ A / x ] ( ph -> ps ) <-> ( [ A / x ] ph -> [ A / x ] ps ) ) ) ;
	step 2 : wff = thm sbcgf (hyp 1) |- ( A e. B -> ( [ A / x ] ph <-> ph ) ) ;
	step 3 : wff = thm imbi1d (step 2) |- ( A e. B -> ( ( [ A / x ] ph -> [ A / x ] ps ) <-> ( ph -> [ A / x ] ps ) ) ) ;
	step 4 : wff = thm bitrd (step 1, step 3) |- ( A e. B -> ( [ A / x ] ( ph -> ps ) <-> ( ph -> [ A / x ] ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbc2ie (ph : wff, ps : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- ( ( x = A /\ y = B ) -> ( ph <-> ps ) ) ;
	-----------------------
	prop 1 : wff = |- ( [ A / x ] [ B / y ] ph <-> ps ) ;
}

proof of sbc2ie {
	step 1 : wff = thm sbcimg () |- ( B e. _V -> ( [ B / y ] ( x = A -> ph ) <-> ( [ B / y ] x = A -> [ B / y ] ph ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 2, step 1) |- ( [ B / y ] ( x = A -> ph ) <-> ( [ B / y ] x = A -> [ B / y ] ph ) ) ;
	step 3 : wff = thm expcom (hyp 3) |- ( y = B -> ( x = A -> ( ph <-> ps ) ) ) ;
	step 4 : wff = thm pm5_74d (step 3) |- ( y = B -> ( ( x = A -> ph ) <-> ( x = A -> ps ) ) ) ;
	step 5 : wff = thm sbcie (hyp 2, step 4) |- ( [ B / y ] ( x = A -> ph ) <-> ( x = A -> ps ) ) ;
	step 6 : wff = axm ax-17 () |- ( x = A -> A. y x = A ) ;
	step 7 : wff = thm sbcgf (step 6) |- ( B e. _V -> ( [ B / y ] x = A <-> x = A ) ) ;
	step 8 : wff = axm ax-mp (hyp 2, step 7) |- ( [ B / y ] x = A <-> x = A ) ;
	step 9 : wff = thm imbi1i (step 8) |- ( ( [ B / y ] x = A -> [ B / y ] ph ) <-> ( x = A -> [ B / y ] ph ) ) ;
	step 10 : wff = thm 3bitr3ri (step 2, step 5, step 9) |- ( ( x = A -> [ B / y ] ph ) <-> ( x = A -> ps ) ) ;
	step 11 : wff = thm pm5_74ri (step 10) |- ( x = A -> ( [ B / y ] ph <-> ps ) ) ;
	step 12 : wff = thm sbcie (hyp 1, step 11) |- ( [ A / x ] [ B / y ] ph <-> ps ) ;
	qed prop 1 = step 12 ;
}

theorem sbc2iedv (ph : wff, ps : wff, ch : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- ( ph -> ( ( x = A /\ y = B ) -> ( ps <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( [ A / x ] [ B / y ] ps <-> ch ) ) ;
}

proof of sbc2iedv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. y ph ) ;
	step 2 : wff = thm sbc19_21g (step 1) |- ( B e. _V -> ( [ B / y ] ( ph -> ps ) <-> ( ph -> [ B / y ] ps ) ) ) ;
	step 3 : wff = axm ax-mp (hyp 2, step 2) |- ( [ B / y ] ( ph -> ps ) <-> ( ph -> [ B / y ] ps ) ) ;
	step 4 : wff = thm sbcbii (step 3) |- ( A e. _V -> ( [ A / x ] [ B / y ] ( ph -> ps ) <-> [ A / x ] ( ph -> [ B / y ] ps ) ) ) ;
	step 5 : wff = axm ax-mp (hyp 1, step 4) |- ( [ A / x ] [ B / y ] ( ph -> ps ) <-> [ A / x ] ( ph -> [ B / y ] ps ) ) ;
	step 6 : wff = thm impcom (hyp 3) |- ( ( ( x = A /\ y = B ) /\ ph ) -> ( ps <-> ch ) ) ;
	step 7 : wff = thm pm5_74da (step 6) |- ( ( x = A /\ y = B ) -> ( ( ph -> ps ) <-> ( ph -> ch ) ) ) ;
	step 8 : wff = thm sbc2ie (hyp 1, hyp 2, step 7) |- ( [ A / x ] [ B / y ] ( ph -> ps ) <-> ( ph -> ch ) ) ;
	step 9 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 10 : wff = thm sbc19_21g (step 9) |- ( A e. _V -> ( [ A / x ] ( ph -> [ B / y ] ps ) <-> ( ph -> [ A / x ] [ B / y ] ps ) ) ) ;
	step 11 : wff = axm ax-mp (hyp 1, step 10) |- ( [ A / x ] ( ph -> [ B / y ] ps ) <-> ( ph -> [ A / x ] [ B / y ] ps ) ) ;
	step 12 : wff = thm 3bitr3ri (step 5, step 8, step 11) |- ( ( ph -> [ A / x ] [ B / y ] ps ) <-> ( ph -> ch ) ) ;
	step 13 : wff = thm pm5_74ri (step 12) |- ( ph -> ( [ A / x ] [ B / y ] ps <-> ch ) ) ;
	qed prop 1 = step 13 ;
}

theorem sbccomglem (ph : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
}

proof of sbccomglem {
	step 1 : wff = thm sbc5g () |- ( B e. D -> ( [ B / y ] ph <-> E. y ( y = B /\ ph ) ) ) ;
	step 2 : wff = thm sbcbidv (step 1) |- ( ( B e. D /\ A e. C ) -> ( [ A / x ] [ B / y ] ph <-> [ A / x ] E. y ( y = B /\ ph ) ) ) ;
	step 3 : wff = thm ancoms (step 2) |- ( ( A e. C /\ B e. D ) -> ( [ A / x ] [ B / y ] ph <-> [ A / x ] E. y ( y = B /\ ph ) ) ) ;
	step 4 : wff = thm sbc5g () |- ( A e. C -> ( [ A / x ] E. y ( y = B /\ ph ) <-> E. x ( x = A /\ E. y ( y = B /\ ph ) ) ) ) ;
	step 5 : wff = thm adantr (step 4) |- ( ( A e. C /\ B e. D ) -> ( [ A / x ] E. y ( y = B /\ ph ) <-> E. x ( x = A /\ E. y ( y = B /\ ph ) ) ) ) ;
	step 6 : wff = thm sbc5g () |- ( A e. C -> ( [ A / x ] ph <-> E. x ( x = A /\ ph ) ) ) ;
	step 7 : wff = thm sbcbidv (step 6) |- ( ( A e. C /\ B e. D ) -> ( [ B / y ] [ A / x ] ph <-> [ B / y ] E. x ( x = A /\ ph ) ) ) ;
	step 8 : wff = thm sbc5g () |- ( B e. D -> ( [ B / y ] E. x ( x = A /\ ph ) <-> E. y ( y = B /\ E. x ( x = A /\ ph ) ) ) ) ;
	step 9 : wff = thm adantl (step 8) |- ( ( A e. C /\ B e. D ) -> ( [ B / y ] E. x ( x = A /\ ph ) <-> E. y ( y = B /\ E. x ( x = A /\ ph ) ) ) ) ;
	step 10 : wff = thm bitr2d (step 7, step 9) |- ( ( A e. C /\ B e. D ) -> ( E. y ( y = B /\ E. x ( x = A /\ ph ) ) <-> [ B / y ] [ A / x ] ph ) ) ;
	step 11 : wff = thm excom () |- ( E. x E. y ( x = A /\ ( y = B /\ ph ) ) <-> E. y E. x ( x = A /\ ( y = B /\ ph ) ) ) ;
	step 12 : wff = thm exdistr () |- ( E. x E. y ( x = A /\ ( y = B /\ ph ) ) <-> E. x ( x = A /\ E. y ( y = B /\ ph ) ) ) ;
	step 13 : wff = thm an12 () |- ( ( x = A /\ ( y = B /\ ph ) ) <-> ( y = B /\ ( x = A /\ ph ) ) ) ;
	step 14 : wff = thm exbii (step 13) |- ( E. x ( x = A /\ ( y = B /\ ph ) ) <-> E. x ( y = B /\ ( x = A /\ ph ) ) ) ;
	step 15 : wff = thm 19_42v () |- ( E. x ( y = B /\ ( x = A /\ ph ) ) <-> ( y = B /\ E. x ( x = A /\ ph ) ) ) ;
	step 16 : wff = thm bitri (step 14, step 15) |- ( E. x ( x = A /\ ( y = B /\ ph ) ) <-> ( y = B /\ E. x ( x = A /\ ph ) ) ) ;
	step 17 : wff = thm exbii (step 16) |- ( E. y E. x ( x = A /\ ( y = B /\ ph ) ) <-> E. y ( y = B /\ E. x ( x = A /\ ph ) ) ) ;
	step 18 : wff = thm 3bitr3i (step 11, step 12, step 17) |- ( E. x ( x = A /\ E. y ( y = B /\ ph ) ) <-> E. y ( y = B /\ E. x ( x = A /\ ph ) ) ) ;
	step 19 : wff = thm syl5bb (step 10, step 18) |- ( ( A e. C /\ B e. D ) -> ( E. x ( x = A /\ E. y ( y = B /\ ph ) ) <-> [ B / y ] [ A / x ] ph ) ) ;
	step 20 : wff = thm 3bitrd (step 3, step 5, step 19) |- ( ( A e. C /\ B e. D ) -> ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
	qed prop 1 = step 20 ;
}

theorem sbccomg (ph : wff, x : set, y : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
}

proof of sbccomg {
	var z : set, w : set;
	step 1 : wff = thm sbccog () |- ( A e. _V -> ( [ A / z ] [ z / x ] [ B / w ] [ w / y ] ph <-> [ A / x ] [ B / w ] [ w / y ] ph ) ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / z ] [ z / x ] [ B / w ] [ w / y ] ph <-> [ A / x ] [ B / w ] [ w / y ] ph ) ) ;
	step 3 : wff = thm visset () |- z e. _V ;
	step 4 : wff = thm sbccomglem () |- ( ( B e. _V /\ z e. _V ) -> ( [ B / w ] [ z / x ] [ w / y ] ph <-> [ z / x ] [ B / w ] [ w / y ] ph ) ) ;
	step 5 : wff = thm mpan2 (step 3, step 4) |- ( B e. _V -> ( [ B / w ] [ z / x ] [ w / y ] ph <-> [ z / x ] [ B / w ] [ w / y ] ph ) ) ;
	step 6 : wff = thm visset () |- z e. _V ;
	step 7 : wff = thm visset () |- w e. _V ;
	step 8 : wff = thm sbccomglem () |- ( ( z e. _V /\ w e. _V ) -> ( [ z / x ] [ w / y ] ph <-> [ w / y ] [ z / x ] ph ) ) ;
	step 9 : wff = thm mp2an (step 6, step 7, step 8) |- ( [ z / x ] [ w / y ] ph <-> [ w / y ] [ z / x ] ph ) ;
	step 10 : wff = thm sbcbii (step 9) |- ( B e. _V -> ( [ B / w ] [ z / x ] [ w / y ] ph <-> [ B / w ] [ w / y ] [ z / x ] ph ) ) ;
	step 11 : wff = thm bitr3d (step 5, step 10) |- ( B e. _V -> ( [ z / x ] [ B / w ] [ w / y ] ph <-> [ B / w ] [ w / y ] [ z / x ] ph ) ) ;
	step 12 : wff = thm sbcbidv (step 11) |- ( ( B e. _V /\ A e. _V ) -> ( [ A / z ] [ z / x ] [ B / w ] [ w / y ] ph <-> [ A / z ] [ B / w ] [ w / y ] [ z / x ] ph ) ) ;
	step 13 : wff = thm ancoms (step 12) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / z ] [ z / x ] [ B / w ] [ w / y ] ph <-> [ A / z ] [ B / w ] [ w / y ] [ z / x ] ph ) ) ;
	step 14 : wff = thm sbccomglem () |- ( ( A e. _V /\ B e. _V ) -> ( [ A / z ] [ B / w ] [ w / y ] [ z / x ] ph <-> [ B / w ] [ A / z ] [ w / y ] [ z / x ] ph ) ) ;
	step 15 : wff = thm visset () |- w e. _V ;
	step 16 : wff = thm sbccomglem () |- ( ( A e. _V /\ w e. _V ) -> ( [ A / z ] [ w / y ] [ z / x ] ph <-> [ w / y ] [ A / z ] [ z / x ] ph ) ) ;
	step 17 : wff = thm mpan2 (step 15, step 16) |- ( A e. _V -> ( [ A / z ] [ w / y ] [ z / x ] ph <-> [ w / y ] [ A / z ] [ z / x ] ph ) ) ;
	step 18 : wff = thm sbcbidv (step 17) |- ( ( A e. _V /\ B e. _V ) -> ( [ B / w ] [ A / z ] [ w / y ] [ z / x ] ph <-> [ B / w ] [ w / y ] [ A / z ] [ z / x ] ph ) ) ;
	step 19 : wff = thm 3bitrd (step 13, step 14, step 18) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / z ] [ z / x ] [ B / w ] [ w / y ] ph <-> [ B / w ] [ w / y ] [ A / z ] [ z / x ] ph ) ) ;
	step 20 : wff = thm sbccog () |- ( B e. _V -> ( [ B / w ] [ w / y ] [ A / z ] [ z / x ] ph <-> [ B / y ] [ A / z ] [ z / x ] ph ) ) ;
	step 21 : wff = thm adantl (step 20) |- ( ( A e. _V /\ B e. _V ) -> ( [ B / w ] [ w / y ] [ A / z ] [ z / x ] ph <-> [ B / y ] [ A / z ] [ z / x ] ph ) ) ;
	step 22 : wff = thm sbccog () |- ( A e. _V -> ( [ A / z ] [ z / x ] ph <-> [ A / x ] ph ) ) ;
	step 23 : wff = thm sbcbidv (step 22) |- ( ( A e. _V /\ B e. _V ) -> ( [ B / y ] [ A / z ] [ z / x ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
	step 24 : wff = thm 3bitrd (step 19, step 21, step 23) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / z ] [ z / x ] [ B / w ] [ w / y ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
	step 25 : wff = thm sbccog () |- ( B e. _V -> ( [ B / w ] [ w / y ] ph <-> [ B / y ] ph ) ) ;
	step 26 : wff = thm sbcbidv (step 25) |- ( ( B e. _V /\ A e. _V ) -> ( [ A / x ] [ B / w ] [ w / y ] ph <-> [ A / x ] [ B / y ] ph ) ) ;
	step 27 : wff = thm ancoms (step 26) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / x ] [ B / w ] [ w / y ] ph <-> [ A / x ] [ B / y ] ph ) ) ;
	step 28 : wff = thm 3bitr3rd (step 2, step 24, step 27) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
	step 29 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 30 : wff = thm elisset () |- ( B e. D -> B e. _V ) ;
	step 31 : wff = thm syl2an (step 28, step 29, step 30) |- ( ( A e. C /\ B e. D ) -> ( [ A / x ] [ B / y ] ph <-> [ B / y ] [ A / x ] ph ) ) ;
	qed prop 1 = step 31 ;
}

theorem sbcralt (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
}

proof of sbcralt {
	var w : set, v : set;
	step 1 : wff = thm sbc6g () |- ( A e. C -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 3 : wff = thm a4s (step 2) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 4 : wff = thm hba1 () |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) ) ;
	step 5 : wff = axm ax-17 () |- ( v e. w -> A. y v e. w ) ;
	step 6 : wff = thm a1i (step 5) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( v e. w -> A. y v e. w ) ) ;
	step 7 : wff = thm eleq1 () |- ( z = v -> ( z e. A <-> v e. A ) ) ;
	step 8 : wff = thm eleq1 () |- ( z = v -> ( z e. A <-> v e. A ) ) ;
	step 9 : wff = thm albidv (step 8) |- ( z = v -> ( A. y z e. A <-> A. y v e. A ) ) ;
	step 10 : wff = thm imbi12d (step 7, step 9) |- ( z = v -> ( ( z e. A -> A. y z e. A ) <-> ( v e. A -> A. y v e. A ) ) ) ;
	step 11 : wff = thm a4v (step 10) |- ( A. z ( z e. A -> A. y z e. A ) -> ( v e. A -> A. y v e. A ) ) ;
	step 12 : wff = thm adantl (step 11) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( v e. A -> A. y v e. A ) ) ;
	step 13 : wff = thm a4s (step 12) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( v e. A -> A. y v e. A ) ) ;
	step 14 : wff = thm hbeqd (step 4, step 6, step 13) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( w = A -> A. y w = A ) ) ;
	step 15 : wff = thm a5i (step 14) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y ( w = A -> A. y w = A ) ) ;
	step 16 : wff = thm r19_21t () |- ( A. y ( w = A -> A. y w = A ) -> ( A. y e. B ( w = A -> [ w / x ] ph ) <-> ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 17 : wff = thm syl (step 15, step 16) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( A. y e. B ( w = A -> [ w / x ] ph ) <-> ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 18 : wff = thm albidv (step 17) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( A. w A. y e. B ( w = A -> [ w / x ] ph ) <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 19 : wff = thm ralcom4 () |- ( A. y e. B A. w ( w = A -> [ w / x ] ph ) <-> A. w A. y e. B ( w = A -> [ w / x ] ph ) ) ;
	step 20 : wff = thm syl5rbb (step 18, step 19) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( A. w ( w = A -> A. y e. B [ w / x ] ph ) <-> A. y e. B A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 21 : wff = thm bitrd (step 3, step 20) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. y e. B A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 22 : wff = thm visset () |- w e. _V ;
	step 23 : wff = thm sbc6g () |- ( w e. _V -> ( [ w / x ] A. y e. B ph <-> A. x ( x = w -> A. y e. B ph ) ) ) ;
	step 24 : wff = thm ralcom4 () |- ( A. y e. B A. x ( x = w -> ph ) <-> A. x A. y e. B ( x = w -> ph ) ) ;
	step 25 : wff = thm r19_21v () |- ( A. y e. B ( x = w -> ph ) <-> ( x = w -> A. y e. B ph ) ) ;
	step 26 : wff = thm albii (step 25) |- ( A. x A. y e. B ( x = w -> ph ) <-> A. x ( x = w -> A. y e. B ph ) ) ;
	step 27 : wff = thm bitr2i (step 24, step 26) |- ( A. x ( x = w -> A. y e. B ph ) <-> A. y e. B A. x ( x = w -> ph ) ) ;
	step 28 : wff = thm syl6bb (step 23, step 27) |- ( w e. _V -> ( [ w / x ] A. y e. B ph <-> A. y e. B A. x ( x = w -> ph ) ) ) ;
	step 29 : wff = thm sbc6g () |- ( w e. _V -> ( [ w / x ] ph <-> A. x ( x = w -> ph ) ) ) ;
	step 30 : wff = thm ralbidv (step 29) |- ( w e. _V -> ( A. y e. B [ w / x ] ph <-> A. y e. B A. x ( x = w -> ph ) ) ) ;
	step 31 : wff = thm bitr4d (step 28, step 30) |- ( w e. _V -> ( [ w / x ] A. y e. B ph <-> A. y e. B [ w / x ] ph ) ) ;
	step 32 : wff = axm ax-mp (step 22, step 31) |- ( [ w / x ] A. y e. B ph <-> A. y e. B [ w / x ] ph ) ;
	step 33 : wff = thm sbcbii (step 32) |- ( A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / w ] A. y e. B [ w / x ] ph ) ) ;
	step 34 : wff = thm adantr (step 33) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / w ] A. y e. B [ w / x ] ph ) ) ;
	step 35 : wff = thm a4s (step 34) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / w ] A. y e. B [ w / x ] ph ) ) ;
	step 36 : wff = thm hba1 () |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) ) ;
	step 37 : wff = thm sbc6g () |- ( A e. C -> ( [ A / w ] [ w / x ] ph <-> A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 38 : wff = thm adantr (step 37) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] ph <-> A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 39 : wff = thm a4s (step 38) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] ph <-> A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 40 : wff = thm ralbid (step 36, step 39) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( A. y e. B [ A / w ] [ w / x ] ph <-> A. y e. B A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 41 : wff = thm 3bitr4d (step 21, step 35, step 40) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] A. y e. B ph <-> A. y e. B [ A / w ] [ w / x ] ph ) ) ;
	step 42 : wff = thm sbccog () |- ( A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / x ] A. y e. B ph ) ) ;
	step 43 : wff = thm adantr (step 42) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / x ] A. y e. B ph ) ) ;
	step 44 : wff = thm a4s (step 43) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / x ] A. y e. B ph ) ) ;
	step 45 : wff = thm hba1 () |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) ) ;
	step 46 : wff = thm sbccog () |- ( A e. C -> ( [ A / w ] [ w / x ] ph <-> [ A / x ] ph ) ) ;
	step 47 : wff = thm adantr (step 46) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] ph <-> [ A / x ] ph ) ) ;
	step 48 : wff = thm a4s (step 47) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / w ] [ w / x ] ph <-> [ A / x ] ph ) ) ;
	step 49 : wff = thm ralbid (step 45, step 48) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( A. y e. B [ A / w ] [ w / x ] ph <-> A. y e. B [ A / x ] ph ) ) ;
	step 50 : wff = thm 3bitr3d (step 41, step 44, step 49) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
	qed prop 1 = step 50 ;
}

theorem sbcrext (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
}

proof of sbcrext {
	step 1 : wff = thm dfrex2 () |- ( E. y e. B ph <-> -. A. y e. B -. ph ) ;
	step 2 : wff = thm sbcbii (step 1) |- ( A e. C -> ( [ A / x ] E. y e. B ph <-> [ A / x ] -. A. y e. B -. ph ) ) ;
	step 3 : wff = thm sbcng () |- ( A e. C -> ( [ A / x ] -. A. y e. B -. ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 4 : wff = thm bitrd (step 2, step 3) |- ( A e. C -> ( [ A / x ] E. y e. B ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 5 : wff = thm adantr (step 4) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 6 : wff = thm a4s (step 5) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 7 : wff = thm sbcralt () |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] A. y e. B -. ph <-> A. y e. B [ A / x ] -. ph ) ) ;
	step 8 : wff = thm hba1 () |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) ) ;
	step 9 : wff = thm sbcng () |- ( A e. C -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 10 : wff = thm adantr (step 9) |- ( ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 11 : wff = thm a4s (step 10) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 12 : wff = thm ralbid (step 8, step 11) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( A. y e. B [ A / x ] -. ph <-> A. y e. B -. [ A / x ] ph ) ) ;
	step 13 : wff = thm bitrd (step 7, step 12) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] A. y e. B -. ph <-> A. y e. B -. [ A / x ] ph ) ) ;
	step 14 : wff = thm notbid (step 13) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( -. [ A / x ] A. y e. B -. ph <-> -. A. y e. B -. [ A / x ] ph ) ) ;
	step 15 : wff = thm bitrd (step 6, step 14) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> -. A. y e. B -. [ A / x ] ph ) ) ;
	step 16 : wff = thm dfrex2 () |- ( E. y e. B [ A / x ] ph <-> -. A. y e. B -. [ A / x ] ph ) ;
	step 17 : wff = thm syl6bbr (step 15, step 16) |- ( A. y ( A e. C /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
	qed prop 1 = step 17 ;
}

theorem sbcralgf (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( A. y A e. C -> ( z e. A -> A. y z e. A ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. y A e. C -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
}

proof of sbcralgf {
	var w : set;
	step 1 : wff = thm sbc6g () |- ( A e. C -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 2 : wff = thm a4s (step 1) |- ( A. y A e. C -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 3 : wff = thm hba1 () |- ( A. y A e. C -> A. y A. y A e. C ) ;
	step 4 : wff = axm ax-17 () |- ( z e. w -> A. y z e. w ) ;
	step 5 : wff = thm a1i (step 4) |- ( A. y A e. C -> ( z e. w -> A. y z e. w ) ) ;
	step 6 : wff = thm hbeqd (step 3, step 5, hyp 1) |- ( A. y A e. C -> ( w = A -> A. y w = A ) ) ;
	step 7 : wff = thm a5i (step 6) |- ( A. y A e. C -> A. y ( w = A -> A. y w = A ) ) ;
	step 8 : wff = thm r19_21t () |- ( A. y ( w = A -> A. y w = A ) -> ( A. y e. B ( w = A -> [ w / x ] ph ) <-> ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( A. y A e. C -> ( A. y e. B ( w = A -> [ w / x ] ph ) <-> ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 10 : wff = thm albidv (step 9) |- ( A. y A e. C -> ( A. w A. y e. B ( w = A -> [ w / x ] ph ) <-> A. w ( w = A -> A. y e. B [ w / x ] ph ) ) ) ;
	step 11 : wff = thm ralcom4 () |- ( A. y e. B A. w ( w = A -> [ w / x ] ph ) <-> A. w A. y e. B ( w = A -> [ w / x ] ph ) ) ;
	step 12 : wff = thm syl5rbb (step 10, step 11) |- ( A. y A e. C -> ( A. w ( w = A -> A. y e. B [ w / x ] ph ) <-> A. y e. B A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 13 : wff = thm bitrd (step 2, step 12) |- ( A. y A e. C -> ( [ A / w ] A. y e. B [ w / x ] ph <-> A. y e. B A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 14 : wff = thm visset () |- w e. _V ;
	step 15 : wff = thm sbc6g () |- ( w e. _V -> ( [ w / x ] A. y e. B ph <-> A. x ( x = w -> A. y e. B ph ) ) ) ;
	step 16 : wff = thm ralcom4 () |- ( A. y e. B A. x ( x = w -> ph ) <-> A. x A. y e. B ( x = w -> ph ) ) ;
	step 17 : wff = thm r19_21v () |- ( A. y e. B ( x = w -> ph ) <-> ( x = w -> A. y e. B ph ) ) ;
	step 18 : wff = thm albii (step 17) |- ( A. x A. y e. B ( x = w -> ph ) <-> A. x ( x = w -> A. y e. B ph ) ) ;
	step 19 : wff = thm bitr2i (step 16, step 18) |- ( A. x ( x = w -> A. y e. B ph ) <-> A. y e. B A. x ( x = w -> ph ) ) ;
	step 20 : wff = thm syl6bb (step 15, step 19) |- ( w e. _V -> ( [ w / x ] A. y e. B ph <-> A. y e. B A. x ( x = w -> ph ) ) ) ;
	step 21 : wff = thm sbc6g () |- ( w e. _V -> ( [ w / x ] ph <-> A. x ( x = w -> ph ) ) ) ;
	step 22 : wff = thm ralbidv (step 21) |- ( w e. _V -> ( A. y e. B [ w / x ] ph <-> A. y e. B A. x ( x = w -> ph ) ) ) ;
	step 23 : wff = thm bitr4d (step 20, step 22) |- ( w e. _V -> ( [ w / x ] A. y e. B ph <-> A. y e. B [ w / x ] ph ) ) ;
	step 24 : wff = axm ax-mp (step 14, step 23) |- ( [ w / x ] A. y e. B ph <-> A. y e. B [ w / x ] ph ) ;
	step 25 : wff = thm sbcbii (step 24) |- ( A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / w ] A. y e. B [ w / x ] ph ) ) ;
	step 26 : wff = thm a4s (step 25) |- ( A. y A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / w ] A. y e. B [ w / x ] ph ) ) ;
	step 27 : wff = thm hba1 () |- ( A. y A e. C -> A. y A. y A e. C ) ;
	step 28 : wff = thm sbc6g () |- ( A e. C -> ( [ A / w ] [ w / x ] ph <-> A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 29 : wff = thm a4s (step 28) |- ( A. y A e. C -> ( [ A / w ] [ w / x ] ph <-> A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 30 : wff = thm ralbid (step 27, step 29) |- ( A. y A e. C -> ( A. y e. B [ A / w ] [ w / x ] ph <-> A. y e. B A. w ( w = A -> [ w / x ] ph ) ) ) ;
	step 31 : wff = thm 3bitr4d (step 13, step 26, step 30) |- ( A. y A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> A. y e. B [ A / w ] [ w / x ] ph ) ) ;
	step 32 : wff = thm sbccog () |- ( A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / x ] A. y e. B ph ) ) ;
	step 33 : wff = thm a4s (step 32) |- ( A. y A e. C -> ( [ A / w ] [ w / x ] A. y e. B ph <-> [ A / x ] A. y e. B ph ) ) ;
	step 34 : wff = thm hba1 () |- ( A. y A e. C -> A. y A. y A e. C ) ;
	step 35 : wff = thm sbccog () |- ( A e. C -> ( [ A / w ] [ w / x ] ph <-> [ A / x ] ph ) ) ;
	step 36 : wff = thm a4s (step 35) |- ( A. y A e. C -> ( [ A / w ] [ w / x ] ph <-> [ A / x ] ph ) ) ;
	step 37 : wff = thm ralbid (step 34, step 36) |- ( A. y A e. C -> ( A. y e. B [ A / w ] [ w / x ] ph <-> A. y e. B [ A / x ] ph ) ) ;
	step 38 : wff = thm 3bitr3d (step 31, step 33, step 37) |- ( A. y A e. C -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
	qed prop 1 = step 38 ;
}

theorem sbcrexgf (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( A. y A e. C -> ( z e. A -> A. y z e. A ) ) ;
	-----------------------
	prop 1 : wff = |- ( A. y A e. C -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
}

proof of sbcrexgf {
	step 1 : wff = thm dfrex2 () |- ( E. y e. B ph <-> -. A. y e. B -. ph ) ;
	step 2 : wff = thm sbcbii (step 1) |- ( A e. C -> ( [ A / x ] E. y e. B ph <-> [ A / x ] -. A. y e. B -. ph ) ) ;
	step 3 : wff = thm sbcng () |- ( A e. C -> ( [ A / x ] -. A. y e. B -. ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 4 : wff = thm bitrd (step 2, step 3) |- ( A e. C -> ( [ A / x ] E. y e. B ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 5 : wff = thm a4s (step 4) |- ( A. y A e. C -> ( [ A / x ] E. y e. B ph <-> -. [ A / x ] A. y e. B -. ph ) ) ;
	step 6 : wff = thm sbcralgf (hyp 1) |- ( A. y A e. C -> ( [ A / x ] A. y e. B -. ph <-> A. y e. B [ A / x ] -. ph ) ) ;
	step 7 : wff = thm hba1 () |- ( A. y A e. C -> A. y A. y A e. C ) ;
	step 8 : wff = thm sbcng () |- ( A e. C -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 9 : wff = thm a4s (step 8) |- ( A. y A e. C -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 10 : wff = thm ralbid (step 7, step 9) |- ( A. y A e. C -> ( A. y e. B [ A / x ] -. ph <-> A. y e. B -. [ A / x ] ph ) ) ;
	step 11 : wff = thm bitrd (step 6, step 10) |- ( A. y A e. C -> ( [ A / x ] A. y e. B -. ph <-> A. y e. B -. [ A / x ] ph ) ) ;
	step 12 : wff = thm notbid (step 11) |- ( A. y A e. C -> ( -. [ A / x ] A. y e. B -. ph <-> -. A. y e. B -. [ A / x ] ph ) ) ;
	step 13 : wff = thm bitrd (step 5, step 12) |- ( A. y A e. C -> ( [ A / x ] E. y e. B ph <-> -. A. y e. B -. [ A / x ] ph ) ) ;
	step 14 : wff = thm dfrex2 () |- ( E. y e. B [ A / x ] ph <-> -. A. y e. B -. [ A / x ] ph ) ;
	step 15 : wff = thm syl6bbr (step 13, step 14) |- ( A. y A e. C -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
	qed prop 1 = step 15 ;
}

theorem sbcralg (ph : wff, x : set, y : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
}

proof of sbcralg {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( A e. _V -> A. y A e. _V ) ;
	step 2 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 3 : wff = axm ax-gen (step 2) |- A. z ( z e. A -> A. y z e. A ) ;
	step 4 : wff = thm hbth (step 3) |- ( A. z ( z e. A -> A. y z e. A ) -> A. y A. z ( z e. A -> A. y z e. A ) ) ;
	step 5 : wff = thm hban (step 1, step 4) |- ( ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) ) ;
	step 6 : wff = thm sbcralt () |- ( A. y ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
	step 7 : wff = thm syl (step 5, step 6) |- ( ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
	step 8 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 9 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 10 : wff = axm ax-gen (step 9) |- A. z ( z e. A -> A. y z e. A ) ;
	step 11 : wff = thm sylancl (step 7, step 8, step 10) |- ( A e. C -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
	qed prop 1 = step 11 ;
}

theorem sbcrexg (ph : wff, x : set, y : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
}

proof of sbcrexg {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( A e. _V -> A. y A e. _V ) ;
	step 2 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 3 : wff = axm ax-gen (step 2) |- A. z ( z e. A -> A. y z e. A ) ;
	step 4 : wff = thm hbth (step 3) |- ( A. z ( z e. A -> A. y z e. A ) -> A. y A. z ( z e. A -> A. y z e. A ) ) ;
	step 5 : wff = thm hban (step 1, step 4) |- ( ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) -> A. y ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) ) ;
	step 6 : wff = thm sbcrext () |- ( A. y ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
	step 7 : wff = thm syl (step 5, step 6) |- ( ( A e. _V /\ A. z ( z e. A -> A. y z e. A ) ) -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
	step 8 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 9 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 10 : wff = axm ax-gen (step 9) |- A. z ( z e. A -> A. y z e. A ) ;
	step 11 : wff = thm sylancl (step 7, step 8, step 10) |- ( A e. C -> ( [ A / x ] E. y e. B ph <-> E. y e. B [ A / x ] ph ) ) ;
	qed prop 1 = step 11 ;
}

theorem sbcabel (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( z e. B -> A. x z e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A e. C -> ( [ A / x ] { y | ph } e. B <-> { y | [ A / x ] ph } e. B ) ) ;
}

proof of sbcabel {
	var w : set;
	step 1 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 2 : wff = def df-clel () |- ( { y | ph } e. B <-> E. w ( w = { y | ph } /\ w e. B ) ) ;
	step 3 : wff = thm sbcbii (step 2) |- ( A e. _V -> ( [ A / x ] { y | ph } e. B <-> [ A / x ] E. w ( w = { y | ph } /\ w e. B ) ) ) ;
	step 4 : wff = thm sbcexg () |- ( A e. _V -> ( [ A / x ] E. w ( w = { y | ph } /\ w e. B ) <-> E. w [ A / x ] ( w = { y | ph } /\ w e. B ) ) ) ;
	step 5 : wff = thm sbcang () |- ( A e. _V -> ( [ A / x ] ( w = { y | ph } /\ w e. B ) <-> ( [ A / x ] w = { y | ph } /\ [ A / x ] w e. B ) ) ) ;
	step 6 : wff = thm abeq2 () |- ( w = { y | ph } <-> A. y ( y e. w <-> ph ) ) ;
	step 7 : wff = thm sbcbii (step 6) |- ( A e. _V -> ( [ A / x ] w = { y | ph } <-> [ A / x ] A. y ( y e. w <-> ph ) ) ) ;
	step 8 : wff = thm sbcalg () |- ( A e. _V -> ( [ A / x ] A. y ( y e. w <-> ph ) <-> A. y [ A / x ] ( y e. w <-> ph ) ) ) ;
	step 9 : wff = thm sbcbidig () |- ( A e. _V -> ( [ A / x ] ( y e. w <-> ph ) <-> ( [ A / x ] y e. w <-> [ A / x ] ph ) ) ) ;
	step 10 : wff = axm ax-17 () |- ( y e. w -> A. x y e. w ) ;
	step 11 : wff = thm sbcgf (step 10) |- ( A e. _V -> ( [ A / x ] y e. w <-> y e. w ) ) ;
	step 12 : wff = thm bibi1d (step 11) |- ( A e. _V -> ( ( [ A / x ] y e. w <-> [ A / x ] ph ) <-> ( y e. w <-> [ A / x ] ph ) ) ) ;
	step 13 : wff = thm bitrd (step 9, step 12) |- ( A e. _V -> ( [ A / x ] ( y e. w <-> ph ) <-> ( y e. w <-> [ A / x ] ph ) ) ) ;
	step 14 : wff = thm albidv (step 13) |- ( A e. _V -> ( A. y [ A / x ] ( y e. w <-> ph ) <-> A. y ( y e. w <-> [ A / x ] ph ) ) ) ;
	step 15 : wff = thm 3bitrd (step 7, step 8, step 14) |- ( A e. _V -> ( [ A / x ] w = { y | ph } <-> A. y ( y e. w <-> [ A / x ] ph ) ) ) ;
	step 16 : wff = thm abeq2 () |- ( w = { y | [ A / x ] ph } <-> A. y ( y e. w <-> [ A / x ] ph ) ) ;
	step 17 : wff = thm syl6bbr (step 15, step 16) |- ( A e. _V -> ( [ A / x ] w = { y | ph } <-> w = { y | [ A / x ] ph } ) ) ;
	step 18 : wff = axm ax-17 () |- ( z e. w -> A. x z e. w ) ;
	step 19 : wff = thm hbel (step 18, hyp 1) |- ( w e. B -> A. x w e. B ) ;
	step 20 : wff = thm sbcgf (step 19) |- ( A e. _V -> ( [ A / x ] w e. B <-> w e. B ) ) ;
	step 21 : wff = thm anbi12d (step 17, step 20) |- ( A e. _V -> ( ( [ A / x ] w = { y | ph } /\ [ A / x ] w e. B ) <-> ( w = { y | [ A / x ] ph } /\ w e. B ) ) ) ;
	step 22 : wff = thm bitrd (step 5, step 21) |- ( A e. _V -> ( [ A / x ] ( w = { y | ph } /\ w e. B ) <-> ( w = { y | [ A / x ] ph } /\ w e. B ) ) ) ;
	step 23 : wff = thm exbidv (step 22) |- ( A e. _V -> ( E. w [ A / x ] ( w = { y | ph } /\ w e. B ) <-> E. w ( w = { y | [ A / x ] ph } /\ w e. B ) ) ) ;
	step 24 : wff = thm 3bitrd (step 3, step 4, step 23) |- ( A e. _V -> ( [ A / x ] { y | ph } e. B <-> E. w ( w = { y | [ A / x ] ph } /\ w e. B ) ) ) ;
	step 25 : wff = def df-clel () |- ( { y | [ A / x ] ph } e. B <-> E. w ( w = { y | [ A / x ] ph } /\ w e. B ) ) ;
	step 26 : wff = thm syl6bbr (step 24, step 25) |- ( A e. _V -> ( [ A / x ] { y | ph } e. B <-> { y | [ A / x ] ph } e. B ) ) ;
	step 27 : wff = thm syl (step 1, step 26) |- ( A e. C -> ( [ A / x ] { y | ph } e. B <-> { y | [ A / x ] ph } e. B ) ) ;
	qed prop 1 = step 27 ;
}

theorem ra4sbc (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) ;
}

proof of ra4sbc {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( y = A -> ( [ y / x ] ( x e. B -> ph ) <-> [ A / x ] ( x e. B -> ph ) ) ) ;
	step 2 : wff = thm sbcimg () |- ( A e. B -> ( [ A / x ] ( x e. B -> ph ) <-> ( [ A / x ] x e. B -> [ A / x ] ph ) ) ) ;
	step 3 : wff = thm sbcel1gv () |- ( A e. B -> ( [ A / x ] x e. B <-> A e. B ) ) ;
	step 4 : wff = thm imbi1d (step 3) |- ( A e. B -> ( ( [ A / x ] x e. B -> [ A / x ] ph ) <-> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 5 : wff = thm bitrd (step 2, step 4) |- ( A e. B -> ( [ A / x ] ( x e. B -> ph ) <-> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 6 : wff = thm biimpd (step 5) |- ( A e. B -> ( [ A / x ] ( x e. B -> ph ) -> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 7 : wff = thm pm2_43b (step 6) |- ( [ A / x ] ( x e. B -> ph ) -> ( A e. B -> [ A / x ] ph ) ) ;
	step 8 : wff = thm syl6bi (step 1, step 7) |- ( y = A -> ( [ y / x ] ( x e. B -> ph ) -> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 9 : wff = def df-ral () |- ( A. x e. B ph <-> A. x ( x e. B -> ph ) ) ;
	step 10 : wff = thm stdpc4 () |- ( A. x ( x e. B -> ph ) -> [ y / x ] ( x e. B -> ph ) ) ;
	step 11 : wff = thm sylbi (step 9, step 10) |- ( A. x e. B ph -> [ y / x ] ( x e. B -> ph ) ) ;
	step 12 : wff = thm syl5 (step 8, step 11) |- ( y = A -> ( A. x e. B ph -> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 13 : wff = thm vtocleg (step 12) |- ( A e. B -> ( A. x e. B ph -> ( A e. B -> [ A / x ] ph ) ) ) ;
	step 14 : wff = thm pm2_43a (step 13) |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) ;
	qed prop 1 = step 14 ;
}

theorem ra4sbca (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A. x e. B ph ) -> [ A / x ] ph ) ;
}

proof of ra4sbca {
	step 1 : wff = thm ra4sbc () |- ( A e. B -> ( A. x e. B ph -> [ A / x ] ph ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( A e. B /\ A. x e. B ph ) -> [ A / x ] ph ) ;
	qed prop 1 = step 2 ;
}

theorem ra4esbca (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A e. B /\ [ A / x ] ph ) -> E. x e. B ph ) ;
}

proof of ra4esbca {
	step 1 : wff = thm ra4sbc () |- ( A e. B -> ( A. x e. B -. ph -> [ A / x ] -. ph ) ) ;
	step 2 : wff = thm sbcng () |- ( A e. B -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 3 : wff = thm sylibd (step 1, step 2) |- ( A e. B -> ( A. x e. B -. ph -> -. [ A / x ] ph ) ) ;
	step 4 : wff = thm ralnex () |- ( A. x e. B -. ph <-> -. E. x e. B ph ) ;
	step 5 : wff = thm syl5ibr (step 3, step 4) |- ( A e. B -> ( -. E. x e. B ph -> -. [ A / x ] ph ) ) ;
	step 6 : wff = thm con4d (step 5) |- ( A e. B -> ( [ A / x ] ph -> E. x e. B ph ) ) ;
	step 7 : wff = thm imp (step 6) |- ( ( A e. B /\ [ A / x ] ph ) -> E. x e. B ph ) ;
	qed prop 1 = step 7 ;
}

theorem ra5 (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) ;
}

proof of ra5 {
	step 1 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 2 : wff = thm bi2_04 () |- ( ( x e. A -> ( ph -> ps ) ) <-> ( ph -> ( x e. A -> ps ) ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( x e. A -> ( ph -> ps ) ) <-> A. x ( ph -> ( x e. A -> ps ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A. x e. A ( ph -> ps ) <-> A. x ( ph -> ( x e. A -> ps ) ) ) ;
	step 5 : wff = thm stdpc5 (hyp 1) |- ( A. x ( ph -> ( x e. A -> ps ) ) -> ( ph -> A. x ( x e. A -> ps ) ) ) ;
	step 6 : wff = thm sylbi (step 4, step 5) |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x ( x e. A -> ps ) ) ) ;
	step 7 : wff = def df-ral () |- ( A. x e. A ps <-> A. x ( x e. A -> ps ) ) ;
	step 8 : wff = thm syl6ibr (step 6, step 7) |- ( A. x e. A ( ph -> ps ) -> ( ph -> A. x e. A ps ) ) ;
	qed prop 1 = step 8 ;
}

constant {
	symbol [_ ;
}

constant {
	symbol ]_ ;
}

rule csb (x : set, A : class, B : class) {
	term : class = # [_ A / x ]_ B ;
}

definition df-csb (x : set, y : set, A : class, B : class)  {
	defiendum : class = # [_ A / x ]_ B ;
	definiens : class = # { y | [ A / x ] y e. B } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem csbeq1 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) ;
}

proof of csbeq1 {
	var y : set;
	step 1 : wff = thm dfsbcq () |- ( A = B -> ( [ A / x ] y e. C <-> [ B / x ] y e. C ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( A = B -> { y | [ A / x ] y e. C } = { y | [ B / x ] y e. C } ) ;
	step 3 : wff = def df-csb () |- [_ A / x ]_ C = { y | [ A / x ] y e. C } ;
	step 4 : wff = def df-csb () |- [_ B / x ]_ C = { y | [ B / x ] y e. C } ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) ;
	qed prop 1 = step 5 ;
}

theorem cbvcsbv (x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = y -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( A e. D -> [_ A / x ]_ B = [_ A / y ]_ C ) ;
}

proof of cbvcsbv {
	var z : set;
	step 1 : wff = thm eleq2d (hyp 1) |- ( x = y -> ( z e. B <-> z e. C ) ) ;
	step 2 : wff = thm cbvsbcv (step 1) |- ( A e. D -> ( [ A / x ] z e. B <-> [ A / y ] z e. C ) ) ;
	step 3 : wff = thm abbidv (step 2) |- ( A e. D -> { z | [ A / x ] z e. B } = { z | [ A / y ] z e. C } ) ;
	step 4 : wff = def df-csb () |- [_ A / x ]_ B = { z | [ A / x ] z e. B } ;
	step 5 : wff = def df-csb () |- [_ A / y ]_ C = { z | [ A / y ] z e. C } ;
	step 6 : wff = thm 3eqtr4g (step 3, step 4, step 5) |- ( A e. D -> [_ A / x ]_ B = [_ A / y ]_ C ) ;
	qed prop 1 = step 6 ;
}

theorem csbeq1d (ph : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> [_ A / x ]_ C = [_ B / x ]_ C ) ;
}

proof of csbeq1d {
	step 1 : wff = thm csbeq1 () |- ( A = B -> [_ A / x ]_ C = [_ B / x ]_ C ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> [_ A / x ]_ C = [_ B / x ]_ C ) ;
	qed prop 1 = step 2 ;
}

theorem csbid (x : set, A : class)  {
	prop 1 : wff = |- [_ x / x ]_ A = A ;
}

proof of csbid {
	var y : set;
	step 1 : wff = def df-csb () |- [_ x / x ]_ A = { y | [ x / x ] y e. A } ;
	step 2 : wff = thm sbid () |- ( [ x / x ] y e. A <-> y e. A ) ;
	step 3 : wff = thm abbii (step 2) |- { y | [ x / x ] y e. A } = { y | y e. A } ;
	step 4 : wff = thm abid2 () |- { y | y e. A } = A ;
	step 5 : wff = thm 3eqtri (step 1, step 3, step 4) |- [_ x / x ]_ A = A ;
	qed prop 1 = step 5 ;
}

theorem csbeq1a (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( x = A -> B = [_ A / x ]_ B ) ;
}

proof of csbeq1a {
	step 1 : wff = thm csbeq1 () |- ( x = A -> [_ x / x ]_ B = [_ A / x ]_ B ) ;
	step 2 : wff = thm csbid () |- [_ x / x ]_ B = B ;
	step 3 : wff = thm syl5eqr (step 1, step 2) |- ( x = A -> B = [_ A / x ]_ B ) ;
	qed prop 1 = step 3 ;
}

theorem csbcog (x : set, y : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B ) ;
}

proof of csbcog {
	var z : set;
	step 1 : wff = def df-csb () |- [_ y / x ]_ B = { z | [ y / x ] z e. B } ;
	step 2 : wff = thm abeq2i (step 1) |- ( z e. [_ y / x ]_ B <-> [ y / x ] z e. B ) ;
	step 3 : wff = thm sbcbii (step 2) |- ( A e. C -> ( [ A / y ] z e. [_ y / x ]_ B <-> [ A / y ] [ y / x ] z e. B ) ) ;
	step 4 : wff = thm sbccog () |- ( A e. C -> ( [ A / y ] [ y / x ] z e. B <-> [ A / x ] z e. B ) ) ;
	step 5 : wff = thm bitrd (step 3, step 4) |- ( A e. C -> ( [ A / y ] z e. [_ y / x ]_ B <-> [ A / x ] z e. B ) ) ;
	step 6 : wff = thm abbidv (step 5) |- ( A e. C -> { z | [ A / y ] z e. [_ y / x ]_ B } = { z | [ A / x ] z e. B } ) ;
	step 7 : wff = def df-csb () |- [_ A / y ]_ [_ y / x ]_ B = { z | [ A / y ] z e. [_ y / x ]_ B } ;
	step 8 : wff = def df-csb () |- [_ A / x ]_ B = { z | [ A / x ] z e. B } ;
	step 9 : wff = thm 3eqtr4g (step 6, step 7, step 8) |- ( A e. C -> [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B ) ;
	qed prop 1 = step 9 ;
}

theorem csbexg (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. C /\ A. x B e. D ) -> [_ A / x ]_ B e. _V ) ;
}

proof of csbexg {
	var y : set;
	step 1 : wff = thm a4sbc () |- ( A e. C -> ( A. x { y | y e. B } e. _V -> [ A / x ] { y | y e. B } e. _V ) ) ;
	step 2 : wff = thm elisset () |- ( B e. D -> B e. _V ) ;
	step 3 : wff = thm abid2 () |- { y | y e. B } = B ;
	step 4 : wff = thm syl5eqel (step 2, step 3) |- ( B e. D -> { y | y e. B } e. _V ) ;
	step 5 : wff = thm 19_20i (step 4) |- ( A. x B e. D -> A. x { y | y e. B } e. _V ) ;
	step 6 : wff = thm syl5 (step 1, step 5) |- ( A e. C -> ( A. x B e. D -> [ A / x ] { y | y e. B } e. _V ) ) ;
	step 7 : wff = thm imp (step 6) |- ( ( A e. C /\ A. x B e. D ) -> [ A / x ] { y | y e. B } e. _V ) ;
	step 8 : wff = axm ax-17 () |- ( y e. _V -> A. x y e. _V ) ;
	step 9 : wff = thm sbcabel (step 8) |- ( A e. C -> ( [ A / x ] { y | y e. B } e. _V <-> { y | [ A / x ] y e. B } e. _V ) ) ;
	step 10 : wff = thm adantr (step 9) |- ( ( A e. C /\ A. x B e. D ) -> ( [ A / x ] { y | y e. B } e. _V <-> { y | [ A / x ] y e. B } e. _V ) ) ;
	step 11 : wff = thm mpbid (step 7, step 10) |- ( ( A e. C /\ A. x B e. D ) -> { y | [ A / x ] y e. B } e. _V ) ;
	step 12 : wff = def df-csb () |- [_ A / x ]_ B = { y | [ A / x ] y e. B } ;
	step 13 : wff = thm syl5eqel (step 11, step 12) |- ( ( A e. C /\ A. x B e. D ) -> [_ A / x ]_ B e. _V ) ;
	qed prop 1 = step 13 ;
}

theorem csbex (x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- [_ A / x ]_ B e. _V ;
}

proof of csbex {
	step 1 : wff = axm ax-gen (hyp 2) |- A. x B e. _V ;
	step 2 : wff = thm csbexg () |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / x ]_ B e. _V ) ;
	step 3 : wff = thm mp2an (hyp 1, step 1, step 2) |- [_ A / x ]_ B e. _V ;
	qed prop 1 = step 3 ;
}

theorem csbconstgf (x : set, y : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A e. C -> [_ A / x ]_ B = B ) ;
}

proof of csbconstgf {
	step 1 : wff = thm sbcgf (hyp 1) |- ( A e. C -> ( [ A / x ] y e. B <-> y e. B ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( A e. C -> { y | [ A / x ] y e. B } = { y | y e. B } ) ;
	step 3 : wff = thm abid2 () |- { y | y e. B } = B ;
	step 4 : wff = thm syl6eq (step 2, step 3) |- ( A e. C -> { y | [ A / x ] y e. B } = B ) ;
	step 5 : wff = def df-csb () |- [_ A / x ]_ B = { y | [ A / x ] y e. B } ;
	step 6 : wff = thm syl5eq (step 4, step 5) |- ( A e. C -> [_ A / x ]_ B = B ) ;
	qed prop 1 = step 6 ;
}

theorem sbcel12g (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B e. C <-> [_ A / x ]_ B e. [_ A / x ]_ C ) ) ;
}

proof of sbcel12g {
	var y : set, z : set;
	step 1 : wff = thm elisset () |- ( A e. D -> A e. _V ) ;
	step 2 : wff = thm sbcexg () |- ( A e. _V -> ( [ A / x ] E. z ( z = B /\ z e. C ) <-> E. z [ A / x ] ( z = B /\ z e. C ) ) ) ;
	step 3 : wff = def df-clel () |- ( B e. C <-> E. z ( z = B /\ z e. C ) ) ;
	step 4 : wff = thm sbcbii (step 3) |- ( A e. _V -> ( [ A / x ] B e. C <-> [ A / x ] E. z ( z = B /\ z e. C ) ) ) ;
	step 5 : wff = thm dfcleq () |- ( z = B <-> A. y ( y e. z <-> y e. B ) ) ;
	step 6 : wff = thm sbcbii (step 5) |- ( A e. _V -> ( [ A / x ] z = B <-> [ A / x ] A. y ( y e. z <-> y e. B ) ) ) ;
	step 7 : wff = thm sbcalg () |- ( A e. _V -> ( [ A / x ] A. y ( y e. z <-> y e. B ) <-> A. y [ A / x ] ( y e. z <-> y e. B ) ) ) ;
	step 8 : wff = thm sbcbidig () |- ( A e. _V -> ( [ A / x ] ( y e. z <-> y e. B ) <-> ( [ A / x ] y e. z <-> [ A / x ] y e. B ) ) ) ;
	step 9 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 10 : wff = thm sbcgf (step 9) |- ( A e. _V -> ( [ A / x ] y e. z <-> y e. z ) ) ;
	step 11 : wff = thm bibi1d (step 10) |- ( A e. _V -> ( ( [ A / x ] y e. z <-> [ A / x ] y e. B ) <-> ( y e. z <-> [ A / x ] y e. B ) ) ) ;
	step 12 : wff = thm bitrd (step 8, step 11) |- ( A e. _V -> ( [ A / x ] ( y e. z <-> y e. B ) <-> ( y e. z <-> [ A / x ] y e. B ) ) ) ;
	step 13 : wff = thm albidv (step 12) |- ( A e. _V -> ( A. y [ A / x ] ( y e. z <-> y e. B ) <-> A. y ( y e. z <-> [ A / x ] y e. B ) ) ) ;
	step 14 : wff = thm 3bitrd (step 6, step 7, step 13) |- ( A e. _V -> ( [ A / x ] z = B <-> A. y ( y e. z <-> [ A / x ] y e. B ) ) ) ;
	step 15 : wff = thm abeq2 () |- ( z = { y | [ A / x ] y e. B } <-> A. y ( y e. z <-> [ A / x ] y e. B ) ) ;
	step 16 : wff = thm syl6rbbr (step 14, step 15) |- ( A e. _V -> ( z = { y | [ A / x ] y e. B } <-> [ A / x ] z = B ) ) ;
	step 17 : wff = thm elabgt () |- ( ( z e. _V /\ A. y ( y = z -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ) -> ( z e. { y | [ A / x ] y e. C } <-> [ A / x ] z e. C ) ) ;
	step 18 : wff = thm visset () |- z e. _V ;
	step 19 : wff = thm eleq1 () |- ( y = z -> ( y e. C <-> z e. C ) ) ;
	step 20 : wff = thm sbcbidv (step 19) |- ( ( y = z /\ A e. _V ) -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ;
	step 21 : wff = thm expcom (step 20) |- ( A e. _V -> ( y = z -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ) ;
	step 22 : wff = thm 19_21aiv (step 21) |- ( A e. _V -> A. y ( y = z -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ) ;
	step 23 : wff = thm sylancr (step 17, step 18, step 22) |- ( A e. _V -> ( z e. { y | [ A / x ] y e. C } <-> [ A / x ] z e. C ) ) ;
	step 24 : wff = thm anbi12d (step 16, step 23) |- ( A e. _V -> ( ( z = { y | [ A / x ] y e. B } /\ z e. { y | [ A / x ] y e. C } ) <-> ( [ A / x ] z = B /\ [ A / x ] z e. C ) ) ) ;
	step 25 : wff = thm sbcang () |- ( A e. _V -> ( [ A / x ] ( z = B /\ z e. C ) <-> ( [ A / x ] z = B /\ [ A / x ] z e. C ) ) ) ;
	step 26 : wff = thm bitr4d (step 24, step 25) |- ( A e. _V -> ( ( z = { y | [ A / x ] y e. B } /\ z e. { y | [ A / x ] y e. C } ) <-> [ A / x ] ( z = B /\ z e. C ) ) ) ;
	step 27 : wff = thm exbidv (step 26) |- ( A e. _V -> ( E. z ( z = { y | [ A / x ] y e. B } /\ z e. { y | [ A / x ] y e. C } ) <-> E. z [ A / x ] ( z = B /\ z e. C ) ) ) ;
	step 28 : wff = thm 3bitr4d (step 2, step 4, step 27) |- ( A e. _V -> ( [ A / x ] B e. C <-> E. z ( z = { y | [ A / x ] y e. B } /\ z e. { y | [ A / x ] y e. C } ) ) ) ;
	step 29 : wff = def df-clel () |- ( { y | [ A / x ] y e. B } e. { y | [ A / x ] y e. C } <-> E. z ( z = { y | [ A / x ] y e. B } /\ z e. { y | [ A / x ] y e. C } ) ) ;
	step 30 : wff = thm syl6bbr (step 28, step 29) |- ( A e. _V -> ( [ A / x ] B e. C <-> { y | [ A / x ] y e. B } e. { y | [ A / x ] y e. C } ) ) ;
	step 31 : wff = thm syl (step 1, step 30) |- ( A e. D -> ( [ A / x ] B e. C <-> { y | [ A / x ] y e. B } e. { y | [ A / x ] y e. C } ) ) ;
	step 32 : wff = def df-csb () |- [_ A / x ]_ B = { y | [ A / x ] y e. B } ;
	step 33 : wff = def df-csb () |- [_ A / x ]_ C = { y | [ A / x ] y e. C } ;
	step 34 : wff = thm eleq12i (step 32, step 33) |- ( [_ A / x ]_ B e. [_ A / x ]_ C <-> { y | [ A / x ] y e. B } e. { y | [ A / x ] y e. C } ) ;
	step 35 : wff = thm syl6bbr (step 31, step 34) |- ( A e. D -> ( [ A / x ] B e. C <-> [_ A / x ]_ B e. [_ A / x ]_ C ) ) ;
	qed prop 1 = step 35 ;
}

theorem sbceqdig (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
}

proof of sbceqdig {
	var y : set, z : set;
	step 1 : wff = thm elisset () |- ( A e. D -> A e. _V ) ;
	step 2 : wff = thm sbcalg () |- ( A e. _V -> ( [ A / x ] A. z ( z e. B <-> z e. C ) <-> A. z [ A / x ] ( z e. B <-> z e. C ) ) ) ;
	step 3 : wff = thm dfcleq () |- ( B = C <-> A. z ( z e. B <-> z e. C ) ) ;
	step 4 : wff = thm sbcbii (step 3) |- ( A e. _V -> ( [ A / x ] B = C <-> [ A / x ] A. z ( z e. B <-> z e. C ) ) ) ;
	step 5 : wff = thm elabgt () |- ( ( z e. _V /\ A. y ( y = z -> ( [ A / x ] y e. B <-> [ A / x ] z e. B ) ) ) -> ( z e. { y | [ A / x ] y e. B } <-> [ A / x ] z e. B ) ) ;
	step 6 : wff = thm visset () |- z e. _V ;
	step 7 : wff = thm eleq1 () |- ( y = z -> ( y e. B <-> z e. B ) ) ;
	step 8 : wff = thm sbcbidv (step 7) |- ( ( y = z /\ A e. _V ) -> ( [ A / x ] y e. B <-> [ A / x ] z e. B ) ) ;
	step 9 : wff = thm expcom (step 8) |- ( A e. _V -> ( y = z -> ( [ A / x ] y e. B <-> [ A / x ] z e. B ) ) ) ;
	step 10 : wff = thm 19_21aiv (step 9) |- ( A e. _V -> A. y ( y = z -> ( [ A / x ] y e. B <-> [ A / x ] z e. B ) ) ) ;
	step 11 : wff = thm sylancr (step 5, step 6, step 10) |- ( A e. _V -> ( z e. { y | [ A / x ] y e. B } <-> [ A / x ] z e. B ) ) ;
	step 12 : wff = thm elabgt () |- ( ( z e. _V /\ A. y ( y = z -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ) -> ( z e. { y | [ A / x ] y e. C } <-> [ A / x ] z e. C ) ) ;
	step 13 : wff = thm visset () |- z e. _V ;
	step 14 : wff = thm eleq1 () |- ( y = z -> ( y e. C <-> z e. C ) ) ;
	step 15 : wff = thm sbcbidv (step 14) |- ( ( y = z /\ A e. _V ) -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ;
	step 16 : wff = thm expcom (step 15) |- ( A e. _V -> ( y = z -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ) ;
	step 17 : wff = thm 19_21aiv (step 16) |- ( A e. _V -> A. y ( y = z -> ( [ A / x ] y e. C <-> [ A / x ] z e. C ) ) ) ;
	step 18 : wff = thm sylancr (step 12, step 13, step 17) |- ( A e. _V -> ( z e. { y | [ A / x ] y e. C } <-> [ A / x ] z e. C ) ) ;
	step 19 : wff = thm bibi12d (step 11, step 18) |- ( A e. _V -> ( ( z e. { y | [ A / x ] y e. B } <-> z e. { y | [ A / x ] y e. C } ) <-> ( [ A / x ] z e. B <-> [ A / x ] z e. C ) ) ) ;
	step 20 : wff = thm sbcbidig () |- ( A e. _V -> ( [ A / x ] ( z e. B <-> z e. C ) <-> ( [ A / x ] z e. B <-> [ A / x ] z e. C ) ) ) ;
	step 21 : wff = thm bitr4d (step 19, step 20) |- ( A e. _V -> ( ( z e. { y | [ A / x ] y e. B } <-> z e. { y | [ A / x ] y e. C } ) <-> [ A / x ] ( z e. B <-> z e. C ) ) ) ;
	step 22 : wff = thm albidv (step 21) |- ( A e. _V -> ( A. z ( z e. { y | [ A / x ] y e. B } <-> z e. { y | [ A / x ] y e. C } ) <-> A. z [ A / x ] ( z e. B <-> z e. C ) ) ) ;
	step 23 : wff = thm 3bitr4d (step 2, step 4, step 22) |- ( A e. _V -> ( [ A / x ] B = C <-> A. z ( z e. { y | [ A / x ] y e. B } <-> z e. { y | [ A / x ] y e. C } ) ) ) ;
	step 24 : wff = thm dfcleq () |- ( { y | [ A / x ] y e. B } = { y | [ A / x ] y e. C } <-> A. z ( z e. { y | [ A / x ] y e. B } <-> z e. { y | [ A / x ] y e. C } ) ) ;
	step 25 : wff = thm syl6bbr (step 23, step 24) |- ( A e. _V -> ( [ A / x ] B = C <-> { y | [ A / x ] y e. B } = { y | [ A / x ] y e. C } ) ) ;
	step 26 : wff = thm syl (step 1, step 25) |- ( A e. D -> ( [ A / x ] B = C <-> { y | [ A / x ] y e. B } = { y | [ A / x ] y e. C } ) ) ;
	step 27 : wff = def df-csb () |- [_ A / x ]_ B = { y | [ A / x ] y e. B } ;
	step 28 : wff = def df-csb () |- [_ A / x ]_ C = { y | [ A / x ] y e. C } ;
	step 29 : wff = thm eqeq12i (step 27, step 28) |- ( [_ A / x ]_ B = [_ A / x ]_ C <-> { y | [ A / x ] y e. B } = { y | [ A / x ] y e. C } ) ;
	step 30 : wff = thm syl6bbr (step 26, step 29) |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
	qed prop 1 = step 30 ;
}

theorem sbcel1g (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B e. C <-> [_ A / x ]_ B e. C ) ) ;
}

proof of sbcel1g {
	var y : set;
	step 1 : wff = thm sbcel12g () |- ( A e. D -> ( [ A / x ] B e. C <-> [_ A / x ]_ B e. [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. C -> A. x y e. C ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ C = C ) ;
	step 4 : wff = thm eleq2d (step 3) |- ( A e. D -> ( [_ A / x ]_ B e. [_ A / x ]_ C <-> [_ A / x ]_ B e. C ) ) ;
	step 5 : wff = thm bitrd (step 1, step 4) |- ( A e. D -> ( [ A / x ] B e. C <-> [_ A / x ]_ B e. C ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbceq1dig (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = C ) ) ;
}

proof of sbceq1dig {
	var y : set;
	step 1 : wff = thm sbceqdig () |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. C -> A. x y e. C ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ C = C ) ;
	step 4 : wff = thm eqeq2d (step 3) |- ( A e. D -> ( [_ A / x ]_ B = [_ A / x ]_ C <-> [_ A / x ]_ B = C ) ) ;
	step 5 : wff = thm bitrd (step 1, step 4) |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = C ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcel2g (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B e. C <-> B e. [_ A / x ]_ C ) ) ;
}

proof of sbcel2g {
	var y : set;
	step 1 : wff = thm sbcel12g () |- ( A e. D -> ( [ A / x ] B e. C <-> [_ A / x ]_ B e. [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ B = B ) ;
	step 4 : wff = thm eleq1d (step 3) |- ( A e. D -> ( [_ A / x ]_ B e. [_ A / x ]_ C <-> B e. [_ A / x ]_ C ) ) ;
	step 5 : wff = thm bitrd (step 1, step 4) |- ( A e. D -> ( [ A / x ] B e. C <-> B e. [_ A / x ]_ C ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbceq2dig (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B = C <-> B = [_ A / x ]_ C ) ) ;
}

proof of sbceq2dig {
	var y : set;
	step 1 : wff = thm sbceqdig () |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ B = B ) ;
	step 4 : wff = thm eqeq1d (step 3) |- ( A e. D -> ( [_ A / x ]_ B = [_ A / x ]_ C <-> B = [_ A / x ]_ C ) ) ;
	step 5 : wff = thm bitrd (step 1, step 4) |- ( A e. D -> ( [ A / x ] B = C <-> B = [_ A / x ]_ C ) ) ;
	qed prop 1 = step 5 ;
}

theorem csbcomg (x : set, y : set, A : class, B : class, C : class, R : class, S : class)  {
	prop 1 : wff = |- ( ( A e. R /\ B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) ;
}

proof of csbcomg {
	var z : set;
	step 1 : wff = thm sbccomg () |- ( ( A e. _V /\ B e. _V ) -> ( [ A / x ] [ B / y ] z e. C <-> [ B / y ] [ A / x ] z e. C ) ) ;
	step 2 : wff = thm sbcel2g () |- ( B e. _V -> ( [ B / y ] z e. C <-> z e. [_ B / y ]_ C ) ) ;
	step 3 : wff = thm sbcbidv (step 2) |- ( ( B e. _V /\ A e. _V ) -> ( [ A / x ] [ B / y ] z e. C <-> [ A / x ] z e. [_ B / y ]_ C ) ) ;
	step 4 : wff = thm ancoms (step 3) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / x ] [ B / y ] z e. C <-> [ A / x ] z e. [_ B / y ]_ C ) ) ;
	step 5 : wff = thm sbcel2g () |- ( A e. _V -> ( [ A / x ] z e. C <-> z e. [_ A / x ]_ C ) ) ;
	step 6 : wff = thm sbcbidv (step 5) |- ( ( A e. _V /\ B e. _V ) -> ( [ B / y ] [ A / x ] z e. C <-> [ B / y ] z e. [_ A / x ]_ C ) ) ;
	step 7 : wff = thm 3bitr3d (step 1, step 4, step 6) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / x ] z e. [_ B / y ]_ C <-> [ B / y ] z e. [_ A / x ]_ C ) ) ;
	step 8 : wff = thm sbcel2g () |- ( A e. _V -> ( [ A / x ] z e. [_ B / y ]_ C <-> z e. [_ A / x ]_ [_ B / y ]_ C ) ) ;
	step 9 : wff = thm adantr (step 8) |- ( ( A e. _V /\ B e. _V ) -> ( [ A / x ] z e. [_ B / y ]_ C <-> z e. [_ A / x ]_ [_ B / y ]_ C ) ) ;
	step 10 : wff = thm sbcel2g () |- ( B e. _V -> ( [ B / y ] z e. [_ A / x ]_ C <-> z e. [_ B / y ]_ [_ A / x ]_ C ) ) ;
	step 11 : wff = thm adantl (step 10) |- ( ( A e. _V /\ B e. _V ) -> ( [ B / y ] z e. [_ A / x ]_ C <-> z e. [_ B / y ]_ [_ A / x ]_ C ) ) ;
	step 12 : wff = thm 3bitr3d (step 7, step 9, step 11) |- ( ( A e. _V /\ B e. _V ) -> ( z e. [_ A / x ]_ [_ B / y ]_ C <-> z e. [_ B / y ]_ [_ A / x ]_ C ) ) ;
	step 13 : wff = thm eqrdv (step 12) |- ( ( A e. _V /\ B e. _V ) -> [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) ;
	step 14 : wff = thm elisset () |- ( A e. R -> A e. _V ) ;
	step 15 : wff = thm elisset () |- ( B e. S -> B e. _V ) ;
	step 16 : wff = thm syl2an (step 13, step 14, step 15) |- ( ( A e. R /\ B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ B / y ]_ [_ A / x ]_ C ) ;
	qed prop 1 = step 16 ;
}

theorem csbeq2d (ph : wff, x : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. D ) -> [_ A / x ]_ B = [_ A / x ]_ C ) ;
}

proof of csbeq2d {
	step 1 : wff = thm a4sbc () |- ( A e. D -> ( A. x B = C -> [ A / x ] B = C ) ) ;
	step 2 : wff = thm 19_21ai (hyp 1, hyp 2) |- ( ph -> A. x B = C ) ;
	step 3 : wff = thm syl5 (step 1, step 2) |- ( A e. D -> ( ph -> [ A / x ] B = C ) ) ;
	step 4 : wff = thm sbceqdig () |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
	step 5 : wff = thm sylibd (step 3, step 4) |- ( A e. D -> ( ph -> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
	step 6 : wff = thm impcom (step 5) |- ( ( ph /\ A e. D ) -> [_ A / x ]_ B = [_ A / x ]_ C ) ;
	qed prop 1 = step 6 ;
}

theorem csbeq2dv (ph : wff, x : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. D ) -> [_ A / x ]_ B = [_ A / x ]_ C ) ;
}

proof of csbeq2dv {
	step 1 : wff = axm ax-17 () |- ( ph -> A. x ph ) ;
	step 2 : wff = thm csbeq2d (step 1, hyp 1) |- ( ( ph /\ A e. D ) -> [_ A / x ]_ B = [_ A / x ]_ C ) ;
	qed prop 1 = step 2 ;
}

theorem csbeq2i (x : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- ( A e. D -> [_ A / x ]_ B = [_ A / x ]_ C ) ;
}

proof of csbeq2i {
	step 1 : wff = thm sbcth (hyp 1) |- ( A e. D -> [ A / x ] B = C ) ;
	step 2 : wff = thm sbceqdig () |- ( A e. D -> ( [ A / x ] B = C <-> [_ A / x ]_ B = [_ A / x ]_ C ) ) ;
	step 3 : wff = thm mpbid (step 1, step 2) |- ( A e. D -> [_ A / x ]_ B = [_ A / x ]_ C ) ;
	qed prop 1 = step 3 ;
}

theorem csbvarg (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> [_ A / x ]_ x = A ) ;
}

proof of csbvarg {
	var y : set, z : set;
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm sbcel2gv () |- ( y e. _V -> ( [ y / x ] z e. x <-> z e. y ) ) ;
	step 4 : wff = thm abbi1dv (step 3) |- ( y e. _V -> { z | [ y / x ] z e. x } = y ) ;
	step 5 : wff = def df-csb () |- [_ y / x ]_ x = { z | [ y / x ] z e. x } ;
	step 6 : wff = thm syl5eq (step 4, step 5) |- ( y e. _V -> [_ y / x ]_ x = y ) ;
	step 7 : wff = axm ax-mp (step 2, step 6) |- [_ y / x ]_ x = y ;
	step 8 : wff = thm csbeq2i (step 7) |- ( A e. _V -> [_ A / y ]_ [_ y / x ]_ x = [_ A / y ]_ y ) ;
	step 9 : wff = thm csbcog () |- ( A e. _V -> [_ A / y ]_ [_ y / x ]_ x = [_ A / x ]_ x ) ;
	step 10 : wff = thm sbcel2gv () |- ( A e. _V -> ( [ A / y ] z e. y <-> z e. A ) ) ;
	step 11 : wff = thm abbi1dv (step 10) |- ( A e. _V -> { z | [ A / y ] z e. y } = A ) ;
	step 12 : wff = def df-csb () |- [_ A / y ]_ y = { z | [ A / y ] z e. y } ;
	step 13 : wff = thm syl5eq (step 11, step 12) |- ( A e. _V -> [_ A / y ]_ y = A ) ;
	step 14 : wff = thm 3eqtr3d (step 8, step 9, step 13) |- ( A e. _V -> [_ A / x ]_ x = A ) ;
	step 15 : wff = thm syl (step 1, step 14) |- ( A e. B -> [_ A / x ]_ x = A ) ;
	qed prop 1 = step 15 ;
}

theorem sbccsbg (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> y e. [_ A / x ]_ { y | ph } ) ) ;
}

proof of sbccsbg {
	step 1 : wff = thm abid () |- ( y e. { y | ph } <-> ph ) ;
	step 2 : wff = thm sbcbii (step 1) |- ( A e. B -> ( [ A / x ] y e. { y | ph } <-> [ A / x ] ph ) ) ;
	step 3 : wff = thm sbcel2g () |- ( A e. B -> ( [ A / x ] y e. { y | ph } <-> y e. [_ A / x ]_ { y | ph } ) ) ;
	step 4 : wff = thm bitr3d (step 2, step 3) |- ( A e. B -> ( [ A / x ] ph <-> y e. [_ A / x ]_ { y | ph } ) ) ;
	qed prop 1 = step 4 ;
}

theorem sbccsb2g (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> A e. [_ A / x ]_ { x | ph } ) ) ;
}

proof of sbccsb2g {
	step 1 : wff = thm sbcel12g () |- ( A e. B -> ( [ A / x ] x e. { x | ph } <-> [_ A / x ]_ x e. [_ A / x ]_ { x | ph } ) ) ;
	step 2 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 3 : wff = thm sbcbii (step 2) |- ( A e. B -> ( [ A / x ] x e. { x | ph } <-> [ A / x ] ph ) ) ;
	step 4 : wff = thm csbvarg () |- ( A e. B -> [_ A / x ]_ x = A ) ;
	step 5 : wff = thm eleq1d (step 4) |- ( A e. B -> ( [_ A / x ]_ x e. [_ A / x ]_ { x | ph } <-> A e. [_ A / x ]_ { x | ph } ) ) ;
	step 6 : wff = thm 3bitr3d (step 1, step 3, step 5) |- ( A e. B -> ( [ A / x ] ph <-> A e. [_ A / x ]_ { x | ph } ) ) ;
	qed prop 1 = step 6 ;
}

theorem hbcsb1g (x : set, y : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( A e. C -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
}

proof of hbcsb1g {
	var z : set;
	step 1 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 2 : wff = axm ax-17 () |- ( y e. _V -> A. x y e. _V ) ;
	step 3 : wff = thm hbel (hyp 1, step 2) |- ( A e. _V -> A. x A e. _V ) ;
	step 4 : wff = axm ax-17 () |- ( A e. _V -> A. z A e. _V ) ;
	step 5 : wff = thm 19_21ai (step 3, step 4) |- ( A e. _V -> A. x A. z A e. _V ) ;
	step 6 : wff = thm hbsbc1g (hyp 1) |- ( A e. _V -> ( [ A / x ] z e. B -> A. x [ A / x ] z e. B ) ) ;
	step 7 : wff = thm hbabd (step 5, step 6) |- ( A e. _V -> ( y e. { z | [ A / x ] z e. B } -> A. x y e. { z | [ A / x ] z e. B } ) ) ;
	step 8 : wff = def df-csb () |- [_ A / x ]_ B = { z | [ A / x ] z e. B } ;
	step 9 : wff = thm eleq2i (step 8) |- ( y e. [_ A / x ]_ B <-> y e. { z | [ A / x ] z e. B } ) ;
	step 10 : wff = def df-csb () |- [_ A / x ]_ B = { z | [ A / x ] z e. B } ;
	step 11 : wff = thm eleq2i (step 10) |- ( y e. [_ A / x ]_ B <-> y e. { z | [ A / x ] z e. B } ) ;
	step 12 : wff = thm albii (step 11) |- ( A. x y e. [_ A / x ]_ B <-> A. x y e. { z | [ A / x ] z e. B } ) ;
	step 13 : wff = thm 3imtr4g (step 7, step 9, step 12) |- ( A e. _V -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
	step 14 : wff = thm syl (step 1, step 13) |- ( A e. C -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
	qed prop 1 = step 14 ;
}

theorem hbcsb1 (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ;
}

proof of hbcsb1 {
	step 1 : wff = thm hbcsb1g (hyp 2) |- ( A e. _V -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ;
	qed prop 1 = step 2 ;
}

theorem hbcsbg (x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( z e. A -> A. x z e. A ) ;
	hyp 2 : wff = |- ( z e. B -> A. x z e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A e. C -> ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) ;
}

proof of hbcsbg {
	var w : set;
	step 1 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 2 : wff = axm ax-17 () |- ( z e. _V -> A. x z e. _V ) ;
	step 3 : wff = thm hbel (hyp 1, step 2) |- ( A e. _V -> A. x A e. _V ) ;
	step 4 : wff = axm ax-17 () |- ( A e. _V -> A. w A e. _V ) ;
	step 5 : wff = thm 19_21ai (step 3, step 4) |- ( A e. _V -> A. x A. w A e. _V ) ;
	step 6 : wff = axm ax-17 () |- ( z e. w -> A. x z e. w ) ;
	step 7 : wff = thm hbel (step 6, hyp 2) |- ( w e. B -> A. x w e. B ) ;
	step 8 : wff = thm hbsbcg (hyp 1, step 7) |- ( A e. _V -> ( [ A / y ] w e. B -> A. x [ A / y ] w e. B ) ) ;
	step 9 : wff = thm hbabd (step 5, step 8) |- ( A e. _V -> ( z e. { w | [ A / y ] w e. B } -> A. x z e. { w | [ A / y ] w e. B } ) ) ;
	step 10 : wff = def df-csb () |- [_ A / y ]_ B = { w | [ A / y ] w e. B } ;
	step 11 : wff = thm eleq2i (step 10) |- ( z e. [_ A / y ]_ B <-> z e. { w | [ A / y ] w e. B } ) ;
	step 12 : wff = def df-csb () |- [_ A / y ]_ B = { w | [ A / y ] w e. B } ;
	step 13 : wff = thm eleq2i (step 12) |- ( z e. [_ A / y ]_ B <-> z e. { w | [ A / y ] w e. B } ) ;
	step 14 : wff = thm albii (step 13) |- ( A. x z e. [_ A / y ]_ B <-> A. x z e. { w | [ A / y ] w e. B } ) ;
	step 15 : wff = thm 3imtr4g (step 9, step 11, step 14) |- ( A e. _V -> ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) ;
	step 16 : wff = thm syl (step 1, step 15) |- ( A e. C -> ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) ;
	qed prop 1 = step 16 ;
}

theorem hbcsb1gd (ph : wff, x : set, y : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( y e. A -> A. x y e. A ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. C ) -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
}

proof of hbcsb1gd {
	var z : set;
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( ph -> A. x ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. _V -> A. x y e. _V ) ;
	step 3 : wff = thm a1i (step 2) |- ( ph -> ( y e. _V -> A. x y e. _V ) ) ;
	step 4 : wff = thm hbeld (hyp 1, hyp 2, step 3) |- ( ph -> ( A e. _V -> A. x A e. _V ) ) ;
	step 5 : wff = thm hband (step 1, step 4) |- ( ph -> ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ) ;
	step 6 : wff = thm anabsi5 (step 5) |- ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ;
	step 7 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 8 : wff = thm a1i (step 7) |- ( ( ph /\ A e. _V ) -> ( z e. y -> A. x z e. y ) ) ;
	step 9 : wff = thm hbsbc1gd (hyp 1, hyp 2) |- ( ( ph /\ A e. _V ) -> ( [ A / x ] z e. B -> A. x [ A / x ] z e. B ) ) ;
	step 10 : wff = thm sbcel2g () |- ( A e. _V -> ( [ A / x ] z e. B <-> z e. [_ A / x ]_ B ) ) ;
	step 11 : wff = thm adantl (step 10) |- ( ( ph /\ A e. _V ) -> ( [ A / x ] z e. B <-> z e. [_ A / x ]_ B ) ) ;
	step 12 : wff = thm a1d (hyp 1) |- ( ph -> ( ph -> A. x ph ) ) ;
	step 13 : wff = axm ax-17 () |- ( y e. _V -> A. x y e. _V ) ;
	step 14 : wff = thm a1i (step 13) |- ( ph -> ( y e. _V -> A. x y e. _V ) ) ;
	step 15 : wff = thm hbeld (hyp 1, hyp 2, step 14) |- ( ph -> ( A e. _V -> A. x A e. _V ) ) ;
	step 16 : wff = thm hband (step 12, step 15) |- ( ph -> ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ) ;
	step 17 : wff = thm anabsi5 (step 16) |- ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ;
	step 18 : wff = thm sbcel2g () |- ( A e. _V -> ( [ A / x ] z e. B <-> z e. [_ A / x ]_ B ) ) ;
	step 19 : wff = thm adantl (step 18) |- ( ( ph /\ A e. _V ) -> ( [ A / x ] z e. B <-> z e. [_ A / x ]_ B ) ) ;
	step 20 : wff = thm albid (step 17, step 19) |- ( ( ph /\ A e. _V ) -> ( A. x [ A / x ] z e. B <-> A. x z e. [_ A / x ]_ B ) ) ;
	step 21 : wff = thm 3imtr3d (step 9, step 11, step 20) |- ( ( ph /\ A e. _V ) -> ( z e. [_ A / x ]_ B -> A. x z e. [_ A / x ]_ B ) ) ;
	step 22 : wff = thm hbeld (step 6, step 8, step 21) |- ( ( ph /\ A e. _V ) -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
	step 23 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 24 : wff = thm sylan2 (step 22, step 23) |- ( ( ph /\ A e. C ) -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
	qed prop 1 = step 24 ;
}

theorem hbcsbgd (ph : wff, x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> A. y ph ) ;
	hyp 3 : wff = |- ( ph -> ( z e. A -> A. x z e. A ) ) ;
	hyp 4 : wff = |- ( ph -> ( z e. B -> A. x z e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ A e. C ) -> ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) ;
}

proof of hbcsbgd {
	var w : set;
	step 1 : wff = thm a1d (hyp 1) |- ( ph -> ( ph -> A. x ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( z e. _V -> A. x z e. _V ) ;
	step 3 : wff = thm a1i (step 2) |- ( ph -> ( z e. _V -> A. x z e. _V ) ) ;
	step 4 : wff = thm hbeld (hyp 1, hyp 3, step 3) |- ( ph -> ( A e. _V -> A. x A e. _V ) ) ;
	step 5 : wff = thm hband (step 1, step 4) |- ( ph -> ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ) ;
	step 6 : wff = thm anabsi5 (step 5) |- ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ;
	step 7 : wff = axm ax-17 () |- ( w e. z -> A. x w e. z ) ;
	step 8 : wff = thm a1i (step 7) |- ( ( ph /\ A e. _V ) -> ( w e. z -> A. x w e. z ) ) ;
	step 9 : wff = axm ax-17 () |- ( z e. w -> A. x z e. w ) ;
	step 10 : wff = thm a1i (step 9) |- ( ph -> ( z e. w -> A. x z e. w ) ) ;
	step 11 : wff = thm hbeld (hyp 1, step 10, hyp 4) |- ( ph -> ( w e. B -> A. x w e. B ) ) ;
	step 12 : wff = thm hbsbcgd (hyp 1, hyp 2, hyp 3, step 11) |- ( ( ph /\ A e. _V ) -> ( [ A / y ] w e. B -> A. x [ A / y ] w e. B ) ) ;
	step 13 : wff = thm sbcel2g () |- ( A e. _V -> ( [ A / y ] w e. B <-> w e. [_ A / y ]_ B ) ) ;
	step 14 : wff = thm adantl (step 13) |- ( ( ph /\ A e. _V ) -> ( [ A / y ] w e. B <-> w e. [_ A / y ]_ B ) ) ;
	step 15 : wff = thm a1d (hyp 1) |- ( ph -> ( ph -> A. x ph ) ) ;
	step 16 : wff = axm ax-17 () |- ( z e. _V -> A. x z e. _V ) ;
	step 17 : wff = thm a1i (step 16) |- ( ph -> ( z e. _V -> A. x z e. _V ) ) ;
	step 18 : wff = thm hbeld (hyp 1, hyp 3, step 17) |- ( ph -> ( A e. _V -> A. x A e. _V ) ) ;
	step 19 : wff = thm hband (step 15, step 18) |- ( ph -> ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ) ;
	step 20 : wff = thm anabsi5 (step 19) |- ( ( ph /\ A e. _V ) -> A. x ( ph /\ A e. _V ) ) ;
	step 21 : wff = thm sbcel2g () |- ( A e. _V -> ( [ A / y ] w e. B <-> w e. [_ A / y ]_ B ) ) ;
	step 22 : wff = thm adantl (step 21) |- ( ( ph /\ A e. _V ) -> ( [ A / y ] w e. B <-> w e. [_ A / y ]_ B ) ) ;
	step 23 : wff = thm albid (step 20, step 22) |- ( ( ph /\ A e. _V ) -> ( A. x [ A / y ] w e. B <-> A. x w e. [_ A / y ]_ B ) ) ;
	step 24 : wff = thm 3imtr3d (step 12, step 14, step 23) |- ( ( ph /\ A e. _V ) -> ( w e. [_ A / y ]_ B -> A. x w e. [_ A / y ]_ B ) ) ;
	step 25 : wff = thm hbeld (step 6, step 8, step 24) |- ( ( ph /\ A e. _V ) -> ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) ;
	step 26 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 27 : wff = thm sylan2 (step 25, step 26) |- ( ( ph /\ A e. C ) -> ( z e. [_ A / y ]_ B -> A. x z e. [_ A / y ]_ B ) ) ;
	qed prop 1 = step 27 ;
}

theorem csbhypf (x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( z e. A -> A. x z e. A ) ;
	hyp 2 : wff = |- ( z e. C -> A. x z e. C ) ;
	hyp 3 : wff = |- ( x = A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( y = A -> [_ y / x ]_ B = C ) ;
}

proof of csbhypf {
	var w : set;
	step 1 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm eqvincf (step 1, hyp 1, step 2) |- ( y = A <-> E. x ( x = y /\ x = A ) ) ;
	step 4 : wff = thm visset () |- y e. _V ;
	step 5 : wff = axm ax-17 () |- ( w e. y -> A. x w e. y ) ;
	step 6 : wff = thm hbcsb1 (step 4, step 5) |- ( w e. [_ y / x ]_ B -> A. x w e. [_ y / x ]_ B ) ;
	step 7 : wff = thm hbeq (step 6, hyp 2) |- ( [_ y / x ]_ B = C -> A. x [_ y / x ]_ B = C ) ;
	step 8 : wff = thm csbeq1a () |- ( x = y -> B = [_ y / x ]_ B ) ;
	step 9 : wff = thm sylan9req (step 8, hyp 3) |- ( ( x = y /\ x = A ) -> [_ y / x ]_ B = C ) ;
	step 10 : wff = thm 19_23ai (step 7, step 9) |- ( E. x ( x = y /\ x = A ) -> [_ y / x ]_ B = C ) ;
	step 11 : wff = thm sylbi (step 3, step 10) |- ( y = A -> [_ y / x ]_ B = C ) ;
	qed prop 1 = step 11 ;
}

theorem csbiegft (x : set, y : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. D /\ A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) ;
}

proof of csbiegft {
	var z : set;
	step 1 : wff = thm sbciegft () |- ( ( A e. D /\ A. x ( z e. C -> A. x z e. C ) /\ A. x ( x = A -> ( z e. B <-> z e. C ) ) ) -> ( [ A / x ] z e. B <-> z e. C ) ) ;
	step 2 : wff = thm id () |- ( A e. D -> A e. D ) ;
	step 3 : wff = thm visset () |- z e. _V ;
	step 4 : wff = thm eleq1 () |- ( y = z -> ( y e. C <-> z e. C ) ) ;
	step 5 : wff = thm eleq1 () |- ( y = z -> ( y e. C <-> z e. C ) ) ;
	step 6 : wff = thm albidv (step 5) |- ( y = z -> ( A. x y e. C <-> A. x z e. C ) ) ;
	step 7 : wff = thm imbi12d (step 4, step 6) |- ( y = z -> ( ( y e. C -> A. x y e. C ) <-> ( z e. C -> A. x z e. C ) ) ) ;
	step 8 : wff = thm cla4v (step 3, step 7) |- ( A. y ( y e. C -> A. x y e. C ) -> ( z e. C -> A. x z e. C ) ) ;
	step 9 : wff = thm 19_20i (step 8) |- ( A. x A. y ( y e. C -> A. x y e. C ) -> A. x ( z e. C -> A. x z e. C ) ) ;
	step 10 : wff = thm eleq2 () |- ( B = C -> ( z e. B <-> z e. C ) ) ;
	step 11 : wff = thm imim2i (step 10) |- ( ( x = A -> B = C ) -> ( x = A -> ( z e. B <-> z e. C ) ) ) ;
	step 12 : wff = thm 19_20i (step 11) |- ( A. x ( x = A -> B = C ) -> A. x ( x = A -> ( z e. B <-> z e. C ) ) ) ;
	step 13 : wff = thm syl3an (step 1, step 2, step 9, step 12) |- ( ( A e. D /\ A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) -> ( [ A / x ] z e. B <-> z e. C ) ) ;
	step 14 : wff = thm abbi1dv (step 13) |- ( ( A e. D /\ A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) -> { z | [ A / x ] z e. B } = C ) ;
	step 15 : wff = def df-csb () |- [_ A / x ]_ B = { z | [ A / x ] z e. B } ;
	step 16 : wff = thm syl5eq (step 14, step 15) |- ( ( A e. D /\ A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) ;
	qed prop 1 = step 16 ;
}

theorem csbieb (x : set, y : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( y e. C -> A. x y e. C ) ;
	-----------------------
	prop 1 : wff = |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ;
}

proof of csbieb {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 2 : wff = thm hbcsb1 (hyp 1, step 1) |- ( z e. [_ A / x ]_ B -> A. x z e. [_ A / x ]_ B ) ;
	step 3 : wff = thm hbeq (step 2, hyp 2) |- ( [_ A / x ]_ B = C -> A. x [_ A / x ]_ B = C ) ;
	step 4 : wff = thm csbeq1a () |- ( x = A -> B = [_ A / x ]_ B ) ;
	step 5 : wff = thm eqeq1d (step 4) |- ( x = A -> ( B = C <-> [_ A / x ]_ B = C ) ) ;
	step 6 : wff = thm ceqsal (step 3, hyp 1, step 5) |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ;
	qed prop 1 = step 6 ;
}

theorem csbiegf (x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A e. D -> ( y e. C -> A. x y e. C ) ) ;
	hyp 2 : wff = |- ( x = A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( A e. D -> [_ A / x ]_ B = C ) ;
}

proof of csbiegf {
	step 1 : wff = thm 19_21aivv (hyp 1) |- ( A e. D -> A. x A. y ( y e. C -> A. x y e. C ) ) ;
	step 2 : wff = axm ax-gen (hyp 2) |- A. x ( x = A -> B = C ) ;
	step 3 : wff = thm jctir (step 1, step 2) |- ( A e. D -> ( A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) ) ;
	step 4 : wff = thm csbiegft () |- ( ( A e. D /\ A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) ;
	step 5 : wff = thm 3expb (step 4) |- ( ( A e. D /\ ( A. x A. y ( y e. C -> A. x y e. C ) /\ A. x ( x = A -> B = C ) ) ) -> [_ A / x ]_ B = C ) ;
	step 6 : wff = thm mpdan (step 3, step 5) |- ( A e. D -> [_ A / x ]_ B = C ) ;
	qed prop 1 = step 6 ;
}

theorem csbief (x : set, y : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( y e. C -> A. x y e. C ) ;
	hyp 3 : wff = |- ( x = A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- [_ A / x ]_ B = C ;
}

proof of csbief {
	step 1 : wff = axm ax-gen (hyp 3) |- A. x ( x = A -> B = C ) ;
	step 2 : wff = thm csbieb (hyp 1, hyp 2) |- ( A. x ( x = A -> B = C ) <-> [_ A / x ]_ B = C ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- [_ A / x ]_ B = C ;
	qed prop 1 = step 3 ;
}

theorem csbie2t (x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ;
}

proof of csbie2t {
	var z : set;
	step 1 : wff = thm isseti (hyp 1) |- E. x x = A ;
	step 2 : wff = thm isseti (hyp 2) |- E. y y = B ;
	step 3 : wff = thm hba1 () |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> A. x A. x A. y ( ( x = A /\ y = B ) -> C = D ) ) ;
	step 4 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 5 : wff = thm hbcsb1 (hyp 1, step 4) |- ( z e. [_ A / x ]_ [_ B / y ]_ C -> A. x z e. [_ A / x ]_ [_ B / y ]_ C ) ;
	step 6 : wff = axm ax-17 () |- ( z e. D -> A. x z e. D ) ;
	step 7 : wff = thm hbeq (step 5, step 6) |- ( [_ A / x ]_ [_ B / y ]_ C = D -> A. x [_ A / x ]_ [_ B / y ]_ C = D ) ;
	step 8 : wff = thm hba1 () |- ( A. y ( ( x = A /\ y = B ) -> C = D ) -> A. y A. y ( ( x = A /\ y = B ) -> C = D ) ) ;
	step 9 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 10 : wff = axm ax-17 () |- ( z e. B -> A. y z e. B ) ;
	step 11 : wff = thm hbcsb1 (hyp 2, step 10) |- ( z e. [_ B / y ]_ C -> A. y z e. [_ B / y ]_ C ) ;
	step 12 : wff = thm hbcsbg (step 9, step 11) |- ( A e. _V -> ( z e. [_ A / x ]_ [_ B / y ]_ C -> A. y z e. [_ A / x ]_ [_ B / y ]_ C ) ) ;
	step 13 : wff = axm ax-mp (hyp 1, step 12) |- ( z e. [_ A / x ]_ [_ B / y ]_ C -> A. y z e. [_ A / x ]_ [_ B / y ]_ C ) ;
	step 14 : wff = axm ax-17 () |- ( z e. D -> A. y z e. D ) ;
	step 15 : wff = thm hbeq (step 13, step 14) |- ( [_ A / x ]_ [_ B / y ]_ C = D -> A. y [_ A / x ]_ [_ B / y ]_ C = D ) ;
	step 16 : wff = thm csbeq1a () |- ( y = B -> C = [_ B / y ]_ C ) ;
	step 17 : wff = thm csbeq1a () |- ( x = A -> [_ B / y ]_ C = [_ A / x ]_ [_ B / y ]_ C ) ;
	step 18 : wff = thm sylan9eqr (step 16, step 17) |- ( ( x = A /\ y = B ) -> C = [_ A / x ]_ [_ B / y ]_ C ) ;
	step 19 : wff = thm pm3_43 () |- ( ( ( ( x = A /\ y = B ) -> C = [_ A / x ]_ [_ B / y ]_ C ) /\ ( ( x = A /\ y = B ) -> C = D ) ) -> ( ( x = A /\ y = B ) -> ( C = [_ A / x ]_ [_ B / y ]_ C /\ C = D ) ) ) ;
	step 20 : wff = thm mpan (step 18, step 19) |- ( ( ( x = A /\ y = B ) -> C = D ) -> ( ( x = A /\ y = B ) -> ( C = [_ A / x ]_ [_ B / y ]_ C /\ C = D ) ) ) ;
	step 21 : wff = thm eqtr2 () |- ( ( C = [_ A / x ]_ [_ B / y ]_ C /\ C = D ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ;
	step 22 : wff = thm syl6 (step 20, step 21) |- ( ( ( x = A /\ y = B ) -> C = D ) -> ( ( x = A /\ y = B ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ) ;
	step 23 : wff = thm a4s (step 22) |- ( A. y ( ( x = A /\ y = B ) -> C = D ) -> ( ( x = A /\ y = B ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ) ;
	step 24 : wff = thm 19_23ad (step 8, step 15, step 23) |- ( A. y ( ( x = A /\ y = B ) -> C = D ) -> ( E. y ( x = A /\ y = B ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ) ;
	step 25 : wff = thm a4s (step 24) |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> ( E. y ( x = A /\ y = B ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ) ;
	step 26 : wff = thm 19_23ad (step 3, step 7, step 25) |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> ( E. x E. y ( x = A /\ y = B ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ) ;
	step 27 : wff = thm eeanv () |- ( E. x E. y ( x = A /\ y = B ) <-> ( E. x x = A /\ E. y y = B ) ) ;
	step 28 : wff = thm syl5ibr (step 26, step 27) |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> ( ( E. x x = A /\ E. y y = B ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ) ;
	step 29 : wff = thm mp2ani (step 1, step 2, step 28) |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ;
	qed prop 1 = step 29 ;
}

theorem csbie2 (x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- ( ( x = A /\ y = B ) -> C = D ) ;
	-----------------------
	prop 1 : wff = |- [_ A / x ]_ [_ B / y ]_ C = D ;
}

proof of csbie2 {
	step 1 : wff = thm gen2 (hyp 3) |- A. x A. y ( ( x = A /\ y = B ) -> C = D ) ;
	step 2 : wff = thm csbie2t (hyp 1, hyp 2) |- ( A. x A. y ( ( x = A /\ y = B ) -> C = D ) -> [_ A / x ]_ [_ B / y ]_ C = D ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- [_ A / x ]_ [_ B / y ]_ C = D ;
	qed prop 1 = step 3 ;
}

theorem csbnestglem (x : set, y : set, A : class, B : class, C : class, R : class, S : class)  {
	prop 1 : wff = |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
}

proof of csbnestglem {
	var z : set;
	step 1 : wff = thm csbiegft () |- ( ( A e. R /\ A. x A. z ( z e. [_ [_ A / x ]_ B / y ]_ C -> A. x z e. [_ [_ A / x ]_ B / y ]_ C ) /\ A. x ( x = A -> [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 2 : wff = thm pm3_26 () |- ( ( A e. R /\ A. x B e. S ) -> A e. R ) ;
	step 3 : wff = axm ax-17 () |- ( A e. R -> A. x A e. R ) ;
	step 4 : wff = thm hba1 () |- ( A. x B e. S -> A. x A. x B e. S ) ;
	step 5 : wff = thm hban (step 3, step 4) |- ( ( A e. R /\ A. x B e. S ) -> A. x ( A e. R /\ A. x B e. S ) ) ;
	step 6 : wff = thm csbexg () |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ B e. _V ) ;
	step 7 : wff = axm ax-17 () |- ( A e. R -> A. x A e. R ) ;
	step 8 : wff = thm hba1 () |- ( A. x B e. S -> A. x A. x B e. S ) ;
	step 9 : wff = thm hban (step 7, step 8) |- ( ( A e. R /\ A. x B e. S ) -> A. x ( A e. R /\ A. x B e. S ) ) ;
	step 10 : wff = axm ax-17 () |- ( A e. R -> A. y A e. R ) ;
	step 11 : wff = axm ax-17 () |- ( A. x B e. S -> A. y A. x B e. S ) ;
	step 12 : wff = thm hban (step 10, step 11) |- ( ( A e. R /\ A. x B e. S ) -> A. y ( A e. R /\ A. x B e. S ) ) ;
	step 13 : wff = axm ax-17 () |- ( z e. A -> A. x z e. A ) ;
	step 14 : wff = thm hbcsb1g (step 13) |- ( A e. R -> ( z e. [_ A / x ]_ B -> A. x z e. [_ A / x ]_ B ) ) ;
	step 15 : wff = thm adantr (step 14) |- ( ( A e. R /\ A. x B e. S ) -> ( z e. [_ A / x ]_ B -> A. x z e. [_ A / x ]_ B ) ) ;
	step 16 : wff = axm ax-17 () |- ( z e. C -> A. x z e. C ) ;
	step 17 : wff = thm a1i (step 16) |- ( ( A e. R /\ A. x B e. S ) -> ( z e. C -> A. x z e. C ) ) ;
	step 18 : wff = thm hbcsbgd (step 9, step 12, step 15, step 17) |- ( ( ( A e. R /\ A. x B e. S ) /\ [_ A / x ]_ B e. _V ) -> ( z e. [_ [_ A / x ]_ B / y ]_ C -> A. x z e. [_ [_ A / x ]_ B / y ]_ C ) ) ;
	step 19 : wff = thm mpdan (step 6, step 18) |- ( ( A e. R /\ A. x B e. S ) -> ( z e. [_ [_ A / x ]_ B / y ]_ C -> A. x z e. [_ [_ A / x ]_ B / y ]_ C ) ) ;
	step 20 : wff = thm 19_21aiv (step 19) |- ( ( A e. R /\ A. x B e. S ) -> A. z ( z e. [_ [_ A / x ]_ B / y ]_ C -> A. x z e. [_ [_ A / x ]_ B / y ]_ C ) ) ;
	step 21 : wff = thm 19_21ai (step 5, step 20) |- ( ( A e. R /\ A. x B e. S ) -> A. x A. z ( z e. [_ [_ A / x ]_ B / y ]_ C -> A. x z e. [_ [_ A / x ]_ B / y ]_ C ) ) ;
	step 22 : wff = thm csbeq1a () |- ( x = A -> B = [_ A / x ]_ B ) ;
	step 23 : wff = thm csbeq1d (step 22) |- ( x = A -> [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 24 : wff = axm ax-gen (step 23) |- A. x ( x = A -> [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 25 : wff = thm a1i (step 24) |- ( ( A e. R /\ A. x B e. S ) -> A. x ( x = A -> [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ) ;
	step 26 : wff = thm syl3anc (step 1, step 2, step 21, step 25) |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	qed prop 1 = step 26 ;
}

theorem csbnestg (x : set, y : set, A : class, B : class, C : class, R : class, S : class)  {
	prop 1 : wff = |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
}

proof of csbnestg {
	var z : set, w : set;
	step 1 : wff = thm csbcog () |- ( A e. _V -> [_ A / w ]_ [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ A / x ]_ [_ B / z ]_ [_ z / y ]_ C ) ;
	step 2 : wff = thm adantr (step 1) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / w ]_ [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ A / x ]_ [_ B / z ]_ [_ z / y ]_ C ) ;
	step 3 : wff = thm visset () |- w e. _V ;
	step 4 : wff = thm csbnestglem () |- ( ( w e. _V /\ A. x B e. _V ) -> [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 5 : wff = thm mpan (step 3, step 4) |- ( A. x B e. _V -> [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 6 : wff = thm csbeq2dv (step 5) |- ( ( A. x B e. _V /\ A e. _V ) -> [_ A / w ]_ [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ A / w ]_ [_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 7 : wff = thm ancoms (step 6) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / w ]_ [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ A / w ]_ [_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 8 : wff = thm csbnestglem () |- ( ( A e. _V /\ A. w [_ w / x ]_ B e. _V ) -> [_ A / w ]_ [_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C = [_ [_ A / w ]_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 9 : wff = thm visset () |- w e. _V ;
	step 10 : wff = thm csbexg () |- ( ( w e. _V /\ A. x B e. _V ) -> [_ w / x ]_ B e. _V ) ;
	step 11 : wff = thm mpan (step 9, step 10) |- ( A. x B e. _V -> [_ w / x ]_ B e. _V ) ;
	step 12 : wff = thm 19_21aiv (step 11) |- ( A. x B e. _V -> A. w [_ w / x ]_ B e. _V ) ;
	step 13 : wff = thm sylan2 (step 8, step 12) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / w ]_ [_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C = [_ [_ A / w ]_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 14 : wff = thm csbcog () |- ( A e. _V -> [_ A / w ]_ [_ w / x ]_ B = [_ A / x ]_ B ) ;
	step 15 : wff = thm csbeq1d (step 14) |- ( A e. _V -> [_ [_ A / w ]_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C = [_ [_ A / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 16 : wff = thm adantr (step 15) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ [_ A / w ]_ [_ w / x ]_ B / z ]_ [_ z / y ]_ C = [_ [_ A / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 17 : wff = thm 3eqtrd (step 7, step 13, step 16) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / w ]_ [_ w / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ [_ A / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 18 : wff = thm eqtr3d (step 2, step 17) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ [_ A / x ]_ B / z ]_ [_ z / y ]_ C ) ;
	step 19 : wff = thm hba1 () |- ( A. x B e. _V -> A. x A. x B e. _V ) ;
	step 20 : wff = thm csbcog () |- ( B e. _V -> [_ B / z ]_ [_ z / y ]_ C = [_ B / y ]_ C ) ;
	step 21 : wff = thm a4s (step 20) |- ( A. x B e. _V -> [_ B / z ]_ [_ z / y ]_ C = [_ B / y ]_ C ) ;
	step 22 : wff = thm csbeq2d (step 19, step 21) |- ( ( A. x B e. _V /\ A e. _V ) -> [_ A / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ A / x ]_ [_ B / y ]_ C ) ;
	step 23 : wff = thm ancoms (step 22) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / x ]_ [_ B / z ]_ [_ z / y ]_ C = [_ A / x ]_ [_ B / y ]_ C ) ;
	step 24 : wff = thm csbexg () |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / x ]_ B e. _V ) ;
	step 25 : wff = thm csbcog () |- ( [_ A / x ]_ B e. _V -> [_ [_ A / x ]_ B / z ]_ [_ z / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 26 : wff = thm syl (step 24, step 25) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ [_ A / x ]_ B / z ]_ [_ z / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 27 : wff = thm 3eqtr3d (step 18, step 23, step 26) |- ( ( A e. _V /\ A. x B e. _V ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 28 : wff = thm elisset () |- ( A e. R -> A e. _V ) ;
	step 29 : wff = thm elisset () |- ( B e. S -> B e. _V ) ;
	step 30 : wff = thm 19_20i (step 29) |- ( A. x B e. S -> A. x B e. _V ) ;
	step 31 : wff = thm syl2an (step 27, step 28, step 30) |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	qed prop 1 = step 31 ;
}

theorem csbnest1g (x : set, A : class, B : class, C : class, R : class, S : class)  {
	prop 1 : wff = |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ;
}

proof of csbnest1g {
	var y : set;
	step 1 : wff = thm csbiegft () |- ( ( A e. _V /\ A. x A. y ( y e. [_ [_ A / x ]_ B / x ]_ C -> A. x y e. [_ [_ A / x ]_ B / x ]_ C ) /\ A. x ( x = A -> [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ) -> [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ;
	step 2 : wff = thm pm3_26 () |- ( ( A e. _V /\ A. x B e. S ) -> A e. _V ) ;
	step 3 : wff = axm ax-17 () |- ( A e. _V -> A. x A e. _V ) ;
	step 4 : wff = thm hba1 () |- ( A. x B e. S -> A. x A. x B e. S ) ;
	step 5 : wff = thm hban (step 3, step 4) |- ( ( A e. _V /\ A. x B e. S ) -> A. x ( A e. _V /\ A. x B e. S ) ) ;
	step 6 : wff = thm csbexg () |- ( ( A e. _V /\ A. x B e. S ) -> [_ A / x ]_ B e. _V ) ;
	step 7 : wff = axm ax-17 () |- ( A e. _V -> A. x A e. _V ) ;
	step 8 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 9 : wff = thm hbcsb1g (step 8) |- ( A e. _V -> ( y e. [_ A / x ]_ B -> A. x y e. [_ A / x ]_ B ) ) ;
	step 10 : wff = thm hbcsb1gd (step 7, step 9) |- ( ( A e. _V /\ [_ A / x ]_ B e. _V ) -> ( y e. [_ [_ A / x ]_ B / x ]_ C -> A. x y e. [_ [_ A / x ]_ B / x ]_ C ) ) ;
	step 11 : wff = thm syldan (step 6, step 10) |- ( ( A e. _V /\ A. x B e. S ) -> ( y e. [_ [_ A / x ]_ B / x ]_ C -> A. x y e. [_ [_ A / x ]_ B / x ]_ C ) ) ;
	step 12 : wff = thm 19_21aiv (step 11) |- ( ( A e. _V /\ A. x B e. S ) -> A. y ( y e. [_ [_ A / x ]_ B / x ]_ C -> A. x y e. [_ [_ A / x ]_ B / x ]_ C ) ) ;
	step 13 : wff = thm 19_21ai (step 5, step 12) |- ( ( A e. _V /\ A. x B e. S ) -> A. x A. y ( y e. [_ [_ A / x ]_ B / x ]_ C -> A. x y e. [_ [_ A / x ]_ B / x ]_ C ) ) ;
	step 14 : wff = thm csbeq1a () |- ( x = A -> B = [_ A / x ]_ B ) ;
	step 15 : wff = thm csbeq1d (step 14) |- ( x = A -> [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ;
	step 16 : wff = axm ax-gen (step 15) |- A. x ( x = A -> [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ;
	step 17 : wff = thm a1i (step 16) |- ( ( A e. _V /\ A. x B e. S ) -> A. x ( x = A -> [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ) ;
	step 18 : wff = thm syl3anc (step 1, step 2, step 13, step 17) |- ( ( A e. _V /\ A. x B e. S ) -> [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ;
	step 19 : wff = thm elisset () |- ( A e. R -> A e. _V ) ;
	step 20 : wff = thm sylan (step 18, step 19) |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / x ]_ C = [_ [_ A / x ]_ B / x ]_ C ) ;
	qed prop 1 = step 20 ;
}

theorem sbcnestg (ph : wff, x : set, y : set, A : class, B : class, R : class, S : class)  {
	prop 1 : wff = |- ( ( A e. R /\ A. x B e. S ) -> ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) ;
}

proof of sbcnestg {
	step 1 : wff = thm hba1 () |- ( A. x B e. _V -> A. x A. x B e. _V ) ;
	step 2 : wff = thm sbccsb2g () |- ( B e. _V -> ( [ B / y ] ph <-> B e. [_ B / y ]_ { y | ph } ) ) ;
	step 3 : wff = thm a4s (step 2) |- ( A. x B e. _V -> ( [ B / y ] ph <-> B e. [_ B / y ]_ { y | ph } ) ) ;
	step 4 : wff = thm sbcbid (step 1, step 3) |- ( ( A. x B e. _V /\ A e. R ) -> ( [ A / x ] [ B / y ] ph <-> [ A / x ] B e. [_ B / y ]_ { y | ph } ) ) ;
	step 5 : wff = thm ancoms (step 4) |- ( ( A e. R /\ A. x B e. _V ) -> ( [ A / x ] [ B / y ] ph <-> [ A / x ] B e. [_ B / y ]_ { y | ph } ) ) ;
	step 6 : wff = thm sbcel12g () |- ( A e. R -> ( [ A / x ] B e. [_ B / y ]_ { y | ph } <-> [_ A / x ]_ B e. [_ A / x ]_ [_ B / y ]_ { y | ph } ) ) ;
	step 7 : wff = thm adantr (step 6) |- ( ( A e. R /\ A. x B e. _V ) -> ( [ A / x ] B e. [_ B / y ]_ { y | ph } <-> [_ A / x ]_ B e. [_ A / x ]_ [_ B / y ]_ { y | ph } ) ) ;
	step 8 : wff = thm csbnestg () |- ( ( A e. R /\ A. x B e. _V ) -> [_ A / x ]_ [_ B / y ]_ { y | ph } = [_ [_ A / x ]_ B / y ]_ { y | ph } ) ;
	step 9 : wff = thm eleq2d (step 8) |- ( ( A e. R /\ A. x B e. _V ) -> ( [_ A / x ]_ B e. [_ A / x ]_ [_ B / y ]_ { y | ph } <-> [_ A / x ]_ B e. [_ [_ A / x ]_ B / y ]_ { y | ph } ) ) ;
	step 10 : wff = thm csbexg () |- ( ( A e. R /\ A. x B e. _V ) -> [_ A / x ]_ B e. _V ) ;
	step 11 : wff = thm sbccsb2g () |- ( [_ A / x ]_ B e. _V -> ( [ [_ A / x ]_ B / y ] ph <-> [_ A / x ]_ B e. [_ [_ A / x ]_ B / y ]_ { y | ph } ) ) ;
	step 12 : wff = thm syl (step 10, step 11) |- ( ( A e. R /\ A. x B e. _V ) -> ( [ [_ A / x ]_ B / y ] ph <-> [_ A / x ]_ B e. [_ [_ A / x ]_ B / y ]_ { y | ph } ) ) ;
	step 13 : wff = thm bitr4d (step 9, step 12) |- ( ( A e. R /\ A. x B e. _V ) -> ( [_ A / x ]_ B e. [_ A / x ]_ [_ B / y ]_ { y | ph } <-> [ [_ A / x ]_ B / y ] ph ) ) ;
	step 14 : wff = thm 3bitrd (step 5, step 7, step 13) |- ( ( A e. R /\ A. x B e. _V ) -> ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) ;
	step 15 : wff = thm elisset () |- ( B e. S -> B e. _V ) ;
	step 16 : wff = thm 19_20i (step 15) |- ( A. x B e. S -> A. x B e. _V ) ;
	step 17 : wff = thm sylan2 (step 14, step 16) |- ( ( A e. R /\ A. x B e. S ) -> ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) ;
	qed prop 1 = step 17 ;
}

theorem csbidmg (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) ;
}

proof of csbidmg {
	var y : set;
	step 1 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 2 : wff = axm ax-17 () |- ( A e. _V -> A. x A e. _V ) ;
	step 3 : wff = thm csbnest1g () |- ( ( A e. _V /\ A. x A e. _V ) -> [_ A / x ]_ [_ A / x ]_ B = [_ [_ A / x ]_ A / x ]_ B ) ;
	step 4 : wff = thm mpdan (step 2, step 3) |- ( A e. _V -> [_ A / x ]_ [_ A / x ]_ B = [_ [_ A / x ]_ A / x ]_ B ) ;
	step 5 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 6 : wff = thm csbconstgf (step 5) |- ( A e. _V -> [_ A / x ]_ A = A ) ;
	step 7 : wff = thm csbeq1d (step 6) |- ( A e. _V -> [_ [_ A / x ]_ A / x ]_ B = [_ A / x ]_ B ) ;
	step 8 : wff = thm eqtrd (step 4, step 7) |- ( A e. _V -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) ;
	step 9 : wff = thm syl (step 1, step 8) |- ( A e. C -> [_ A / x ]_ [_ A / x ]_ B = [_ A / x ]_ B ) ;
	qed prop 1 = step 9 ;
}

theorem csbco3g (x : set, y : set, A : class, B : class, C : class, D : class, R : class, S : class)  {
	hyp 1 : wff = |- ( x = A -> B = D ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ D / y ]_ C ) ;
}

proof of csbco3g {
	var z : set;
	step 1 : wff = thm csbnestg () |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ [_ A / x ]_ B / y ]_ C ) ;
	step 2 : wff = axm ax-17 () |- ( z e. D -> A. x z e. D ) ;
	step 3 : wff = thm gen2 (step 2) |- A. x A. z ( z e. D -> A. x z e. D ) ;
	step 4 : wff = axm ax-gen (hyp 1) |- A. x ( x = A -> B = D ) ;
	step 5 : wff = thm csbiegft () |- ( ( A e. R /\ A. x A. z ( z e. D -> A. x z e. D ) /\ A. x ( x = A -> B = D ) ) -> [_ A / x ]_ B = D ) ;
	step 6 : wff = thm mp3an23 (step 3, step 4, step 5) |- ( A e. R -> [_ A / x ]_ B = D ) ;
	step 7 : wff = thm csbeq1d (step 6) |- ( A e. R -> [_ [_ A / x ]_ B / y ]_ C = [_ D / y ]_ C ) ;
	step 8 : wff = thm adantr (step 7) |- ( ( A e. R /\ A. x B e. S ) -> [_ [_ A / x ]_ B / y ]_ C = [_ D / y ]_ C ) ;
	step 9 : wff = thm eqtrd (step 1, step 8) |- ( ( A e. R /\ A. x B e. S ) -> [_ A / x ]_ [_ B / y ]_ C = [_ D / y ]_ C ) ;
	qed prop 1 = step 9 ;
}

theorem sbcco3g (ph : wff, x : set, y : set, A : class, B : class, C : class, R : class, S : class)  {
	hyp 1 : wff = |- ( x = A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ( A e. R /\ A. x B e. S ) -> ( [ A / x ] [ B / y ] ph <-> [ C / y ] ph ) ) ;
}

proof of sbcco3g {
	var z : set;
	step 1 : wff = thm sbcnestg () |- ( ( A e. R /\ A. x B e. S ) -> ( [ A / x ] [ B / y ] ph <-> [ [_ A / x ]_ B / y ] ph ) ) ;
	step 2 : wff = axm ax-17 () |- ( z e. C -> A. x z e. C ) ;
	step 3 : wff = thm gen2 (step 2) |- A. x A. z ( z e. C -> A. x z e. C ) ;
	step 4 : wff = axm ax-gen (hyp 1) |- A. x ( x = A -> B = C ) ;
	step 5 : wff = thm csbiegft () |- ( ( A e. R /\ A. x A. z ( z e. C -> A. x z e. C ) /\ A. x ( x = A -> B = C ) ) -> [_ A / x ]_ B = C ) ;
	step 6 : wff = thm mp3an23 (step 3, step 4, step 5) |- ( A e. R -> [_ A / x ]_ B = C ) ;
	step 7 : wff = thm dfsbcq () |- ( [_ A / x ]_ B = C -> ( [ [_ A / x ]_ B / y ] ph <-> [ C / y ] ph ) ) ;
	step 8 : wff = thm syl (step 6, step 7) |- ( A e. R -> ( [ [_ A / x ]_ B / y ] ph <-> [ C / y ] ph ) ) ;
	step 9 : wff = thm adantr (step 8) |- ( ( A e. R /\ A. x B e. S ) -> ( [ [_ A / x ]_ B / y ] ph <-> [ C / y ] ph ) ) ;
	step 10 : wff = thm bitrd (step 1, step 9) |- ( ( A e. R /\ A. x B e. S ) -> ( [ A / x ] [ B / y ] ph <-> [ C / y ] ph ) ) ;
	qed prop 1 = step 10 ;
}

theorem ra4csbela (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A. x e. B C e. D ) -> [_ A / x ]_ C e. D ) ;
}

proof of ra4csbela {
	step 1 : wff = thm ra4sbc () |- ( A e. B -> ( A. x e. B C e. D -> [ A / x ] C e. D ) ) ;
	step 2 : wff = thm sbcel1g () |- ( A e. B -> ( [ A / x ] C e. D <-> [_ A / x ]_ C e. D ) ) ;
	step 3 : wff = thm sylibd (step 1, step 2) |- ( A e. B -> ( A. x e. B C e. D -> [_ A / x ]_ C e. D ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( A e. B /\ A. x e. B C e. D ) -> [_ A / x ]_ C e. D ) ;
	qed prop 1 = step 4 ;
}

theorem csbabg (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> [_ A / x ]_ { y | ph } = { y | [ A / x ] ph } ) ;
}

proof of csbabg {
	var z : set;
	step 1 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 2 : wff = thm visset () |- z e. _V ;
	step 3 : wff = thm sbccomg () |- ( ( z e. _V /\ A e. _V ) -> ( [ z / y ] [ A / x ] ph <-> [ A / x ] [ z / y ] ph ) ) ;
	step 4 : wff = thm mpan (step 2, step 3) |- ( A e. _V -> ( [ z / y ] [ A / x ] ph <-> [ A / x ] [ z / y ] ph ) ) ;
	step 5 : wff = def df-clab () |- ( z e. { y | ph } <-> [ z / y ] ph ) ;
	step 6 : wff = thm sbcbii (step 5) |- ( A e. _V -> ( [ A / x ] z e. { y | ph } <-> [ A / x ] [ z / y ] ph ) ) ;
	step 7 : wff = thm bitr4d (step 4, step 6) |- ( A e. _V -> ( [ z / y ] [ A / x ] ph <-> [ A / x ] z e. { y | ph } ) ) ;
	step 8 : wff = thm abbidv (step 7) |- ( A e. _V -> { z | [ z / y ] [ A / x ] ph } = { z | [ A / x ] z e. { y | ph } } ) ;
	step 9 : wff = axm ax-17 () |- ( [ A / x ] ph -> A. z [ A / x ] ph ) ;
	step 10 : wff = thm hbs1 () |- ( [ z / y ] [ A / x ] ph -> A. y [ z / y ] [ A / x ] ph ) ;
	step 11 : wff = thm sbequ12 () |- ( y = z -> ( [ A / x ] ph <-> [ z / y ] [ A / x ] ph ) ) ;
	step 12 : wff = thm cbvab (step 9, step 10, step 11) |- { y | [ A / x ] ph } = { z | [ z / y ] [ A / x ] ph } ;
	step 13 : wff = thm syl5eq (step 8, step 12) |- ( A e. _V -> { y | [ A / x ] ph } = { z | [ A / x ] z e. { y | ph } } ) ;
	step 14 : wff = def df-csb () |- [_ A / x ]_ { y | ph } = { z | [ A / x ] z e. { y | ph } } ;
	step 15 : wff = thm syl6reqr (step 13, step 14) |- ( A e. _V -> [_ A / x ]_ { y | ph } = { y | [ A / x ] ph } ) ;
	step 16 : wff = thm syl (step 1, step 15) |- ( A e. B -> [_ A / x ]_ { y | ph } = { y | [ A / x ] ph } ) ;
	qed prop 1 = step 16 ;
}

constant {
	symbol \ ;
}

constant {
	symbol u. ;
}

constant {
	symbol i^i ;
}

constant {
	symbol C_ ;
}

constant {
	symbol C. ;
}

rule cdif (A : class, B : class) {
	term : class = # ( A \ B ) ;
}

rule cun (A : class, B : class) {
	term : class = # ( A u. B ) ;
}

rule cin (A : class, B : class) {
	term : class = # ( A i^i B ) ;
}

rule wss (A : class, B : class) {
	term : wff = # A C_ B ;
}

rule wpss (A : class, B : class) {
	term : wff = # A C. B ;
}

theorem difjust (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- { x | ( x e. A /\ -. x e. B ) } = { y | ( y e. A /\ -. y e. B ) } ;
}

proof of difjust {
	var z : set;
	step 1 : wff = def df-clab () |- ( z e. { x | ( x e. A /\ -. x e. B ) } <-> [ z / x ] ( x e. A /\ -. x e. B ) ) ;
	step 2 : wff = thm sban () |- ( [ z / x ] ( x e. A /\ -. x e. B ) <-> ( [ z / x ] x e. A /\ [ z / x ] -. x e. B ) ) ;
	step 3 : wff = thm clelsb3 () |- ( [ z / x ] x e. A <-> z e. A ) ;
	step 4 : wff = thm sbn () |- ( [ z / x ] -. x e. B <-> -. [ z / x ] x e. B ) ;
	step 5 : wff = thm clelsb3 () |- ( [ z / x ] x e. B <-> z e. B ) ;
	step 6 : wff = thm notbii (step 5) |- ( -. [ z / x ] x e. B <-> -. z e. B ) ;
	step 7 : wff = thm bitri (step 4, step 6) |- ( [ z / x ] -. x e. B <-> -. z e. B ) ;
	step 8 : wff = thm anbi12i (step 3, step 7) |- ( ( [ z / x ] x e. A /\ [ z / x ] -. x e. B ) <-> ( z e. A /\ -. z e. B ) ) ;
	step 9 : wff = thm 3bitri (step 1, step 2, step 8) |- ( z e. { x | ( x e. A /\ -. x e. B ) } <-> ( z e. A /\ -. z e. B ) ) ;
	step 10 : wff = def df-clab () |- ( z e. { y | ( y e. A /\ -. y e. B ) } <-> [ z / y ] ( y e. A /\ -. y e. B ) ) ;
	step 11 : wff = thm sban () |- ( [ z / y ] ( y e. A /\ -. y e. B ) <-> ( [ z / y ] y e. A /\ [ z / y ] -. y e. B ) ) ;
	step 12 : wff = thm clelsb3 () |- ( [ z / y ] y e. A <-> z e. A ) ;
	step 13 : wff = thm sbn () |- ( [ z / y ] -. y e. B <-> -. [ z / y ] y e. B ) ;
	step 14 : wff = thm clelsb3 () |- ( [ z / y ] y e. B <-> z e. B ) ;
	step 15 : wff = thm notbii (step 14) |- ( -. [ z / y ] y e. B <-> -. z e. B ) ;
	step 16 : wff = thm bitri (step 13, step 15) |- ( [ z / y ] -. y e. B <-> -. z e. B ) ;
	step 17 : wff = thm anbi12i (step 12, step 16) |- ( ( [ z / y ] y e. A /\ [ z / y ] -. y e. B ) <-> ( z e. A /\ -. z e. B ) ) ;
	step 18 : wff = thm 3bitri (step 10, step 11, step 17) |- ( z e. { y | ( y e. A /\ -. y e. B ) } <-> ( z e. A /\ -. z e. B ) ) ;
	step 19 : wff = thm bitr4i (step 9, step 18) |- ( z e. { x | ( x e. A /\ -. x e. B ) } <-> z e. { y | ( y e. A /\ -. y e. B ) } ) ;
	step 20 : wff = thm eqriv (step 19) |- { x | ( x e. A /\ -. x e. B ) } = { y | ( y e. A /\ -. y e. B ) } ;
	qed prop 1 = step 20 ;
}

definition df-dif (x : set, A : class, B : class)  {
	defiendum : class = # ( A \ B ) ;
	definiens : class = # { x | ( x e. A /\ -. x e. B ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem unjust (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- { x | ( x e. A \/ x e. B ) } = { y | ( y e. A \/ y e. B ) } ;
}

proof of unjust {
	var z : set;
	step 1 : wff = def df-clab () |- ( z e. { x | ( x e. A \/ x e. B ) } <-> [ z / x ] ( x e. A \/ x e. B ) ) ;
	step 2 : wff = thm sbor () |- ( [ z / x ] ( x e. A \/ x e. B ) <-> ( [ z / x ] x e. A \/ [ z / x ] x e. B ) ) ;
	step 3 : wff = thm clelsb3 () |- ( [ z / x ] x e. A <-> z e. A ) ;
	step 4 : wff = thm clelsb3 () |- ( [ z / x ] x e. B <-> z e. B ) ;
	step 5 : wff = thm orbi12i (step 3, step 4) |- ( ( [ z / x ] x e. A \/ [ z / x ] x e. B ) <-> ( z e. A \/ z e. B ) ) ;
	step 6 : wff = thm 3bitri (step 1, step 2, step 5) |- ( z e. { x | ( x e. A \/ x e. B ) } <-> ( z e. A \/ z e. B ) ) ;
	step 7 : wff = def df-clab () |- ( z e. { y | ( y e. A \/ y e. B ) } <-> [ z / y ] ( y e. A \/ y e. B ) ) ;
	step 8 : wff = thm sbor () |- ( [ z / y ] ( y e. A \/ y e. B ) <-> ( [ z / y ] y e. A \/ [ z / y ] y e. B ) ) ;
	step 9 : wff = thm clelsb3 () |- ( [ z / y ] y e. A <-> z e. A ) ;
	step 10 : wff = thm clelsb3 () |- ( [ z / y ] y e. B <-> z e. B ) ;
	step 11 : wff = thm orbi12i (step 9, step 10) |- ( ( [ z / y ] y e. A \/ [ z / y ] y e. B ) <-> ( z e. A \/ z e. B ) ) ;
	step 12 : wff = thm 3bitri (step 7, step 8, step 11) |- ( z e. { y | ( y e. A \/ y e. B ) } <-> ( z e. A \/ z e. B ) ) ;
	step 13 : wff = thm bitr4i (step 6, step 12) |- ( z e. { x | ( x e. A \/ x e. B ) } <-> z e. { y | ( y e. A \/ y e. B ) } ) ;
	step 14 : wff = thm eqriv (step 13) |- { x | ( x e. A \/ x e. B ) } = { y | ( y e. A \/ y e. B ) } ;
	qed prop 1 = step 14 ;
}

definition df-un (x : set, A : class, B : class)  {
	defiendum : class = # ( A u. B ) ;
	definiens : class = # { x | ( x e. A \/ x e. B ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem injust (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- { x | ( x e. A /\ x e. B ) } = { y | ( y e. A /\ y e. B ) } ;
}

proof of injust {
	var z : set;
	step 1 : wff = def df-clab () |- ( z e. { x | ( x e. A /\ x e. B ) } <-> [ z / x ] ( x e. A /\ x e. B ) ) ;
	step 2 : wff = thm sban () |- ( [ z / x ] ( x e. A /\ x e. B ) <-> ( [ z / x ] x e. A /\ [ z / x ] x e. B ) ) ;
	step 3 : wff = thm clelsb3 () |- ( [ z / x ] x e. A <-> z e. A ) ;
	step 4 : wff = thm clelsb3 () |- ( [ z / x ] x e. B <-> z e. B ) ;
	step 5 : wff = thm anbi12i (step 3, step 4) |- ( ( [ z / x ] x e. A /\ [ z / x ] x e. B ) <-> ( z e. A /\ z e. B ) ) ;
	step 6 : wff = thm 3bitri (step 1, step 2, step 5) |- ( z e. { x | ( x e. A /\ x e. B ) } <-> ( z e. A /\ z e. B ) ) ;
	step 7 : wff = def df-clab () |- ( z e. { y | ( y e. A /\ y e. B ) } <-> [ z / y ] ( y e. A /\ y e. B ) ) ;
	step 8 : wff = thm sban () |- ( [ z / y ] ( y e. A /\ y e. B ) <-> ( [ z / y ] y e. A /\ [ z / y ] y e. B ) ) ;
	step 9 : wff = thm clelsb3 () |- ( [ z / y ] y e. A <-> z e. A ) ;
	step 10 : wff = thm clelsb3 () |- ( [ z / y ] y e. B <-> z e. B ) ;
	step 11 : wff = thm anbi12i (step 9, step 10) |- ( ( [ z / y ] y e. A /\ [ z / y ] y e. B ) <-> ( z e. A /\ z e. B ) ) ;
	step 12 : wff = thm 3bitri (step 7, step 8, step 11) |- ( z e. { y | ( y e. A /\ y e. B ) } <-> ( z e. A /\ z e. B ) ) ;
	step 13 : wff = thm bitr4i (step 6, step 12) |- ( z e. { x | ( x e. A /\ x e. B ) } <-> z e. { y | ( y e. A /\ y e. B ) } ) ;
	step 14 : wff = thm eqriv (step 13) |- { x | ( x e. A /\ x e. B ) } = { y | ( y e. A /\ y e. B ) } ;
	qed prop 1 = step 14 ;
}

definition df-in (x : set, A : class, B : class)  {
	defiendum : class = # ( A i^i B ) ;
	definiens : class = # { x | ( x e. A /\ x e. B ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem dfin5 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) = { x e. A | x e. B } ;
}

proof of dfin5 {
	step 1 : wff = def df-in () |- ( A i^i B ) = { x | ( x e. A /\ x e. B ) } ;
	step 2 : wff = def df-rab () |- { x e. A | x e. B } = { x | ( x e. A /\ x e. B ) } ;
	step 3 : wff = thm eqtr4i (step 1, step 2) |- ( A i^i B ) = { x e. A | x e. B } ;
	qed prop 1 = step 3 ;
}

definition df-ss (A : class, B : class)  {
	defiendum : wff = # A C_ B ;
	definiens : wff = # ( A i^i B ) = A ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem dfss (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> A = ( A i^i B ) ) ;
}

proof of dfss {
	step 1 : wff = def df-ss () |- ( A C_ B <-> ( A i^i B ) = A ) ;
	step 2 : wff = thm eqcom () |- ( ( A i^i B ) = A <-> A = ( A i^i B ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A C_ B <-> A = ( A i^i B ) ) ;
	qed prop 1 = step 3 ;
}

definition df-pss (A : class, B : class)  {
	defiendum : wff = # A C. B ;
	definiens : wff = # ( A C_ B /\ A =/= B ) ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem dfdif2 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A \ B ) = { x e. A | -. x e. B } ;
}

proof of dfdif2 {
	step 1 : wff = def df-dif () |- ( A \ B ) = { x | ( x e. A /\ -. x e. B ) } ;
	step 2 : wff = def df-rab () |- { x e. A | -. x e. B } = { x | ( x e. A /\ -. x e. B ) } ;
	step 3 : wff = thm eqtr4i (step 1, step 2) |- ( A \ B ) = { x e. A | -. x e. B } ;
	qed prop 1 = step 3 ;
}

theorem eldif (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) ;
}

proof of eldif {
	var x : set;
	step 1 : wff = thm elisset () |- ( A e. ( B \ C ) -> A e. _V ) ;
	step 2 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 3 : wff = thm adantr (step 2) |- ( ( A e. B /\ -. A e. C ) -> A e. _V ) ;
	step 4 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = A -> ( x e. C <-> A e. C ) ) ;
	step 6 : wff = thm notbid (step 5) |- ( x = A -> ( -. x e. C <-> -. A e. C ) ) ;
	step 7 : wff = thm anbi12d (step 4, step 6) |- ( x = A -> ( ( x e. B /\ -. x e. C ) <-> ( A e. B /\ -. A e. C ) ) ) ;
	step 8 : wff = def df-dif () |- ( B \ C ) = { x | ( x e. B /\ -. x e. C ) } ;
	step 9 : wff = thm elab2g (step 7, step 8) |- ( A e. _V -> ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) ) ;
	step 10 : wff = thm pm5_21nii (step 1, step 3, step 9) |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) ;
	qed prop 1 = step 10 ;
}

theorem dfss2 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
}

proof of dfss2 {
	step 1 : wff = thm dfss () |- ( A C_ B <-> A = ( A i^i B ) ) ;
	step 2 : wff = def df-in () |- ( A i^i B ) = { x | ( x e. A /\ x e. B ) } ;
	step 3 : wff = thm eqeq2i (step 2) |- ( A = ( A i^i B ) <-> A = { x | ( x e. A /\ x e. B ) } ) ;
	step 4 : wff = thm abeq2 () |- ( A = { x | ( x e. A /\ x e. B ) } <-> A. x ( x e. A <-> ( x e. A /\ x e. B ) ) ) ;
	step 5 : wff = thm 3bitri (step 1, step 3, step 4) |- ( A C_ B <-> A. x ( x e. A <-> ( x e. A /\ x e. B ) ) ) ;
	step 6 : wff = thm pm4_71 () |- ( ( x e. A -> x e. B ) <-> ( x e. A <-> ( x e. A /\ x e. B ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x ( x e. A -> x e. B ) <-> A. x ( x e. A <-> ( x e. A /\ x e. B ) ) ) ;
	step 8 : wff = thm bitr4i (step 5, step 7) |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	qed prop 1 = step 8 ;
}

theorem dfss3 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> A. x e. A x e. B ) ;
}

proof of dfss3 {
	step 1 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A x e. B <-> A. x ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( A C_ B <-> A. x e. A x e. B ) ;
	qed prop 1 = step 3 ;
}

theorem dfss2f (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
}

proof of dfss2f {
	step 1 : wff = thm dfss2 () |- ( A C_ B <-> A. y ( y e. A -> y e. B ) ) ;
	step 2 : wff = axm ax-17 () |- ( ( x e. A -> x e. B ) -> A. y ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm hbim (hyp 1, hyp 2) |- ( ( y e. A -> y e. B ) -> A. x ( y e. A -> y e. B ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = y -> ( x e. B <-> y e. B ) ) ;
	step 6 : wff = thm imbi12d (step 4, step 5) |- ( x = y -> ( ( x e. A -> x e. B ) <-> ( y e. A -> y e. B ) ) ) ;
	step 7 : wff = thm cbval (step 2, step 3, step 6) |- ( A. x ( x e. A -> x e. B ) <-> A. y ( y e. A -> y e. B ) ) ;
	step 8 : wff = thm bitr4i (step 1, step 7) |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	qed prop 1 = step 8 ;
}

theorem dfss3f (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A C_ B <-> A. x e. A x e. B ) ;
}

proof of dfss3f {
	step 1 : wff = thm dfss2f (hyp 1, hyp 2) |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A x e. B <-> A. x ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( A C_ B <-> A. x e. A x e. B ) ;
	qed prop 1 = step 3 ;
}

theorem hbss (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A C_ B -> A. x A C_ B ) ;
}

proof of hbss {
	step 1 : wff = thm hba1 () |- ( A. x ( x e. A -> x e. B ) -> A. x A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm dfss2f (hyp 1, hyp 2) |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm dfss2f (hyp 1, hyp 2) |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x A C_ B <-> A. x A. x ( x e. A -> x e. B ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( A C_ B -> A. x A C_ B ) ;
	qed prop 1 = step 5 ;
}

theorem ssel (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( C e. A -> C e. B ) ) ;
}

proof of ssel {
	var x : set;
	step 1 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( A C_ B -> A. x ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm 19_21bi (step 2) |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 4 : wff = thm anim2d (step 3) |- ( A C_ B -> ( ( x = C /\ x e. A ) -> ( x = C /\ x e. B ) ) ) ;
	step 5 : wff = thm 19_22dv (step 4) |- ( A C_ B -> ( E. x ( x = C /\ x e. A ) -> E. x ( x = C /\ x e. B ) ) ) ;
	step 6 : wff = def df-clel () |- ( C e. A <-> E. x ( x = C /\ x e. A ) ) ;
	step 7 : wff = def df-clel () |- ( C e. B <-> E. x ( x = C /\ x e. B ) ) ;
	step 8 : wff = thm 3imtr4g (step 5, step 6, step 7) |- ( A C_ B -> ( C e. A -> C e. B ) ) ;
	qed prop 1 = step 8 ;
}

theorem ssel2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ C e. A ) -> C e. B ) ;
}

proof of ssel2 {
	step 1 : wff = thm ssel () |- ( A C_ B -> ( C e. A -> C e. B ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( A C_ B /\ C e. A ) -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem sseli (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ B ;
	-----------------------
	prop 1 : wff = |- ( C e. A -> C e. B ) ;
}

proof of sseli {
	step 1 : wff = thm ssel () |- ( A C_ B -> ( C e. A -> C e. B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C e. A -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem sselii (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- C e. A ;
	-----------------------
	prop 1 : wff = |- C e. B ;
}

proof of sselii {
	step 1 : wff = thm sseli (hyp 1) |- ( C e. A -> C e. B ) ;
	step 2 : wff = axm ax-mp (hyp 2, step 1) |- C e. B ;
	qed prop 1 = step 2 ;
}

theorem sseld (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C e. A -> C e. B ) ) ;
}

proof of sseld {
	step 1 : wff = thm ssel () |- ( A C_ B -> ( C e. A -> C e. B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C e. A -> C e. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem sseldd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> C e. A ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C e. B ) ;
}

proof of sseldd {
	step 1 : wff = thm sseld (hyp 1) |- ( ph -> ( C e. A -> C e. B ) ) ;
	step 2 : wff = thm mpd (hyp 2, step 1) |- ( ph -> C e. B ) ;
	qed prop 1 = step 2 ;
}

theorem ssriv (x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x e. A -> x e. B ) ;
	-----------------------
	prop 1 : wff = |- A C_ B ;
}

proof of ssriv {
	step 1 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm mpgbir (step 1, hyp 1) |- A C_ B ;
	qed prop 1 = step 2 ;
}

theorem ssrdv (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. A -> x e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ B ) ;
}

proof of ssrdv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> A C_ B ) ;
	qed prop 1 = step 3 ;
}

theorem sstr2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( B C_ C -> A C_ C ) ) ;
}

proof of sstr2 {
	var x : set;
	step 1 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm imim1 () |- ( ( x e. A -> x e. B ) -> ( ( x e. B -> x e. C ) -> ( x e. A -> x e. C ) ) ) ;
	step 3 : wff = thm 19_20ii (step 2) |- ( A. x ( x e. A -> x e. B ) -> ( A. x ( x e. B -> x e. C ) -> A. x ( x e. A -> x e. C ) ) ) ;
	step 4 : wff = thm dfss2 () |- ( B C_ C <-> A. x ( x e. B -> x e. C ) ) ;
	step 5 : wff = thm dfss2 () |- ( A C_ C <-> A. x ( x e. A -> x e. C ) ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( A. x ( x e. A -> x e. B ) -> ( B C_ C -> A C_ C ) ) ;
	step 7 : wff = thm sylbi (step 1, step 6) |- ( A C_ B -> ( B C_ C -> A C_ C ) ) ;
	qed prop 1 = step 7 ;
}

theorem sstr (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) ;
}

proof of sstr {
	step 1 : wff = thm sstr2 () |- ( A C_ B -> ( B C_ C -> A C_ C ) ) ;
	step 2 : wff = thm imp (step 1) |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem sstri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- B C_ C ;
	-----------------------
	prop 1 : wff = |- A C_ C ;
}

proof of sstri {
	step 1 : wff = thm sstr2 () |- ( A C_ B -> ( B C_ C -> A C_ C ) ) ;
	step 2 : wff = thm mp2 (hyp 1, hyp 2, step 1) |- A C_ C ;
	qed prop 1 = step 2 ;
}

theorem sstrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> B C_ C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of sstrd {
	step 1 : wff = thm sstr () |- ( ( A C_ B /\ B C_ C ) -> A C_ C ) ;
	step 2 : wff = thm sylanc (step 1, hyp 1, hyp 2) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem sylan9ss (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ps -> B C_ C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> A C_ C ) ;
}

proof of sylan9ss {
	step 1 : wff = thm adantr (hyp 1) |- ( ( ph /\ ps ) -> A C_ B ) ;
	step 2 : wff = thm adantl (hyp 2) |- ( ( ph /\ ps ) -> B C_ C ) ;
	step 3 : wff = thm sstrd (step 1, step 2) |- ( ( ph /\ ps ) -> A C_ C ) ;
	qed prop 1 = step 3 ;
}

theorem sylan9ssr (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ps -> B C_ C ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> A C_ C ) ;
}

proof of sylan9ssr {
	step 1 : wff = thm sylan9ss (hyp 1, hyp 2) |- ( ( ph /\ ps ) -> A C_ C ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( ps /\ ph ) -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem eqss (A : class, B : class)  {
	prop 1 : wff = |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
}

proof of eqss {
	var x : set;
	step 1 : wff = thm albi () |- ( A. x ( x e. A <-> x e. B ) <-> ( A. x ( x e. A -> x e. B ) /\ A. x ( x e. B -> x e. A ) ) ) ;
	step 2 : wff = thm dfcleq () |- ( A = B <-> A. x ( x e. A <-> x e. B ) ) ;
	step 3 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 4 : wff = thm dfss2 () |- ( B C_ A <-> A. x ( x e. B -> x e. A ) ) ;
	step 5 : wff = thm anbi12i (step 3, step 4) |- ( ( A C_ B /\ B C_ A ) <-> ( A. x ( x e. A -> x e. B ) /\ A. x ( x e. B -> x e. A ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 2, step 5) |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	qed prop 1 = step 6 ;
}

theorem eqssi (A : class, B : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- B C_ A ;
	-----------------------
	prop 1 : wff = |- A = B ;
}

proof of eqssi {
	step 1 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 2 : wff = thm mpbir2an (step 1, hyp 1, hyp 2) |- A = B ;
	qed prop 1 = step 2 ;
}

theorem eqssd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> B C_ A ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A = B ) ;
}

proof of eqssd {
	step 1 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 2 : wff = thm sylanbrc (step 1, hyp 1, hyp 2) |- ( ph -> A = B ) ;
	qed prop 1 = step 2 ;
}

theorem ssid (A : class)  {
	prop 1 : wff = |- A C_ A ;
}

proof of ssid {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm eqss () |- ( A = A <-> ( A C_ A /\ A C_ A ) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A C_ A /\ A C_ A ) ;
	step 4 : wff = thm pm3_26i (step 3) |- A C_ A ;
	qed prop 1 = step 4 ;
}

theorem ssv (A : class)  {
	prop 1 : wff = |- A C_ _V ;
}

proof of ssv {
	var x : set;
	step 1 : wff = thm elisset () |- ( x e. A -> x e. _V ) ;
	step 2 : wff = thm ssriv (step 1) |- A C_ _V ;
	qed prop 1 = step 2 ;
}

theorem sseq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A C_ C <-> B C_ C ) ) ;
}

proof of sseq1 {
	step 1 : wff = thm sstr2 () |- ( B C_ A -> ( A C_ C -> B C_ C ) ) ;
	step 2 : wff = thm sstr2 () |- ( A C_ B -> ( B C_ C -> A C_ C ) ) ;
	step 3 : wff = thm anim12i (step 1, step 2) |- ( ( B C_ A /\ A C_ B ) -> ( ( A C_ C -> B C_ C ) /\ ( B C_ C -> A C_ C ) ) ) ;
	step 4 : wff = thm eqss () |- ( B = A <-> ( B C_ A /\ A C_ B ) ) ;
	step 5 : wff = thm dfbi2 () |- ( ( A C_ C <-> B C_ C ) <-> ( ( A C_ C -> B C_ C ) /\ ( B C_ C -> A C_ C ) ) ) ;
	step 6 : wff = thm 3imtr4i (step 3, step 4, step 5) |- ( B = A -> ( A C_ C <-> B C_ C ) ) ;
	step 7 : wff = thm eqcoms (step 6) |- ( A = B -> ( A C_ C <-> B C_ C ) ) ;
	qed prop 1 = step 7 ;
}

theorem sseq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C C_ A <-> C C_ B ) ) ;
}

proof of sseq2 {
	step 1 : wff = thm sstr2 () |- ( C C_ A -> ( A C_ B -> C C_ B ) ) ;
	step 2 : wff = thm com12 (step 1) |- ( A C_ B -> ( C C_ A -> C C_ B ) ) ;
	step 3 : wff = thm sstr2 () |- ( C C_ B -> ( B C_ A -> C C_ A ) ) ;
	step 4 : wff = thm com12 (step 3) |- ( B C_ A -> ( C C_ B -> C C_ A ) ) ;
	step 5 : wff = thm anim12i (step 2, step 4) |- ( ( A C_ B /\ B C_ A ) -> ( ( C C_ A -> C C_ B ) /\ ( C C_ B -> C C_ A ) ) ) ;
	step 6 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 7 : wff = thm dfbi2 () |- ( ( C C_ A <-> C C_ B ) <-> ( ( C C_ A -> C C_ B ) /\ ( C C_ B -> C C_ A ) ) ) ;
	step 8 : wff = thm 3imtr4i (step 5, step 6, step 7) |- ( A = B -> ( C C_ A <-> C C_ B ) ) ;
	qed prop 1 = step 8 ;
}

theorem sseq12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) ;
}

proof of sseq12 {
	step 1 : wff = thm sseq1 () |- ( A = B -> ( A C_ C <-> B C_ C ) ) ;
	step 2 : wff = thm sseq2 () |- ( C = D -> ( B C_ C <-> B C_ D ) ) ;
	step 3 : wff = thm sylan9bb (step 1, step 2) |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) ;
	qed prop 1 = step 3 ;
}

theorem sseq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A C_ C <-> B C_ C ) ;
}

proof of sseq1i {
	step 1 : wff = thm sseq1 () |- ( A = B -> ( A C_ C <-> B C_ C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A C_ C <-> B C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem sseq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C C_ A <-> C C_ B ) ;
}

proof of sseq2i {
	step 1 : wff = thm sseq2 () |- ( A = B -> ( C C_ A <-> C C_ B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C C_ A <-> C C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem sseq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A C_ C <-> B C_ D ) ;
}

proof of sseq12i {
	step 1 : wff = thm sseq12 () |- ( ( A = B /\ C = D ) -> ( A C_ C <-> B C_ D ) ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- ( A C_ C <-> B C_ D ) ;
	qed prop 1 = step 2 ;
}

theorem sseq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A C_ C <-> B C_ C ) ) ;
}

proof of sseq1d {
	step 1 : wff = thm sseq1 () |- ( A = B -> ( A C_ C <-> B C_ C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A C_ C <-> B C_ C ) ) ;
	qed prop 1 = step 2 ;
}

theorem sseq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C C_ A <-> C C_ B ) ) ;
}

proof of sseq2d {
	step 1 : wff = thm sseq2 () |- ( A = B -> ( C C_ A <-> C C_ B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C C_ A <-> C C_ B ) ) ;
	qed prop 1 = step 2 ;
}

theorem sseq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A C_ C <-> B C_ D ) ) ;
}

proof of sseq12d {
	step 1 : wff = thm sseq1d (hyp 1) |- ( ph -> ( A C_ C <-> B C_ C ) ) ;
	step 2 : wff = thm sseq2d (hyp 2) |- ( ph -> ( B C_ C <-> B C_ D ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( A C_ C <-> B C_ D ) ) ;
	qed prop 1 = step 3 ;
}

theorem eqsstri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B C_ C ;
	-----------------------
	prop 1 : wff = |- A C_ C ;
}

proof of eqsstri {
	step 1 : wff = thm sseq1i (hyp 1) |- ( A C_ C <-> B C_ C ) ;
	step 2 : wff = thm mpbir (hyp 2, step 1) |- A C_ C ;
	qed prop 1 = step 2 ;
}

theorem eqsstr3i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- B = A ;
	hyp 2 : wff = |- B C_ C ;
	-----------------------
	prop 1 : wff = |- A C_ C ;
}

proof of eqsstr3i {
	step 1 : wff = thm eqcomi (hyp 1) |- A = B ;
	step 2 : wff = thm eqsstri (step 1, hyp 2) |- A C_ C ;
	qed prop 1 = step 2 ;
}

theorem sseqtri (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- A C_ C ;
}

proof of sseqtri {
	step 1 : wff = thm sseq2i (hyp 2) |- ( A C_ B <-> A C_ C ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- A C_ C ;
	qed prop 1 = step 2 ;
}

theorem sseqtr4i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- A C_ C ;
}

proof of sseqtr4i {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm sseqtri (hyp 1, step 1) |- A C_ C ;
	qed prop 1 = step 2 ;
}

theorem eqsstrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B C_ C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of eqsstrd {
	step 1 : wff = thm sseq1d (hyp 1) |- ( ph -> ( A C_ C <-> B C_ C ) ) ;
	step 2 : wff = thm mpbird (hyp 2, step 1) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem eqsstr3d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> B = A ) ;
	hyp 2 : wff = |- ( ph -> B C_ C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of eqsstr3d {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm eqsstrd (step 1, hyp 2) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem sseqtrd (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of sseqtrd {
	step 1 : wff = thm sseq2d (hyp 2) |- ( ph -> ( A C_ B <-> A C_ C ) ) ;
	step 2 : wff = thm mpbid (hyp 1, step 1) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem sseqtr4d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> C = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of sseqtr4d {
	step 1 : wff = thm eqcomd (hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm sseqtrd (hyp 1, step 1) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem 3sstr3i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- C C_ D ;
}

proof of 3sstr3i {
	step 1 : wff = thm sseq12i (hyp 2, hyp 3) |- ( A C_ B <-> C C_ D ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- C C_ D ;
	qed prop 1 = step 2 ;
}

theorem 3sstr4i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- C C_ D ;
}

proof of 3sstr4i {
	step 1 : wff = thm sseq12i (hyp 2, hyp 3) |- ( C C_ D <-> A C_ B ) ;
	step 2 : wff = thm mpbir (hyp 1, step 1) |- C C_ D ;
	qed prop 1 = step 2 ;
}

theorem 3sstr3g (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- ( ph -> C C_ D ) ;
}

proof of 3sstr3g {
	step 1 : wff = thm sseq12i (hyp 2, hyp 3) |- ( A C_ B <-> C C_ D ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> C C_ D ) ;
	qed prop 1 = step 2 ;
}

theorem 3sstr4g (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> C C_ D ) ;
}

proof of 3sstr4g {
	step 1 : wff = thm sseq12i (hyp 2, hyp 3) |- ( C C_ D <-> A C_ B ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> C C_ D ) ;
	qed prop 1 = step 2 ;
}

theorem 3sstr3d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> A = C ) ;
	hyp 3 : wff = |- ( ph -> B = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C C_ D ) ;
}

proof of 3sstr3d {
	step 1 : wff = thm sseq12d (hyp 2, hyp 3) |- ( ph -> ( A C_ B <-> C C_ D ) ) ;
	step 2 : wff = thm mpbid (hyp 1, step 1) |- ( ph -> C C_ D ) ;
	qed prop 1 = step 2 ;
}

theorem 3sstr4d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- ( ph -> C = A ) ;
	hyp 3 : wff = |- ( ph -> D = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C C_ D ) ;
}

proof of 3sstr4d {
	step 1 : wff = thm sseq12d (hyp 2, hyp 3) |- ( ph -> ( C C_ D <-> A C_ B ) ) ;
	step 2 : wff = thm mpbird (hyp 1, step 1) |- ( ph -> C C_ D ) ;
	qed prop 1 = step 2 ;
}

theorem syl5ss (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- C = A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C C_ B ) ;
}

proof of syl5ss {
	step 1 : wff = thm sseq1i (hyp 2) |- ( C C_ B <-> A C_ B ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> C C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5ssr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- A = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> C C_ B ) ;
}

proof of syl5ssr {
	step 1 : wff = thm eqcomi (hyp 2) |- C = A ;
	step 2 : wff = thm syl5ss (hyp 1, step 1) |- ( ph -> C C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem syl6ss (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of syl6ss {
	step 1 : wff = thm sseq2i (hyp 2) |- ( A C_ B <-> A C_ C ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6ssr (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ C ) ;
}

proof of syl6ssr {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm syl6ss (hyp 1, step 1) |- ( ph -> A C_ C ) ;
	qed prop 1 = step 2 ;
}

theorem eqimss (A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> A C_ B ) ;
}

proof of eqimss {
	step 1 : wff = thm ssid () |- A C_ A ;
	step 2 : wff = thm sseq2 () |- ( A = B -> ( A C_ A <-> A C_ B ) ) ;
	step 3 : wff = thm mpbii (step 1, step 2) |- ( A = B -> A C_ B ) ;
	qed prop 1 = step 3 ;
}

theorem eqimss2 (A : class, B : class)  {
	prop 1 : wff = |- ( B = A -> A C_ B ) ;
}

proof of eqimss2 {
	step 1 : wff = thm eqimss () |- ( A = B -> A C_ B ) ;
	step 2 : wff = thm eqcoms (step 1) |- ( B = A -> A C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem eqimssi (A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- A C_ B ;
}

proof of eqimssi {
	step 1 : wff = thm ssid () |- A C_ A ;
	step 2 : wff = thm sseqtri (step 1, hyp 1) |- A C_ B ;
	qed prop 1 = step 2 ;
}

theorem eqimss2i (A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- B C_ A ;
}

proof of eqimss2i {
	step 1 : wff = thm ssid () |- B C_ B ;
	step 2 : wff = thm sseqtr4i (step 1, hyp 1) |- B C_ A ;
	qed prop 1 = step 2 ;
}

theorem nss (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( -. A C_ B <-> E. x ( x e. A /\ -. x e. B ) ) ;
}

proof of nss {
	step 1 : wff = thm exnal () |- ( E. x -. ( x e. A -> x e. B ) <-> -. A. x ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm annim () |- ( ( x e. A /\ -. x e. B ) <-> -. ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm exbii (step 2) |- ( E. x ( x e. A /\ -. x e. B ) <-> E. x -. ( x e. A -> x e. B ) ) ;
	step 4 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 5 : wff = thm notbii (step 4) |- ( -. A C_ B <-> -. A. x ( x e. A -> x e. B ) ) ;
	step 6 : wff = thm 3bitr4ri (step 1, step 3, step 5) |- ( -. A C_ B <-> E. x ( x e. A /\ -. x e. B ) ) ;
	qed prop 1 = step 6 ;
}

theorem ssralv (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B -> ( A. x e. B ph -> A. x e. A ph ) ) ;
}

proof of ssralv {
	step 1 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm imim1d (step 1) |- ( A C_ B -> ( ( x e. B -> ph ) -> ( x e. A -> ph ) ) ) ;
	step 3 : wff = thm r19_20dv2 (step 2) |- ( A C_ B -> ( A. x e. B ph -> A. x e. A ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem ssrexv (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B -> ( E. x e. A ph -> E. x e. B ph ) ) ;
}

proof of ssrexv {
	step 1 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm anim1d (step 1) |- ( A C_ B -> ( ( x e. A /\ ph ) -> ( x e. B /\ ph ) ) ) ;
	step 3 : wff = thm r19_22dv2 (step 2) |- ( A C_ B -> ( E. x e. A ph -> E. x e. B ph ) ) ;
	qed prop 1 = step 3 ;
}

theorem ss2ab (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) ;
}

proof of ss2ab {
	var y : set;
	step 1 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ps } -> A. x y e. { x | ps } ) ;
	step 3 : wff = thm dfss2f (step 1, step 2) |- ( { x | ph } C_ { x | ps } <-> A. x ( x e. { x | ph } -> x e. { x | ps } ) ) ;
	step 4 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 5 : wff = thm abid () |- ( x e. { x | ps } <-> ps ) ;
	step 6 : wff = thm imbi12i (step 4, step 5) |- ( ( x e. { x | ph } -> x e. { x | ps } ) <-> ( ph -> ps ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x ( x e. { x | ph } -> x e. { x | ps } ) <-> A. x ( ph -> ps ) ) ;
	step 8 : wff = thm bitri (step 3, step 7) |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) ;
	qed prop 1 = step 8 ;
}

theorem abss (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x | ph } C_ A <-> A. x ( ph -> x e. A ) ) ;
}

proof of abss {
	step 1 : wff = thm abid2 () |- { x | x e. A } = A ;
	step 2 : wff = thm sseq2i (step 1) |- ( { x | ph } C_ { x | x e. A } <-> { x | ph } C_ A ) ;
	step 3 : wff = thm ss2ab () |- ( { x | ph } C_ { x | x e. A } <-> A. x ( ph -> x e. A ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( { x | ph } C_ A <-> A. x ( ph -> x e. A ) ) ;
	qed prop 1 = step 4 ;
}

theorem ssab (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) ;
}

proof of ssab {
	step 1 : wff = thm abid2 () |- { x | x e. A } = A ;
	step 2 : wff = thm sseq1i (step 1) |- ( { x | x e. A } C_ { x | ph } <-> A C_ { x | ph } ) ;
	step 3 : wff = thm ss2ab () |- ( { x | x e. A } C_ { x | ph } <-> A. x ( x e. A -> ph ) ) ;
	step 4 : wff = thm bitr3i (step 2, step 3) |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) ;
	qed prop 1 = step 4 ;
}

theorem ssabral (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A C_ { x | ph } <-> A. x e. A ph ) ;
}

proof of ssabral {
	step 1 : wff = thm ssab () |- ( A C_ { x | ph } <-> A. x ( x e. A -> ph ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( A C_ { x | ph } <-> A. x e. A ph ) ;
	qed prop 1 = step 3 ;
}

theorem ss2abi (ph : wff, ps : wff, x : set)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	-----------------------
	prop 1 : wff = |- { x | ph } C_ { x | ps } ;
}

proof of ss2abi {
	step 1 : wff = thm ss2ab () |- ( { x | ph } C_ { x | ps } <-> A. x ( ph -> ps ) ) ;
	step 2 : wff = thm mpgbir (step 1, hyp 1) |- { x | ph } C_ { x | ps } ;
	qed prop 1 = step 2 ;
}

theorem abssdv (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> ( ps -> x e. A ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x | ps } C_ A ) ;
}

proof of abssdv {
	step 1 : wff = thm 19_21aiv (hyp 1) |- ( ph -> A. x ( ps -> x e. A ) ) ;
	step 2 : wff = thm abss () |- ( { x | ps } C_ A <-> A. x ( ps -> x e. A ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> { x | ps } C_ A ) ;
	qed prop 1 = step 3 ;
}

theorem abssi (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ph -> x e. A ) ;
	-----------------------
	prop 1 : wff = |- { x | ph } C_ A ;
}

proof of abssi {
	step 1 : wff = thm ss2abi (hyp 1) |- { x | ph } C_ { x | x e. A } ;
	step 2 : wff = thm abid2 () |- { x | x e. A } = A ;
	step 3 : wff = thm sseqtri (step 1, step 2) |- { x | ph } C_ A ;
	qed prop 1 = step 3 ;
}

theorem ss2rab (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x e. A | ph } C_ { x e. A | ps } <-> A. x e. A ( ph -> ps ) ) ;
}

proof of ss2rab {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = def df-rab () |- { x e. A | ps } = { x | ( x e. A /\ ps ) } ;
	step 3 : wff = thm sseq12i (step 1, step 2) |- ( { x e. A | ph } C_ { x e. A | ps } <-> { x | ( x e. A /\ ph ) } C_ { x | ( x e. A /\ ps ) } ) ;
	step 4 : wff = thm ss2ab () |- ( { x | ( x e. A /\ ph ) } C_ { x | ( x e. A /\ ps ) } <-> A. x ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) ) ;
	step 5 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 6 : wff = thm imdistan () |- ( ( x e. A -> ( ph -> ps ) ) <-> ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x ( x e. A -> ( ph -> ps ) ) <-> A. x ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) ) ;
	step 8 : wff = thm bitr2i (step 5, step 7) |- ( A. x ( ( x e. A /\ ph ) -> ( x e. A /\ ps ) ) <-> A. x e. A ( ph -> ps ) ) ;
	step 9 : wff = thm 3bitri (step 3, step 4, step 8) |- ( { x e. A | ph } C_ { x e. A | ps } <-> A. x e. A ( ph -> ps ) ) ;
	qed prop 1 = step 9 ;
}

theorem rabss (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( { x e. A | ph } C_ B <-> A. x e. A ( ph -> x e. B ) ) ;
}

proof of rabss {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = thm sseq1i (step 1) |- ( { x e. A | ph } C_ B <-> { x | ( x e. A /\ ph ) } C_ B ) ;
	step 3 : wff = thm abss () |- ( { x | ( x e. A /\ ph ) } C_ B <-> A. x ( ( x e. A /\ ph ) -> x e. B ) ) ;
	step 4 : wff = thm impexp () |- ( ( ( x e. A /\ ph ) -> x e. B ) <-> ( x e. A -> ( ph -> x e. B ) ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( ( x e. A /\ ph ) -> x e. B ) <-> A. x ( x e. A -> ( ph -> x e. B ) ) ) ;
	step 6 : wff = def df-ral () |- ( A. x e. A ( ph -> x e. B ) <-> A. x ( x e. A -> ( ph -> x e. B ) ) ) ;
	step 7 : wff = thm bitr4i (step 5, step 6) |- ( A. x ( ( x e. A /\ ph ) -> x e. B ) <-> A. x e. A ( ph -> x e. B ) ) ;
	step 8 : wff = thm 3bitri (step 2, step 3, step 7) |- ( { x e. A | ph } C_ B <-> A. x e. A ( ph -> x e. B ) ) ;
	qed prop 1 = step 8 ;
}

theorem ssrab (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( B C_ { x e. A | ph } <-> ( B C_ A /\ A. x e. B ph ) ) ;
}

proof of ssrab {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = thm sseq2i (step 1) |- ( B C_ { x e. A | ph } <-> B C_ { x | ( x e. A /\ ph ) } ) ;
	step 3 : wff = thm ssab () |- ( B C_ { x | ( x e. A /\ ph ) } <-> A. x ( x e. B -> ( x e. A /\ ph ) ) ) ;
	step 4 : wff = thm dfss3 () |- ( B C_ A <-> A. x e. B x e. A ) ;
	step 5 : wff = thm anbi1i (step 4) |- ( ( B C_ A /\ A. x e. B ph ) <-> ( A. x e. B x e. A /\ A. x e. B ph ) ) ;
	step 6 : wff = thm r19_26 () |- ( A. x e. B ( x e. A /\ ph ) <-> ( A. x e. B x e. A /\ A. x e. B ph ) ) ;
	step 7 : wff = def df-ral () |- ( A. x e. B ( x e. A /\ ph ) <-> A. x ( x e. B -> ( x e. A /\ ph ) ) ) ;
	step 8 : wff = thm 3bitr2ri (step 5, step 6, step 7) |- ( A. x ( x e. B -> ( x e. A /\ ph ) ) <-> ( B C_ A /\ A. x e. B ph ) ) ;
	step 9 : wff = thm 3bitri (step 2, step 3, step 8) |- ( B C_ { x e. A | ph } <-> ( B C_ A /\ A. x e. B ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem ssrabdv (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> B C_ A ) ;
	hyp 2 : wff = |- ( ( ph /\ x e. B ) -> ps ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> B C_ { x e. A | ps } ) ;
}

proof of ssrabdv {
	step 1 : wff = thm ssrab () |- ( B C_ { x e. A | ps } <-> ( B C_ A /\ A. x e. B ps ) ) ;
	step 2 : wff = thm r19_21aiva (hyp 2) |- ( ph -> A. x e. B ps ) ;
	step 3 : wff = thm sylanbrc (step 1, hyp 1, step 2) |- ( ph -> B C_ { x e. A | ps } ) ;
	qed prop 1 = step 3 ;
}

theorem ss2rabdv (ph : wff, ps : wff, ch : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> ( ps -> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { x e. A | ps } C_ { x e. A | ch } ) ;
}

proof of ss2rabdv {
	step 1 : wff = thm r19_21aiva (hyp 1) |- ( ph -> A. x e. A ( ps -> ch ) ) ;
	step 2 : wff = thm ss2rab () |- ( { x e. A | ps } C_ { x e. A | ch } <-> A. x e. A ( ps -> ch ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ph -> { x e. A | ps } C_ { x e. A | ch } ) ;
	qed prop 1 = step 3 ;
}

theorem ss2rabi (ph : wff, ps : wff, x : set, A : class)  {
	hyp 1 : wff = |- ( x e. A -> ( ph -> ps ) ) ;
	-----------------------
	prop 1 : wff = |- { x e. A | ph } C_ { x e. A | ps } ;
}

proof of ss2rabi {
	step 1 : wff = thm ss2rab () |- ( { x e. A | ph } C_ { x e. A | ps } <-> A. x e. A ( ph -> ps ) ) ;
	step 2 : wff = thm mprgbir (step 1, hyp 1) |- { x e. A | ph } C_ { x e. A | ps } ;
	qed prop 1 = step 2 ;
}

theorem rabss2 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B -> { x e. A | ph } C_ { x e. B | ph } ) ;
}

proof of rabss2 {
	step 1 : wff = thm pm3_45 () |- ( ( x e. A -> x e. B ) -> ( ( x e. A /\ ph ) -> ( x e. B /\ ph ) ) ) ;
	step 2 : wff = thm 19_20i (step 1) |- ( A. x ( x e. A -> x e. B ) -> A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ph ) ) ) ;
	step 3 : wff = thm ss2ab () |- ( { x | ( x e. A /\ ph ) } C_ { x | ( x e. B /\ ph ) } <-> A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ph ) ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( A. x ( x e. A -> x e. B ) -> { x | ( x e. A /\ ph ) } C_ { x | ( x e. B /\ ph ) } ) ;
	step 5 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 6 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 7 : wff = def df-rab () |- { x e. B | ph } = { x | ( x e. B /\ ph ) } ;
	step 8 : wff = thm sseq12i (step 6, step 7) |- ( { x e. A | ph } C_ { x e. B | ph } <-> { x | ( x e. A /\ ph ) } C_ { x | ( x e. B /\ ph ) } ) ;
	step 9 : wff = thm 3imtr4i (step 4, step 5, step 8) |- ( A C_ B -> { x e. A | ph } C_ { x e. B | ph } ) ;
	qed prop 1 = step 9 ;
}

theorem ssab2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- { x | ( x e. A /\ ph ) } C_ A ;
}

proof of ssab2 {
	step 1 : wff = thm pm3_26 () |- ( ( x e. A /\ ph ) -> x e. A ) ;
	step 2 : wff = thm abssi (step 1) |- { x | ( x e. A /\ ph ) } C_ A ;
	qed prop 1 = step 2 ;
}

theorem ssrab2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- { x e. A | ph } C_ A ;
}

proof of ssrab2 {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = thm ssab2 () |- { x | ( x e. A /\ ph ) } C_ A ;
	step 3 : wff = thm eqsstri (step 1, step 2) |- { x e. A | ph } C_ A ;
	qed prop 1 = step 3 ;
}

theorem uniiunlem (x : set, y : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A. x e. A B e. D -> ( A. x e. A B e. C <-> { y | E. x e. A y = B } C_ C ) ) ;
}

proof of uniiunlem {
	var z : set, w : set;
	step 1 : wff = thm hbra1 () |- ( A. x e. A B e. C -> A. x A. x e. A B e. C ) ;
	step 2 : wff = axm ax-17 () |- ( z e. C -> A. x z e. C ) ;
	step 3 : wff = thm ra4 () |- ( A. x e. A B e. C -> ( x e. A -> B e. C ) ) ;
	step 4 : wff = thm eleq1a () |- ( B e. C -> ( z = B -> z e. C ) ) ;
	step 5 : wff = thm syl6 (step 3, step 4) |- ( A. x e. A B e. C -> ( x e. A -> ( z = B -> z e. C ) ) ) ;
	step 6 : wff = thm r19_23ad (step 1, step 2, step 5) |- ( A. x e. A B e. C -> ( E. x e. A z = B -> z e. C ) ) ;
	step 7 : wff = thm 19_21aiv (step 6) |- ( A. x e. A B e. C -> A. z ( E. x e. A z = B -> z e. C ) ) ;
	step 8 : wff = thm hbre1 () |- ( E. x e. A z = B -> A. x E. x e. A z = B ) ;
	step 9 : wff = axm ax-17 () |- ( z e. C -> A. x z e. C ) ;
	step 10 : wff = thm hbim (step 8, step 9) |- ( ( E. x e. A z = B -> z e. C ) -> A. x ( E. x e. A z = B -> z e. C ) ) ;
	step 11 : wff = thm hbal (step 10) |- ( A. z ( E. x e. A z = B -> z e. C ) -> A. x A. z ( E. x e. A z = B -> z e. C ) ) ;
	step 12 : wff = thm csbeq1a () |- ( x = w -> B = [_ w / x ]_ B ) ;
	step 13 : wff = thm eqcoms (step 12) |- ( w = x -> B = [_ w / x ]_ B ) ;
	step 14 : wff = thm eqcomd (step 13) |- ( w = x -> [_ w / x ]_ B = B ) ;
	step 15 : wff = thm eqeq1d (step 14) |- ( w = x -> ( [_ w / x ]_ B = B <-> B = B ) ) ;
	step 16 : wff = thm eqid () |- B = B ;
	step 17 : wff = thm a4eiv (step 15, step 16) |- E. w [_ w / x ]_ B = B ;
	step 18 : wff = thm visset () |- w e. _V ;
	step 19 : wff = axm ax-17 () |- ( z e. w -> A. x z e. w ) ;
	step 20 : wff = thm hbcsb1 (step 18, step 19) |- ( z e. [_ w / x ]_ B -> A. x z e. [_ w / x ]_ B ) ;
	step 21 : wff = thm hbeleq (step 20) |- ( z = [_ w / x ]_ B -> A. x z = [_ w / x ]_ B ) ;
	step 22 : wff = thm eqeq1 () |- ( z = [_ w / x ]_ B -> ( z = B <-> [_ w / x ]_ B = B ) ) ;
	step 23 : wff = thm rexbid (step 21, step 22) |- ( z = [_ w / x ]_ B -> ( E. x e. A z = B <-> E. x e. A [_ w / x ]_ B = B ) ) ;
	step 24 : wff = thm eleq1 () |- ( z = [_ w / x ]_ B -> ( z e. C <-> [_ w / x ]_ B e. C ) ) ;
	step 25 : wff = thm imbi12d (step 23, step 24) |- ( z = [_ w / x ]_ B -> ( ( E. x e. A z = B -> z e. C ) <-> ( E. x e. A [_ w / x ]_ B = B -> [_ w / x ]_ B e. C ) ) ) ;
	step 26 : wff = thm cla4gv (step 25) |- ( [_ w / x ]_ B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( E. x e. A [_ w / x ]_ B = B -> [_ w / x ]_ B e. C ) ) ) ;
	step 27 : wff = thm ra4e () |- ( ( x e. A /\ [_ w / x ]_ B = B ) -> E. x e. A [_ w / x ]_ B = B ) ;
	step 28 : wff = thm syl7 (step 26, step 27) |- ( [_ w / x ]_ B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( ( x e. A /\ [_ w / x ]_ B = B ) -> [_ w / x ]_ B e. C ) ) ) ;
	step 29 : wff = thm exp4a (step 28) |- ( [_ w / x ]_ B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> ( [_ w / x ]_ B = B -> [_ w / x ]_ B e. C ) ) ) ) ;
	step 30 : wff = thm com4r (step 29) |- ( [_ w / x ]_ B = B -> ( [_ w / x ]_ B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> [_ w / x ]_ B e. C ) ) ) ) ;
	step 31 : wff = thm eleq1 () |- ( [_ w / x ]_ B = B -> ( [_ w / x ]_ B e. D <-> B e. D ) ) ;
	step 32 : wff = thm eleq1 () |- ( [_ w / x ]_ B = B -> ( [_ w / x ]_ B e. C <-> B e. C ) ) ;
	step 33 : wff = thm imbi2d (step 32) |- ( [_ w / x ]_ B = B -> ( ( x e. A -> [_ w / x ]_ B e. C ) <-> ( x e. A -> B e. C ) ) ) ;
	step 34 : wff = thm imbi2d (step 33) |- ( [_ w / x ]_ B = B -> ( ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> [_ w / x ]_ B e. C ) ) <-> ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> B e. C ) ) ) ) ;
	step 35 : wff = thm 3imtr3d (step 30, step 31, step 34) |- ( [_ w / x ]_ B = B -> ( B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> B e. C ) ) ) ) ;
	step 36 : wff = thm 19_23aiv (step 35) |- ( E. w [_ w / x ]_ B = B -> ( B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> B e. C ) ) ) ) ;
	step 37 : wff = axm ax-mp (step 17, step 36) |- ( B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> ( x e. A -> B e. C ) ) ) ;
	step 38 : wff = thm imp3a (step 37) |- ( B e. D -> ( ( A. z ( E. x e. A z = B -> z e. C ) /\ x e. A ) -> B e. C ) ) ;
	step 39 : wff = thm com12 (step 38) |- ( ( A. z ( E. x e. A z = B -> z e. C ) /\ x e. A ) -> ( B e. D -> B e. C ) ) ;
	step 40 : wff = thm r19_20da (step 11, step 39) |- ( A. z ( E. x e. A z = B -> z e. C ) -> ( A. x e. A B e. D -> A. x e. A B e. C ) ) ;
	step 41 : wff = thm com12 (step 40) |- ( A. x e. A B e. D -> ( A. z ( E. x e. A z = B -> z e. C ) -> A. x e. A B e. C ) ) ;
	step 42 : wff = thm impbid2 (step 7, step 41) |- ( A. x e. A B e. D -> ( A. x e. A B e. C <-> A. z ( E. x e. A z = B -> z e. C ) ) ) ;
	step 43 : wff = thm abss () |- ( { z | E. x e. A z = B } C_ C <-> A. z ( E. x e. A z = B -> z e. C ) ) ;
	step 44 : wff = thm eqeq1 () |- ( z = y -> ( z = B <-> y = B ) ) ;
	step 45 : wff = thm rexbidv (step 44) |- ( z = y -> ( E. x e. A z = B <-> E. x e. A y = B ) ) ;
	step 46 : wff = thm cbvabv (step 45) |- { z | E. x e. A z = B } = { y | E. x e. A y = B } ;
	step 47 : wff = thm sseq1i (step 46) |- ( { z | E. x e. A z = B } C_ C <-> { y | E. x e. A y = B } C_ C ) ;
	step 48 : wff = thm bitr3i (step 43, step 47) |- ( A. z ( E. x e. A z = B -> z e. C ) <-> { y | E. x e. A y = B } C_ C ) ;
	step 49 : wff = thm syl6bb (step 42, step 48) |- ( A. x e. A B e. D -> ( A. x e. A B e. C <-> { y | E. x e. A y = B } C_ C ) ) ;
	qed prop 1 = step 49 ;
}

theorem dfpss2 (A : class, B : class)  {
	prop 1 : wff = |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) ;
}

proof of dfpss2 {
	step 1 : wff = def df-pss () |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= B <-> -. A = B ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( A C_ B /\ A =/= B ) <-> ( A C_ B /\ -. A = B ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) ;
	qed prop 1 = step 4 ;
}

theorem dfpss3 (A : class, B : class)  {
	prop 1 : wff = |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) ;
}

proof of dfpss3 {
	step 1 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 2 : wff = thm notbii (step 1) |- ( -. A = B <-> -. ( A C_ B /\ B C_ A ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( A C_ B /\ -. A = B ) <-> ( A C_ B /\ -. ( A C_ B /\ B C_ A ) ) ) ;
	step 4 : wff = thm dfpss2 () |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) ;
	step 5 : wff = thm anclb () |- ( ( A C_ B -> B C_ A ) <-> ( A C_ B -> ( A C_ B /\ B C_ A ) ) ) ;
	step 6 : wff = thm iman () |- ( ( A C_ B -> B C_ A ) <-> -. ( A C_ B /\ -. B C_ A ) ) ;
	step 7 : wff = thm iman () |- ( ( A C_ B -> ( A C_ B /\ B C_ A ) ) <-> -. ( A C_ B /\ -. ( A C_ B /\ B C_ A ) ) ) ;
	step 8 : wff = thm 3bitr3i (step 5, step 6, step 7) |- ( -. ( A C_ B /\ -. B C_ A ) <-> -. ( A C_ B /\ -. ( A C_ B /\ B C_ A ) ) ) ;
	step 9 : wff = thm con4bii (step 8) |- ( ( A C_ B /\ -. B C_ A ) <-> ( A C_ B /\ -. ( A C_ B /\ B C_ A ) ) ) ;
	step 10 : wff = thm 3bitr4i (step 3, step 4, step 9) |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) ;
	qed prop 1 = step 10 ;
}

theorem psseq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A C. C <-> B C. C ) ) ;
}

proof of psseq1 {
	step 1 : wff = thm sseq1 () |- ( A = B -> ( A C_ C <-> B C_ C ) ) ;
	step 2 : wff = thm neeq1 () |- ( A = B -> ( A =/= C <-> B =/= C ) ) ;
	step 3 : wff = thm anbi12d (step 1, step 2) |- ( A = B -> ( ( A C_ C /\ A =/= C ) <-> ( B C_ C /\ B =/= C ) ) ) ;
	step 4 : wff = def df-pss () |- ( A C. C <-> ( A C_ C /\ A =/= C ) ) ;
	step 5 : wff = def df-pss () |- ( B C. C <-> ( B C_ C /\ B =/= C ) ) ;
	step 6 : wff = thm 3bitr4g (step 3, step 4, step 5) |- ( A = B -> ( A C. C <-> B C. C ) ) ;
	qed prop 1 = step 6 ;
}

theorem psseq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C C. A <-> C C. B ) ) ;
}

proof of psseq2 {
	step 1 : wff = thm sseq2 () |- ( A = B -> ( C C_ A <-> C C_ B ) ) ;
	step 2 : wff = thm neeq2 () |- ( A = B -> ( C =/= A <-> C =/= B ) ) ;
	step 3 : wff = thm anbi12d (step 1, step 2) |- ( A = B -> ( ( C C_ A /\ C =/= A ) <-> ( C C_ B /\ C =/= B ) ) ) ;
	step 4 : wff = def df-pss () |- ( C C. A <-> ( C C_ A /\ C =/= A ) ) ;
	step 5 : wff = def df-pss () |- ( C C. B <-> ( C C_ B /\ C =/= B ) ) ;
	step 6 : wff = thm 3bitr4g (step 3, step 4, step 5) |- ( A = B -> ( C C. A <-> C C. B ) ) ;
	qed prop 1 = step 6 ;
}

theorem psseq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A C. C <-> B C. C ) ;
}

proof of psseq1i {
	step 1 : wff = thm psseq1 () |- ( A = B -> ( A C. C <-> B C. C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A C. C <-> B C. C ) ;
	qed prop 1 = step 2 ;
}

theorem psseq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C C. A <-> C C. B ) ;
}

proof of psseq2i {
	step 1 : wff = thm psseq2 () |- ( A = B -> ( C C. A <-> C C. B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C C. A <-> C C. B ) ;
	qed prop 1 = step 2 ;
}

theorem psseq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A C. C <-> B C. D ) ;
}

proof of psseq12i {
	step 1 : wff = thm psseq1i (hyp 1) |- ( A C. C <-> B C. C ) ;
	step 2 : wff = thm psseq2i (hyp 2) |- ( B C. C <-> B C. D ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A C. C <-> B C. D ) ;
	qed prop 1 = step 3 ;
}

theorem psseq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A C. C <-> B C. C ) ) ;
}

proof of psseq1d {
	step 1 : wff = thm psseq1 () |- ( A = B -> ( A C. C <-> B C. C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A C. C <-> B C. C ) ) ;
	qed prop 1 = step 2 ;
}

theorem psseq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C C. A <-> C C. B ) ) ;
}

proof of psseq2d {
	step 1 : wff = thm psseq2 () |- ( A = B -> ( C C. A <-> C C. B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C C. A <-> C C. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem psseq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A C. C <-> B C. D ) ) ;
}

proof of psseq12d {
	step 1 : wff = thm psseq1d (hyp 1) |- ( ph -> ( A C. C <-> B C. C ) ) ;
	step 2 : wff = thm psseq2d (hyp 2) |- ( ph -> ( B C. C <-> B C. D ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( A C. C <-> B C. D ) ) ;
	qed prop 1 = step 3 ;
}

theorem pssss (A : class, B : class)  {
	prop 1 : wff = |- ( A C. B -> A C_ B ) ;
}

proof of pssss {
	step 1 : wff = def df-pss () |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) ;
	step 2 : wff = thm pm3_26bi (step 1) |- ( A C. B -> A C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem pssssd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A C. B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A C_ B ) ;
}

proof of pssssd {
	step 1 : wff = thm pssss () |- ( A C. B -> A C_ B ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> A C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem sspss (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( A C. B \/ A = B ) ) ;
}

proof of sspss {
	step 1 : wff = thm dfpss2 () |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( A C_ B /\ -. A = B ) -> A C. B ) ;
	step 3 : wff = thm ex (step 2) |- ( A C_ B -> ( -. A = B -> A C. B ) ) ;
	step 4 : wff = thm con1d (step 3) |- ( A C_ B -> ( -. A C. B -> A = B ) ) ;
	step 5 : wff = thm orrd (step 4) |- ( A C_ B -> ( A C. B \/ A = B ) ) ;
	step 6 : wff = thm pssss () |- ( A C. B -> A C_ B ) ;
	step 7 : wff = thm eqimss () |- ( A = B -> A C_ B ) ;
	step 8 : wff = thm jaoi (step 6, step 7) |- ( ( A C. B \/ A = B ) -> A C_ B ) ;
	step 9 : wff = thm impbii (step 5, step 8) |- ( A C_ B <-> ( A C. B \/ A = B ) ) ;
	qed prop 1 = step 9 ;
}

theorem pssirr (A : class)  {
	prop 1 : wff = |- -. A C. A ;
}

proof of pssirr {
	step 1 : wff = thm pm3_24 () |- -. ( A C_ A /\ -. A C_ A ) ;
	step 2 : wff = thm dfpss3 () |- ( A C. A <-> ( A C_ A /\ -. A C_ A ) ) ;
	step 3 : wff = thm mtbir (step 1, step 2) |- -. A C. A ;
	qed prop 1 = step 3 ;
}

theorem pssn2lp (A : class, B : class)  {
	prop 1 : wff = |- -. ( A C. B /\ B C. A ) ;
}

proof of pssn2lp {
	step 1 : wff = thm pm3_24 () |- -. ( ( A C_ B /\ B C_ A ) /\ -. ( A C_ B /\ B C_ A ) ) ;
	step 2 : wff = thm dfpss3 () |- ( A C. B <-> ( A C_ B /\ -. B C_ A ) ) ;
	step 3 : wff = thm dfpss3 () |- ( B C. A <-> ( B C_ A /\ -. A C_ B ) ) ;
	step 4 : wff = thm anbi12i (step 2, step 3) |- ( ( A C. B /\ B C. A ) <-> ( ( A C_ B /\ -. B C_ A ) /\ ( B C_ A /\ -. A C_ B ) ) ) ;
	step 5 : wff = thm an42 () |- ( ( ( A C_ B /\ -. B C_ A ) /\ ( B C_ A /\ -. A C_ B ) ) <-> ( ( A C_ B /\ B C_ A ) /\ ( -. A C_ B /\ -. B C_ A ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( A C. B /\ B C. A ) <-> ( ( A C_ B /\ B C_ A ) /\ ( -. A C_ B /\ -. B C_ A ) ) ) ;
	step 7 : wff = thm orc () |- ( -. A C_ B -> ( -. A C_ B \/ -. B C_ A ) ) ;
	step 8 : wff = thm adantr (step 7) |- ( ( -. A C_ B /\ -. B C_ A ) -> ( -. A C_ B \/ -. B C_ A ) ) ;
	step 9 : wff = thm ianor () |- ( -. ( A C_ B /\ B C_ A ) <-> ( -. A C_ B \/ -. B C_ A ) ) ;
	step 10 : wff = thm sylibr (step 8, step 9) |- ( ( -. A C_ B /\ -. B C_ A ) -> -. ( A C_ B /\ B C_ A ) ) ;
	step 11 : wff = thm anim2i (step 10) |- ( ( ( A C_ B /\ B C_ A ) /\ ( -. A C_ B /\ -. B C_ A ) ) -> ( ( A C_ B /\ B C_ A ) /\ -. ( A C_ B /\ B C_ A ) ) ) ;
	step 12 : wff = thm sylbi (step 6, step 11) |- ( ( A C. B /\ B C. A ) -> ( ( A C_ B /\ B C_ A ) /\ -. ( A C_ B /\ B C_ A ) ) ) ;
	step 13 : wff = thm mto (step 1, step 12) |- -. ( A C. B /\ B C. A ) ;
	qed prop 1 = step 13 ;
}

theorem sspsstri (A : class, B : class)  {
	prop 1 : wff = |- ( ( A C_ B \/ B C_ A ) <-> ( A C. B \/ A = B \/ B C. A ) ) ;
}

proof of sspsstri {
	step 1 : wff = thm sspss () |- ( A C_ B <-> ( A C. B \/ A = B ) ) ;
	step 2 : wff = thm sspss () |- ( B C_ A <-> ( B C. A \/ B = A ) ) ;
	step 3 : wff = thm eqcom () |- ( B = A <-> A = B ) ;
	step 4 : wff = thm orbi2i (step 3) |- ( ( B C. A \/ B = A ) <-> ( B C. A \/ A = B ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( B C_ A <-> ( B C. A \/ A = B ) ) ;
	step 6 : wff = thm orbi12i (step 1, step 5) |- ( ( A C_ B \/ B C_ A ) <-> ( ( A C. B \/ A = B ) \/ ( B C. A \/ A = B ) ) ) ;
	step 7 : wff = thm orordir () |- ( ( ( A C. B \/ B C. A ) \/ A = B ) <-> ( ( A C. B \/ A = B ) \/ ( B C. A \/ A = B ) ) ) ;
	step 8 : wff = thm or23 () |- ( ( ( A C. B \/ B C. A ) \/ A = B ) <-> ( ( A C. B \/ A = B ) \/ B C. A ) ) ;
	step 9 : wff = def df-3or () |- ( ( A C. B \/ A = B \/ B C. A ) <-> ( ( A C. B \/ A = B ) \/ B C. A ) ) ;
	step 10 : wff = thm bitr4i (step 8, step 9) |- ( ( ( A C. B \/ B C. A ) \/ A = B ) <-> ( A C. B \/ A = B \/ B C. A ) ) ;
	step 11 : wff = thm 3bitr2i (step 6, step 7, step 10) |- ( ( A C_ B \/ B C_ A ) <-> ( A C. B \/ A = B \/ B C. A ) ) ;
	qed prop 1 = step 11 ;
}

theorem ssnpss (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B -> -. B C. A ) ;
}

proof of ssnpss {
	step 1 : wff = thm sspss () |- ( A C_ B <-> ( A C. B \/ A = B ) ) ;
	step 2 : wff = thm pssn2lp () |- -. ( A C. B /\ B C. A ) ;
	step 3 : wff = thm imnan () |- ( ( A C. B -> -. B C. A ) <-> -. ( A C. B /\ B C. A ) ) ;
	step 4 : wff = thm mpbir (step 2, step 3) |- ( A C. B -> -. B C. A ) ;
	step 5 : wff = thm pssirr () |- -. A C. A ;
	step 6 : wff = thm psseq1 () |- ( A = B -> ( A C. A <-> B C. A ) ) ;
	step 7 : wff = thm mtbii (step 5, step 6) |- ( A = B -> -. B C. A ) ;
	step 8 : wff = thm jaoi (step 4, step 7) |- ( ( A C. B \/ A = B ) -> -. B C. A ) ;
	step 9 : wff = thm sylbi (step 1, step 8) |- ( A C_ B -> -. B C. A ) ;
	qed prop 1 = step 9 ;
}

theorem psstr (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C. B /\ B C. C ) -> A C. C ) ;
}

proof of psstr {
	step 1 : wff = thm dfpss2 () |- ( A C. C <-> ( A C_ C /\ -. A = C ) ) ;
	step 2 : wff = thm pssss () |- ( A C. B -> A C_ B ) ;
	step 3 : wff = thm pssss () |- ( B C. C -> B C_ C ) ;
	step 4 : wff = thm sylan9ss (step 2, step 3) |- ( ( A C. B /\ B C. C ) -> A C_ C ) ;
	step 5 : wff = thm pssn2lp () |- -. ( C C. B /\ B C. C ) ;
	step 6 : wff = thm psseq1 () |- ( A = C -> ( A C. B <-> C C. B ) ) ;
	step 7 : wff = thm anbi1d (step 6) |- ( A = C -> ( ( A C. B /\ B C. C ) <-> ( C C. B /\ B C. C ) ) ) ;
	step 8 : wff = thm mtbiri (step 5, step 7) |- ( A = C -> -. ( A C. B /\ B C. C ) ) ;
	step 9 : wff = thm con2i (step 8) |- ( ( A C. B /\ B C. C ) -> -. A = C ) ;
	step 10 : wff = thm sylanbrc (step 1, step 4, step 9) |- ( ( A C. B /\ B C. C ) -> A C. C ) ;
	qed prop 1 = step 10 ;
}

theorem sspsstr (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ B C. C ) -> A C. C ) ;
}

proof of sspsstr {
	step 1 : wff = thm psstr () |- ( ( A C. B /\ B C. C ) -> A C. C ) ;
	step 2 : wff = thm ex (step 1) |- ( A C. B -> ( B C. C -> A C. C ) ) ;
	step 3 : wff = thm psseq1 () |- ( A = B -> ( A C. C <-> B C. C ) ) ;
	step 4 : wff = thm biimprd (step 3) |- ( A = B -> ( B C. C -> A C. C ) ) ;
	step 5 : wff = thm jaoi (step 2, step 4) |- ( ( A C. B \/ A = B ) -> ( B C. C -> A C. C ) ) ;
	step 6 : wff = thm imp (step 5) |- ( ( ( A C. B \/ A = B ) /\ B C. C ) -> A C. C ) ;
	step 7 : wff = thm sspss () |- ( A C_ B <-> ( A C. B \/ A = B ) ) ;
	step 8 : wff = thm sylanb (step 6, step 7) |- ( ( A C_ B /\ B C. C ) -> A C. C ) ;
	qed prop 1 = step 8 ;
}

theorem psssstr (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C. B /\ B C_ C ) -> A C. C ) ;
}

proof of psssstr {
	step 1 : wff = thm psstr () |- ( ( A C. B /\ B C. C ) -> A C. C ) ;
	step 2 : wff = thm ex (step 1) |- ( A C. B -> ( B C. C -> A C. C ) ) ;
	step 3 : wff = thm psseq2 () |- ( B = C -> ( A C. B <-> A C. C ) ) ;
	step 4 : wff = thm biimpcd (step 3) |- ( A C. B -> ( B = C -> A C. C ) ) ;
	step 5 : wff = thm jaod (step 2, step 4) |- ( A C. B -> ( ( B C. C \/ B = C ) -> A C. C ) ) ;
	step 6 : wff = thm imp (step 5) |- ( ( A C. B /\ ( B C. C \/ B = C ) ) -> A C. C ) ;
	step 7 : wff = thm sspss () |- ( B C_ C <-> ( B C. C \/ B = C ) ) ;
	step 8 : wff = thm sylan2b (step 6, step 7) |- ( ( A C. B /\ B C_ C ) -> A C. C ) ;
	qed prop 1 = step 8 ;
}

theorem difeq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A \ C ) = ( B \ C ) ) ;
}

proof of difeq1 {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( A = B -> ( ( x e. A /\ -. x e. C ) <-> ( x e. B /\ -. x e. C ) ) ) ;
	step 3 : wff = thm abbidv (step 2) |- ( A = B -> { x | ( x e. A /\ -. x e. C ) } = { x | ( x e. B /\ -. x e. C ) } ) ;
	step 4 : wff = def df-dif () |- ( A \ C ) = { x | ( x e. A /\ -. x e. C ) } ;
	step 5 : wff = def df-dif () |- ( B \ C ) = { x | ( x e. B /\ -. x e. C ) } ;
	step 6 : wff = thm 3eqtr4g (step 3, step 4, step 5) |- ( A = B -> ( A \ C ) = ( B \ C ) ) ;
	qed prop 1 = step 6 ;
}

theorem difeq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C \ A ) = ( C \ B ) ) ;
}

proof of difeq2 {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm notbid (step 1) |- ( A = B -> ( -. x e. A <-> -. x e. B ) ) ;
	step 3 : wff = thm anbi2d (step 2) |- ( A = B -> ( ( x e. C /\ -. x e. A ) <-> ( x e. C /\ -. x e. B ) ) ) ;
	step 4 : wff = thm abbidv (step 3) |- ( A = B -> { x | ( x e. C /\ -. x e. A ) } = { x | ( x e. C /\ -. x e. B ) } ) ;
	step 5 : wff = def df-dif () |- ( C \ A ) = { x | ( x e. C /\ -. x e. A ) } ;
	step 6 : wff = def df-dif () |- ( C \ B ) = { x | ( x e. C /\ -. x e. B ) } ;
	step 7 : wff = thm 3eqtr4g (step 4, step 5, step 6) |- ( A = B -> ( C \ A ) = ( C \ B ) ) ;
	qed prop 1 = step 7 ;
}

theorem difeq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A \ C ) = ( B \ C ) ;
}

proof of difeq1i {
	step 1 : wff = thm difeq1 () |- ( A = B -> ( A \ C ) = ( B \ C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A \ C ) = ( B \ C ) ;
	qed prop 1 = step 2 ;
}

theorem difeq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C \ A ) = ( C \ B ) ;
}

proof of difeq2i {
	step 1 : wff = thm difeq2 () |- ( A = B -> ( C \ A ) = ( C \ B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C \ A ) = ( C \ B ) ;
	qed prop 1 = step 2 ;
}

theorem difeq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A \ C ) = ( B \ D ) ;
}

proof of difeq12i {
	step 1 : wff = thm difeq1i (hyp 1) |- ( A \ C ) = ( B \ C ) ;
	step 2 : wff = thm difeq2i (hyp 2) |- ( B \ C ) = ( B \ D ) ;
	step 3 : wff = thm eqtri (step 1, step 2) |- ( A \ C ) = ( B \ D ) ;
	qed prop 1 = step 3 ;
}

theorem difeq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A \ C ) = ( B \ C ) ) ;
}

proof of difeq1d {
	step 1 : wff = thm difeq1 () |- ( A = B -> ( A \ C ) = ( B \ C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A \ C ) = ( B \ C ) ) ;
	qed prop 1 = step 2 ;
}

theorem difeq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C \ A ) = ( C \ B ) ) ;
}

proof of difeq2d {
	step 1 : wff = thm difeq2 () |- ( A = B -> ( C \ A ) = ( C \ B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C \ A ) = ( C \ B ) ) ;
	qed prop 1 = step 2 ;
}

theorem difeqri (x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ -. x e. B ) <-> x e. C ) ;
	-----------------------
	prop 1 : wff = |- ( A \ B ) = C ;
}

proof of difeqri {
	step 1 : wff = def df-dif () |- ( A \ B ) = { x | ( x e. A /\ -. x e. B ) } ;
	step 2 : wff = thm bicomi (hyp 1) |- ( x e. C <-> ( x e. A /\ -. x e. B ) ) ;
	step 3 : wff = thm abbi2i (step 2) |- C = { x | ( x e. A /\ -. x e. B ) } ;
	step 4 : wff = thm eqtr4i (step 1, step 3) |- ( A \ B ) = C ;
	qed prop 1 = step 4 ;
}

theorem hbdif (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. ( A \ B ) -> A. x y e. ( A \ B ) ) ;
}

proof of hbdif {
	step 1 : wff = thm hbn (hyp 2) |- ( -. y e. B -> A. x -. y e. B ) ;
	step 2 : wff = thm hban (hyp 1, step 1) |- ( ( y e. A /\ -. y e. B ) -> A. x ( y e. A /\ -. y e. B ) ) ;
	step 3 : wff = thm eldif () |- ( y e. ( A \ B ) <-> ( y e. A /\ -. y e. B ) ) ;
	step 4 : wff = thm eldif () |- ( y e. ( A \ B ) <-> ( y e. A /\ -. y e. B ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x y e. ( A \ B ) <-> A. x ( y e. A /\ -. y e. B ) ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( y e. ( A \ B ) -> A. x y e. ( A \ B ) ) ;
	qed prop 1 = step 6 ;
}

theorem eldifi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. ( B \ C ) -> A e. B ) ;
}

proof of eldifi {
	step 1 : wff = thm eldif () |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) ;
	step 2 : wff = thm pm3_26bi (step 1) |- ( A e. ( B \ C ) -> A e. B ) ;
	qed prop 1 = step 2 ;
}

theorem eldifn (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. ( B \ C ) -> -. A e. C ) ;
}

proof of eldifn {
	step 1 : wff = thm eldif () |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) ;
	step 2 : wff = thm pm3_27bi (step 1) |- ( A e. ( B \ C ) -> -. A e. C ) ;
	qed prop 1 = step 2 ;
}

theorem elndif (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. B -> -. A e. ( C \ B ) ) ;
}

proof of elndif {
	step 1 : wff = thm eldifn () |- ( A e. ( C \ B ) -> -. A e. B ) ;
	step 2 : wff = thm con2i (step 1) |- ( A e. B -> -. A e. ( C \ B ) ) ;
	qed prop 1 = step 2 ;
}

theorem neldif (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. B /\ -. A e. ( B \ C ) ) -> A e. C ) ;
}

proof of neldif {
	step 1 : wff = thm eldif () |- ( A e. ( B \ C ) <-> ( A e. B /\ -. A e. C ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( A e. B /\ -. A e. C ) -> A e. ( B \ C ) ) ;
	step 3 : wff = thm ex (step 2) |- ( A e. B -> ( -. A e. C -> A e. ( B \ C ) ) ) ;
	step 4 : wff = thm con1d (step 3) |- ( A e. B -> ( -. A e. ( B \ C ) -> A e. C ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( A e. B /\ -. A e. ( B \ C ) ) -> A e. C ) ;
	qed prop 1 = step 5 ;
}

theorem difdif (A : class, B : class)  {
	prop 1 : wff = |- ( A \ ( B \ A ) ) = A ;
}

proof of difdif {
	var x : set;
	step 1 : wff = thm eldif () |- ( x e. ( B \ A ) <-> ( x e. B /\ -. x e. A ) ) ;
	step 2 : wff = thm notbii (step 1) |- ( -. x e. ( B \ A ) <-> -. ( x e. B /\ -. x e. A ) ) ;
	step 3 : wff = thm iman () |- ( ( x e. B -> x e. A ) <-> -. ( x e. B /\ -. x e. A ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( -. x e. ( B \ A ) <-> ( x e. B -> x e. A ) ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( x e. A /\ -. x e. ( B \ A ) ) <-> ( x e. A /\ ( x e. B -> x e. A ) ) ) ;
	step 6 : wff = thm pm4_45im () |- ( x e. A <-> ( x e. A /\ ( x e. B -> x e. A ) ) ) ;
	step 7 : wff = thm bitr4i (step 5, step 6) |- ( ( x e. A /\ -. x e. ( B \ A ) ) <-> x e. A ) ;
	step 8 : wff = thm difeqri (step 7) |- ( A \ ( B \ A ) ) = A ;
	qed prop 1 = step 8 ;
}

theorem difss (A : class, B : class)  {
	prop 1 : wff = |- ( A \ B ) C_ A ;
}

proof of difss {
	var x : set;
	step 1 : wff = thm eldifi () |- ( x e. ( A \ B ) -> x e. A ) ;
	step 2 : wff = thm ssriv (step 1) |- ( A \ B ) C_ A ;
	qed prop 1 = step 2 ;
}

theorem ssdifss (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( A \ C ) C_ B ) ;
}

proof of ssdifss {
	step 1 : wff = thm difss () |- ( A \ C ) C_ A ;
	step 2 : wff = thm sstr () |- ( ( ( A \ C ) C_ A /\ A C_ B ) -> ( A \ C ) C_ B ) ;
	step 3 : wff = thm mpan (step 1, step 2) |- ( A C_ B -> ( A \ C ) C_ B ) ;
	qed prop 1 = step 3 ;
}

theorem ddif (A : class)  {
	prop 1 : wff = |- ( _V \ ( _V \ A ) ) = A ;
}

proof of ddif {
	var x : set;
	step 1 : wff = thm eldif () |- ( x e. ( _V \ A ) <-> ( x e. _V /\ -. x e. A ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm mpbiran (step 1, step 2) |- ( x e. ( _V \ A ) <-> -. x e. A ) ;
	step 4 : wff = thm con2bii (step 3) |- ( x e. A <-> -. x e. ( _V \ A ) ) ;
	step 5 : wff = thm visset () |- x e. _V ;
	step 6 : wff = thm biantrur (step 5) |- ( -. x e. ( _V \ A ) <-> ( x e. _V /\ -. x e. ( _V \ A ) ) ) ;
	step 7 : wff = thm bitr2i (step 4, step 6) |- ( ( x e. _V /\ -. x e. ( _V \ A ) ) <-> x e. A ) ;
	step 8 : wff = thm difeqri (step 7) |- ( _V \ ( _V \ A ) ) = A ;
	qed prop 1 = step 8 ;
}

theorem ssconb (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ C /\ B C_ C ) -> ( A C_ ( C \ B ) <-> B C_ ( C \ A ) ) ) ;
}

proof of ssconb {
	var x : set;
	step 1 : wff = thm pm5_1 () |- ( ( ( x e. A -> x e. C ) /\ ( x e. B -> x e. C ) ) -> ( ( x e. A -> x e. C ) <-> ( x e. B -> x e. C ) ) ) ;
	step 2 : wff = thm ssel () |- ( A C_ C -> ( x e. A -> x e. C ) ) ;
	step 3 : wff = thm ssel () |- ( B C_ C -> ( x e. B -> x e. C ) ) ;
	step 4 : wff = thm syl2an (step 1, step 2, step 3) |- ( ( A C_ C /\ B C_ C ) -> ( ( x e. A -> x e. C ) <-> ( x e. B -> x e. C ) ) ) ;
	step 5 : wff = thm con2b () |- ( ( x e. A -> -. x e. B ) <-> ( x e. B -> -. x e. A ) ) ;
	step 6 : wff = thm a1i (step 5) |- ( ( A C_ C /\ B C_ C ) -> ( ( x e. A -> -. x e. B ) <-> ( x e. B -> -. x e. A ) ) ) ;
	step 7 : wff = thm anbi12d (step 4, step 6) |- ( ( A C_ C /\ B C_ C ) -> ( ( ( x e. A -> x e. C ) /\ ( x e. A -> -. x e. B ) ) <-> ( ( x e. B -> x e. C ) /\ ( x e. B -> -. x e. A ) ) ) ) ;
	step 8 : wff = thm jcab () |- ( ( x e. A -> ( x e. C /\ -. x e. B ) ) <-> ( ( x e. A -> x e. C ) /\ ( x e. A -> -. x e. B ) ) ) ;
	step 9 : wff = thm jcab () |- ( ( x e. B -> ( x e. C /\ -. x e. A ) ) <-> ( ( x e. B -> x e. C ) /\ ( x e. B -> -. x e. A ) ) ) ;
	step 10 : wff = thm 3bitr4g (step 7, step 8, step 9) |- ( ( A C_ C /\ B C_ C ) -> ( ( x e. A -> ( x e. C /\ -. x e. B ) ) <-> ( x e. B -> ( x e. C /\ -. x e. A ) ) ) ) ;
	step 11 : wff = thm eldif () |- ( x e. ( C \ B ) <-> ( x e. C /\ -. x e. B ) ) ;
	step 12 : wff = thm imbi2i (step 11) |- ( ( x e. A -> x e. ( C \ B ) ) <-> ( x e. A -> ( x e. C /\ -. x e. B ) ) ) ;
	step 13 : wff = thm eldif () |- ( x e. ( C \ A ) <-> ( x e. C /\ -. x e. A ) ) ;
	step 14 : wff = thm imbi2i (step 13) |- ( ( x e. B -> x e. ( C \ A ) ) <-> ( x e. B -> ( x e. C /\ -. x e. A ) ) ) ;
	step 15 : wff = thm 3bitr4g (step 10, step 12, step 14) |- ( ( A C_ C /\ B C_ C ) -> ( ( x e. A -> x e. ( C \ B ) ) <-> ( x e. B -> x e. ( C \ A ) ) ) ) ;
	step 16 : wff = thm albidv (step 15) |- ( ( A C_ C /\ B C_ C ) -> ( A. x ( x e. A -> x e. ( C \ B ) ) <-> A. x ( x e. B -> x e. ( C \ A ) ) ) ) ;
	step 17 : wff = thm dfss2 () |- ( A C_ ( C \ B ) <-> A. x ( x e. A -> x e. ( C \ B ) ) ) ;
	step 18 : wff = thm dfss2 () |- ( B C_ ( C \ A ) <-> A. x ( x e. B -> x e. ( C \ A ) ) ) ;
	step 19 : wff = thm 3bitr4g (step 16, step 17, step 18) |- ( ( A C_ C /\ B C_ C ) -> ( A C_ ( C \ B ) <-> B C_ ( C \ A ) ) ) ;
	qed prop 1 = step 19 ;
}

theorem sscon (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( C \ B ) C_ ( C \ A ) ) ;
}

proof of sscon {
	var x : set;
	step 1 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm con3d (step 1) |- ( A C_ B -> ( -. x e. B -> -. x e. A ) ) ;
	step 3 : wff = thm anim2d (step 2) |- ( A C_ B -> ( ( x e. C /\ -. x e. B ) -> ( x e. C /\ -. x e. A ) ) ) ;
	step 4 : wff = thm eldif () |- ( x e. ( C \ B ) <-> ( x e. C /\ -. x e. B ) ) ;
	step 5 : wff = thm eldif () |- ( x e. ( C \ A ) <-> ( x e. C /\ -. x e. A ) ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( A C_ B -> ( x e. ( C \ B ) -> x e. ( C \ A ) ) ) ;
	step 7 : wff = thm ssrdv (step 6) |- ( A C_ B -> ( C \ B ) C_ ( C \ A ) ) ;
	qed prop 1 = step 7 ;
}

theorem ssdif (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( A \ C ) C_ ( B \ C ) ) ;
}

proof of ssdif {
	var x : set;
	step 1 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm anim1d (step 1) |- ( A C_ B -> ( ( x e. A /\ -. x e. C ) -> ( x e. B /\ -. x e. C ) ) ) ;
	step 3 : wff = thm eldif () |- ( x e. ( A \ C ) <-> ( x e. A /\ -. x e. C ) ) ;
	step 4 : wff = thm eldif () |- ( x e. ( B \ C ) <-> ( x e. B /\ -. x e. C ) ) ;
	step 5 : wff = thm 3imtr4g (step 2, step 3, step 4) |- ( A C_ B -> ( x e. ( A \ C ) -> x e. ( B \ C ) ) ) ;
	step 6 : wff = thm ssrdv (step 5) |- ( A C_ B -> ( A \ C ) C_ ( B \ C ) ) ;
	qed prop 1 = step 6 ;
}

theorem elun (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) ;
}

proof of elun {
	var x : set;
	step 1 : wff = thm elisset () |- ( A e. ( B u. C ) -> A e. _V ) ;
	step 2 : wff = thm elisset () |- ( A e. B -> A e. _V ) ;
	step 3 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 4 : wff = thm jaoi (step 2, step 3) |- ( ( A e. B \/ A e. C ) -> A e. _V ) ;
	step 5 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 6 : wff = thm eleq1 () |- ( x = A -> ( x e. C <-> A e. C ) ) ;
	step 7 : wff = thm orbi12d (step 5, step 6) |- ( x = A -> ( ( x e. B \/ x e. C ) <-> ( A e. B \/ A e. C ) ) ) ;
	step 8 : wff = def df-un () |- ( B u. C ) = { x | ( x e. B \/ x e. C ) } ;
	step 9 : wff = thm elab2g (step 7, step 8) |- ( A e. _V -> ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) ) ;
	step 10 : wff = thm pm5_21nii (step 1, step 4, step 9) |- ( A e. ( B u. C ) <-> ( A e. B \/ A e. C ) ) ;
	qed prop 1 = step 10 ;
}

theorem uneqri (x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( x e. A \/ x e. B ) <-> x e. C ) ;
	-----------------------
	prop 1 : wff = |- ( A u. B ) = C ;
}

proof of uneqri {
	step 1 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 2 : wff = thm bitri (step 1, hyp 1) |- ( x e. ( A u. B ) <-> x e. C ) ;
	step 3 : wff = thm eqriv (step 2) |- ( A u. B ) = C ;
	qed prop 1 = step 3 ;
}

theorem unidm (A : class)  {
	prop 1 : wff = |- ( A u. A ) = A ;
}

proof of unidm {
	var x : set;
	step 1 : wff = thm oridm () |- ( ( x e. A \/ x e. A ) <-> x e. A ) ;
	step 2 : wff = thm uneqri (step 1) |- ( A u. A ) = A ;
	qed prop 1 = step 2 ;
}

theorem uncom (A : class, B : class)  {
	prop 1 : wff = |- ( A u. B ) = ( B u. A ) ;
}

proof of uncom {
	var x : set;
	step 1 : wff = thm orcom () |- ( ( x e. A \/ x e. B ) <-> ( x e. B \/ x e. A ) ) ;
	step 2 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 3 : wff = thm elun () |- ( x e. ( B u. A ) <-> ( x e. B \/ x e. A ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( x e. ( A u. B ) <-> x e. ( B u. A ) ) ;
	step 5 : wff = thm eqriv (step 4) |- ( A u. B ) = ( B u. A ) ;
	qed prop 1 = step 5 ;
}

theorem uneq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
}

proof of uneq1 {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm orbi1d (step 1) |- ( A = B -> ( ( x e. A \/ x e. C ) <-> ( x e. B \/ x e. C ) ) ) ;
	step 3 : wff = thm elun () |- ( x e. ( A u. C ) <-> ( x e. A \/ x e. C ) ) ;
	step 4 : wff = thm elun () |- ( x e. ( B u. C ) <-> ( x e. B \/ x e. C ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( x e. ( A u. C ) <-> x e. ( B u. C ) ) ) ;
	step 6 : wff = thm eqrdv (step 5) |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
	qed prop 1 = step 6 ;
}

theorem uneq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C u. A ) = ( C u. B ) ) ;
}

proof of uneq2 {
	step 1 : wff = thm uneq1 () |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
	step 2 : wff = thm uncom () |- ( C u. A ) = ( A u. C ) ;
	step 3 : wff = thm uncom () |- ( C u. B ) = ( B u. C ) ;
	step 4 : wff = thm 3eqtr4g (step 1, step 2, step 3) |- ( A = B -> ( C u. A ) = ( C u. B ) ) ;
	qed prop 1 = step 4 ;
}

theorem uneq12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) ;
}

proof of uneq12 {
	step 1 : wff = thm uneq1 () |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
	step 2 : wff = thm uneq2 () |- ( C = D -> ( B u. C ) = ( B u. D ) ) ;
	step 3 : wff = thm sylan9eq (step 1, step 2) |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) ;
	qed prop 1 = step 3 ;
}

theorem uneq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A u. C ) = ( B u. C ) ;
}

proof of uneq1i {
	step 1 : wff = thm uneq1 () |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A u. C ) = ( B u. C ) ;
	qed prop 1 = step 2 ;
}

theorem uneq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C u. A ) = ( C u. B ) ;
}

proof of uneq2i {
	step 1 : wff = thm uneq2 () |- ( A = B -> ( C u. A ) = ( C u. B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C u. A ) = ( C u. B ) ;
	qed prop 1 = step 2 ;
}

theorem uneq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A u. C ) = ( B u. D ) ;
}

proof of uneq12i {
	step 1 : wff = thm uneq12 () |- ( ( A = B /\ C = D ) -> ( A u. C ) = ( B u. D ) ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- ( A u. C ) = ( B u. D ) ;
	qed prop 1 = step 2 ;
}

theorem uneq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A u. C ) = ( B u. C ) ) ;
}

proof of uneq1d {
	step 1 : wff = thm uneq1 () |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A u. C ) = ( B u. C ) ) ;
	qed prop 1 = step 2 ;
}

theorem uneq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C u. A ) = ( C u. B ) ) ;
}

proof of uneq2d {
	step 1 : wff = thm uneq2 () |- ( A = B -> ( C u. A ) = ( C u. B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C u. A ) = ( C u. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem uneq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A u. C ) = ( B u. D ) ) ;
}

proof of uneq12d {
	step 1 : wff = thm uneq1d (hyp 1) |- ( ph -> ( A u. C ) = ( B u. C ) ) ;
	step 2 : wff = thm uneq2d (hyp 2) |- ( ph -> ( B u. C ) = ( B u. D ) ) ;
	step 3 : wff = thm eqtrd (step 1, step 2) |- ( ph -> ( A u. C ) = ( B u. D ) ) ;
	qed prop 1 = step 3 ;
}

theorem hbun (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. ( A u. B ) -> A. x y e. ( A u. B ) ) ;
}

proof of hbun {
	step 1 : wff = thm hbor (hyp 1, hyp 2) |- ( ( y e. A \/ y e. B ) -> A. x ( y e. A \/ y e. B ) ) ;
	step 2 : wff = thm elun () |- ( y e. ( A u. B ) <-> ( y e. A \/ y e. B ) ) ;
	step 3 : wff = thm elun () |- ( y e. ( A u. B ) <-> ( y e. A \/ y e. B ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x y e. ( A u. B ) <-> A. x ( y e. A \/ y e. B ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( y e. ( A u. B ) -> A. x y e. ( A u. B ) ) ;
	qed prop 1 = step 5 ;
}

theorem unass (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) ;
}

proof of unass {
	var x : set;
	step 1 : wff = thm orass () |- ( ( ( x e. A \/ x e. B ) \/ x e. C ) <-> ( x e. A \/ ( x e. B \/ x e. C ) ) ) ;
	step 2 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 3 : wff = thm orbi1i (step 2) |- ( ( x e. ( A u. B ) \/ x e. C ) <-> ( ( x e. A \/ x e. B ) \/ x e. C ) ) ;
	step 4 : wff = thm elun () |- ( x e. ( B u. C ) <-> ( x e. B \/ x e. C ) ) ;
	step 5 : wff = thm orbi2i (step 4) |- ( ( x e. A \/ x e. ( B u. C ) ) <-> ( x e. A \/ ( x e. B \/ x e. C ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 3, step 5) |- ( ( x e. ( A u. B ) \/ x e. C ) <-> ( x e. A \/ x e. ( B u. C ) ) ) ;
	step 7 : wff = thm elun () |- ( x e. ( A u. ( B u. C ) ) <-> ( x e. A \/ x e. ( B u. C ) ) ) ;
	step 8 : wff = thm bitr4i (step 6, step 7) |- ( ( x e. ( A u. B ) \/ x e. C ) <-> x e. ( A u. ( B u. C ) ) ) ;
	step 9 : wff = thm uneqri (step 8) |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) ;
	qed prop 1 = step 9 ;
}

theorem un12 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A u. ( B u. C ) ) = ( B u. ( A u. C ) ) ;
}

proof of un12 {
	step 1 : wff = thm uncom () |- ( A u. B ) = ( B u. A ) ;
	step 2 : wff = thm uneq1i (step 1) |- ( ( A u. B ) u. C ) = ( ( B u. A ) u. C ) ;
	step 3 : wff = thm unass () |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) ;
	step 4 : wff = thm unass () |- ( ( B u. A ) u. C ) = ( B u. ( A u. C ) ) ;
	step 5 : wff = thm 3eqtr3i (step 2, step 3, step 4) |- ( A u. ( B u. C ) ) = ( B u. ( A u. C ) ) ;
	qed prop 1 = step 5 ;
}

theorem un23 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. B ) ;
}

proof of un23 {
	step 1 : wff = thm uncom () |- ( B u. C ) = ( C u. B ) ;
	step 2 : wff = thm uneq2i (step 1) |- ( A u. ( B u. C ) ) = ( A u. ( C u. B ) ) ;
	step 3 : wff = thm unass () |- ( ( A u. B ) u. C ) = ( A u. ( B u. C ) ) ;
	step 4 : wff = thm unass () |- ( ( A u. C ) u. B ) = ( A u. ( C u. B ) ) ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. B ) ;
	qed prop 1 = step 5 ;
}

theorem un4 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A u. B ) u. ( C u. D ) ) = ( ( A u. C ) u. ( B u. D ) ) ;
}

proof of un4 {
	step 1 : wff = thm un12 () |- ( B u. ( C u. D ) ) = ( C u. ( B u. D ) ) ;
	step 2 : wff = thm uneq2i (step 1) |- ( A u. ( B u. ( C u. D ) ) ) = ( A u. ( C u. ( B u. D ) ) ) ;
	step 3 : wff = thm unass () |- ( ( A u. B ) u. ( C u. D ) ) = ( A u. ( B u. ( C u. D ) ) ) ;
	step 4 : wff = thm unass () |- ( ( A u. C ) u. ( B u. D ) ) = ( A u. ( C u. ( B u. D ) ) ) ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- ( ( A u. B ) u. ( C u. D ) ) = ( ( A u. C ) u. ( B u. D ) ) ;
	qed prop 1 = step 5 ;
}

theorem unundi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) ;
}

proof of unundi {
	step 1 : wff = thm unidm () |- ( A u. A ) = A ;
	step 2 : wff = thm uneq1i (step 1) |- ( ( A u. A ) u. ( B u. C ) ) = ( A u. ( B u. C ) ) ;
	step 3 : wff = thm un4 () |- ( ( A u. A ) u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) ;
	step 4 : wff = thm eqtr3i (step 2, step 3) |- ( A u. ( B u. C ) ) = ( ( A u. B ) u. ( A u. C ) ) ;
	qed prop 1 = step 4 ;
}

theorem unundir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. ( B u. C ) ) ;
}

proof of unundir {
	step 1 : wff = thm unidm () |- ( C u. C ) = C ;
	step 2 : wff = thm uneq2i (step 1) |- ( ( A u. B ) u. ( C u. C ) ) = ( ( A u. B ) u. C ) ;
	step 3 : wff = thm un4 () |- ( ( A u. B ) u. ( C u. C ) ) = ( ( A u. C ) u. ( B u. C ) ) ;
	step 4 : wff = thm eqtr3i (step 2, step 3) |- ( ( A u. B ) u. C ) = ( ( A u. C ) u. ( B u. C ) ) ;
	qed prop 1 = step 4 ;
}

theorem ssun1 (A : class, B : class)  {
	prop 1 : wff = |- A C_ ( A u. B ) ;
}

proof of ssun1 {
	var x : set;
	step 1 : wff = thm orc () |- ( x e. A -> ( x e. A \/ x e. B ) ) ;
	step 2 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( x e. A -> x e. ( A u. B ) ) ;
	step 4 : wff = thm ssriv (step 3) |- A C_ ( A u. B ) ;
	qed prop 1 = step 4 ;
}

theorem ssun2 (A : class, B : class)  {
	prop 1 : wff = |- A C_ ( B u. A ) ;
}

proof of ssun2 {
	step 1 : wff = thm ssun1 () |- A C_ ( A u. B ) ;
	step 2 : wff = thm uncom () |- ( A u. B ) = ( B u. A ) ;
	step 3 : wff = thm sseqtri (step 1, step 2) |- A C_ ( B u. A ) ;
	qed prop 1 = step 3 ;
}

theorem ssun3 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> A C_ ( B u. C ) ) ;
}

proof of ssun3 {
	step 1 : wff = thm ssun1 () |- B C_ ( B u. C ) ;
	step 2 : wff = thm sstr2 () |- ( A C_ B -> ( B C_ ( B u. C ) -> A C_ ( B u. C ) ) ) ;
	step 3 : wff = thm mpi (step 1, step 2) |- ( A C_ B -> A C_ ( B u. C ) ) ;
	qed prop 1 = step 3 ;
}

theorem ssun4 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> A C_ ( C u. B ) ) ;
}

proof of ssun4 {
	step 1 : wff = thm ssun2 () |- B C_ ( C u. B ) ;
	step 2 : wff = thm sstr2 () |- ( A C_ B -> ( B C_ ( C u. B ) -> A C_ ( C u. B ) ) ) ;
	step 3 : wff = thm mpi (step 1, step 2) |- ( A C_ B -> A C_ ( C u. B ) ) ;
	qed prop 1 = step 3 ;
}

theorem elun1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. B -> A e. ( B u. C ) ) ;
}

proof of elun1 {
	step 1 : wff = thm ssun1 () |- B C_ ( B u. C ) ;
	step 2 : wff = thm sseli (step 1) |- ( A e. B -> A e. ( B u. C ) ) ;
	qed prop 1 = step 2 ;
}

theorem elun2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. B -> A e. ( C u. B ) ) ;
}

proof of elun2 {
	step 1 : wff = thm ssun2 () |- B C_ ( C u. B ) ;
	step 2 : wff = thm sseli (step 1) |- ( A e. B -> A e. ( C u. B ) ) ;
	qed prop 1 = step 2 ;
}

theorem unss1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) ;
}

proof of unss1 {
	var x : set;
	step 1 : wff = thm pm2_38 () |- ( ( x e. A -> x e. B ) -> ( ( x e. A \/ x e. C ) -> ( x e. B \/ x e. C ) ) ) ;
	step 2 : wff = thm elun () |- ( x e. ( A u. C ) <-> ( x e. A \/ x e. C ) ) ;
	step 3 : wff = thm elun () |- ( x e. ( B u. C ) <-> ( x e. B \/ x e. C ) ) ;
	step 4 : wff = thm 3imtr4g (step 1, step 2, step 3) |- ( ( x e. A -> x e. B ) -> ( x e. ( A u. C ) -> x e. ( B u. C ) ) ) ;
	step 5 : wff = thm 19_20i (step 4) |- ( A. x ( x e. A -> x e. B ) -> A. x ( x e. ( A u. C ) -> x e. ( B u. C ) ) ) ;
	step 6 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 7 : wff = thm dfss2 () |- ( ( A u. C ) C_ ( B u. C ) <-> A. x ( x e. ( A u. C ) -> x e. ( B u. C ) ) ) ;
	step 8 : wff = thm 3imtr4i (step 5, step 6, step 7) |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) ;
	qed prop 1 = step 8 ;
}

theorem ssequn1 (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( A u. B ) = B ) ;
}

proof of ssequn1 {
	var x : set;
	step 1 : wff = def df-un () |- ( A u. B ) = { x | ( x e. A \/ x e. B ) } ;
	step 2 : wff = thm eqeq2i (step 1) |- ( B = ( A u. B ) <-> B = { x | ( x e. A \/ x e. B ) } ) ;
	step 3 : wff = thm eqcom () |- ( ( A u. B ) = B <-> B = ( A u. B ) ) ;
	step 4 : wff = thm pm4_72 () |- ( ( x e. A -> x e. B ) <-> ( x e. B <-> ( x e. A \/ x e. B ) ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. A -> x e. B ) <-> A. x ( x e. B <-> ( x e. A \/ x e. B ) ) ) ;
	step 6 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 7 : wff = thm abeq2 () |- ( B = { x | ( x e. A \/ x e. B ) } <-> A. x ( x e. B <-> ( x e. A \/ x e. B ) ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( A C_ B <-> B = { x | ( x e. A \/ x e. B ) } ) ;
	step 9 : wff = thm 3bitr4ri (step 2, step 3, step 8) |- ( A C_ B <-> ( A u. B ) = B ) ;
	qed prop 1 = step 9 ;
}

theorem unss2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( C u. A ) C_ ( C u. B ) ) ;
}

proof of unss2 {
	step 1 : wff = thm unss1 () |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) ;
	step 2 : wff = thm uncom () |- ( C u. A ) = ( A u. C ) ;
	step 3 : wff = thm uncom () |- ( C u. B ) = ( B u. C ) ;
	step 4 : wff = thm 3sstr4g (step 1, step 2, step 3) |- ( A C_ B -> ( C u. A ) C_ ( C u. B ) ) ;
	qed prop 1 = step 4 ;
}

theorem unss12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ C C_ D ) -> ( A u. C ) C_ ( B u. D ) ) ;
}

proof of unss12 {
	step 1 : wff = thm unss1 () |- ( A C_ B -> ( A u. C ) C_ ( B u. C ) ) ;
	step 2 : wff = thm unss2 () |- ( C C_ D -> ( B u. C ) C_ ( B u. D ) ) ;
	step 3 : wff = thm sylan9ss (step 1, step 2) |- ( ( A C_ B /\ C C_ D ) -> ( A u. C ) C_ ( B u. D ) ) ;
	qed prop 1 = step 3 ;
}

theorem ssequn2 (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( B u. A ) = B ) ;
}

proof of ssequn2 {
	step 1 : wff = thm ssequn1 () |- ( A C_ B <-> ( A u. B ) = B ) ;
	step 2 : wff = thm uncom () |- ( A u. B ) = ( B u. A ) ;
	step 3 : wff = thm eqeq1i (step 2) |- ( ( A u. B ) = B <-> ( B u. A ) = B ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A C_ B <-> ( B u. A ) = B ) ;
	qed prop 1 = step 4 ;
}

theorem unss (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) ;
}

proof of unss {
	var x : set;
	step 1 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 2 : wff = thm imbi1i (step 1) |- ( ( x e. ( A u. B ) -> x e. C ) <-> ( ( x e. A \/ x e. B ) -> x e. C ) ) ;
	step 3 : wff = thm jaob () |- ( ( ( x e. A \/ x e. B ) -> x e. C ) <-> ( ( x e. A -> x e. C ) /\ ( x e. B -> x e. C ) ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( ( x e. ( A u. B ) -> x e. C ) <-> ( ( x e. A -> x e. C ) /\ ( x e. B -> x e. C ) ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. ( A u. B ) -> x e. C ) <-> A. x ( ( x e. A -> x e. C ) /\ ( x e. B -> x e. C ) ) ) ;
	step 6 : wff = thm dfss2 () |- ( ( A u. B ) C_ C <-> A. x ( x e. ( A u. B ) -> x e. C ) ) ;
	step 7 : wff = thm dfss2 () |- ( A C_ C <-> A. x ( x e. A -> x e. C ) ) ;
	step 8 : wff = thm dfss2 () |- ( B C_ C <-> A. x ( x e. B -> x e. C ) ) ;
	step 9 : wff = thm anbi12i (step 7, step 8) |- ( ( A C_ C /\ B C_ C ) <-> ( A. x ( x e. A -> x e. C ) /\ A. x ( x e. B -> x e. C ) ) ) ;
	step 10 : wff = thm 19_26 () |- ( A. x ( ( x e. A -> x e. C ) /\ ( x e. B -> x e. C ) ) <-> ( A. x ( x e. A -> x e. C ) /\ A. x ( x e. B -> x e. C ) ) ) ;
	step 11 : wff = thm bitr4i (step 9, step 10) |- ( ( A C_ C /\ B C_ C ) <-> A. x ( ( x e. A -> x e. C ) /\ ( x e. B -> x e. C ) ) ) ;
	step 12 : wff = thm 3bitr4ri (step 5, step 6, step 11) |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) ;
	qed prop 1 = step 12 ;
}

theorem unssi (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ C ;
	hyp 2 : wff = |- B C_ C ;
	-----------------------
	prop 1 : wff = |- ( A u. B ) C_ C ;
}

proof of unssi {
	step 1 : wff = thm pm3_2i (hyp 1, hyp 2) |- ( A C_ C /\ B C_ C ) ;
	step 2 : wff = thm unss () |- ( ( A C_ C /\ B C_ C ) <-> ( A u. B ) C_ C ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A u. B ) C_ C ;
	qed prop 1 = step 3 ;
}

theorem ssun (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B \/ A C_ C ) -> A C_ ( B u. C ) ) ;
}

proof of ssun {
	step 1 : wff = thm ssun3 () |- ( A C_ B -> A C_ ( B u. C ) ) ;
	step 2 : wff = thm ssun4 () |- ( A C_ C -> A C_ ( B u. C ) ) ;
	step 3 : wff = thm jaoi (step 1, step 2) |- ( ( A C_ B \/ A C_ C ) -> A C_ ( B u. C ) ) ;
	qed prop 1 = step 3 ;
}

theorem elin (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) ;
}

proof of elin {
	var x : set;
	step 1 : wff = thm elisset () |- ( A e. ( B i^i C ) -> A e. _V ) ;
	step 2 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 3 : wff = thm adantl (step 2) |- ( ( A e. B /\ A e. C ) -> A e. _V ) ;
	step 4 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 5 : wff = thm eleq1 () |- ( x = A -> ( x e. C <-> A e. C ) ) ;
	step 6 : wff = thm anbi12d (step 4, step 5) |- ( x = A -> ( ( x e. B /\ x e. C ) <-> ( A e. B /\ A e. C ) ) ) ;
	step 7 : wff = def df-in () |- ( B i^i C ) = { x | ( x e. B /\ x e. C ) } ;
	step 8 : wff = thm elab2g (step 6, step 7) |- ( A e. _V -> ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) ) ;
	step 9 : wff = thm pm5_21nii (step 1, step 3, step 8) |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) ;
	qed prop 1 = step 9 ;
}

theorem incom (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) = ( B i^i A ) ;
}

proof of incom {
	var x : set;
	step 1 : wff = thm ancom () |- ( ( x e. A /\ x e. B ) <-> ( x e. B /\ x e. A ) ) ;
	step 2 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 3 : wff = thm elin () |- ( x e. ( B i^i A ) <-> ( x e. B /\ x e. A ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( x e. ( A i^i B ) <-> x e. ( B i^i A ) ) ;
	step 5 : wff = thm eqriv (step 4) |- ( A i^i B ) = ( B i^i A ) ;
	qed prop 1 = step 5 ;
}

theorem ineqri (x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( x e. A /\ x e. B ) <-> x e. C ) ;
	-----------------------
	prop 1 : wff = |- ( A i^i B ) = C ;
}

proof of ineqri {
	step 1 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 2 : wff = thm bitri (step 1, hyp 1) |- ( x e. ( A i^i B ) <-> x e. C ) ;
	step 3 : wff = thm eqriv (step 2) |- ( A i^i B ) = C ;
	qed prop 1 = step 3 ;
}

theorem ineq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
}

proof of ineq1 {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( A = B -> ( ( x e. A /\ x e. C ) <-> ( x e. B /\ x e. C ) ) ) ;
	step 3 : wff = thm elin () |- ( x e. ( A i^i C ) <-> ( x e. A /\ x e. C ) ) ;
	step 4 : wff = thm elin () |- ( x e. ( B i^i C ) <-> ( x e. B /\ x e. C ) ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( x e. ( A i^i C ) <-> x e. ( B i^i C ) ) ) ;
	step 6 : wff = thm eqrdv (step 5) |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
	qed prop 1 = step 6 ;
}

theorem ineq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) ;
}

proof of ineq2 {
	step 1 : wff = thm ineq1 () |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
	step 2 : wff = thm incom () |- ( C i^i A ) = ( A i^i C ) ;
	step 3 : wff = thm incom () |- ( C i^i B ) = ( B i^i C ) ;
	step 4 : wff = thm 3eqtr4g (step 1, step 2, step 3) |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) ;
	qed prop 1 = step 4 ;
}

theorem ineq12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) ;
}

proof of ineq12 {
	step 1 : wff = thm ineq1 () |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
	step 2 : wff = thm ineq2 () |- ( C = D -> ( B i^i C ) = ( B i^i D ) ) ;
	step 3 : wff = thm sylan9eq (step 1, step 2) |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) ;
	qed prop 1 = step 3 ;
}

theorem ineq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A i^i C ) = ( B i^i C ) ;
}

proof of ineq1i {
	step 1 : wff = thm ineq1 () |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A i^i C ) = ( B i^i C ) ;
	qed prop 1 = step 2 ;
}

theorem ineq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C i^i A ) = ( C i^i B ) ;
}

proof of ineq2i {
	step 1 : wff = thm ineq2 () |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C i^i A ) = ( C i^i B ) ;
	qed prop 1 = step 2 ;
}

theorem ineq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A i^i C ) = ( B i^i D ) ;
}

proof of ineq12i {
	step 1 : wff = thm ineq12 () |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- ( A i^i C ) = ( B i^i D ) ;
	qed prop 1 = step 2 ;
}

theorem ineq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A i^i C ) = ( B i^i C ) ) ;
}

proof of ineq1d {
	step 1 : wff = thm ineq1 () |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A i^i C ) = ( B i^i C ) ) ;
	qed prop 1 = step 2 ;
}

theorem ineq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C i^i A ) = ( C i^i B ) ) ;
}

proof of ineq2d {
	step 1 : wff = thm ineq2 () |- ( A = B -> ( C i^i A ) = ( C i^i B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C i^i A ) = ( C i^i B ) ) ;
	qed prop 1 = step 2 ;
}

theorem ineq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A i^i C ) = ( B i^i D ) ) ;
}

proof of ineq12d {
	step 1 : wff = thm ineq1d (hyp 1) |- ( ph -> ( A i^i C ) = ( B i^i C ) ) ;
	step 2 : wff = thm ineq2d (hyp 2) |- ( ph -> ( B i^i C ) = ( B i^i D ) ) ;
	step 3 : wff = thm eqtrd (step 1, step 2) |- ( ph -> ( A i^i C ) = ( B i^i D ) ) ;
	qed prop 1 = step 3 ;
}

theorem ineqan12d (ph : wff, ps : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( A i^i C ) = ( B i^i D ) ) ;
}

proof of ineqan12d {
	step 1 : wff = thm ineq12 () |- ( ( A = B /\ C = D ) -> ( A i^i C ) = ( B i^i D ) ) ;
	step 2 : wff = thm syl2an (step 1, hyp 1, hyp 2) |- ( ( ph /\ ps ) -> ( A i^i C ) = ( B i^i D ) ) ;
	qed prop 1 = step 2 ;
}

theorem hbin (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. ( A i^i B ) -> A. x y e. ( A i^i B ) ) ;
}

proof of hbin {
	step 1 : wff = thm hban (hyp 1, hyp 2) |- ( ( y e. A /\ y e. B ) -> A. x ( y e. A /\ y e. B ) ) ;
	step 2 : wff = thm elin () |- ( y e. ( A i^i B ) <-> ( y e. A /\ y e. B ) ) ;
	step 3 : wff = thm elin () |- ( y e. ( A i^i B ) <-> ( y e. A /\ y e. B ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x y e. ( A i^i B ) <-> A. x ( y e. A /\ y e. B ) ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( y e. ( A i^i B ) -> A. x y e. ( A i^i B ) ) ;
	qed prop 1 = step 5 ;
}

theorem rabbirdv (ph : wff, ch : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( x e. B -> ( x e. A <-> ch ) ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( B i^i A ) = { x e. B | ch } ) ;
}

proof of rabbirdv {
	step 1 : wff = thm pm5_32d (hyp 1) |- ( ph -> ( ( x e. B /\ x e. A ) <-> ( x e. B /\ ch ) ) ) ;
	step 2 : wff = thm elin () |- ( x e. ( B i^i A ) <-> ( x e. B /\ x e. A ) ) ;
	step 3 : wff = thm syl5bb (step 1, step 2) |- ( ph -> ( x e. ( B i^i A ) <-> ( x e. B /\ ch ) ) ) ;
	step 4 : wff = thm abbi2dv (step 3) |- ( ph -> ( B i^i A ) = { x | ( x e. B /\ ch ) } ) ;
	step 5 : wff = def df-rab () |- { x e. B | ch } = { x | ( x e. B /\ ch ) } ;
	step 6 : wff = thm syl6eqr (step 4, step 5) |- ( ph -> ( B i^i A ) = { x e. B | ch } ) ;
	qed prop 1 = step 6 ;
}

theorem inidm (A : class)  {
	prop 1 : wff = |- ( A i^i A ) = A ;
}

proof of inidm {
	var x : set;
	step 1 : wff = thm anidm () |- ( ( x e. A /\ x e. A ) <-> x e. A ) ;
	step 2 : wff = thm ineqri (step 1) |- ( A i^i A ) = A ;
	qed prop 1 = step 2 ;
}

theorem inass (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) ;
}

proof of inass {
	var x : set;
	step 1 : wff = thm anass () |- ( ( ( x e. A /\ x e. B ) /\ x e. C ) <-> ( x e. A /\ ( x e. B /\ x e. C ) ) ) ;
	step 2 : wff = thm elin () |- ( x e. ( B i^i C ) <-> ( x e. B /\ x e. C ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( x e. A /\ x e. ( B i^i C ) ) <-> ( x e. A /\ ( x e. B /\ x e. C ) ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( ( x e. A /\ x e. B ) /\ x e. C ) <-> ( x e. A /\ x e. ( B i^i C ) ) ) ;
	step 5 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 6 : wff = thm anbi1i (step 5) |- ( ( x e. ( A i^i B ) /\ x e. C ) <-> ( ( x e. A /\ x e. B ) /\ x e. C ) ) ;
	step 7 : wff = thm elin () |- ( x e. ( A i^i ( B i^i C ) ) <-> ( x e. A /\ x e. ( B i^i C ) ) ) ;
	step 8 : wff = thm 3bitr4i (step 4, step 6, step 7) |- ( ( x e. ( A i^i B ) /\ x e. C ) <-> x e. ( A i^i ( B i^i C ) ) ) ;
	step 9 : wff = thm ineqri (step 8) |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) ;
	qed prop 1 = step 9 ;
}

theorem in12 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A i^i ( B i^i C ) ) = ( B i^i ( A i^i C ) ) ;
}

proof of in12 {
	step 1 : wff = thm incom () |- ( A i^i B ) = ( B i^i A ) ;
	step 2 : wff = thm ineq1i (step 1) |- ( ( A i^i B ) i^i C ) = ( ( B i^i A ) i^i C ) ;
	step 3 : wff = thm inass () |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) ;
	step 4 : wff = thm inass () |- ( ( B i^i A ) i^i C ) = ( B i^i ( A i^i C ) ) ;
	step 5 : wff = thm 3eqtr3i (step 2, step 3, step 4) |- ( A i^i ( B i^i C ) ) = ( B i^i ( A i^i C ) ) ;
	qed prop 1 = step 5 ;
}

theorem in23 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i B ) ;
}

proof of in23 {
	step 1 : wff = thm incom () |- ( B i^i C ) = ( C i^i B ) ;
	step 2 : wff = thm ineq2i (step 1) |- ( A i^i ( B i^i C ) ) = ( A i^i ( C i^i B ) ) ;
	step 3 : wff = thm inass () |- ( ( A i^i B ) i^i C ) = ( A i^i ( B i^i C ) ) ;
	step 4 : wff = thm inass () |- ( ( A i^i C ) i^i B ) = ( A i^i ( C i^i B ) ) ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i B ) ;
	qed prop 1 = step 5 ;
}

theorem in4 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A i^i B ) i^i ( C i^i D ) ) = ( ( A i^i C ) i^i ( B i^i D ) ) ;
}

proof of in4 {
	step 1 : wff = thm in12 () |- ( B i^i ( C i^i D ) ) = ( C i^i ( B i^i D ) ) ;
	step 2 : wff = thm ineq2i (step 1) |- ( A i^i ( B i^i ( C i^i D ) ) ) = ( A i^i ( C i^i ( B i^i D ) ) ) ;
	step 3 : wff = thm inass () |- ( ( A i^i B ) i^i ( C i^i D ) ) = ( A i^i ( B i^i ( C i^i D ) ) ) ;
	step 4 : wff = thm inass () |- ( ( A i^i C ) i^i ( B i^i D ) ) = ( A i^i ( C i^i ( B i^i D ) ) ) ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- ( ( A i^i B ) i^i ( C i^i D ) ) = ( ( A i^i C ) i^i ( B i^i D ) ) ;
	qed prop 1 = step 5 ;
}

theorem inindi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) ;
}

proof of inindi {
	step 1 : wff = thm inidm () |- ( A i^i A ) = A ;
	step 2 : wff = thm ineq1i (step 1) |- ( ( A i^i A ) i^i ( B i^i C ) ) = ( A i^i ( B i^i C ) ) ;
	step 3 : wff = thm in4 () |- ( ( A i^i A ) i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) ;
	step 4 : wff = thm eqtr3i (step 2, step 3) |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) ;
	qed prop 1 = step 4 ;
}

theorem inindir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i ( B i^i C ) ) ;
}

proof of inindir {
	step 1 : wff = thm inidm () |- ( C i^i C ) = C ;
	step 2 : wff = thm ineq2i (step 1) |- ( ( A i^i B ) i^i ( C i^i C ) ) = ( ( A i^i B ) i^i C ) ;
	step 3 : wff = thm in4 () |- ( ( A i^i B ) i^i ( C i^i C ) ) = ( ( A i^i C ) i^i ( B i^i C ) ) ;
	step 4 : wff = thm eqtr3i (step 2, step 3) |- ( ( A i^i B ) i^i C ) = ( ( A i^i C ) i^i ( B i^i C ) ) ;
	qed prop 1 = step 4 ;
}

theorem sseqin2 (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( B i^i A ) = A ) ;
}

proof of sseqin2 {
	step 1 : wff = def df-ss () |- ( A C_ B <-> ( A i^i B ) = A ) ;
	step 2 : wff = thm incom () |- ( A i^i B ) = ( B i^i A ) ;
	step 3 : wff = thm eqeq1i (step 2) |- ( ( A i^i B ) = A <-> ( B i^i A ) = A ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A C_ B <-> ( B i^i A ) = A ) ;
	qed prop 1 = step 4 ;
}

theorem inss1 (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) C_ A ;
}

proof of inss1 {
	var x : set;
	step 1 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 2 : wff = thm pm3_26bi (step 1) |- ( x e. ( A i^i B ) -> x e. A ) ;
	step 3 : wff = thm ssriv (step 2) |- ( A i^i B ) C_ A ;
	qed prop 1 = step 3 ;
}

theorem inss2 (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) C_ B ;
}

proof of inss2 {
	step 1 : wff = thm incom () |- ( B i^i A ) = ( A i^i B ) ;
	step 2 : wff = thm inss1 () |- ( B i^i A ) C_ B ;
	step 3 : wff = thm eqsstr3i (step 1, step 2) |- ( A i^i B ) C_ B ;
	qed prop 1 = step 3 ;
}

theorem ssin (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) ;
}

proof of ssin {
	step 1 : wff = thm ineq12 () |- ( ( ( A i^i B ) = A /\ ( A i^i C ) = A ) -> ( ( A i^i B ) i^i ( A i^i C ) ) = ( A i^i A ) ) ;
	step 2 : wff = thm inindi () |- ( A i^i ( B i^i C ) ) = ( ( A i^i B ) i^i ( A i^i C ) ) ;
	step 3 : wff = thm syl5eq (step 1, step 2) |- ( ( ( A i^i B ) = A /\ ( A i^i C ) = A ) -> ( A i^i ( B i^i C ) ) = ( A i^i A ) ) ;
	step 4 : wff = thm inidm () |- ( A i^i A ) = A ;
	step 5 : wff = thm syl6eq (step 3, step 4) |- ( ( ( A i^i B ) = A /\ ( A i^i C ) = A ) -> ( A i^i ( B i^i C ) ) = A ) ;
	step 6 : wff = def df-ss () |- ( A C_ B <-> ( A i^i B ) = A ) ;
	step 7 : wff = def df-ss () |- ( A C_ C <-> ( A i^i C ) = A ) ;
	step 8 : wff = thm anbi12i (step 6, step 7) |- ( ( A C_ B /\ A C_ C ) <-> ( ( A i^i B ) = A /\ ( A i^i C ) = A ) ) ;
	step 9 : wff = def df-ss () |- ( A C_ ( B i^i C ) <-> ( A i^i ( B i^i C ) ) = A ) ;
	step 10 : wff = thm 3imtr4i (step 5, step 8, step 9) |- ( ( A C_ B /\ A C_ C ) -> A C_ ( B i^i C ) ) ;
	step 11 : wff = thm inss1 () |- ( B i^i C ) C_ B ;
	step 12 : wff = thm sstr2 () |- ( A C_ ( B i^i C ) -> ( ( B i^i C ) C_ B -> A C_ B ) ) ;
	step 13 : wff = thm mpi (step 11, step 12) |- ( A C_ ( B i^i C ) -> A C_ B ) ;
	step 14 : wff = thm inss2 () |- ( B i^i C ) C_ C ;
	step 15 : wff = thm sstr2 () |- ( A C_ ( B i^i C ) -> ( ( B i^i C ) C_ C -> A C_ C ) ) ;
	step 16 : wff = thm mpi (step 14, step 15) |- ( A C_ ( B i^i C ) -> A C_ C ) ;
	step 17 : wff = thm jca (step 13, step 16) |- ( A C_ ( B i^i C ) -> ( A C_ B /\ A C_ C ) ) ;
	step 18 : wff = thm impbii (step 10, step 17) |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) ;
	qed prop 1 = step 18 ;
}

theorem ssini (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A C_ B ;
	hyp 2 : wff = |- A C_ C ;
	-----------------------
	prop 1 : wff = |- A C_ ( B i^i C ) ;
}

proof of ssini {
	step 1 : wff = thm pm3_2i (hyp 1, hyp 2) |- ( A C_ B /\ A C_ C ) ;
	step 2 : wff = thm ssin () |- ( ( A C_ B /\ A C_ C ) <-> A C_ ( B i^i C ) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- A C_ ( B i^i C ) ;
	qed prop 1 = step 3 ;
}

theorem ssrin (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) ;
}

proof of ssrin {
	var x : set;
	step 1 : wff = thm pm3_45 () |- ( ( x e. A -> x e. B ) -> ( ( x e. A /\ x e. C ) -> ( x e. B /\ x e. C ) ) ) ;
	step 2 : wff = thm elin () |- ( x e. ( A i^i C ) <-> ( x e. A /\ x e. C ) ) ;
	step 3 : wff = thm elin () |- ( x e. ( B i^i C ) <-> ( x e. B /\ x e. C ) ) ;
	step 4 : wff = thm 3imtr4g (step 1, step 2, step 3) |- ( ( x e. A -> x e. B ) -> ( x e. ( A i^i C ) -> x e. ( B i^i C ) ) ) ;
	step 5 : wff = thm 19_20i (step 4) |- ( A. x ( x e. A -> x e. B ) -> A. x ( x e. ( A i^i C ) -> x e. ( B i^i C ) ) ) ;
	step 6 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 7 : wff = thm dfss2 () |- ( ( A i^i C ) C_ ( B i^i C ) <-> A. x ( x e. ( A i^i C ) -> x e. ( B i^i C ) ) ) ;
	step 8 : wff = thm 3imtr4i (step 5, step 6, step 7) |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) ;
	qed prop 1 = step 8 ;
}

theorem sslin (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( C i^i A ) C_ ( C i^i B ) ) ;
}

proof of sslin {
	step 1 : wff = thm ssrin () |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) ;
	step 2 : wff = thm incom () |- ( C i^i A ) = ( A i^i C ) ;
	step 3 : wff = thm incom () |- ( C i^i B ) = ( B i^i C ) ;
	step 4 : wff = thm 3sstr4g (step 1, step 2, step 3) |- ( A C_ B -> ( C i^i A ) C_ ( C i^i B ) ) ;
	qed prop 1 = step 4 ;
}

theorem ss2in (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ C C_ D ) -> ( A i^i C ) C_ ( B i^i D ) ) ;
}

proof of ss2in {
	step 1 : wff = thm ssrin () |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) ;
	step 2 : wff = thm sslin () |- ( C C_ D -> ( B i^i C ) C_ ( B i^i D ) ) ;
	step 3 : wff = thm sylan9ss (step 1, step 2) |- ( ( A C_ B /\ C C_ D ) -> ( A i^i C ) C_ ( B i^i D ) ) ;
	qed prop 1 = step 3 ;
}

theorem ssinss1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ C -> ( A i^i B ) C_ C ) ;
}

proof of ssinss1 {
	step 1 : wff = thm inss1 () |- ( A i^i B ) C_ A ;
	step 2 : wff = thm sstr2 () |- ( ( A i^i B ) C_ A -> ( A C_ C -> ( A i^i B ) C_ C ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( A C_ C -> ( A i^i B ) C_ C ) ;
	qed prop 1 = step 3 ;
}

theorem unabs (A : class, B : class)  {
	prop 1 : wff = |- ( A u. ( A i^i B ) ) = A ;
}

proof of unabs {
	step 1 : wff = thm inss1 () |- ( A i^i B ) C_ A ;
	step 2 : wff = thm ssequn2 () |- ( ( A i^i B ) C_ A <-> ( A u. ( A i^i B ) ) = A ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A u. ( A i^i B ) ) = A ;
	qed prop 1 = step 3 ;
}

theorem inabs (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i ( A u. B ) ) = A ;
}

proof of inabs {
	step 1 : wff = thm ssun1 () |- A C_ ( A u. B ) ;
	step 2 : wff = def df-ss () |- ( A C_ ( A u. B ) <-> ( A i^i ( A u. B ) ) = A ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A i^i ( A u. B ) ) = A ;
	qed prop 1 = step 3 ;
}

theorem nssinpss (A : class, B : class)  {
	prop 1 : wff = |- ( -. A C_ B <-> ( A i^i B ) C. A ) ;
}

proof of nssinpss {
	step 1 : wff = thm inss1 () |- ( A i^i B ) C_ A ;
	step 2 : wff = thm biantrur (step 1) |- ( -. A C_ ( A i^i B ) <-> ( ( A i^i B ) C_ A /\ -. A C_ ( A i^i B ) ) ) ;
	step 3 : wff = thm ssid () |- A C_ A ;
	step 4 : wff = thm biantrur (step 3) |- ( A C_ B <-> ( A C_ A /\ A C_ B ) ) ;
	step 5 : wff = thm ssin () |- ( ( A C_ A /\ A C_ B ) <-> A C_ ( A i^i B ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( A C_ B <-> A C_ ( A i^i B ) ) ;
	step 7 : wff = thm notbii (step 6) |- ( -. A C_ B <-> -. A C_ ( A i^i B ) ) ;
	step 8 : wff = thm dfpss3 () |- ( ( A i^i B ) C. A <-> ( ( A i^i B ) C_ A /\ -. A C_ ( A i^i B ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 2, step 7, step 8) |- ( -. A C_ B <-> ( A i^i B ) C. A ) ;
	qed prop 1 = step 9 ;
}

theorem nsspssun (A : class, B : class)  {
	prop 1 : wff = |- ( -. A C_ B <-> B C. ( A u. B ) ) ;
}

proof of nsspssun {
	step 1 : wff = thm ssun2 () |- B C_ ( A u. B ) ;
	step 2 : wff = thm biantrur (step 1) |- ( -. ( A u. B ) C_ B <-> ( B C_ ( A u. B ) /\ -. ( A u. B ) C_ B ) ) ;
	step 3 : wff = thm ssid () |- B C_ B ;
	step 4 : wff = thm biantru (step 3) |- ( A C_ B <-> ( A C_ B /\ B C_ B ) ) ;
	step 5 : wff = thm unss () |- ( ( A C_ B /\ B C_ B ) <-> ( A u. B ) C_ B ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( A C_ B <-> ( A u. B ) C_ B ) ;
	step 7 : wff = thm notbii (step 6) |- ( -. A C_ B <-> -. ( A u. B ) C_ B ) ;
	step 8 : wff = thm dfpss3 () |- ( B C. ( A u. B ) <-> ( B C_ ( A u. B ) /\ -. ( A u. B ) C_ B ) ) ;
	step 9 : wff = thm 3bitr4i (step 2, step 7, step 8) |- ( -. A C_ B <-> B C. ( A u. B ) ) ;
	qed prop 1 = step 9 ;
}

theorem dfss4 (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( B \ ( B \ A ) ) = A ) ;
}

proof of dfss4 {
	var x : set;
	step 1 : wff = thm sseqin2 () |- ( A C_ B <-> ( B i^i A ) = A ) ;
	step 2 : wff = thm abai () |- ( ( x e. B /\ x e. A ) <-> ( x e. B /\ ( x e. B -> x e. A ) ) ) ;
	step 3 : wff = thm iman () |- ( ( x e. B -> x e. A ) <-> -. ( x e. B /\ -. x e. A ) ) ;
	step 4 : wff = thm anbi2i (step 3) |- ( ( x e. B /\ ( x e. B -> x e. A ) ) <-> ( x e. B /\ -. ( x e. B /\ -. x e. A ) ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( ( x e. B /\ x e. A ) <-> ( x e. B /\ -. ( x e. B /\ -. x e. A ) ) ) ;
	step 6 : wff = thm elin () |- ( x e. ( B i^i A ) <-> ( x e. B /\ x e. A ) ) ;
	step 7 : wff = thm eldif () |- ( x e. ( B \ ( B \ A ) ) <-> ( x e. B /\ -. x e. ( B \ A ) ) ) ;
	step 8 : wff = thm eldif () |- ( x e. ( B \ A ) <-> ( x e. B /\ -. x e. A ) ) ;
	step 9 : wff = thm notbii (step 8) |- ( -. x e. ( B \ A ) <-> -. ( x e. B /\ -. x e. A ) ) ;
	step 10 : wff = thm anbi2i (step 9) |- ( ( x e. B /\ -. x e. ( B \ A ) ) <-> ( x e. B /\ -. ( x e. B /\ -. x e. A ) ) ) ;
	step 11 : wff = thm bitri (step 7, step 10) |- ( x e. ( B \ ( B \ A ) ) <-> ( x e. B /\ -. ( x e. B /\ -. x e. A ) ) ) ;
	step 12 : wff = thm 3bitr4i (step 5, step 6, step 11) |- ( x e. ( B i^i A ) <-> x e. ( B \ ( B \ A ) ) ) ;
	step 13 : wff = thm eqriv (step 12) |- ( B i^i A ) = ( B \ ( B \ A ) ) ;
	step 14 : wff = thm eqeq1i (step 13) |- ( ( B i^i A ) = A <-> ( B \ ( B \ A ) ) = A ) ;
	step 15 : wff = thm bitri (step 1, step 14) |- ( A C_ B <-> ( B \ ( B \ A ) ) = A ) ;
	qed prop 1 = step 15 ;
}

theorem dfun2 (A : class, B : class)  {
	prop 1 : wff = |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) ;
}

proof of dfun2 {
	var x : set;
	step 1 : wff = thm eldif () |- ( x e. ( _V \ A ) <-> ( x e. _V /\ -. x e. A ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm mpbiran (step 1, step 2) |- ( x e. ( _V \ A ) <-> -. x e. A ) ;
	step 4 : wff = thm anbi1i (step 3) |- ( ( x e. ( _V \ A ) /\ -. x e. B ) <-> ( -. x e. A /\ -. x e. B ) ) ;
	step 5 : wff = thm eldif () |- ( x e. ( ( _V \ A ) \ B ) <-> ( x e. ( _V \ A ) /\ -. x e. B ) ) ;
	step 6 : wff = thm ioran () |- ( -. ( x e. A \/ x e. B ) <-> ( -. x e. A /\ -. x e. B ) ) ;
	step 7 : wff = thm 3bitr4i (step 4, step 5, step 6) |- ( x e. ( ( _V \ A ) \ B ) <-> -. ( x e. A \/ x e. B ) ) ;
	step 8 : wff = thm con2bii (step 7) |- ( ( x e. A \/ x e. B ) <-> -. x e. ( ( _V \ A ) \ B ) ) ;
	step 9 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 10 : wff = thm eldif () |- ( x e. ( _V \ ( ( _V \ A ) \ B ) ) <-> ( x e. _V /\ -. x e. ( ( _V \ A ) \ B ) ) ) ;
	step 11 : wff = thm visset () |- x e. _V ;
	step 12 : wff = thm mpbiran (step 10, step 11) |- ( x e. ( _V \ ( ( _V \ A ) \ B ) ) <-> -. x e. ( ( _V \ A ) \ B ) ) ;
	step 13 : wff = thm 3bitr4i (step 8, step 9, step 12) |- ( x e. ( A u. B ) <-> x e. ( _V \ ( ( _V \ A ) \ B ) ) ) ;
	step 14 : wff = thm eqriv (step 13) |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) ;
	qed prop 1 = step 14 ;
}

theorem dfin2 (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) = ( A \ ( _V \ B ) ) ;
}

proof of dfin2 {
	var x : set;
	step 1 : wff = thm eldif () |- ( x e. ( _V \ B ) <-> ( x e. _V /\ -. x e. B ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm mpbiran (step 1, step 2) |- ( x e. ( _V \ B ) <-> -. x e. B ) ;
	step 4 : wff = thm con2bii (step 3) |- ( x e. B <-> -. x e. ( _V \ B ) ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( x e. A /\ x e. B ) <-> ( x e. A /\ -. x e. ( _V \ B ) ) ) ;
	step 6 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 7 : wff = thm eldif () |- ( x e. ( A \ ( _V \ B ) ) <-> ( x e. A /\ -. x e. ( _V \ B ) ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( x e. ( A i^i B ) <-> x e. ( A \ ( _V \ B ) ) ) ;
	step 9 : wff = thm eqriv (step 8) |- ( A i^i B ) = ( A \ ( _V \ B ) ) ;
	qed prop 1 = step 9 ;
}

theorem difin (A : class, B : class)  {
	prop 1 : wff = |- ( A \ ( A i^i B ) ) = ( A \ B ) ;
}

proof of difin {
	var x : set;
	step 1 : wff = thm abai () |- ( ( x e. A /\ -. x e. B ) <-> ( x e. A /\ ( x e. A -> -. x e. B ) ) ) ;
	step 2 : wff = thm imnan () |- ( ( x e. A -> -. x e. B ) <-> -. ( x e. A /\ x e. B ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( x e. A /\ ( x e. A -> -. x e. B ) ) <-> ( x e. A /\ -. ( x e. A /\ x e. B ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( ( x e. A /\ -. x e. B ) <-> ( x e. A /\ -. ( x e. A /\ x e. B ) ) ) ;
	step 5 : wff = thm eldif () |- ( x e. ( A \ B ) <-> ( x e. A /\ -. x e. B ) ) ;
	step 6 : wff = thm eldif () |- ( x e. ( A \ ( A i^i B ) ) <-> ( x e. A /\ -. x e. ( A i^i B ) ) ) ;
	step 7 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 8 : wff = thm notbii (step 7) |- ( -. x e. ( A i^i B ) <-> -. ( x e. A /\ x e. B ) ) ;
	step 9 : wff = thm anbi2i (step 8) |- ( ( x e. A /\ -. x e. ( A i^i B ) ) <-> ( x e. A /\ -. ( x e. A /\ x e. B ) ) ) ;
	step 10 : wff = thm bitri (step 6, step 9) |- ( x e. ( A \ ( A i^i B ) ) <-> ( x e. A /\ -. ( x e. A /\ x e. B ) ) ) ;
	step 11 : wff = thm 3bitr4ri (step 4, step 5, step 10) |- ( x e. ( A \ ( A i^i B ) ) <-> x e. ( A \ B ) ) ;
	step 12 : wff = thm eqriv (step 11) |- ( A \ ( A i^i B ) ) = ( A \ B ) ;
	qed prop 1 = step 12 ;
}

theorem dfun3 (A : class, B : class)  {
	prop 1 : wff = |- ( A u. B ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) ;
}

proof of dfun3 {
	step 1 : wff = thm dfun2 () |- ( A u. B ) = ( _V \ ( ( _V \ A ) \ B ) ) ;
	step 2 : wff = thm dfin2 () |- ( ( _V \ A ) i^i ( _V \ B ) ) = ( ( _V \ A ) \ ( _V \ ( _V \ B ) ) ) ;
	step 3 : wff = thm ddif () |- ( _V \ ( _V \ B ) ) = B ;
	step 4 : wff = thm difeq2i (step 3) |- ( ( _V \ A ) \ ( _V \ ( _V \ B ) ) ) = ( ( _V \ A ) \ B ) ;
	step 5 : wff = thm eqtr2i (step 2, step 4) |- ( ( _V \ A ) \ B ) = ( ( _V \ A ) i^i ( _V \ B ) ) ;
	step 6 : wff = thm difeq2i (step 5) |- ( _V \ ( ( _V \ A ) \ B ) ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) ;
	step 7 : wff = thm eqtri (step 1, step 6) |- ( A u. B ) = ( _V \ ( ( _V \ A ) i^i ( _V \ B ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem dfin3 (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) = ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) ;
}

proof of dfin3 {
	step 1 : wff = thm ddif () |- ( _V \ ( _V \ ( A \ ( _V \ B ) ) ) ) = ( A \ ( _V \ B ) ) ;
	step 2 : wff = thm dfun2 () |- ( ( _V \ A ) u. ( _V \ B ) ) = ( _V \ ( ( _V \ ( _V \ A ) ) \ ( _V \ B ) ) ) ;
	step 3 : wff = thm ddif () |- ( _V \ ( _V \ A ) ) = A ;
	step 4 : wff = thm difeq1i (step 3) |- ( ( _V \ ( _V \ A ) ) \ ( _V \ B ) ) = ( A \ ( _V \ B ) ) ;
	step 5 : wff = thm difeq2i (step 4) |- ( _V \ ( ( _V \ ( _V \ A ) ) \ ( _V \ B ) ) ) = ( _V \ ( A \ ( _V \ B ) ) ) ;
	step 6 : wff = thm eqtri (step 2, step 5) |- ( ( _V \ A ) u. ( _V \ B ) ) = ( _V \ ( A \ ( _V \ B ) ) ) ;
	step 7 : wff = thm difeq2i (step 6) |- ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) = ( _V \ ( _V \ ( A \ ( _V \ B ) ) ) ) ;
	step 8 : wff = thm dfin2 () |- ( A i^i B ) = ( A \ ( _V \ B ) ) ;
	step 9 : wff = thm 3eqtr4ri (step 1, step 7, step 8) |- ( A i^i B ) = ( _V \ ( ( _V \ A ) u. ( _V \ B ) ) ) ;
	qed prop 1 = step 9 ;
}

theorem dfin4 (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i B ) = ( A \ ( A \ B ) ) ;
}

proof of dfin4 {
	step 1 : wff = thm inss1 () |- ( A i^i B ) C_ A ;
	step 2 : wff = thm dfss4 () |- ( ( A i^i B ) C_ A <-> ( A \ ( A \ ( A i^i B ) ) ) = ( A i^i B ) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A \ ( A \ ( A i^i B ) ) ) = ( A i^i B ) ;
	step 4 : wff = thm difin () |- ( A \ ( A i^i B ) ) = ( A \ B ) ;
	step 5 : wff = thm difeq2i (step 4) |- ( A \ ( A \ ( A i^i B ) ) ) = ( A \ ( A \ B ) ) ;
	step 6 : wff = thm eqtr3i (step 3, step 5) |- ( A i^i B ) = ( A \ ( A \ B ) ) ;
	qed prop 1 = step 6 ;
}

theorem invdif (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i ( _V \ B ) ) = ( A \ B ) ;
}

proof of invdif {
	step 1 : wff = thm dfin2 () |- ( A i^i ( _V \ B ) ) = ( A \ ( _V \ ( _V \ B ) ) ) ;
	step 2 : wff = thm ddif () |- ( _V \ ( _V \ B ) ) = B ;
	step 3 : wff = thm difeq2i (step 2) |- ( A \ ( _V \ ( _V \ B ) ) ) = ( A \ B ) ;
	step 4 : wff = thm eqtri (step 1, step 3) |- ( A i^i ( _V \ B ) ) = ( A \ B ) ;
	qed prop 1 = step 4 ;
}

theorem indif (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i ( A \ B ) ) = ( A \ B ) ;
}

proof of indif {
	step 1 : wff = thm dfin4 () |- ( A i^i ( A \ B ) ) = ( A \ ( A \ ( A \ B ) ) ) ;
	step 2 : wff = thm dfin4 () |- ( A i^i B ) = ( A \ ( A \ B ) ) ;
	step 3 : wff = thm difeq2i (step 2) |- ( A \ ( A i^i B ) ) = ( A \ ( A \ ( A \ B ) ) ) ;
	step 4 : wff = thm difin () |- ( A \ ( A i^i B ) ) = ( A \ B ) ;
	step 5 : wff = thm 3eqtr2i (step 1, step 3, step 4) |- ( A i^i ( A \ B ) ) = ( A \ B ) ;
	qed prop 1 = step 5 ;
}

theorem indi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) ;
}

proof of indi {
	var x : set;
	step 1 : wff = thm andi () |- ( ( x e. A /\ ( x e. B \/ x e. C ) ) <-> ( ( x e. A /\ x e. B ) \/ ( x e. A /\ x e. C ) ) ) ;
	step 2 : wff = thm elun () |- ( x e. ( B u. C ) <-> ( x e. B \/ x e. C ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( x e. A /\ x e. ( B u. C ) ) <-> ( x e. A /\ ( x e. B \/ x e. C ) ) ) ;
	step 4 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 5 : wff = thm elin () |- ( x e. ( A i^i C ) <-> ( x e. A /\ x e. C ) ) ;
	step 6 : wff = thm orbi12i (step 4, step 5) |- ( ( x e. ( A i^i B ) \/ x e. ( A i^i C ) ) <-> ( ( x e. A /\ x e. B ) \/ ( x e. A /\ x e. C ) ) ) ;
	step 7 : wff = thm 3bitr4i (step 1, step 3, step 6) |- ( ( x e. A /\ x e. ( B u. C ) ) <-> ( x e. ( A i^i B ) \/ x e. ( A i^i C ) ) ) ;
	step 8 : wff = thm elin () |- ( x e. ( A i^i ( B u. C ) ) <-> ( x e. A /\ x e. ( B u. C ) ) ) ;
	step 9 : wff = thm elun () |- ( x e. ( ( A i^i B ) u. ( A i^i C ) ) <-> ( x e. ( A i^i B ) \/ x e. ( A i^i C ) ) ) ;
	step 10 : wff = thm 3bitr4i (step 7, step 8, step 9) |- ( x e. ( A i^i ( B u. C ) ) <-> x e. ( ( A i^i B ) u. ( A i^i C ) ) ) ;
	step 11 : wff = thm eqriv (step 10) |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) ;
	qed prop 1 = step 11 ;
}

theorem undi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A u. ( B i^i C ) ) = ( ( A u. B ) i^i ( A u. C ) ) ;
}

proof of undi {
	var x : set;
	step 1 : wff = thm ordi () |- ( ( x e. A \/ ( x e. B /\ x e. C ) ) <-> ( ( x e. A \/ x e. B ) /\ ( x e. A \/ x e. C ) ) ) ;
	step 2 : wff = thm elin () |- ( x e. ( B i^i C ) <-> ( x e. B /\ x e. C ) ) ;
	step 3 : wff = thm orbi2i (step 2) |- ( ( x e. A \/ x e. ( B i^i C ) ) <-> ( x e. A \/ ( x e. B /\ x e. C ) ) ) ;
	step 4 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 5 : wff = thm elun () |- ( x e. ( A u. C ) <-> ( x e. A \/ x e. C ) ) ;
	step 6 : wff = thm anbi12i (step 4, step 5) |- ( ( x e. ( A u. B ) /\ x e. ( A u. C ) ) <-> ( ( x e. A \/ x e. B ) /\ ( x e. A \/ x e. C ) ) ) ;
	step 7 : wff = thm 3bitr4i (step 1, step 3, step 6) |- ( ( x e. A \/ x e. ( B i^i C ) ) <-> ( x e. ( A u. B ) /\ x e. ( A u. C ) ) ) ;
	step 8 : wff = thm elun () |- ( x e. ( A u. ( B i^i C ) ) <-> ( x e. A \/ x e. ( B i^i C ) ) ) ;
	step 9 : wff = thm elin () |- ( x e. ( ( A u. B ) i^i ( A u. C ) ) <-> ( x e. ( A u. B ) /\ x e. ( A u. C ) ) ) ;
	step 10 : wff = thm 3bitr4i (step 7, step 8, step 9) |- ( x e. ( A u. ( B i^i C ) ) <-> x e. ( ( A u. B ) i^i ( A u. C ) ) ) ;
	step 11 : wff = thm eqriv (step 10) |- ( A u. ( B i^i C ) ) = ( ( A u. B ) i^i ( A u. C ) ) ;
	qed prop 1 = step 11 ;
}

theorem indir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) ;
}

proof of indir {
	step 1 : wff = thm indi () |- ( C i^i ( A u. B ) ) = ( ( C i^i A ) u. ( C i^i B ) ) ;
	step 2 : wff = thm incom () |- ( ( A u. B ) i^i C ) = ( C i^i ( A u. B ) ) ;
	step 3 : wff = thm incom () |- ( A i^i C ) = ( C i^i A ) ;
	step 4 : wff = thm incom () |- ( B i^i C ) = ( C i^i B ) ;
	step 5 : wff = thm uneq12i (step 3, step 4) |- ( ( A i^i C ) u. ( B i^i C ) ) = ( ( C i^i A ) u. ( C i^i B ) ) ;
	step 6 : wff = thm 3eqtr4i (step 1, step 2, step 5) |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) ;
	qed prop 1 = step 6 ;
}

theorem undir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) u. C ) = ( ( A u. C ) i^i ( B u. C ) ) ;
}

proof of undir {
	step 1 : wff = thm undi () |- ( C u. ( A i^i B ) ) = ( ( C u. A ) i^i ( C u. B ) ) ;
	step 2 : wff = thm uncom () |- ( ( A i^i B ) u. C ) = ( C u. ( A i^i B ) ) ;
	step 3 : wff = thm uncom () |- ( A u. C ) = ( C u. A ) ;
	step 4 : wff = thm uncom () |- ( B u. C ) = ( C u. B ) ;
	step 5 : wff = thm ineq12i (step 3, step 4) |- ( ( A u. C ) i^i ( B u. C ) ) = ( ( C u. A ) i^i ( C u. B ) ) ;
	step 6 : wff = thm 3eqtr4i (step 1, step 2, step 5) |- ( ( A i^i B ) u. C ) = ( ( A u. C ) i^i ( B u. C ) ) ;
	qed prop 1 = step 6 ;
}

theorem unineq (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) <-> A = B ) ;
}

proof of unineq {
	var x : set;
	step 1 : wff = thm iba () |- ( x e. C -> ( x e. A <-> ( x e. A /\ x e. C ) ) ) ;
	step 2 : wff = thm iba () |- ( x e. C -> ( x e. B <-> ( x e. B /\ x e. C ) ) ) ;
	step 3 : wff = thm bibi12d (step 1, step 2) |- ( x e. C -> ( ( x e. A <-> x e. B ) <-> ( ( x e. A /\ x e. C ) <-> ( x e. B /\ x e. C ) ) ) ) ;
	step 4 : wff = thm eleq2 () |- ( ( A i^i C ) = ( B i^i C ) -> ( x e. ( A i^i C ) <-> x e. ( B i^i C ) ) ) ;
	step 5 : wff = thm elin () |- ( x e. ( A i^i C ) <-> ( x e. A /\ x e. C ) ) ;
	step 6 : wff = thm elin () |- ( x e. ( B i^i C ) <-> ( x e. B /\ x e. C ) ) ;
	step 7 : wff = thm 3bitr3g (step 4, step 5, step 6) |- ( ( A i^i C ) = ( B i^i C ) -> ( ( x e. A /\ x e. C ) <-> ( x e. B /\ x e. C ) ) ) ;
	step 8 : wff = thm syl5bir (step 3, step 7) |- ( x e. C -> ( ( A i^i C ) = ( B i^i C ) -> ( x e. A <-> x e. B ) ) ) ;
	step 9 : wff = thm adantld (step 8) |- ( x e. C -> ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) -> ( x e. A <-> x e. B ) ) ) ;
	step 10 : wff = thm biorf () |- ( -. x e. C -> ( x e. A <-> ( x e. C \/ x e. A ) ) ) ;
	step 11 : wff = thm biorf () |- ( -. x e. C -> ( x e. B <-> ( x e. C \/ x e. B ) ) ) ;
	step 12 : wff = thm bibi12d (step 10, step 11) |- ( -. x e. C -> ( ( x e. A <-> x e. B ) <-> ( ( x e. C \/ x e. A ) <-> ( x e. C \/ x e. B ) ) ) ) ;
	step 13 : wff = thm uncom () |- ( A u. C ) = ( C u. A ) ;
	step 14 : wff = thm uncom () |- ( B u. C ) = ( C u. B ) ;
	step 15 : wff = thm eqeq12i (step 13, step 14) |- ( ( A u. C ) = ( B u. C ) <-> ( C u. A ) = ( C u. B ) ) ;
	step 16 : wff = thm eleq2 () |- ( ( C u. A ) = ( C u. B ) -> ( x e. ( C u. A ) <-> x e. ( C u. B ) ) ) ;
	step 17 : wff = thm sylbi (step 15, step 16) |- ( ( A u. C ) = ( B u. C ) -> ( x e. ( C u. A ) <-> x e. ( C u. B ) ) ) ;
	step 18 : wff = thm elun () |- ( x e. ( C u. A ) <-> ( x e. C \/ x e. A ) ) ;
	step 19 : wff = thm elun () |- ( x e. ( C u. B ) <-> ( x e. C \/ x e. B ) ) ;
	step 20 : wff = thm 3bitr3g (step 17, step 18, step 19) |- ( ( A u. C ) = ( B u. C ) -> ( ( x e. C \/ x e. A ) <-> ( x e. C \/ x e. B ) ) ) ;
	step 21 : wff = thm syl5bir (step 12, step 20) |- ( -. x e. C -> ( ( A u. C ) = ( B u. C ) -> ( x e. A <-> x e. B ) ) ) ;
	step 22 : wff = thm adantrd (step 21) |- ( -. x e. C -> ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) -> ( x e. A <-> x e. B ) ) ) ;
	step 23 : wff = thm pm2_61i (step 9, step 22) |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) -> ( x e. A <-> x e. B ) ) ;
	step 24 : wff = thm eqrdv (step 23) |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) -> A = B ) ;
	step 25 : wff = thm uneq1 () |- ( A = B -> ( A u. C ) = ( B u. C ) ) ;
	step 26 : wff = thm ineq1 () |- ( A = B -> ( A i^i C ) = ( B i^i C ) ) ;
	step 27 : wff = thm jca (step 25, step 26) |- ( A = B -> ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) ) ;
	step 28 : wff = thm impbii (step 24, step 27) |- ( ( ( A u. C ) = ( B u. C ) /\ ( A i^i C ) = ( B i^i C ) ) <-> A = B ) ;
	qed prop 1 = step 28 ;
}

theorem uneqin (A : class, B : class)  {
	prop 1 : wff = |- ( ( A u. B ) = ( A i^i B ) <-> A = B ) ;
}

proof of uneqin {
	step 1 : wff = thm eqimss () |- ( ( A u. B ) = ( A i^i B ) -> ( A u. B ) C_ ( A i^i B ) ) ;
	step 2 : wff = thm unss () |- ( ( A C_ ( A i^i B ) /\ B C_ ( A i^i B ) ) <-> ( A u. B ) C_ ( A i^i B ) ) ;
	step 3 : wff = thm ssin () |- ( ( A C_ A /\ A C_ B ) <-> A C_ ( A i^i B ) ) ;
	step 4 : wff = thm sstr () |- ( ( A C_ A /\ A C_ B ) -> A C_ B ) ;
	step 5 : wff = thm sylbir (step 3, step 4) |- ( A C_ ( A i^i B ) -> A C_ B ) ;
	step 6 : wff = thm ssin () |- ( ( B C_ A /\ B C_ B ) <-> B C_ ( A i^i B ) ) ;
	step 7 : wff = thm pm3_26 () |- ( ( B C_ A /\ B C_ B ) -> B C_ A ) ;
	step 8 : wff = thm sylbir (step 6, step 7) |- ( B C_ ( A i^i B ) -> B C_ A ) ;
	step 9 : wff = thm anim12i (step 5, step 8) |- ( ( A C_ ( A i^i B ) /\ B C_ ( A i^i B ) ) -> ( A C_ B /\ B C_ A ) ) ;
	step 10 : wff = thm sylbir (step 2, step 9) |- ( ( A u. B ) C_ ( A i^i B ) -> ( A C_ B /\ B C_ A ) ) ;
	step 11 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 12 : wff = thm sylibr (step 10, step 11) |- ( ( A u. B ) C_ ( A i^i B ) -> A = B ) ;
	step 13 : wff = thm syl (step 1, step 12) |- ( ( A u. B ) = ( A i^i B ) -> A = B ) ;
	step 14 : wff = thm uneq2 () |- ( A = B -> ( A u. A ) = ( A u. B ) ) ;
	step 15 : wff = thm ineq2 () |- ( A = B -> ( A i^i A ) = ( A i^i B ) ) ;
	step 16 : wff = thm inidm () |- ( A i^i A ) = A ;
	step 17 : wff = thm syl5eqr (step 15, step 16) |- ( A = B -> A = ( A i^i B ) ) ;
	step 18 : wff = thm unidm () |- ( A u. A ) = A ;
	step 19 : wff = thm syl5eq (step 17, step 18) |- ( A = B -> ( A u. A ) = ( A i^i B ) ) ;
	step 20 : wff = thm eqtr3d (step 14, step 19) |- ( A = B -> ( A u. B ) = ( A i^i B ) ) ;
	step 21 : wff = thm impbii (step 13, step 20) |- ( ( A u. B ) = ( A i^i B ) <-> A = B ) ;
	qed prop 1 = step 21 ;
}

theorem difundi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A \ ( B u. C ) ) = ( ( A \ B ) i^i ( A \ C ) ) ;
}

proof of difundi {
	step 1 : wff = thm dfun3 () |- ( B u. C ) = ( _V \ ( ( _V \ B ) i^i ( _V \ C ) ) ) ;
	step 2 : wff = thm difeq2i (step 1) |- ( A \ ( B u. C ) ) = ( A \ ( _V \ ( ( _V \ B ) i^i ( _V \ C ) ) ) ) ;
	step 3 : wff = thm inindi () |- ( A i^i ( ( _V \ B ) i^i ( _V \ C ) ) ) = ( ( A i^i ( _V \ B ) ) i^i ( A i^i ( _V \ C ) ) ) ;
	step 4 : wff = thm dfin2 () |- ( A i^i ( ( _V \ B ) i^i ( _V \ C ) ) ) = ( A \ ( _V \ ( ( _V \ B ) i^i ( _V \ C ) ) ) ) ;
	step 5 : wff = thm invdif () |- ( A i^i ( _V \ B ) ) = ( A \ B ) ;
	step 6 : wff = thm invdif () |- ( A i^i ( _V \ C ) ) = ( A \ C ) ;
	step 7 : wff = thm ineq12i (step 5, step 6) |- ( ( A i^i ( _V \ B ) ) i^i ( A i^i ( _V \ C ) ) ) = ( ( A \ B ) i^i ( A \ C ) ) ;
	step 8 : wff = thm 3eqtr3i (step 3, step 4, step 7) |- ( A \ ( _V \ ( ( _V \ B ) i^i ( _V \ C ) ) ) ) = ( ( A \ B ) i^i ( A \ C ) ) ;
	step 9 : wff = thm eqtri (step 2, step 8) |- ( A \ ( B u. C ) ) = ( ( A \ B ) i^i ( A \ C ) ) ;
	qed prop 1 = step 9 ;
}

theorem difundir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A u. B ) \ C ) = ( ( A \ C ) u. ( B \ C ) ) ;
}

proof of difundir {
	step 1 : wff = thm indir () |- ( ( A u. B ) i^i ( _V \ C ) ) = ( ( A i^i ( _V \ C ) ) u. ( B i^i ( _V \ C ) ) ) ;
	step 2 : wff = thm invdif () |- ( ( A u. B ) i^i ( _V \ C ) ) = ( ( A u. B ) \ C ) ;
	step 3 : wff = thm invdif () |- ( A i^i ( _V \ C ) ) = ( A \ C ) ;
	step 4 : wff = thm invdif () |- ( B i^i ( _V \ C ) ) = ( B \ C ) ;
	step 5 : wff = thm uneq12i (step 3, step 4) |- ( ( A i^i ( _V \ C ) ) u. ( B i^i ( _V \ C ) ) ) = ( ( A \ C ) u. ( B \ C ) ) ;
	step 6 : wff = thm 3eqtr3i (step 1, step 2, step 5) |- ( ( A u. B ) \ C ) = ( ( A \ C ) u. ( B \ C ) ) ;
	qed prop 1 = step 6 ;
}

theorem difindi (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A \ ( B i^i C ) ) = ( ( A \ B ) u. ( A \ C ) ) ;
}

proof of difindi {
	step 1 : wff = thm dfin3 () |- ( B i^i C ) = ( _V \ ( ( _V \ B ) u. ( _V \ C ) ) ) ;
	step 2 : wff = thm difeq2i (step 1) |- ( A \ ( B i^i C ) ) = ( A \ ( _V \ ( ( _V \ B ) u. ( _V \ C ) ) ) ) ;
	step 3 : wff = thm indi () |- ( A i^i ( ( _V \ B ) u. ( _V \ C ) ) ) = ( ( A i^i ( _V \ B ) ) u. ( A i^i ( _V \ C ) ) ) ;
	step 4 : wff = thm dfin2 () |- ( A i^i ( ( _V \ B ) u. ( _V \ C ) ) ) = ( A \ ( _V \ ( ( _V \ B ) u. ( _V \ C ) ) ) ) ;
	step 5 : wff = thm invdif () |- ( A i^i ( _V \ B ) ) = ( A \ B ) ;
	step 6 : wff = thm invdif () |- ( A i^i ( _V \ C ) ) = ( A \ C ) ;
	step 7 : wff = thm uneq12i (step 5, step 6) |- ( ( A i^i ( _V \ B ) ) u. ( A i^i ( _V \ C ) ) ) = ( ( A \ B ) u. ( A \ C ) ) ;
	step 8 : wff = thm 3eqtr3i (step 3, step 4, step 7) |- ( A \ ( _V \ ( ( _V \ B ) u. ( _V \ C ) ) ) ) = ( ( A \ B ) u. ( A \ C ) ) ;
	step 9 : wff = thm eqtri (step 2, step 8) |- ( A \ ( B i^i C ) ) = ( ( A \ B ) u. ( A \ C ) ) ;
	qed prop 1 = step 9 ;
}

theorem difindir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) \ C ) = ( ( A \ C ) i^i ( B \ C ) ) ;
}

proof of difindir {
	step 1 : wff = thm inindir () |- ( ( A i^i B ) i^i ( _V \ C ) ) = ( ( A i^i ( _V \ C ) ) i^i ( B i^i ( _V \ C ) ) ) ;
	step 2 : wff = thm invdif () |- ( ( A i^i B ) i^i ( _V \ C ) ) = ( ( A i^i B ) \ C ) ;
	step 3 : wff = thm invdif () |- ( A i^i ( _V \ C ) ) = ( A \ C ) ;
	step 4 : wff = thm invdif () |- ( B i^i ( _V \ C ) ) = ( B \ C ) ;
	step 5 : wff = thm ineq12i (step 3, step 4) |- ( ( A i^i ( _V \ C ) ) i^i ( B i^i ( _V \ C ) ) ) = ( ( A \ C ) i^i ( B \ C ) ) ;
	step 6 : wff = thm 3eqtr3i (step 1, step 2, step 5) |- ( ( A i^i B ) \ C ) = ( ( A \ C ) i^i ( B \ C ) ) ;
	qed prop 1 = step 6 ;
}

theorem undm (A : class, B : class)  {
	prop 1 : wff = |- ( _V \ ( A u. B ) ) = ( ( _V \ A ) i^i ( _V \ B ) ) ;
}

proof of undm {
	step 1 : wff = thm difundi () |- ( _V \ ( A u. B ) ) = ( ( _V \ A ) i^i ( _V \ B ) ) ;
	qed prop 1 = step 1 ;
}

theorem indm (A : class, B : class)  {
	prop 1 : wff = |- ( _V \ ( A i^i B ) ) = ( ( _V \ A ) u. ( _V \ B ) ) ;
}

proof of indm {
	step 1 : wff = thm difindi () |- ( _V \ ( A i^i B ) ) = ( ( _V \ A ) u. ( _V \ B ) ) ;
	qed prop 1 = step 1 ;
}

theorem difun1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) ;
}

proof of difun1 {
	step 1 : wff = thm inass () |- ( ( A i^i ( _V \ B ) ) i^i ( _V \ C ) ) = ( A i^i ( ( _V \ B ) i^i ( _V \ C ) ) ) ;
	step 2 : wff = thm invdif () |- ( ( A i^i ( _V \ B ) ) i^i ( _V \ C ) ) = ( ( A i^i ( _V \ B ) ) \ C ) ;
	step 3 : wff = thm undm () |- ( _V \ ( B u. C ) ) = ( ( _V \ B ) i^i ( _V \ C ) ) ;
	step 4 : wff = thm ineq2i (step 3) |- ( A i^i ( _V \ ( B u. C ) ) ) = ( A i^i ( ( _V \ B ) i^i ( _V \ C ) ) ) ;
	step 5 : wff = thm invdif () |- ( A i^i ( _V \ ( B u. C ) ) ) = ( A \ ( B u. C ) ) ;
	step 6 : wff = thm eqtr3i (step 4, step 5) |- ( A i^i ( ( _V \ B ) i^i ( _V \ C ) ) ) = ( A \ ( B u. C ) ) ;
	step 7 : wff = thm 3eqtr3i (step 1, step 2, step 6) |- ( ( A i^i ( _V \ B ) ) \ C ) = ( A \ ( B u. C ) ) ;
	step 8 : wff = thm invdif () |- ( A i^i ( _V \ B ) ) = ( A \ B ) ;
	step 9 : wff = thm difeq1i (step 8) |- ( ( A i^i ( _V \ B ) ) \ C ) = ( ( A \ B ) \ C ) ;
	step 10 : wff = thm eqtr3i (step 7, step 9) |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) ;
	qed prop 1 = step 10 ;
}

theorem dif23 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) ;
}

proof of dif23 {
	step 1 : wff = thm uncom () |- ( B u. C ) = ( C u. B ) ;
	step 2 : wff = thm difeq2i (step 1) |- ( A \ ( B u. C ) ) = ( A \ ( C u. B ) ) ;
	step 3 : wff = thm difun1 () |- ( A \ ( B u. C ) ) = ( ( A \ B ) \ C ) ;
	step 4 : wff = thm difun1 () |- ( A \ ( C u. B ) ) = ( ( A \ C ) \ B ) ;
	step 5 : wff = thm 3eqtr3i (step 2, step 3, step 4) |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) ;
	qed prop 1 = step 5 ;
}

theorem symdif1 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A \ B ) u. ( B \ A ) ) = ( ( A u. B ) \ ( A i^i B ) ) ;
}

proof of symdif1 {
	step 1 : wff = thm difundir () |- ( ( A u. B ) \ ( A i^i B ) ) = ( ( A \ ( A i^i B ) ) u. ( B \ ( A i^i B ) ) ) ;
	step 2 : wff = thm difin () |- ( A \ ( A i^i B ) ) = ( A \ B ) ;
	step 3 : wff = thm incom () |- ( A i^i B ) = ( B i^i A ) ;
	step 4 : wff = thm difeq2i (step 3) |- ( B \ ( A i^i B ) ) = ( B \ ( B i^i A ) ) ;
	step 5 : wff = thm difin () |- ( B \ ( B i^i A ) ) = ( B \ A ) ;
	step 6 : wff = thm eqtri (step 4, step 5) |- ( B \ ( A i^i B ) ) = ( B \ A ) ;
	step 7 : wff = thm uneq12i (step 2, step 6) |- ( ( A \ ( A i^i B ) ) u. ( B \ ( A i^i B ) ) ) = ( ( A \ B ) u. ( B \ A ) ) ;
	step 8 : wff = thm eqtr2i (step 1, step 7) |- ( ( A \ B ) u. ( B \ A ) ) = ( ( A u. B ) \ ( A i^i B ) ) ;
	qed prop 1 = step 8 ;
}

theorem symdif2 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A \ B ) u. ( B \ A ) ) = { x | -. ( x e. A <-> x e. B ) } ;
}

proof of symdif2 {
	step 1 : wff = thm elun () |- ( x e. ( ( A \ B ) u. ( B \ A ) ) <-> ( x e. ( A \ B ) \/ x e. ( B \ A ) ) ) ;
	step 2 : wff = thm eldif () |- ( x e. ( A \ B ) <-> ( x e. A /\ -. x e. B ) ) ;
	step 3 : wff = thm notnot () |- ( x e. A <-> -. -. x e. A ) ;
	step 4 : wff = thm anbi1i (step 3) |- ( ( x e. A /\ -. x e. B ) <-> ( -. -. x e. A /\ -. x e. B ) ) ;
	step 5 : wff = thm bitri (step 2, step 4) |- ( x e. ( A \ B ) <-> ( -. -. x e. A /\ -. x e. B ) ) ;
	step 6 : wff = thm eldif () |- ( x e. ( B \ A ) <-> ( x e. B /\ -. x e. A ) ) ;
	step 7 : wff = thm ancom () |- ( ( x e. B /\ -. x e. A ) <-> ( -. x e. A /\ x e. B ) ) ;
	step 8 : wff = thm bitri (step 6, step 7) |- ( x e. ( B \ A ) <-> ( -. x e. A /\ x e. B ) ) ;
	step 9 : wff = thm orbi12i (step 5, step 8) |- ( ( x e. ( A \ B ) \/ x e. ( B \ A ) ) <-> ( ( -. -. x e. A /\ -. x e. B ) \/ ( -. x e. A /\ x e. B ) ) ) ;
	step 10 : wff = thm orcom () |- ( ( ( -. -. x e. A /\ -. x e. B ) \/ ( -. x e. A /\ x e. B ) ) <-> ( ( -. x e. A /\ x e. B ) \/ ( -. -. x e. A /\ -. x e. B ) ) ) ;
	step 11 : wff = thm dfbi3 () |- ( ( -. x e. A <-> x e. B ) <-> ( ( -. x e. A /\ x e. B ) \/ ( -. -. x e. A /\ -. x e. B ) ) ) ;
	step 12 : wff = thm nbbn () |- ( ( -. x e. A <-> x e. B ) <-> -. ( x e. A <-> x e. B ) ) ;
	step 13 : wff = thm 3bitr2i (step 10, step 11, step 12) |- ( ( ( -. -. x e. A /\ -. x e. B ) \/ ( -. x e. A /\ x e. B ) ) <-> -. ( x e. A <-> x e. B ) ) ;
	step 14 : wff = thm 3bitri (step 1, step 9, step 13) |- ( x e. ( ( A \ B ) u. ( B \ A ) ) <-> -. ( x e. A <-> x e. B ) ) ;
	step 15 : wff = thm abbi2i (step 14) |- ( ( A \ B ) u. ( B \ A ) ) = { x | -. ( x e. A <-> x e. B ) } ;
	qed prop 1 = step 15 ;
}

theorem unab (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( { x | ph } u. { x | ps } ) = { x | ( ph \/ ps ) } ;
}

proof of unab {
	var y : set;
	step 1 : wff = def df-clab () |- ( y e. { x | ph } <-> [ y / x ] ph ) ;
	step 2 : wff = def df-clab () |- ( y e. { x | ps } <-> [ y / x ] ps ) ;
	step 3 : wff = thm orbi12i (step 1, step 2) |- ( ( y e. { x | ph } \/ y e. { x | ps } ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) ;
	step 4 : wff = thm sbor () |- ( [ y / x ] ( ph \/ ps ) <-> ( [ y / x ] ph \/ [ y / x ] ps ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( y e. { x | ph } \/ y e. { x | ps } ) <-> [ y / x ] ( ph \/ ps ) ) ;
	step 6 : wff = thm elun () |- ( y e. ( { x | ph } u. { x | ps } ) <-> ( y e. { x | ph } \/ y e. { x | ps } ) ) ;
	step 7 : wff = def df-clab () |- ( y e. { x | ( ph \/ ps ) } <-> [ y / x ] ( ph \/ ps ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( y e. ( { x | ph } u. { x | ps } ) <-> y e. { x | ( ph \/ ps ) } ) ;
	step 9 : wff = thm eqriv (step 8) |- ( { x | ph } u. { x | ps } ) = { x | ( ph \/ ps ) } ;
	qed prop 1 = step 9 ;
}

theorem inab (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( { x | ph } i^i { x | ps } ) = { x | ( ph /\ ps ) } ;
}

proof of inab {
	var y : set;
	step 1 : wff = def df-clab () |- ( y e. { x | ph } <-> [ y / x ] ph ) ;
	step 2 : wff = def df-clab () |- ( y e. { x | ps } <-> [ y / x ] ps ) ;
	step 3 : wff = thm anbi12i (step 1, step 2) |- ( ( y e. { x | ph } /\ y e. { x | ps } ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	step 4 : wff = thm sban () |- ( [ y / x ] ( ph /\ ps ) <-> ( [ y / x ] ph /\ [ y / x ] ps ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( y e. { x | ph } /\ y e. { x | ps } ) <-> [ y / x ] ( ph /\ ps ) ) ;
	step 6 : wff = thm elin () |- ( y e. ( { x | ph } i^i { x | ps } ) <-> ( y e. { x | ph } /\ y e. { x | ps } ) ) ;
	step 7 : wff = def df-clab () |- ( y e. { x | ( ph /\ ps ) } <-> [ y / x ] ( ph /\ ps ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( y e. ( { x | ph } i^i { x | ps } ) <-> y e. { x | ( ph /\ ps ) } ) ;
	step 9 : wff = thm eqriv (step 8) |- ( { x | ph } i^i { x | ps } ) = { x | ( ph /\ ps ) } ;
	qed prop 1 = step 9 ;
}

theorem difab (ph : wff, ps : wff, x : set)  {
	prop 1 : wff = |- ( { x | ph } \ { x | ps } ) = { x | ( ph /\ -. ps ) } ;
}

proof of difab {
	var y : set;
	step 1 : wff = thm sbn () |- ( [ y / x ] -. ps <-> -. [ y / x ] ps ) ;
	step 2 : wff = def df-clab () |- ( y e. { x | -. ps } <-> [ y / x ] -. ps ) ;
	step 3 : wff = def df-clab () |- ( y e. { x | ps } <-> [ y / x ] ps ) ;
	step 4 : wff = thm notbii (step 3) |- ( -. y e. { x | ps } <-> -. [ y / x ] ps ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 2, step 4) |- ( y e. { x | -. ps } <-> -. y e. { x | ps } ) ;
	step 6 : wff = thm visset () |- y e. _V ;
	step 7 : wff = thm biantrur (step 6) |- ( -. y e. { x | ps } <-> ( y e. _V /\ -. y e. { x | ps } ) ) ;
	step 8 : wff = thm bitr2i (step 5, step 7) |- ( ( y e. _V /\ -. y e. { x | ps } ) <-> y e. { x | -. ps } ) ;
	step 9 : wff = thm difeqri (step 8) |- ( _V \ { x | ps } ) = { x | -. ps } ;
	step 10 : wff = thm ineq2i (step 9) |- ( { x | ph } i^i ( _V \ { x | ps } ) ) = ( { x | ph } i^i { x | -. ps } ) ;
	step 11 : wff = thm invdif () |- ( { x | ph } i^i ( _V \ { x | ps } ) ) = ( { x | ph } \ { x | ps } ) ;
	step 12 : wff = thm inab () |- ( { x | ph } i^i { x | -. ps } ) = { x | ( ph /\ -. ps ) } ;
	step 13 : wff = thm 3eqtr3i (step 10, step 11, step 12) |- ( { x | ph } \ { x | ps } ) = { x | ( ph /\ -. ps ) } ;
	qed prop 1 = step 13 ;
}

theorem unrab (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x e. A | ph } u. { x e. A | ps } ) = { x e. A | ( ph \/ ps ) } ;
}

proof of unrab {
	step 1 : wff = thm unab () |- ( { x | ( x e. A /\ ph ) } u. { x | ( x e. A /\ ps ) } ) = { x | ( ( x e. A /\ ph ) \/ ( x e. A /\ ps ) ) } ;
	step 2 : wff = thm andi () |- ( ( x e. A /\ ( ph \/ ps ) ) <-> ( ( x e. A /\ ph ) \/ ( x e. A /\ ps ) ) ) ;
	step 3 : wff = thm abbii (step 2) |- { x | ( x e. A /\ ( ph \/ ps ) ) } = { x | ( ( x e. A /\ ph ) \/ ( x e. A /\ ps ) ) } ;
	step 4 : wff = thm eqtr4i (step 1, step 3) |- ( { x | ( x e. A /\ ph ) } u. { x | ( x e. A /\ ps ) } ) = { x | ( x e. A /\ ( ph \/ ps ) ) } ;
	step 5 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 6 : wff = def df-rab () |- { x e. A | ps } = { x | ( x e. A /\ ps ) } ;
	step 7 : wff = thm uneq12i (step 5, step 6) |- ( { x e. A | ph } u. { x e. A | ps } ) = ( { x | ( x e. A /\ ph ) } u. { x | ( x e. A /\ ps ) } ) ;
	step 8 : wff = def df-rab () |- { x e. A | ( ph \/ ps ) } = { x | ( x e. A /\ ( ph \/ ps ) ) } ;
	step 9 : wff = thm 3eqtr4i (step 4, step 7, step 8) |- ( { x e. A | ph } u. { x e. A | ps } ) = { x e. A | ( ph \/ ps ) } ;
	qed prop 1 = step 9 ;
}

theorem inrab (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x e. A | ph } i^i { x e. A | ps } ) = { x e. A | ( ph /\ ps ) } ;
}

proof of inrab {
	step 1 : wff = thm inab () |- ( { x | ( x e. A /\ ph ) } i^i { x | ( x e. A /\ ps ) } ) = { x | ( ( x e. A /\ ph ) /\ ( x e. A /\ ps ) ) } ;
	step 2 : wff = thm anandi () |- ( ( x e. A /\ ( ph /\ ps ) ) <-> ( ( x e. A /\ ph ) /\ ( x e. A /\ ps ) ) ) ;
	step 3 : wff = thm abbii (step 2) |- { x | ( x e. A /\ ( ph /\ ps ) ) } = { x | ( ( x e. A /\ ph ) /\ ( x e. A /\ ps ) ) } ;
	step 4 : wff = thm eqtr4i (step 1, step 3) |- ( { x | ( x e. A /\ ph ) } i^i { x | ( x e. A /\ ps ) } ) = { x | ( x e. A /\ ( ph /\ ps ) ) } ;
	step 5 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 6 : wff = def df-rab () |- { x e. A | ps } = { x | ( x e. A /\ ps ) } ;
	step 7 : wff = thm ineq12i (step 5, step 6) |- ( { x e. A | ph } i^i { x e. A | ps } ) = ( { x | ( x e. A /\ ph ) } i^i { x | ( x e. A /\ ps ) } ) ;
	step 8 : wff = def df-rab () |- { x e. A | ( ph /\ ps ) } = { x | ( x e. A /\ ( ph /\ ps ) ) } ;
	step 9 : wff = thm 3eqtr4i (step 4, step 7, step 8) |- ( { x e. A | ph } i^i { x e. A | ps } ) = { x e. A | ( ph /\ ps ) } ;
	qed prop 1 = step 9 ;
}

theorem inrab2 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( { x e. A | ph } i^i B ) = { x e. ( A i^i B ) | ph } ;
}

proof of inrab2 {
	step 1 : wff = thm inab () |- ( { x | ( x e. A /\ ph ) } i^i { x | x e. B } ) = { x | ( ( x e. A /\ ph ) /\ x e. B ) } ;
	step 2 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 3 : wff = thm anbi1i (step 2) |- ( ( x e. ( A i^i B ) /\ ph ) <-> ( ( x e. A /\ x e. B ) /\ ph ) ) ;
	step 4 : wff = thm an23 () |- ( ( ( x e. A /\ x e. B ) /\ ph ) <-> ( ( x e. A /\ ph ) /\ x e. B ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( x e. ( A i^i B ) /\ ph ) <-> ( ( x e. A /\ ph ) /\ x e. B ) ) ;
	step 6 : wff = thm abbii (step 5) |- { x | ( x e. ( A i^i B ) /\ ph ) } = { x | ( ( x e. A /\ ph ) /\ x e. B ) } ;
	step 7 : wff = thm eqtr4i (step 1, step 6) |- ( { x | ( x e. A /\ ph ) } i^i { x | x e. B } ) = { x | ( x e. ( A i^i B ) /\ ph ) } ;
	step 8 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 9 : wff = thm abid2 () |- { x | x e. B } = B ;
	step 10 : wff = thm eqcomi (step 9) |- B = { x | x e. B } ;
	step 11 : wff = thm ineq12i (step 8, step 10) |- ( { x e. A | ph } i^i B ) = ( { x | ( x e. A /\ ph ) } i^i { x | x e. B } ) ;
	step 12 : wff = def df-rab () |- { x e. ( A i^i B ) | ph } = { x | ( x e. ( A i^i B ) /\ ph ) } ;
	step 13 : wff = thm 3eqtr4i (step 7, step 11, step 12) |- ( { x e. A | ph } i^i B ) = { x e. ( A i^i B ) | ph } ;
	qed prop 1 = step 13 ;
}

theorem difrab (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x e. A | ph } \ { x e. A | ps } ) = { x e. A | ( ph /\ -. ps ) } ;
}

proof of difrab {
	step 1 : wff = thm difab () |- ( { x | ( x e. A /\ ph ) } \ { x | ( x e. A /\ ps ) } ) = { x | ( ( x e. A /\ ph ) /\ -. ( x e. A /\ ps ) ) } ;
	step 2 : wff = thm anass () |- ( ( ( x e. A /\ ph ) /\ -. ps ) <-> ( x e. A /\ ( ph /\ -. ps ) ) ) ;
	step 3 : wff = thm pm3_27 () |- ( ( x e. A /\ ps ) -> ps ) ;
	step 4 : wff = thm con3i (step 3) |- ( -. ps -> -. ( x e. A /\ ps ) ) ;
	step 5 : wff = thm anim2i (step 4) |- ( ( ( x e. A /\ ph ) /\ -. ps ) -> ( ( x e. A /\ ph ) /\ -. ( x e. A /\ ps ) ) ) ;
	step 6 : wff = thm pm3_2 () |- ( x e. A -> ( ps -> ( x e. A /\ ps ) ) ) ;
	step 7 : wff = thm adantr (step 6) |- ( ( x e. A /\ ph ) -> ( ps -> ( x e. A /\ ps ) ) ) ;
	step 8 : wff = thm con3d (step 7) |- ( ( x e. A /\ ph ) -> ( -. ( x e. A /\ ps ) -> -. ps ) ) ;
	step 9 : wff = thm imdistani (step 8) |- ( ( ( x e. A /\ ph ) /\ -. ( x e. A /\ ps ) ) -> ( ( x e. A /\ ph ) /\ -. ps ) ) ;
	step 10 : wff = thm impbii (step 5, step 9) |- ( ( ( x e. A /\ ph ) /\ -. ps ) <-> ( ( x e. A /\ ph ) /\ -. ( x e. A /\ ps ) ) ) ;
	step 11 : wff = thm bitr3i (step 2, step 10) |- ( ( x e. A /\ ( ph /\ -. ps ) ) <-> ( ( x e. A /\ ph ) /\ -. ( x e. A /\ ps ) ) ) ;
	step 12 : wff = thm abbii (step 11) |- { x | ( x e. A /\ ( ph /\ -. ps ) ) } = { x | ( ( x e. A /\ ph ) /\ -. ( x e. A /\ ps ) ) } ;
	step 13 : wff = thm eqtr4i (step 1, step 12) |- ( { x | ( x e. A /\ ph ) } \ { x | ( x e. A /\ ps ) } ) = { x | ( x e. A /\ ( ph /\ -. ps ) ) } ;
	step 14 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 15 : wff = def df-rab () |- { x e. A | ps } = { x | ( x e. A /\ ps ) } ;
	step 16 : wff = thm difeq12i (step 14, step 15) |- ( { x e. A | ph } \ { x e. A | ps } ) = ( { x | ( x e. A /\ ph ) } \ { x | ( x e. A /\ ps ) } ) ;
	step 17 : wff = def df-rab () |- { x e. A | ( ph /\ -. ps ) } = { x | ( x e. A /\ ( ph /\ -. ps ) ) } ;
	step 18 : wff = thm 3eqtr4i (step 13, step 16, step 17) |- ( { x e. A | ph } \ { x e. A | ps } ) = { x e. A | ( ph /\ -. ps ) } ;
	qed prop 1 = step 18 ;
}

theorem dfrab2 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- { x e. A | ph } = ( { x | ph } i^i A ) ;
}

proof of dfrab2 {
	step 1 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 2 : wff = thm inab () |- ( { x | x e. A } i^i { x | ph } ) = { x | ( x e. A /\ ph ) } ;
	step 3 : wff = thm abid2 () |- { x | x e. A } = A ;
	step 4 : wff = thm ineq1i (step 3) |- ( { x | x e. A } i^i { x | ph } ) = ( A i^i { x | ph } ) ;
	step 5 : wff = thm eqtr3i (step 2, step 4) |- { x | ( x e. A /\ ph ) } = ( A i^i { x | ph } ) ;
	step 6 : wff = thm incom () |- ( A i^i { x | ph } ) = ( { x | ph } i^i A ) ;
	step 7 : wff = thm 3eqtri (step 1, step 5, step 6) |- { x e. A | ph } = ( { x | ph } i^i A ) ;
	qed prop 1 = step 7 ;
}

theorem reuss2 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x e. A ph /\ E! x e. B ps ) ) -> E! x e. A ph ) ;
}

proof of reuss2 {
	step 1 : wff = thm prth () |- ( ( ( x e. A -> x e. B ) /\ ( ph -> ps ) ) -> ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ) ;
	step 2 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm sylan (step 1, step 2) |- ( ( A C_ B /\ ( ph -> ps ) ) -> ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ) ;
	step 4 : wff = thm exp4b (step 3) |- ( A C_ B -> ( ( ph -> ps ) -> ( x e. A -> ( ph -> ( x e. B /\ ps ) ) ) ) ) ;
	step 5 : wff = thm com23 (step 4) |- ( A C_ B -> ( x e. A -> ( ( ph -> ps ) -> ( ph -> ( x e. B /\ ps ) ) ) ) ) ;
	step 6 : wff = thm a2d (step 5) |- ( A C_ B -> ( ( x e. A -> ( ph -> ps ) ) -> ( x e. A -> ( ph -> ( x e. B /\ ps ) ) ) ) ) ;
	step 7 : wff = thm imp4a (step 6) |- ( A C_ B -> ( ( x e. A -> ( ph -> ps ) ) -> ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ) ) ;
	step 8 : wff = thm 19_20dv (step 7) |- ( A C_ B -> ( A. x ( x e. A -> ( ph -> ps ) ) -> A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ) ) ;
	step 9 : wff = thm imp (step 8) |- ( ( A C_ B /\ A. x ( x e. A -> ( ph -> ps ) ) ) -> A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ) ;
	step 10 : wff = def df-ral () |- ( A. x e. A ( ph -> ps ) <-> A. x ( x e. A -> ( ph -> ps ) ) ) ;
	step 11 : wff = thm sylan2b (step 9, step 10) |- ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) -> A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) ) ;
	step 12 : wff = thm euimmo () |- ( A. x ( ( x e. A /\ ph ) -> ( x e. B /\ ps ) ) -> ( E! x ( x e. B /\ ps ) -> E* x ( x e. A /\ ph ) ) ) ;
	step 13 : wff = thm syl (step 11, step 12) |- ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) -> ( E! x ( x e. B /\ ps ) -> E* x ( x e. A /\ ph ) ) ) ;
	step 14 : wff = thm eu5 () |- ( E! x ( x e. A /\ ph ) <-> ( E. x ( x e. A /\ ph ) /\ E* x ( x e. A /\ ph ) ) ) ;
	step 15 : wff = thm biimpri (step 14) |- ( ( E. x ( x e. A /\ ph ) /\ E* x ( x e. A /\ ph ) ) -> E! x ( x e. A /\ ph ) ) ;
	step 16 : wff = thm ex (step 15) |- ( E. x ( x e. A /\ ph ) -> ( E* x ( x e. A /\ ph ) -> E! x ( x e. A /\ ph ) ) ) ;
	step 17 : wff = thm syl9 (step 13, step 16) |- ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) -> ( E. x ( x e. A /\ ph ) -> ( E! x ( x e. B /\ ps ) -> E! x ( x e. A /\ ph ) ) ) ) ;
	step 18 : wff = thm imp32 (step 17) |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x ( x e. A /\ ph ) /\ E! x ( x e. B /\ ps ) ) ) -> E! x ( x e. A /\ ph ) ) ;
	step 19 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 20 : wff = thm sylibr (step 18, step 19) |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x ( x e. A /\ ph ) /\ E! x ( x e. B /\ ps ) ) ) -> E! x e. A ph ) ;
	step 21 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 22 : wff = def df-reu () |- ( E! x e. B ps <-> E! x ( x e. B /\ ps ) ) ;
	step 23 : wff = thm anbi12i (step 21, step 22) |- ( ( E. x e. A ph /\ E! x e. B ps ) <-> ( E. x ( x e. A /\ ph ) /\ E! x ( x e. B /\ ps ) ) ) ;
	step 24 : wff = thm sylan2b (step 20, step 23) |- ( ( ( A C_ B /\ A. x e. A ( ph -> ps ) ) /\ ( E. x e. A ph /\ E! x e. B ps ) ) -> E! x e. A ph ) ;
	qed prop 1 = step 24 ;
}

theorem reuss (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) -> E! x e. A ph ) ;
}

proof of reuss {
	step 1 : wff = thm idd () |- ( x e. A -> ( ph -> ph ) ) ;
	step 2 : wff = thm rgen (step 1) |- A. x e. A ( ph -> ph ) ;
	step 3 : wff = thm reuss2 () |- ( ( ( A C_ B /\ A. x e. A ( ph -> ph ) ) /\ ( E. x e. A ph /\ E! x e. B ph ) ) -> E! x e. A ph ) ;
	step 4 : wff = thm mpanl2 (step 2, step 3) |- ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) -> E! x e. A ph ) ;
	step 5 : wff = thm 3impb (step 4) |- ( ( A C_ B /\ E. x e. A ph /\ E! x e. B ph ) -> E! x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem reuun1 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) ) -> E! x e. A ph ) ;
}

proof of reuun1 {
	step 1 : wff = thm ssun1 () |- A C_ ( A u. B ) ;
	step 2 : wff = thm orc () |- ( ph -> ( ph \/ ps ) ) ;
	step 3 : wff = thm a1i (step 2) |- ( x e. A -> ( ph -> ( ph \/ ps ) ) ) ;
	step 4 : wff = thm rgen (step 3) |- A. x e. A ( ph -> ( ph \/ ps ) ) ;
	step 5 : wff = thm reuss2 () |- ( ( ( A C_ ( A u. B ) /\ A. x e. A ( ph -> ( ph \/ ps ) ) ) /\ ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) ) ) -> E! x e. A ph ) ;
	step 6 : wff = thm mpanl12 (step 1, step 4, step 5) |- ( ( E. x e. A ph /\ E! x e. ( A u. B ) ( ph \/ ps ) ) -> E! x e. A ph ) ;
	qed prop 1 = step 6 ;
}

theorem reuun2 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( -. E. x e. B ph -> ( E! x e. ( A u. B ) ph <-> E! x e. A ph ) ) ;
}

proof of reuun2 {
	step 1 : wff = def df-rex () |- ( E. x e. B ph <-> E. x ( x e. B /\ ph ) ) ;
	step 2 : wff = thm notbii (step 1) |- ( -. E. x e. B ph <-> -. E. x ( x e. B /\ ph ) ) ;
	step 3 : wff = thm euor2 () |- ( -. E. x ( x e. B /\ ph ) -> ( E! x ( ( x e. B /\ ph ) \/ ( x e. A /\ ph ) ) <-> E! x ( x e. A /\ ph ) ) ) ;
	step 4 : wff = thm sylbi (step 2, step 3) |- ( -. E. x e. B ph -> ( E! x ( ( x e. B /\ ph ) \/ ( x e. A /\ ph ) ) <-> E! x ( x e. A /\ ph ) ) ) ;
	step 5 : wff = def df-reu () |- ( E! x e. ( A u. B ) ph <-> E! x ( x e. ( A u. B ) /\ ph ) ) ;
	step 6 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 7 : wff = thm anbi1i (step 6) |- ( ( x e. ( A u. B ) /\ ph ) <-> ( ( x e. A \/ x e. B ) /\ ph ) ) ;
	step 8 : wff = thm andir () |- ( ( ( x e. A \/ x e. B ) /\ ph ) <-> ( ( x e. A /\ ph ) \/ ( x e. B /\ ph ) ) ) ;
	step 9 : wff = thm orcom () |- ( ( ( x e. A /\ ph ) \/ ( x e. B /\ ph ) ) <-> ( ( x e. B /\ ph ) \/ ( x e. A /\ ph ) ) ) ;
	step 10 : wff = thm 3bitri (step 7, step 8, step 9) |- ( ( x e. ( A u. B ) /\ ph ) <-> ( ( x e. B /\ ph ) \/ ( x e. A /\ ph ) ) ) ;
	step 11 : wff = thm eubii (step 10) |- ( E! x ( x e. ( A u. B ) /\ ph ) <-> E! x ( ( x e. B /\ ph ) \/ ( x e. A /\ ph ) ) ) ;
	step 12 : wff = thm bitri (step 5, step 11) |- ( E! x e. ( A u. B ) ph <-> E! x ( ( x e. B /\ ph ) \/ ( x e. A /\ ph ) ) ) ;
	step 13 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 14 : wff = thm 3bitr4g (step 4, step 12, step 13) |- ( -. E. x e. B ph -> ( E! x e. ( A u. B ) ph <-> E! x e. A ph ) ) ;
	qed prop 1 = step 14 ;
}

theorem reupick (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) -> ( x e. A <-> x e. B ) ) ;
}

proof of reupick {
	step 1 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm ad2antrr (step 1) |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) -> ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 4 : wff = thm ancrd (step 3) |- ( A C_ B -> ( x e. A -> ( x e. B /\ x e. A ) ) ) ;
	step 5 : wff = thm anim1d (step 4) |- ( A C_ B -> ( ( x e. A /\ ph ) -> ( ( x e. B /\ x e. A ) /\ ph ) ) ) ;
	step 6 : wff = thm an23 () |- ( ( ( x e. B /\ x e. A ) /\ ph ) <-> ( ( x e. B /\ ph ) /\ x e. A ) ) ;
	step 7 : wff = thm syl6ib (step 5, step 6) |- ( A C_ B -> ( ( x e. A /\ ph ) -> ( ( x e. B /\ ph ) /\ x e. A ) ) ) ;
	step 8 : wff = thm 19_22dv (step 7) |- ( A C_ B -> ( E. x ( x e. A /\ ph ) -> E. x ( ( x e. B /\ ph ) /\ x e. A ) ) ) ;
	step 9 : wff = thm eupick () |- ( ( E! x ( x e. B /\ ph ) /\ E. x ( ( x e. B /\ ph ) /\ x e. A ) ) -> ( ( x e. B /\ ph ) -> x e. A ) ) ;
	step 10 : wff = thm ex (step 9) |- ( E! x ( x e. B /\ ph ) -> ( E. x ( ( x e. B /\ ph ) /\ x e. A ) -> ( ( x e. B /\ ph ) -> x e. A ) ) ) ;
	step 11 : wff = thm syl9 (step 8, step 10) |- ( A C_ B -> ( E! x ( x e. B /\ ph ) -> ( E. x ( x e. A /\ ph ) -> ( ( x e. B /\ ph ) -> x e. A ) ) ) ) ;
	step 12 : wff = thm com23 (step 11) |- ( A C_ B -> ( E. x ( x e. A /\ ph ) -> ( E! x ( x e. B /\ ph ) -> ( ( x e. B /\ ph ) -> x e. A ) ) ) ) ;
	step 13 : wff = thm imp32 (step 12) |- ( ( A C_ B /\ ( E. x ( x e. A /\ ph ) /\ E! x ( x e. B /\ ph ) ) ) -> ( ( x e. B /\ ph ) -> x e. A ) ) ;
	step 14 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 15 : wff = def df-reu () |- ( E! x e. B ph <-> E! x ( x e. B /\ ph ) ) ;
	step 16 : wff = thm anbi12i (step 14, step 15) |- ( ( E. x e. A ph /\ E! x e. B ph ) <-> ( E. x ( x e. A /\ ph ) /\ E! x ( x e. B /\ ph ) ) ) ;
	step 17 : wff = thm sylan2b (step 13, step 16) |- ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) -> ( ( x e. B /\ ph ) -> x e. A ) ) ;
	step 18 : wff = thm exp3a (step 17) |- ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) -> ( x e. B -> ( ph -> x e. A ) ) ) ;
	step 19 : wff = thm com23 (step 18) |- ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) -> ( ph -> ( x e. B -> x e. A ) ) ) ;
	step 20 : wff = thm imp (step 19) |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) -> ( x e. B -> x e. A ) ) ;
	step 21 : wff = thm impbid (step 2, step 20) |- ( ( ( A C_ B /\ ( E. x e. A ph /\ E! x e. B ph ) ) /\ ph ) -> ( x e. A <-> x e. B ) ) ;
	qed prop 1 = step 21 ;
}

constant {
	symbol (/) ;
}

rule c0 () {
	term : class = # (/) ;
}

definition df-nul ()  {
	defiendum : class = # (/) ;
	definiens : class = # ( _V \ _V ) ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem dfnul2 (x : set)  {
	prop 1 : wff = |- (/) = { x | -. x = x } ;
}

proof of dfnul2 {
	step 1 : wff = def df-nul () |- (/) = ( _V \ _V ) ;
	step 2 : wff = thm eleq2i (step 1) |- ( x e. (/) <-> x e. ( _V \ _V ) ) ;
	step 3 : wff = thm eldif () |- ( x e. ( _V \ _V ) <-> ( x e. _V /\ -. x e. _V ) ) ;
	step 4 : wff = thm eqid () |- x = x ;
	step 5 : wff = thm pm3_24 () |- -. ( x e. _V /\ -. x e. _V ) ;
	step 6 : wff = thm 2th (step 4, step 5) |- ( x = x <-> -. ( x e. _V /\ -. x e. _V ) ) ;
	step 7 : wff = thm con2bii (step 6) |- ( ( x e. _V /\ -. x e. _V ) <-> -. x = x ) ;
	step 8 : wff = thm 3bitri (step 2, step 3, step 7) |- ( x e. (/) <-> -. x = x ) ;
	step 9 : wff = thm abbi2i (step 8) |- (/) = { x | -. x = x } ;
	qed prop 1 = step 9 ;
}

theorem dfnul3 (x : set, A : class)  {
	prop 1 : wff = |- (/) = { x e. A | -. x e. A } ;
}

proof of dfnul3 {
	step 1 : wff = thm pm3_24 () |- -. ( x e. A /\ -. x e. A ) ;
	step 2 : wff = thm eqid () |- x = x ;
	step 3 : wff = thm 2th (step 1, step 2) |- ( -. ( x e. A /\ -. x e. A ) <-> x = x ) ;
	step 4 : wff = thm con1bii (step 3) |- ( -. x = x <-> ( x e. A /\ -. x e. A ) ) ;
	step 5 : wff = thm abbii (step 4) |- { x | -. x = x } = { x | ( x e. A /\ -. x e. A ) } ;
	step 6 : wff = thm dfnul2 () |- (/) = { x | -. x = x } ;
	step 7 : wff = def df-rab () |- { x e. A | -. x e. A } = { x | ( x e. A /\ -. x e. A ) } ;
	step 8 : wff = thm 3eqtr4i (step 5, step 6, step 7) |- (/) = { x e. A | -. x e. A } ;
	qed prop 1 = step 8 ;
}

theorem noel (A : class)  {
	prop 1 : wff = |- -. A e. (/) ;
}

proof of noel {
	var x : set;
	step 1 : wff = thm eqid () |- x = x ;
	step 2 : wff = thm dfnul2 () |- (/) = { x | -. x = x } ;
	step 3 : wff = thm abeq2i (step 2) |- ( x e. (/) <-> -. x = x ) ;
	step 4 : wff = thm con2bii (step 3) |- ( x = x <-> -. x e. (/) ) ;
	step 5 : wff = thm mpbi (step 1, step 4) |- -. x e. (/) ;
	step 6 : wff = thm eleq1 () |- ( x = A -> ( x e. (/) <-> A e. (/) ) ) ;
	step 7 : wff = thm mtbii (step 5, step 6) |- ( x = A -> -. A e. (/) ) ;
	step 8 : wff = thm vtocleg (step 7) |- ( A e. _V -> -. A e. (/) ) ;
	step 9 : wff = thm elisset () |- ( A e. (/) -> A e. _V ) ;
	step 10 : wff = thm con3i (step 9) |- ( -. A e. _V -> -. A e. (/) ) ;
	step 11 : wff = thm pm2_61i (step 8, step 10) |- -. A e. (/) ;
	qed prop 1 = step 11 ;
}

theorem n0i (A : class, B : class)  {
	prop 1 : wff = |- ( B e. A -> -. A = (/) ) ;
}

proof of n0i {
	step 1 : wff = thm noel () |- -. B e. (/) ;
	step 2 : wff = thm eleq2 () |- ( A = (/) -> ( B e. A <-> B e. (/) ) ) ;
	step 3 : wff = thm mtbiri (step 1, step 2) |- ( A = (/) -> -. B e. A ) ;
	step 4 : wff = thm con2i (step 3) |- ( B e. A -> -. A = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem ne0i (A : class, B : class)  {
	prop 1 : wff = |- ( B e. A -> A =/= (/) ) ;
}

proof of ne0i {
	step 1 : wff = thm n0i () |- ( B e. A -> -. A = (/) ) ;
	step 2 : wff = def df-ne () |- ( A =/= (/) <-> -. A = (/) ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( B e. A -> A =/= (/) ) ;
	qed prop 1 = step 3 ;
}

theorem vn0 ()  {
	prop 1 : wff = |- _V =/= (/) ;
}

proof of vn0 {
	var x : set;
	step 1 : wff = thm visset () |- x e. _V ;
	step 2 : wff = thm ne0i () |- ( x e. _V -> _V =/= (/) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- _V =/= (/) ;
	qed prop 1 = step 3 ;
}

theorem ne0f (x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( A =/= (/) <-> E. x x e. A ) ;
}

proof of ne0f {
	step 1 : wff = axm ax-17 () |- ( y e. (/) -> A. x y e. (/) ) ;
	step 2 : wff = thm cleqf (hyp 1, step 1) |- ( A = (/) <-> A. x ( x e. A <-> x e. (/) ) ) ;
	step 3 : wff = thm noel () |- -. x e. (/) ;
	step 4 : wff = thm nbn (step 3) |- ( -. x e. A <-> ( x e. A <-> x e. (/) ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x -. x e. A <-> A. x ( x e. A <-> x e. (/) ) ) ;
	step 6 : wff = thm bitr4i (step 2, step 5) |- ( A = (/) <-> A. x -. x e. A ) ;
	step 7 : wff = thm notbii (step 6) |- ( -. A = (/) <-> -. A. x -. x e. A ) ;
	step 8 : wff = def df-ne () |- ( A =/= (/) <-> -. A = (/) ) ;
	step 9 : wff = def df-ex () |- ( E. x x e. A <-> -. A. x -. x e. A ) ;
	step 10 : wff = thm 3bitr4i (step 7, step 8, step 9) |- ( A =/= (/) <-> E. x x e. A ) ;
	qed prop 1 = step 10 ;
}

theorem n0 (x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) <-> E. x x e. A ) ;
}

proof of n0 {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 2 : wff = thm ne0f (step 1) |- ( A =/= (/) <-> E. x x e. A ) ;
	qed prop 1 = step 2 ;
}

theorem neq0 (x : set, A : class)  {
	prop 1 : wff = |- ( -. A = (/) <-> E. x x e. A ) ;
}

proof of neq0 {
	step 1 : wff = def df-ne () |- ( A =/= (/) <-> -. A = (/) ) ;
	step 2 : wff = thm n0 () |- ( A =/= (/) <-> E. x x e. A ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( -. A = (/) <-> E. x x e. A ) ;
	qed prop 1 = step 3 ;
}

theorem abn0 (ph : wff, x : set)  {
	prop 1 : wff = |- ( { x | ph } =/= (/) <-> E. x ph ) ;
}

proof of abn0 {
	var y : set;
	step 1 : wff = thm n0 () |- ( { x | ph } =/= (/) <-> E. y y e. { x | ph } ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 3 : wff = axm ax-17 () |- ( x e. { x | ph } -> A. y x e. { x | ph } ) ;
	step 4 : wff = thm eleq1 () |- ( y = x -> ( y e. { x | ph } <-> x e. { x | ph } ) ) ;
	step 5 : wff = thm cbvex (step 2, step 3, step 4) |- ( E. y y e. { x | ph } <-> E. x x e. { x | ph } ) ;
	step 6 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. x x e. { x | ph } <-> E. x ph ) ;
	step 8 : wff = thm 3bitri (step 1, step 5, step 7) |- ( { x | ph } =/= (/) <-> E. x ph ) ;
	qed prop 1 = step 8 ;
}

theorem rex0 (ph : wff, x : set)  {
	prop 1 : wff = |- -. E. x e. (/) ph ;
}

proof of rex0 {
	step 1 : wff = thm noel () |- -. x e. (/) ;
	step 2 : wff = thm pm2_21i (step 1) |- ( x e. (/) -> -. ph ) ;
	step 3 : wff = thm nrex (step 2) |- -. E. x e. (/) ph ;
	qed prop 1 = step 3 ;
}

theorem rabn0 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( { x e. A | ph } =/= (/) <-> E. x e. A ph ) ;
}

proof of rabn0 {
	step 1 : wff = thm abn0 () |- ( { x | ( x e. A /\ ph ) } =/= (/) <-> E. x ( x e. A /\ ph ) ) ;
	step 2 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 3 : wff = thm neeq1i (step 2) |- ( { x e. A | ph } =/= (/) <-> { x | ( x e. A /\ ph ) } =/= (/) ) ;
	step 4 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 5 : wff = thm 3bitr4i (step 1, step 3, step 4) |- ( { x e. A | ph } =/= (/) <-> E. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem rab0 (ph : wff, x : set)  {
	prop 1 : wff = |- { x e. (/) | ph } = (/) ;
}

proof of rab0 {
	step 1 : wff = thm noel () |- -. x e. (/) ;
	step 2 : wff = thm intnanr (step 1) |- -. ( x e. (/) /\ ph ) ;
	step 3 : wff = thm nex (step 2) |- -. E. x ( x e. (/) /\ ph ) ;
	step 4 : wff = thm rabn0 () |- ( { x e. (/) | ph } =/= (/) <-> E. x e. (/) ph ) ;
	step 5 : wff = def df-rex () |- ( E. x e. (/) ph <-> E. x ( x e. (/) /\ ph ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( { x e. (/) | ph } =/= (/) <-> E. x ( x e. (/) /\ ph ) ) ;
	step 7 : wff = thm necon1bbii (step 6) |- ( -. E. x ( x e. (/) /\ ph ) <-> { x e. (/) | ph } = (/) ) ;
	step 8 : wff = thm mpbi (step 3, step 7) |- { x e. (/) | ph } = (/) ;
	qed prop 1 = step 8 ;
}

theorem eq0 (x : set, A : class)  {
	prop 1 : wff = |- ( A = (/) <-> A. x -. x e. A ) ;
}

proof of eq0 {
	step 1 : wff = thm neq0 () |- ( -. A = (/) <-> E. x x e. A ) ;
	step 2 : wff = def df-ex () |- ( E. x x e. A <-> -. A. x -. x e. A ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( -. A = (/) <-> -. A. x -. x e. A ) ;
	step 4 : wff = thm con4bii (step 3) |- ( A = (/) <-> A. x -. x e. A ) ;
	qed prop 1 = step 4 ;
}

theorem eqv (x : set, A : class)  {
	prop 1 : wff = |- ( A = _V <-> A. x x e. A ) ;
}

proof of eqv {
	step 1 : wff = thm dfcleq () |- ( A = _V <-> A. x ( x e. A <-> x e. _V ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm tbt (step 2) |- ( x e. A <-> ( x e. A <-> x e. _V ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x x e. A <-> A. x ( x e. A <-> x e. _V ) ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( A = _V <-> A. x x e. A ) ;
	qed prop 1 = step 5 ;
}

theorem 0el (x : set, y : set, A : class)  {
	prop 1 : wff = |- ( (/) e. A <-> E. x e. A A. y -. y e. x ) ;
}

proof of 0el {
	step 1 : wff = thm risset () |- ( (/) e. A <-> E. x e. A x = (/) ) ;
	step 2 : wff = thm eq0 () |- ( x = (/) <-> A. y -. y e. x ) ;
	step 3 : wff = thm rexbii (step 2) |- ( E. x e. A x = (/) <-> E. x e. A A. y -. y e. x ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( (/) e. A <-> E. x e. A A. y -. y e. x ) ;
	qed prop 1 = step 4 ;
}

theorem un0 (A : class)  {
	prop 1 : wff = |- ( A u. (/) ) = A ;
}

proof of un0 {
	var x : set;
	step 1 : wff = thm noel () |- -. x e. (/) ;
	step 2 : wff = thm biorfi (step 1) |- ( x e. A <-> ( x e. A \/ x e. (/) ) ) ;
	step 3 : wff = thm bicomi (step 2) |- ( ( x e. A \/ x e. (/) ) <-> x e. A ) ;
	step 4 : wff = thm uneqri (step 3) |- ( A u. (/) ) = A ;
	qed prop 1 = step 4 ;
}

theorem in0 (A : class)  {
	prop 1 : wff = |- ( A i^i (/) ) = (/) ;
}

proof of in0 {
	var x : set;
	step 1 : wff = thm noel () |- -. x e. (/) ;
	step 2 : wff = thm bianfi (step 1) |- ( x e. (/) <-> ( x e. A /\ x e. (/) ) ) ;
	step 3 : wff = thm bicomi (step 2) |- ( ( x e. A /\ x e. (/) ) <-> x e. (/) ) ;
	step 4 : wff = thm ineqri (step 3) |- ( A i^i (/) ) = (/) ;
	qed prop 1 = step 4 ;
}

theorem inv1 (A : class)  {
	prop 1 : wff = |- ( A i^i _V ) = A ;
}

proof of inv1 {
	step 1 : wff = thm inss1 () |- ( A i^i _V ) C_ A ;
	step 2 : wff = thm ssid () |- A C_ A ;
	step 3 : wff = thm ssv () |- A C_ _V ;
	step 4 : wff = thm ssini (step 2, step 3) |- A C_ ( A i^i _V ) ;
	step 5 : wff = thm eqssi (step 1, step 4) |- ( A i^i _V ) = A ;
	qed prop 1 = step 5 ;
}

theorem unv (A : class)  {
	prop 1 : wff = |- ( A u. _V ) = _V ;
}

proof of unv {
	step 1 : wff = thm ssv () |- ( A u. _V ) C_ _V ;
	step 2 : wff = thm ssun2 () |- _V C_ ( A u. _V ) ;
	step 3 : wff = thm eqssi (step 1, step 2) |- ( A u. _V ) = _V ;
	qed prop 1 = step 3 ;
}

theorem 0ss (A : class)  {
	prop 1 : wff = |- (/) C_ A ;
}

proof of 0ss {
	var x : set;
	step 1 : wff = thm noel () |- -. x e. (/) ;
	step 2 : wff = thm pm2_21i (step 1) |- ( x e. (/) -> x e. A ) ;
	step 3 : wff = thm ssriv (step 2) |- (/) C_ A ;
	qed prop 1 = step 3 ;
}

theorem ss0b (A : class)  {
	prop 1 : wff = |- ( A C_ (/) <-> A = (/) ) ;
}

proof of ss0b {
	step 1 : wff = thm eqss () |- ( A = (/) <-> ( A C_ (/) /\ (/) C_ A ) ) ;
	step 2 : wff = thm 0ss () |- (/) C_ A ;
	step 3 : wff = thm mpbiran2 (step 1, step 2) |- ( A = (/) <-> A C_ (/) ) ;
	step 4 : wff = thm bicomi (step 3) |- ( A C_ (/) <-> A = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem ss0 (A : class)  {
	prop 1 : wff = |- ( A C_ (/) -> A = (/) ) ;
}

proof of ss0 {
	step 1 : wff = thm ss0b () |- ( A C_ (/) <-> A = (/) ) ;
	step 2 : wff = thm biimpi (step 1) |- ( A C_ (/) -> A = (/) ) ;
	qed prop 1 = step 2 ;
}

theorem sseq0 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) ;
}

proof of sseq0 {
	step 1 : wff = thm sseq2 () |- ( B = (/) -> ( A C_ B <-> A C_ (/) ) ) ;
	step 2 : wff = thm biimpac (step 1) |- ( ( A C_ B /\ B = (/) ) -> A C_ (/) ) ;
	step 3 : wff = thm ss0b () |- ( A C_ (/) <-> A = (/) ) ;
	step 4 : wff = thm sylib (step 2, step 3) |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem ssn0 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ A =/= (/) ) -> B =/= (/) ) ;
}

proof of ssn0 {
	step 1 : wff = thm sseq0 () |- ( ( A C_ B /\ B = (/) ) -> A = (/) ) ;
	step 2 : wff = thm ex (step 1) |- ( A C_ B -> ( B = (/) -> A = (/) ) ) ;
	step 3 : wff = thm necon3d (step 2) |- ( A C_ B -> ( A =/= (/) -> B =/= (/) ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( A C_ B /\ A =/= (/) ) -> B =/= (/) ) ;
	qed prop 1 = step 4 ;
}

theorem un00 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A = (/) /\ B = (/) ) <-> ( A u. B ) = (/) ) ;
}

proof of un00 {
	step 1 : wff = thm uneq12 () |- ( ( A = (/) /\ B = (/) ) -> ( A u. B ) = ( (/) u. (/) ) ) ;
	step 2 : wff = thm un0 () |- ( (/) u. (/) ) = (/) ;
	step 3 : wff = thm syl6eq (step 1, step 2) |- ( ( A = (/) /\ B = (/) ) -> ( A u. B ) = (/) ) ;
	step 4 : wff = thm ssun1 () |- A C_ ( A u. B ) ;
	step 5 : wff = thm sseq2 () |- ( ( A u. B ) = (/) -> ( A C_ ( A u. B ) <-> A C_ (/) ) ) ;
	step 6 : wff = thm mpbii (step 4, step 5) |- ( ( A u. B ) = (/) -> A C_ (/) ) ;
	step 7 : wff = thm ss0b () |- ( A C_ (/) <-> A = (/) ) ;
	step 8 : wff = thm sylib (step 6, step 7) |- ( ( A u. B ) = (/) -> A = (/) ) ;
	step 9 : wff = thm ssun2 () |- B C_ ( A u. B ) ;
	step 10 : wff = thm sseq2 () |- ( ( A u. B ) = (/) -> ( B C_ ( A u. B ) <-> B C_ (/) ) ) ;
	step 11 : wff = thm mpbii (step 9, step 10) |- ( ( A u. B ) = (/) -> B C_ (/) ) ;
	step 12 : wff = thm ss0b () |- ( B C_ (/) <-> B = (/) ) ;
	step 13 : wff = thm sylib (step 11, step 12) |- ( ( A u. B ) = (/) -> B = (/) ) ;
	step 14 : wff = thm jca (step 8, step 13) |- ( ( A u. B ) = (/) -> ( A = (/) /\ B = (/) ) ) ;
	step 15 : wff = thm impbii (step 3, step 14) |- ( ( A = (/) /\ B = (/) ) <-> ( A u. B ) = (/) ) ;
	qed prop 1 = step 15 ;
}

theorem vss (A : class)  {
	prop 1 : wff = |- ( _V C_ A <-> A = _V ) ;
}

proof of vss {
	step 1 : wff = thm ssv () |- A C_ _V ;
	step 2 : wff = thm jctl (step 1) |- ( _V C_ A -> ( A C_ _V /\ _V C_ A ) ) ;
	step 3 : wff = thm eqss () |- ( A = _V <-> ( A C_ _V /\ _V C_ A ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( _V C_ A -> A = _V ) ;
	step 5 : wff = thm eqimss2 () |- ( A = _V -> _V C_ A ) ;
	step 6 : wff = thm impbii (step 4, step 5) |- ( _V C_ A <-> A = _V ) ;
	qed prop 1 = step 6 ;
}

theorem 0pss (A : class)  {
	prop 1 : wff = |- ( (/) C. A <-> A =/= (/) ) ;
}

proof of 0pss {
	step 1 : wff = def df-pss () |- ( (/) C. A <-> ( (/) C_ A /\ (/) =/= A ) ) ;
	step 2 : wff = thm 0ss () |- (/) C_ A ;
	step 3 : wff = thm mpbiran (step 1, step 2) |- ( (/) C. A <-> (/) =/= A ) ;
	step 4 : wff = thm necom () |- ( (/) =/= A <-> A =/= (/) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( (/) C. A <-> A =/= (/) ) ;
	qed prop 1 = step 5 ;
}

theorem npss0 (A : class)  {
	prop 1 : wff = |- -. A C. (/) ;
}

proof of npss0 {
	step 1 : wff = thm eqid () |- (/) = (/) ;
	step 2 : wff = thm pssss () |- ( A C. (/) -> A C_ (/) ) ;
	step 3 : wff = thm ss0 () |- ( A C_ (/) -> A = (/) ) ;
	step 4 : wff = thm psseq1 () |- ( A = (/) -> ( A C. (/) <-> (/) C. (/) ) ) ;
	step 5 : wff = thm 3syl (step 2, step 3, step 4) |- ( A C. (/) -> ( A C. (/) <-> (/) C. (/) ) ) ;
	step 6 : wff = thm ibi (step 5) |- ( A C. (/) -> (/) C. (/) ) ;
	step 7 : wff = thm 0pss () |- ( (/) C. (/) <-> (/) =/= (/) ) ;
	step 8 : wff = def df-ne () |- ( (/) =/= (/) <-> -. (/) = (/) ) ;
	step 9 : wff = thm bitri (step 7, step 8) |- ( (/) C. (/) <-> -. (/) = (/) ) ;
	step 10 : wff = thm sylib (step 6, step 9) |- ( A C. (/) -> -. (/) = (/) ) ;
	step 11 : wff = thm mt2 (step 1, step 10) |- -. A C. (/) ;
	qed prop 1 = step 11 ;
}

theorem pssv (A : class)  {
	prop 1 : wff = |- ( A C. _V <-> -. A = _V ) ;
}

proof of pssv {
	step 1 : wff = thm dfpss2 () |- ( A C. _V <-> ( A C_ _V /\ -. A = _V ) ) ;
	step 2 : wff = thm ssv () |- A C_ _V ;
	step 3 : wff = thm mpbiran (step 1, step 2) |- ( A C. _V <-> -. A = _V ) ;
	qed prop 1 = step 3 ;
}

theorem disj (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) ;
}

proof of disj {
	step 1 : wff = def df-in () |- ( A i^i B ) = { x | ( x e. A /\ x e. B ) } ;
	step 2 : wff = thm eqeq1i (step 1) |- ( ( A i^i B ) = (/) <-> { x | ( x e. A /\ x e. B ) } = (/) ) ;
	step 3 : wff = thm abeq1 () |- ( { x | ( x e. A /\ x e. B ) } = (/) <-> A. x ( ( x e. A /\ x e. B ) <-> x e. (/) ) ) ;
	step 4 : wff = thm imnan () |- ( ( x e. A -> -. x e. B ) <-> -. ( x e. A /\ x e. B ) ) ;
	step 5 : wff = thm noel () |- -. x e. (/) ;
	step 6 : wff = thm nbn (step 5) |- ( -. ( x e. A /\ x e. B ) <-> ( ( x e. A /\ x e. B ) <-> x e. (/) ) ) ;
	step 7 : wff = thm bitr2i (step 4, step 6) |- ( ( ( x e. A /\ x e. B ) <-> x e. (/) ) <-> ( x e. A -> -. x e. B ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x ( ( x e. A /\ x e. B ) <-> x e. (/) ) <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 9 : wff = thm 3bitri (step 2, step 3, step 8) |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 10 : wff = def df-ral () |- ( A. x e. A -. x e. B <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 11 : wff = thm bitr4i (step 9, step 10) |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) ;
	qed prop 1 = step 11 ;
}

theorem disj1 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) ;
}

proof of disj1 {
	step 1 : wff = thm disj () |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) ;
	step 2 : wff = def df-ral () |- ( A. x e. A -. x e. B <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) ;
	qed prop 1 = step 3 ;
}

theorem reldisj (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ C -> ( ( A i^i B ) = (/) <-> A C_ ( C \ B ) ) ) ;
}

proof of reldisj {
	var x : set;
	step 1 : wff = thm ssel () |- ( A C_ C -> ( x e. A -> x e. C ) ) ;
	step 2 : wff = thm biantrurd (step 1) |- ( A C_ C -> ( ( x e. A -> -. x e. B ) <-> ( ( x e. A -> x e. C ) /\ ( x e. A -> -. x e. B ) ) ) ) ;
	step 3 : wff = thm pm4_76 () |- ( ( ( x e. A -> x e. C ) /\ ( x e. A -> -. x e. B ) ) <-> ( x e. A -> ( x e. C /\ -. x e. B ) ) ) ;
	step 4 : wff = thm eldif () |- ( x e. ( C \ B ) <-> ( x e. C /\ -. x e. B ) ) ;
	step 5 : wff = thm imbi2i (step 4) |- ( ( x e. A -> x e. ( C \ B ) ) <-> ( x e. A -> ( x e. C /\ -. x e. B ) ) ) ;
	step 6 : wff = thm bitr4i (step 3, step 5) |- ( ( ( x e. A -> x e. C ) /\ ( x e. A -> -. x e. B ) ) <-> ( x e. A -> x e. ( C \ B ) ) ) ;
	step 7 : wff = thm syl6bb (step 2, step 6) |- ( A C_ C -> ( ( x e. A -> -. x e. B ) <-> ( x e. A -> x e. ( C \ B ) ) ) ) ;
	step 8 : wff = thm albidv (step 7) |- ( A C_ C -> ( A. x ( x e. A -> -. x e. B ) <-> A. x ( x e. A -> x e. ( C \ B ) ) ) ) ;
	step 9 : wff = thm disj1 () |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 10 : wff = thm dfss2 () |- ( A C_ ( C \ B ) <-> A. x ( x e. A -> x e. ( C \ B ) ) ) ;
	step 11 : wff = thm 3bitr4g (step 8, step 9, step 10) |- ( A C_ C -> ( ( A i^i B ) = (/) <-> A C_ ( C \ B ) ) ) ;
	qed prop 1 = step 11 ;
}

theorem disj3 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) ;
}

proof of disj3 {
	var x : set;
	step 1 : wff = thm pm4_71 () |- ( ( x e. A -> -. x e. B ) <-> ( x e. A <-> ( x e. A /\ -. x e. B ) ) ) ;
	step 2 : wff = thm eldif () |- ( x e. ( A \ B ) <-> ( x e. A /\ -. x e. B ) ) ;
	step 3 : wff = thm bibi2i (step 2) |- ( ( x e. A <-> x e. ( A \ B ) ) <-> ( x e. A <-> ( x e. A /\ -. x e. B ) ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( x e. A -> -. x e. B ) <-> ( x e. A <-> x e. ( A \ B ) ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. A -> -. x e. B ) <-> A. x ( x e. A <-> x e. ( A \ B ) ) ) ;
	step 6 : wff = thm disj1 () |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 7 : wff = thm dfcleq () |- ( A = ( A \ B ) <-> A. x ( x e. A <-> x e. ( A \ B ) ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) ;
	qed prop 1 = step 8 ;
}

theorem disjne (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( ( A i^i B ) = (/) /\ C e. A /\ D e. B ) -> C =/= D ) ;
}

proof of disjne {
	var x : set;
	step 1 : wff = thm nelneq () |- ( ( D e. B /\ -. C e. B ) -> -. D = C ) ;
	step 2 : wff = def df-ne () |- ( D =/= C <-> -. D = C ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ( D e. B /\ -. C e. B ) -> D =/= C ) ;
	step 4 : wff = thm necomd (step 3) |- ( ( D e. B /\ -. C e. B ) -> C =/= D ) ;
	step 5 : wff = thm ex (step 4) |- ( D e. B -> ( -. C e. B -> C =/= D ) ) ;
	step 6 : wff = thm eleq1 () |- ( x = C -> ( x e. B <-> C e. B ) ) ;
	step 7 : wff = thm notbid (step 6) |- ( x = C -> ( -. x e. B <-> -. C e. B ) ) ;
	step 8 : wff = thm rcla4cva (step 7) |- ( ( A. x e. A -. x e. B /\ C e. A ) -> -. C e. B ) ;
	step 9 : wff = thm syl5com (step 5, step 8) |- ( ( A. x e. A -. x e. B /\ C e. A ) -> ( D e. B -> C =/= D ) ) ;
	step 10 : wff = thm disj () |- ( ( A i^i B ) = (/) <-> A. x e. A -. x e. B ) ;
	step 11 : wff = thm sylanb (step 9, step 10) |- ( ( ( A i^i B ) = (/) /\ C e. A ) -> ( D e. B -> C =/= D ) ) ;
	step 12 : wff = thm 3impia (step 11) |- ( ( ( A i^i B ) = (/) /\ C e. A /\ D e. B ) -> C =/= D ) ;
	qed prop 1 = step 12 ;
}

theorem disj2 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) ;
}

proof of disj2 {
	step 1 : wff = thm ssv () |- A C_ _V ;
	step 2 : wff = thm reldisj () |- ( A C_ _V -> ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( ( A i^i B ) = (/) <-> A C_ ( _V \ B ) ) ;
	qed prop 1 = step 3 ;
}

theorem disj4 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) = (/) <-> -. ( A \ B ) C. A ) ;
}

proof of disj4 {
	step 1 : wff = thm disj3 () |- ( ( A i^i B ) = (/) <-> A = ( A \ B ) ) ;
	step 2 : wff = thm eqcom () |- ( A = ( A \ B ) <-> ( A \ B ) = A ) ;
	step 3 : wff = thm dfpss2 () |- ( ( A \ B ) C. A <-> ( ( A \ B ) C_ A /\ -. ( A \ B ) = A ) ) ;
	step 4 : wff = thm difss () |- ( A \ B ) C_ A ;
	step 5 : wff = thm mpbiran (step 3, step 4) |- ( ( A \ B ) C. A <-> -. ( A \ B ) = A ) ;
	step 6 : wff = thm con2bii (step 5) |- ( ( A \ B ) = A <-> -. ( A \ B ) C. A ) ;
	step 7 : wff = thm 3bitri (step 1, step 2, step 6) |- ( ( A i^i B ) = (/) <-> -. ( A \ B ) C. A ) ;
	qed prop 1 = step 7 ;
}

theorem ssdisj (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) = (/) ) ;
}

proof of ssdisj {
	step 1 : wff = thm ssrin () |- ( A C_ B -> ( A i^i C ) C_ ( B i^i C ) ) ;
	step 2 : wff = thm sstr2 () |- ( ( A i^i C ) C_ ( B i^i C ) -> ( ( B i^i C ) C_ (/) -> ( A i^i C ) C_ (/) ) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A C_ B -> ( ( B i^i C ) C_ (/) -> ( A i^i C ) C_ (/) ) ) ;
	step 4 : wff = thm ss0b () |- ( ( B i^i C ) C_ (/) <-> ( B i^i C ) = (/) ) ;
	step 5 : wff = thm syl5ibr (step 3, step 4) |- ( A C_ B -> ( ( B i^i C ) = (/) -> ( A i^i C ) C_ (/) ) ) ;
	step 6 : wff = thm imp (step 5) |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) C_ (/) ) ;
	step 7 : wff = thm ss0 () |- ( ( A i^i C ) C_ (/) -> ( A i^i C ) = (/) ) ;
	step 8 : wff = thm syl (step 6, step 7) |- ( ( A C_ B /\ ( B i^i C ) = (/) ) -> ( A i^i C ) = (/) ) ;
	qed prop 1 = step 8 ;
}

theorem disjpss (A : class, B : class)  {
	prop 1 : wff = |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> A C. ( A u. B ) ) ;
}

proof of disjpss {
	step 1 : wff = thm sseq2 () |- ( ( A i^i B ) = (/) -> ( B C_ ( A i^i B ) <-> B C_ (/) ) ) ;
	step 2 : wff = thm ssid () |- B C_ B ;
	step 3 : wff = thm biantru (step 2) |- ( B C_ A <-> ( B C_ A /\ B C_ B ) ) ;
	step 4 : wff = thm ssin () |- ( ( B C_ A /\ B C_ B ) <-> B C_ ( A i^i B ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( B C_ A <-> B C_ ( A i^i B ) ) ;
	step 6 : wff = thm syl5bb (step 1, step 5) |- ( ( A i^i B ) = (/) -> ( B C_ A <-> B C_ (/) ) ) ;
	step 7 : wff = thm ss0 () |- ( B C_ (/) -> B = (/) ) ;
	step 8 : wff = thm syl6bi (step 6, step 7) |- ( ( A i^i B ) = (/) -> ( B C_ A -> B = (/) ) ) ;
	step 9 : wff = thm necon3ad (step 8) |- ( ( A i^i B ) = (/) -> ( B =/= (/) -> -. B C_ A ) ) ;
	step 10 : wff = thm imp (step 9) |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> -. B C_ A ) ;
	step 11 : wff = thm nsspssun () |- ( -. B C_ A <-> A C. ( B u. A ) ) ;
	step 12 : wff = thm uncom () |- ( B u. A ) = ( A u. B ) ;
	step 13 : wff = thm psseq2i (step 12) |- ( A C. ( B u. A ) <-> A C. ( A u. B ) ) ;
	step 14 : wff = thm bitri (step 11, step 13) |- ( -. B C_ A <-> A C. ( A u. B ) ) ;
	step 15 : wff = thm sylib (step 10, step 14) |- ( ( ( A i^i B ) = (/) /\ B =/= (/) ) -> A C. ( A u. B ) ) ;
	qed prop 1 = step 15 ;
}

theorem undisj1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <-> ( ( A u. B ) i^i C ) = (/) ) ;
}

proof of undisj1 {
	step 1 : wff = thm un00 () |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <-> ( ( A i^i C ) u. ( B i^i C ) ) = (/) ) ;
	step 2 : wff = thm indir () |- ( ( A u. B ) i^i C ) = ( ( A i^i C ) u. ( B i^i C ) ) ;
	step 3 : wff = thm eqeq1i (step 2) |- ( ( ( A u. B ) i^i C ) = (/) <-> ( ( A i^i C ) u. ( B i^i C ) ) = (/) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( ( A i^i C ) = (/) /\ ( B i^i C ) = (/) ) <-> ( ( A u. B ) i^i C ) = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem undisj2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <-> ( A i^i ( B u. C ) ) = (/) ) ;
}

proof of undisj2 {
	step 1 : wff = thm un00 () |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <-> ( ( A i^i B ) u. ( A i^i C ) ) = (/) ) ;
	step 2 : wff = thm indi () |- ( A i^i ( B u. C ) ) = ( ( A i^i B ) u. ( A i^i C ) ) ;
	step 3 : wff = thm eqeq1i (step 2) |- ( ( A i^i ( B u. C ) ) = (/) <-> ( ( A i^i B ) u. ( A i^i C ) ) = (/) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( ( A i^i B ) = (/) /\ ( A i^i C ) = (/) ) <-> ( A i^i ( B u. C ) ) = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem ssindif0 (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( A i^i ( _V \ B ) ) = (/) ) ;
}

proof of ssindif0 {
	step 1 : wff = thm disj2 () |- ( ( A i^i ( _V \ B ) ) = (/) <-> A C_ ( _V \ ( _V \ B ) ) ) ;
	step 2 : wff = thm ddif () |- ( _V \ ( _V \ B ) ) = B ;
	step 3 : wff = thm sseq2i (step 2) |- ( A C_ ( _V \ ( _V \ B ) ) <-> A C_ B ) ;
	step 4 : wff = thm bitr2i (step 1, step 3) |- ( A C_ B <-> ( A i^i ( _V \ B ) ) = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem inelcm (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A e. C ) -> ( B i^i C ) =/= (/) ) ;
}

proof of inelcm {
	step 1 : wff = thm elin () |- ( A e. ( B i^i C ) <-> ( A e. B /\ A e. C ) ) ;
	step 2 : wff = thm ne0i () |- ( A e. ( B i^i C ) -> ( B i^i C ) =/= (/) ) ;
	step 3 : wff = thm sylbir (step 1, step 2) |- ( ( A e. B /\ A e. C ) -> ( B i^i C ) =/= (/) ) ;
	qed prop 1 = step 3 ;
}

theorem minel (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. B /\ ( C i^i B ) = (/) ) -> -. A e. C ) ;
}

proof of minel {
	step 1 : wff = thm inelcm () |- ( ( A e. C /\ A e. B ) -> ( C i^i B ) =/= (/) ) ;
	step 2 : wff = thm necon2bi (step 1) |- ( ( C i^i B ) = (/) -> -. ( A e. C /\ A e. B ) ) ;
	step 3 : wff = thm imnan () |- ( ( A e. C -> -. A e. B ) <-> -. ( A e. C /\ A e. B ) ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( ( C i^i B ) = (/) -> ( A e. C -> -. A e. B ) ) ;
	step 5 : wff = thm con2d (step 4) |- ( ( C i^i B ) = (/) -> ( A e. B -> -. A e. C ) ) ;
	step 6 : wff = thm impcom (step 5) |- ( ( A e. B /\ ( C i^i B ) = (/) ) -> -. A e. C ) ;
	qed prop 1 = step 6 ;
}

theorem undif4 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i C ) = (/) -> ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) ) ;
}

proof of undif4 {
	var x : set;
	step 1 : wff = thm pm2_61 () |- ( ( x e. A -> -. x e. C ) -> ( ( -. x e. A -> -. x e. C ) -> -. x e. C ) ) ;
	step 2 : wff = axm ax-1 () |- ( -. x e. C -> ( -. x e. A -> -. x e. C ) ) ;
	step 3 : wff = thm impbid1 (step 1, step 2) |- ( ( x e. A -> -. x e. C ) -> ( ( -. x e. A -> -. x e. C ) <-> -. x e. C ) ) ;
	step 4 : wff = def df-or () |- ( ( x e. A \/ -. x e. C ) <-> ( -. x e. A -> -. x e. C ) ) ;
	step 5 : wff = thm syl5bb (step 3, step 4) |- ( ( x e. A -> -. x e. C ) -> ( ( x e. A \/ -. x e. C ) <-> -. x e. C ) ) ;
	step 6 : wff = thm anbi2d (step 5) |- ( ( x e. A -> -. x e. C ) -> ( ( ( x e. A \/ x e. B ) /\ ( x e. A \/ -. x e. C ) ) <-> ( ( x e. A \/ x e. B ) /\ -. x e. C ) ) ) ;
	step 7 : wff = thm eldif () |- ( x e. ( B \ C ) <-> ( x e. B /\ -. x e. C ) ) ;
	step 8 : wff = thm orbi2i (step 7) |- ( ( x e. A \/ x e. ( B \ C ) ) <-> ( x e. A \/ ( x e. B /\ -. x e. C ) ) ) ;
	step 9 : wff = thm ordi () |- ( ( x e. A \/ ( x e. B /\ -. x e. C ) ) <-> ( ( x e. A \/ x e. B ) /\ ( x e. A \/ -. x e. C ) ) ) ;
	step 10 : wff = thm bitri (step 8, step 9) |- ( ( x e. A \/ x e. ( B \ C ) ) <-> ( ( x e. A \/ x e. B ) /\ ( x e. A \/ -. x e. C ) ) ) ;
	step 11 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 12 : wff = thm anbi1i (step 11) |- ( ( x e. ( A u. B ) /\ -. x e. C ) <-> ( ( x e. A \/ x e. B ) /\ -. x e. C ) ) ;
	step 13 : wff = thm 3bitr4g (step 6, step 10, step 12) |- ( ( x e. A -> -. x e. C ) -> ( ( x e. A \/ x e. ( B \ C ) ) <-> ( x e. ( A u. B ) /\ -. x e. C ) ) ) ;
	step 14 : wff = thm elun () |- ( x e. ( A u. ( B \ C ) ) <-> ( x e. A \/ x e. ( B \ C ) ) ) ;
	step 15 : wff = thm eldif () |- ( x e. ( ( A u. B ) \ C ) <-> ( x e. ( A u. B ) /\ -. x e. C ) ) ;
	step 16 : wff = thm 3bitr4g (step 13, step 14, step 15) |- ( ( x e. A -> -. x e. C ) -> ( x e. ( A u. ( B \ C ) ) <-> x e. ( ( A u. B ) \ C ) ) ) ;
	step 17 : wff = thm 19_20i (step 16) |- ( A. x ( x e. A -> -. x e. C ) -> A. x ( x e. ( A u. ( B \ C ) ) <-> x e. ( ( A u. B ) \ C ) ) ) ;
	step 18 : wff = thm disj1 () |- ( ( A i^i C ) = (/) <-> A. x ( x e. A -> -. x e. C ) ) ;
	step 19 : wff = thm dfcleq () |- ( ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) <-> A. x ( x e. ( A u. ( B \ C ) ) <-> x e. ( ( A u. B ) \ C ) ) ) ;
	step 20 : wff = thm 3imtr4i (step 17, step 18, step 19) |- ( ( A i^i C ) = (/) -> ( A u. ( B \ C ) ) = ( ( A u. B ) \ C ) ) ;
	qed prop 1 = step 20 ;
}

theorem disjssun (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) = (/) -> ( A C_ ( B u. C ) <-> A C_ C ) ) ;
}

proof of disjssun {
	var x : set;
	step 1 : wff = thm disj1 () |- ( ( A i^i B ) = (/) <-> A. x ( x e. A -> -. x e. B ) ) ;
	step 2 : wff = axm ax-4 () |- ( A. x ( x e. A -> -. x e. B ) -> ( x e. A -> -. x e. B ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( ( A i^i B ) = (/) -> ( x e. A -> -. x e. B ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ( A i^i B ) = (/) /\ x e. A ) -> -. x e. B ) ;
	step 5 : wff = thm biorf () |- ( -. x e. B -> ( x e. C <-> ( x e. B \/ x e. C ) ) ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( ( ( A i^i B ) = (/) /\ x e. A ) -> ( x e. C <-> ( x e. B \/ x e. C ) ) ) ;
	step 7 : wff = thm elun () |- ( x e. ( B u. C ) <-> ( x e. B \/ x e. C ) ) ;
	step 8 : wff = thm syl6rbbr (step 6, step 7) |- ( ( ( A i^i B ) = (/) /\ x e. A ) -> ( x e. ( B u. C ) <-> x e. C ) ) ;
	step 9 : wff = thm ralbidva (step 8) |- ( ( A i^i B ) = (/) -> ( A. x e. A x e. ( B u. C ) <-> A. x e. A x e. C ) ) ;
	step 10 : wff = thm dfss3 () |- ( A C_ ( B u. C ) <-> A. x e. A x e. ( B u. C ) ) ;
	step 11 : wff = thm dfss3 () |- ( A C_ C <-> A. x e. A x e. C ) ;
	step 12 : wff = thm 3bitr4g (step 9, step 10, step 11) |- ( ( A i^i B ) = (/) -> ( A C_ ( B u. C ) <-> A C_ C ) ) ;
	qed prop 1 = step 12 ;
}

theorem ssdif0 (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( A \ B ) = (/) ) ;
}

proof of ssdif0 {
	var x : set;
	step 1 : wff = thm iman () |- ( ( x e. A -> x e. B ) <-> -. ( x e. A /\ -. x e. B ) ) ;
	step 2 : wff = thm eldif () |- ( x e. ( A \ B ) <-> ( x e. A /\ -. x e. B ) ) ;
	step 3 : wff = thm notbii (step 2) |- ( -. x e. ( A \ B ) <-> -. ( x e. A /\ -. x e. B ) ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( ( x e. A -> x e. B ) <-> -. x e. ( A \ B ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. A -> x e. B ) <-> A. x -. x e. ( A \ B ) ) ;
	step 6 : wff = thm dfss2 () |- ( A C_ B <-> A. x ( x e. A -> x e. B ) ) ;
	step 7 : wff = thm eq0 () |- ( ( A \ B ) = (/) <-> A. x -. x e. ( A \ B ) ) ;
	step 8 : wff = thm 3bitr4i (step 5, step 6, step 7) |- ( A C_ B <-> ( A \ B ) = (/) ) ;
	qed prop 1 = step 8 ;
}

theorem vdif0 (A : class)  {
	prop 1 : wff = |- ( A = _V <-> ( _V \ A ) = (/) ) ;
}

proof of vdif0 {
	step 1 : wff = thm vss () |- ( _V C_ A <-> A = _V ) ;
	step 2 : wff = thm ssdif0 () |- ( _V C_ A <-> ( _V \ A ) = (/) ) ;
	step 3 : wff = thm bitr3i (step 1, step 2) |- ( A = _V <-> ( _V \ A ) = (/) ) ;
	qed prop 1 = step 3 ;
}

theorem pssdifn0 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) ;
}

proof of pssdifn0 {
	step 1 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 2 : wff = thm biimpri (step 1) |- ( ( A C_ B /\ B C_ A ) -> A = B ) ;
	step 3 : wff = thm ex (step 2) |- ( A C_ B -> ( B C_ A -> A = B ) ) ;
	step 4 : wff = thm ssdif0 () |- ( B C_ A <-> ( B \ A ) = (/) ) ;
	step 5 : wff = thm syl5ibr (step 3, step 4) |- ( A C_ B -> ( ( B \ A ) = (/) -> A = B ) ) ;
	step 6 : wff = thm necon3d (step 5) |- ( A C_ B -> ( A =/= B -> ( B \ A ) =/= (/) ) ) ;
	step 7 : wff = thm imp (step 6) |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) ;
	qed prop 1 = step 7 ;
}

theorem ssnelpss (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> ( ( C e. B /\ -. C e. A ) -> A C. B ) ) ;
}

proof of ssnelpss {
	step 1 : wff = thm dfpss2 () |- ( A C. B <-> ( A C_ B /\ -. A = B ) ) ;
	step 2 : wff = thm baibr (step 1) |- ( A C_ B -> ( -. A = B <-> A C. B ) ) ;
	step 3 : wff = thm nelneq2 () |- ( ( C e. B /\ -. C e. A ) -> -. B = A ) ;
	step 4 : wff = thm eqcom () |- ( B = A <-> A = B ) ;
	step 5 : wff = thm notbii (step 4) |- ( -. B = A <-> -. A = B ) ;
	step 6 : wff = thm sylib (step 3, step 5) |- ( ( C e. B /\ -. C e. A ) -> -. A = B ) ;
	step 7 : wff = thm syl5bi (step 2, step 6) |- ( A C_ B -> ( ( C e. B /\ -. C e. A ) -> A C. B ) ) ;
	qed prop 1 = step 7 ;
}

theorem pssnel (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C. B -> E. x ( x e. B /\ -. x e. A ) ) ;
}

proof of pssnel {
	step 1 : wff = def df-pss () |- ( A C. B <-> ( A C_ B /\ A =/= B ) ) ;
	step 2 : wff = thm pssdifn0 () |- ( ( A C_ B /\ A =/= B ) -> ( B \ A ) =/= (/) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A C. B -> ( B \ A ) =/= (/) ) ;
	step 4 : wff = thm n0 () |- ( ( B \ A ) =/= (/) <-> E. x x e. ( B \ A ) ) ;
	step 5 : wff = thm sylib (step 3, step 4) |- ( A C. B -> E. x x e. ( B \ A ) ) ;
	step 6 : wff = thm eldif () |- ( x e. ( B \ A ) <-> ( x e. B /\ -. x e. A ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. x x e. ( B \ A ) <-> E. x ( x e. B /\ -. x e. A ) ) ;
	step 8 : wff = thm sylib (step 5, step 7) |- ( A C. B -> E. x ( x e. B /\ -. x e. A ) ) ;
	qed prop 1 = step 8 ;
}

theorem difin0ss (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) ;
}

proof of difin0ss {
	var x : set;
	step 1 : wff = thm eq0 () |- ( ( ( A \ B ) i^i C ) = (/) <-> A. x -. x e. ( ( A \ B ) i^i C ) ) ;
	step 2 : wff = thm annim () |- ( ( x e. A /\ -. x e. B ) <-> -. ( x e. A -> x e. B ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( x e. C /\ ( x e. A /\ -. x e. B ) ) <-> ( x e. C /\ -. ( x e. A -> x e. B ) ) ) ;
	step 4 : wff = thm ancom () |- ( ( x e. C /\ ( x e. A /\ -. x e. B ) ) <-> ( ( x e. A /\ -. x e. B ) /\ x e. C ) ) ;
	step 5 : wff = thm bitr3i (step 3, step 4) |- ( ( x e. C /\ -. ( x e. A -> x e. B ) ) <-> ( ( x e. A /\ -. x e. B ) /\ x e. C ) ) ;
	step 6 : wff = thm notbii (step 5) |- ( -. ( x e. C /\ -. ( x e. A -> x e. B ) ) <-> -. ( ( x e. A /\ -. x e. B ) /\ x e. C ) ) ;
	step 7 : wff = thm iman () |- ( ( x e. C -> ( x e. A -> x e. B ) ) <-> -. ( x e. C /\ -. ( x e. A -> x e. B ) ) ) ;
	step 8 : wff = thm elin () |- ( x e. ( ( A \ B ) i^i C ) <-> ( x e. ( A \ B ) /\ x e. C ) ) ;
	step 9 : wff = thm eldif () |- ( x e. ( A \ B ) <-> ( x e. A /\ -. x e. B ) ) ;
	step 10 : wff = thm anbi1i (step 9) |- ( ( x e. ( A \ B ) /\ x e. C ) <-> ( ( x e. A /\ -. x e. B ) /\ x e. C ) ) ;
	step 11 : wff = thm bitri (step 8, step 10) |- ( x e. ( ( A \ B ) i^i C ) <-> ( ( x e. A /\ -. x e. B ) /\ x e. C ) ) ;
	step 12 : wff = thm notbii (step 11) |- ( -. x e. ( ( A \ B ) i^i C ) <-> -. ( ( x e. A /\ -. x e. B ) /\ x e. C ) ) ;
	step 13 : wff = thm 3bitr4i (step 6, step 7, step 12) |- ( ( x e. C -> ( x e. A -> x e. B ) ) <-> -. x e. ( ( A \ B ) i^i C ) ) ;
	step 14 : wff = axm ax-2 () |- ( ( x e. C -> ( x e. A -> x e. B ) ) -> ( ( x e. C -> x e. A ) -> ( x e. C -> x e. B ) ) ) ;
	step 15 : wff = thm sylbir (step 13, step 14) |- ( -. x e. ( ( A \ B ) i^i C ) -> ( ( x e. C -> x e. A ) -> ( x e. C -> x e. B ) ) ) ;
	step 16 : wff = thm 19_20ii (step 15) |- ( A. x -. x e. ( ( A \ B ) i^i C ) -> ( A. x ( x e. C -> x e. A ) -> A. x ( x e. C -> x e. B ) ) ) ;
	step 17 : wff = thm sylbi (step 1, step 16) |- ( ( ( A \ B ) i^i C ) = (/) -> ( A. x ( x e. C -> x e. A ) -> A. x ( x e. C -> x e. B ) ) ) ;
	step 18 : wff = thm dfss2 () |- ( C C_ A <-> A. x ( x e. C -> x e. A ) ) ;
	step 19 : wff = thm dfss2 () |- ( C C_ B <-> A. x ( x e. C -> x e. B ) ) ;
	step 20 : wff = thm 3imtr4g (step 17, step 18, step 19) |- ( ( ( A \ B ) i^i C ) = (/) -> ( C C_ A -> C C_ B ) ) ;
	qed prop 1 = step 20 ;
}

theorem inssdif0 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) ;
}

proof of inssdif0 {
	var x : set;
	step 1 : wff = thm impexp () |- ( ( ( x e. A /\ x e. B ) -> x e. C ) <-> ( x e. A -> ( x e. B -> x e. C ) ) ) ;
	step 2 : wff = thm iman () |- ( ( x e. B -> x e. C ) <-> -. ( x e. B /\ -. x e. C ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( x e. A -> ( x e. B -> x e. C ) ) <-> ( x e. A -> -. ( x e. B /\ -. x e. C ) ) ) ;
	step 4 : wff = thm imnan () |- ( ( x e. A -> -. ( x e. B /\ -. x e. C ) ) <-> -. ( x e. A /\ ( x e. B /\ -. x e. C ) ) ) ;
	step 5 : wff = thm 3bitri (step 1, step 3, step 4) |- ( ( ( x e. A /\ x e. B ) -> x e. C ) <-> -. ( x e. A /\ ( x e. B /\ -. x e. C ) ) ) ;
	step 6 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 7 : wff = thm imbi1i (step 6) |- ( ( x e. ( A i^i B ) -> x e. C ) <-> ( ( x e. A /\ x e. B ) -> x e. C ) ) ;
	step 8 : wff = thm elin () |- ( x e. ( A i^i ( B \ C ) ) <-> ( x e. A /\ x e. ( B \ C ) ) ) ;
	step 9 : wff = thm eldif () |- ( x e. ( B \ C ) <-> ( x e. B /\ -. x e. C ) ) ;
	step 10 : wff = thm anbi2i (step 9) |- ( ( x e. A /\ x e. ( B \ C ) ) <-> ( x e. A /\ ( x e. B /\ -. x e. C ) ) ) ;
	step 11 : wff = thm bitri (step 8, step 10) |- ( x e. ( A i^i ( B \ C ) ) <-> ( x e. A /\ ( x e. B /\ -. x e. C ) ) ) ;
	step 12 : wff = thm notbii (step 11) |- ( -. x e. ( A i^i ( B \ C ) ) <-> -. ( x e. A /\ ( x e. B /\ -. x e. C ) ) ) ;
	step 13 : wff = thm 3bitr4i (step 5, step 7, step 12) |- ( ( x e. ( A i^i B ) -> x e. C ) <-> -. x e. ( A i^i ( B \ C ) ) ) ;
	step 14 : wff = thm albii (step 13) |- ( A. x ( x e. ( A i^i B ) -> x e. C ) <-> A. x -. x e. ( A i^i ( B \ C ) ) ) ;
	step 15 : wff = thm dfss2 () |- ( ( A i^i B ) C_ C <-> A. x ( x e. ( A i^i B ) -> x e. C ) ) ;
	step 16 : wff = thm eq0 () |- ( ( A i^i ( B \ C ) ) = (/) <-> A. x -. x e. ( A i^i ( B \ C ) ) ) ;
	step 17 : wff = thm 3bitr4i (step 14, step 15, step 16) |- ( ( A i^i B ) C_ C <-> ( A i^i ( B \ C ) ) = (/) ) ;
	qed prop 1 = step 17 ;
}

theorem difid (A : class)  {
	prop 1 : wff = |- ( A \ A ) = (/) ;
}

proof of difid {
	step 1 : wff = thm ssid () |- A C_ A ;
	step 2 : wff = thm ssdif0 () |- ( A C_ A <-> ( A \ A ) = (/) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A \ A ) = (/) ;
	qed prop 1 = step 3 ;
}

theorem dif0 (A : class)  {
	prop 1 : wff = |- ( A \ (/) ) = A ;
}

proof of dif0 {
	step 1 : wff = thm difid () |- ( A \ A ) = (/) ;
	step 2 : wff = thm difeq2i (step 1) |- ( A \ ( A \ A ) ) = ( A \ (/) ) ;
	step 3 : wff = thm difdif () |- ( A \ ( A \ A ) ) = A ;
	step 4 : wff = thm eqtr3i (step 2, step 3) |- ( A \ (/) ) = A ;
	qed prop 1 = step 4 ;
}

theorem 0dif (A : class)  {
	prop 1 : wff = |- ( (/) \ A ) = (/) ;
}

proof of 0dif {
	step 1 : wff = thm difss () |- ( (/) \ A ) C_ (/) ;
	step 2 : wff = thm ss0 () |- ( ( (/) \ A ) C_ (/) -> ( (/) \ A ) = (/) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( (/) \ A ) = (/) ;
	qed prop 1 = step 3 ;
}

theorem difdisj (A : class, B : class)  {
	prop 1 : wff = |- ( A i^i ( B \ A ) ) = (/) ;
}

proof of difdisj {
	step 1 : wff = thm inss1 () |- ( A i^i B ) C_ A ;
	step 2 : wff = thm inssdif0 () |- ( ( A i^i B ) C_ A <-> ( A i^i ( B \ A ) ) = (/) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( A i^i ( B \ A ) ) = (/) ;
	qed prop 1 = step 3 ;
}

theorem difin0 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) \ B ) = (/) ;
}

proof of difin0 {
	step 1 : wff = thm difindir () |- ( ( A i^i B ) \ B ) = ( ( A \ B ) i^i ( B \ B ) ) ;
	step 2 : wff = thm difid () |- ( B \ B ) = (/) ;
	step 3 : wff = thm ineq2i (step 2) |- ( ( A \ B ) i^i ( B \ B ) ) = ( ( A \ B ) i^i (/) ) ;
	step 4 : wff = thm in0 () |- ( ( A \ B ) i^i (/) ) = (/) ;
	step 5 : wff = thm 3eqtri (step 1, step 3, step 4) |- ( ( A i^i B ) \ B ) = (/) ;
	qed prop 1 = step 5 ;
}

theorem undifv (A : class)  {
	prop 1 : wff = |- ( A u. ( _V \ A ) ) = _V ;
}

proof of undifv {
	step 1 : wff = thm dfun3 () |- ( A u. ( _V \ A ) ) = ( _V \ ( ( _V \ A ) i^i ( _V \ ( _V \ A ) ) ) ) ;
	step 2 : wff = thm difdisj () |- ( ( _V \ A ) i^i ( _V \ ( _V \ A ) ) ) = (/) ;
	step 3 : wff = thm difeq2i (step 2) |- ( _V \ ( ( _V \ A ) i^i ( _V \ ( _V \ A ) ) ) ) = ( _V \ (/) ) ;
	step 4 : wff = thm dif0 () |- ( _V \ (/) ) = _V ;
	step 5 : wff = thm 3eqtri (step 1, step 3, step 4) |- ( A u. ( _V \ A ) ) = _V ;
	qed prop 1 = step 5 ;
}

theorem undif1 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A \ B ) u. B ) = ( A u. B ) ;
}

proof of undif1 {
	step 1 : wff = thm invdif () |- ( A i^i ( _V \ B ) ) = ( A \ B ) ;
	step 2 : wff = thm uneq1i (step 1) |- ( ( A i^i ( _V \ B ) ) u. B ) = ( ( A \ B ) u. B ) ;
	step 3 : wff = thm undir () |- ( ( A i^i ( _V \ B ) ) u. B ) = ( ( A u. B ) i^i ( ( _V \ B ) u. B ) ) ;
	step 4 : wff = thm uncom () |- ( ( _V \ B ) u. B ) = ( B u. ( _V \ B ) ) ;
	step 5 : wff = thm undifv () |- ( B u. ( _V \ B ) ) = _V ;
	step 6 : wff = thm eqtri (step 4, step 5) |- ( ( _V \ B ) u. B ) = _V ;
	step 7 : wff = thm ineq2i (step 6) |- ( ( A u. B ) i^i ( ( _V \ B ) u. B ) ) = ( ( A u. B ) i^i _V ) ;
	step 8 : wff = thm inv1 () |- ( ( A u. B ) i^i _V ) = ( A u. B ) ;
	step 9 : wff = thm 3eqtri (step 3, step 7, step 8) |- ( ( A i^i ( _V \ B ) ) u. B ) = ( A u. B ) ;
	step 10 : wff = thm eqtr3i (step 2, step 9) |- ( ( A \ B ) u. B ) = ( A u. B ) ;
	qed prop 1 = step 10 ;
}

theorem undif2 (A : class, B : class)  {
	prop 1 : wff = |- ( A u. ( B \ A ) ) = ( A u. B ) ;
}

proof of undif2 {
	step 1 : wff = thm uncom () |- ( A u. ( B \ A ) ) = ( ( B \ A ) u. A ) ;
	step 2 : wff = thm undif1 () |- ( ( B \ A ) u. A ) = ( B u. A ) ;
	step 3 : wff = thm uncom () |- ( B u. A ) = ( A u. B ) ;
	step 4 : wff = thm 3eqtri (step 1, step 2, step 3) |- ( A u. ( B \ A ) ) = ( A u. B ) ;
	qed prop 1 = step 4 ;
}

theorem inundif (A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i B ) u. ( A \ B ) ) = A ;
}

proof of inundif {
	step 1 : wff = thm undir () |- ( ( A i^i B ) u. ( A \ B ) ) = ( ( A u. ( A \ B ) ) i^i ( B u. ( A \ B ) ) ) ;
	step 2 : wff = thm difss () |- ( A \ B ) C_ A ;
	step 3 : wff = thm ssequn2 () |- ( ( A \ B ) C_ A <-> ( A u. ( A \ B ) ) = A ) ;
	step 4 : wff = thm mpbi (step 2, step 3) |- ( A u. ( A \ B ) ) = A ;
	step 5 : wff = thm undif2 () |- ( B u. ( A \ B ) ) = ( B u. A ) ;
	step 6 : wff = thm uncom () |- ( B u. A ) = ( A u. B ) ;
	step 7 : wff = thm eqtri (step 5, step 6) |- ( B u. ( A \ B ) ) = ( A u. B ) ;
	step 8 : wff = thm ineq12i (step 4, step 7) |- ( ( A u. ( A \ B ) ) i^i ( B u. ( A \ B ) ) ) = ( A i^i ( A u. B ) ) ;
	step 9 : wff = thm inabs () |- ( A i^i ( A u. B ) ) = A ;
	step 10 : wff = thm 3eqtri (step 1, step 8, step 9) |- ( ( A i^i B ) u. ( A \ B ) ) = A ;
	qed prop 1 = step 10 ;
}

theorem difun2 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A u. B ) \ B ) = ( A \ B ) ;
}

proof of difun2 {
	step 1 : wff = thm difundir () |- ( ( A u. B ) \ B ) = ( ( A \ B ) u. ( B \ B ) ) ;
	step 2 : wff = thm difid () |- ( B \ B ) = (/) ;
	step 3 : wff = thm uneq2i (step 2) |- ( ( A \ B ) u. ( B \ B ) ) = ( ( A \ B ) u. (/) ) ;
	step 4 : wff = thm un0 () |- ( ( A \ B ) u. (/) ) = ( A \ B ) ;
	step 5 : wff = thm 3eqtri (step 1, step 3, step 4) |- ( ( A u. B ) \ B ) = ( A \ B ) ;
	qed prop 1 = step 5 ;
}

theorem undif (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B <-> ( A u. ( B \ A ) ) = B ) ;
}

proof of undif {
	step 1 : wff = thm ssequn1 () |- ( A C_ B <-> ( A u. B ) = B ) ;
	step 2 : wff = thm undif2 () |- ( A u. ( B \ A ) ) = ( A u. B ) ;
	step 3 : wff = thm eqeq1i (step 2) |- ( ( A u. ( B \ A ) ) = B <-> ( A u. B ) = B ) ;
	step 4 : wff = thm bitr4i (step 1, step 3) |- ( A C_ B <-> ( A u. ( B \ A ) ) = B ) ;
	qed prop 1 = step 4 ;
}

theorem ssundif (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) ;
}

proof of ssundif {
	var x : set;
	step 1 : wff = thm pm5_6 () |- ( ( ( x e. A /\ -. x e. B ) -> x e. C ) <-> ( x e. A -> ( x e. B \/ x e. C ) ) ) ;
	step 2 : wff = thm eldif () |- ( x e. ( A \ B ) <-> ( x e. A /\ -. x e. B ) ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( x e. ( A \ B ) -> x e. C ) <-> ( ( x e. A /\ -. x e. B ) -> x e. C ) ) ;
	step 4 : wff = thm elun () |- ( x e. ( B u. C ) <-> ( x e. B \/ x e. C ) ) ;
	step 5 : wff = thm imbi2i (step 4) |- ( ( x e. A -> x e. ( B u. C ) ) <-> ( x e. A -> ( x e. B \/ x e. C ) ) ) ;
	step 6 : wff = thm 3bitr4ri (step 1, step 3, step 5) |- ( ( x e. A -> x e. ( B u. C ) ) <-> ( x e. ( A \ B ) -> x e. C ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x ( x e. A -> x e. ( B u. C ) ) <-> A. x ( x e. ( A \ B ) -> x e. C ) ) ;
	step 8 : wff = thm dfss2 () |- ( A C_ ( B u. C ) <-> A. x ( x e. A -> x e. ( B u. C ) ) ) ;
	step 9 : wff = thm dfss2 () |- ( ( A \ B ) C_ C <-> A. x ( x e. ( A \ B ) -> x e. C ) ) ;
	step 10 : wff = thm 3bitr4i (step 7, step 8, step 9) |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) ;
	qed prop 1 = step 10 ;
}

theorem difcom (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A \ B ) C_ C <-> ( A \ C ) C_ B ) ;
}

proof of difcom {
	step 1 : wff = thm uncom () |- ( B u. C ) = ( C u. B ) ;
	step 2 : wff = thm sseq2i (step 1) |- ( A C_ ( B u. C ) <-> A C_ ( C u. B ) ) ;
	step 3 : wff = thm ssundif () |- ( A C_ ( B u. C ) <-> ( A \ B ) C_ C ) ;
	step 4 : wff = thm ssundif () |- ( A C_ ( C u. B ) <-> ( A \ C ) C_ B ) ;
	step 5 : wff = thm 3bitr3i (step 2, step 3, step 4) |- ( ( A \ B ) C_ C <-> ( A \ C ) C_ B ) ;
	qed prop 1 = step 5 ;
}

theorem difdifdir (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ ( B \ C ) ) ;
}

proof of difdifdir {
	step 1 : wff = thm difdisj () |- ( C i^i ( A \ C ) ) = (/) ;
	step 2 : wff = thm incom () |- ( C i^i ( A \ C ) ) = ( ( A \ C ) i^i C ) ;
	step 3 : wff = thm eqtr3i (step 1, step 2) |- (/) = ( ( A \ C ) i^i C ) ;
	step 4 : wff = thm uneq2i (step 3) |- ( ( ( A \ C ) i^i ( _V \ B ) ) u. (/) ) = ( ( ( A \ C ) i^i ( _V \ B ) ) u. ( ( A \ C ) i^i C ) ) ;
	step 5 : wff = thm invdif () |- ( ( A \ C ) i^i ( _V \ B ) ) = ( ( A \ C ) \ B ) ;
	step 6 : wff = thm un0 () |- ( ( ( A \ C ) i^i ( _V \ B ) ) u. (/) ) = ( ( A \ C ) i^i ( _V \ B ) ) ;
	step 7 : wff = thm dif23 () |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ B ) ;
	step 8 : wff = thm 3eqtr4ri (step 5, step 6, step 7) |- ( ( A \ B ) \ C ) = ( ( ( A \ C ) i^i ( _V \ B ) ) u. (/) ) ;
	step 9 : wff = thm indi () |- ( ( A \ C ) i^i ( ( _V \ B ) u. C ) ) = ( ( ( A \ C ) i^i ( _V \ B ) ) u. ( ( A \ C ) i^i C ) ) ;
	step 10 : wff = thm 3eqtr4i (step 4, step 8, step 9) |- ( ( A \ B ) \ C ) = ( ( A \ C ) i^i ( ( _V \ B ) u. C ) ) ;
	step 11 : wff = thm indm () |- ( _V \ ( B i^i ( _V \ C ) ) ) = ( ( _V \ B ) u. ( _V \ ( _V \ C ) ) ) ;
	step 12 : wff = thm invdif () |- ( B i^i ( _V \ C ) ) = ( B \ C ) ;
	step 13 : wff = thm difeq2i (step 12) |- ( _V \ ( B i^i ( _V \ C ) ) ) = ( _V \ ( B \ C ) ) ;
	step 14 : wff = thm ddif () |- ( _V \ ( _V \ C ) ) = C ;
	step 15 : wff = thm uneq2i (step 14) |- ( ( _V \ B ) u. ( _V \ ( _V \ C ) ) ) = ( ( _V \ B ) u. C ) ;
	step 16 : wff = thm 3eqtr3ri (step 11, step 13, step 15) |- ( ( _V \ B ) u. C ) = ( _V \ ( B \ C ) ) ;
	step 17 : wff = thm ineq2i (step 16) |- ( ( A \ C ) i^i ( ( _V \ B ) u. C ) ) = ( ( A \ C ) i^i ( _V \ ( B \ C ) ) ) ;
	step 18 : wff = thm invdif () |- ( ( A \ C ) i^i ( _V \ ( B \ C ) ) ) = ( ( A \ C ) \ ( B \ C ) ) ;
	step 19 : wff = thm 3eqtri (step 10, step 17, step 18) |- ( ( A \ B ) \ C ) = ( ( A \ C ) \ ( B \ C ) ) ;
	qed prop 1 = step 19 ;
}

theorem r19_2z (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( ( A =/= (/) /\ A. x e. A ph ) -> E. x e. A ph ) ;
}

proof of r19_2z {
	step 1 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 2 : wff = thm exintr () |- ( A. x ( x e. A -> ph ) -> ( E. x x e. A -> E. x ( x e. A /\ ph ) ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A. x e. A ph -> ( E. x x e. A -> E. x ( x e. A /\ ph ) ) ) ;
	step 4 : wff = thm n0 () |- ( A =/= (/) <-> E. x x e. A ) ;
	step 5 : wff = def df-rex () |- ( E. x e. A ph <-> E. x ( x e. A /\ ph ) ) ;
	step 6 : wff = thm 3imtr4g (step 3, step 4, step 5) |- ( A. x e. A ph -> ( A =/= (/) -> E. x e. A ph ) ) ;
	step 7 : wff = thm impcom (step 6) |- ( ( A =/= (/) /\ A. x e. A ph ) -> E. x e. A ph ) ;
	qed prop 1 = step 7 ;
}

theorem r19_3rzv (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) ;
}

proof of r19_3rzv {
	step 1 : wff = thm n0 () |- ( A =/= (/) <-> E. x x e. A ) ;
	step 2 : wff = thm biimt () |- ( E. x x e. A -> ( ph <-> ( E. x x e. A -> ph ) ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A =/= (/) -> ( ph <-> ( E. x x e. A -> ph ) ) ) ;
	step 4 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 5 : wff = thm 19_23v () |- ( A. x ( x e. A -> ph ) <-> ( E. x x e. A -> ph ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( A. x e. A ph <-> ( E. x x e. A -> ph ) ) ;
	step 7 : wff = thm syl6bbr (step 3, step 6) |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem r19_9rzv (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) ;
}

proof of r19_9rzv {
	step 1 : wff = thm r19_3rzv () |- ( A =/= (/) -> ( -. ph <-> A. x e. A -. ph ) ) ;
	step 2 : wff = thm bicomd (step 1) |- ( A =/= (/) -> ( A. x e. A -. ph <-> -. ph ) ) ;
	step 3 : wff = thm con2bid (step 2) |- ( A =/= (/) -> ( ph <-> -. A. x e. A -. ph ) ) ;
	step 4 : wff = thm dfrex2 () |- ( E. x e. A ph <-> -. A. x e. A -. ph ) ;
	step 5 : wff = thm syl6bbr (step 3, step 4) |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) ;
	qed prop 1 = step 5 ;
}

theorem r19_28zv (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) ;
}

proof of r19_28zv {
	step 1 : wff = thm r19_3rzv () |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( A =/= (/) -> ( ( ph /\ A. x e. A ps ) <-> ( A. x e. A ph /\ A. x e. A ps ) ) ) ;
	step 3 : wff = thm r19_26 () |- ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. x e. A ps ) ) ;
	step 4 : wff = thm syl6rbbr (step 2, step 3) |- ( A =/= (/) -> ( A. x e. A ( ph /\ ps ) <-> ( ph /\ A. x e. A ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_37zv (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( E. x e. A ( ph -> ps ) <-> ( ph -> E. x e. A ps ) ) ) ;
}

proof of r19_37zv {
	step 1 : wff = thm r19_3rzv () |- ( A =/= (/) -> ( ph <-> A. x e. A ph ) ) ;
	step 2 : wff = thm imbi1d (step 1) |- ( A =/= (/) -> ( ( ph -> E. x e. A ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ) ;
	step 3 : wff = thm r19_35 () |- ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ;
	step 4 : wff = thm syl6rbbr (step 2, step 3) |- ( A =/= (/) -> ( E. x e. A ( ph -> ps ) <-> ( ph -> E. x e. A ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_45zv (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( E. x e. A ( ph \/ ps ) <-> ( ph \/ E. x e. A ps ) ) ) ;
}

proof of r19_45zv {
	step 1 : wff = thm r19_9rzv () |- ( A =/= (/) -> ( ph <-> E. x e. A ph ) ) ;
	step 2 : wff = thm orbi1d (step 1) |- ( A =/= (/) -> ( ( ph \/ E. x e. A ps ) <-> ( E. x e. A ph \/ E. x e. A ps ) ) ) ;
	step 3 : wff = thm r19_43 () |- ( E. x e. A ( ph \/ ps ) <-> ( E. x e. A ph \/ E. x e. A ps ) ) ;
	step 4 : wff = thm syl6rbbr (step 2, step 3) |- ( A =/= (/) -> ( E. x e. A ( ph \/ ps ) <-> ( ph \/ E. x e. A ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_27zv (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) ;
}

proof of r19_27zv {
	step 1 : wff = thm r19_3rzv () |- ( A =/= (/) -> ( ps <-> A. x e. A ps ) ) ;
	step 2 : wff = thm anbi2d (step 1) |- ( A =/= (/) -> ( ( A. x e. A ph /\ ps ) <-> ( A. x e. A ph /\ A. x e. A ps ) ) ) ;
	step 3 : wff = thm r19_26 () |- ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. x e. A ps ) ) ;
	step 4 : wff = thm syl6rbbr (step 2, step 3) |- ( A =/= (/) -> ( A. x e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem r19_36zv (ph : wff, ps : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> ps ) ) ) ;
}

proof of r19_36zv {
	step 1 : wff = thm r19_9rzv () |- ( A =/= (/) -> ( ps <-> E. x e. A ps ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( A =/= (/) -> ( ( A. x e. A ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ) ;
	step 3 : wff = thm r19_35 () |- ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> E. x e. A ps ) ) ;
	step 4 : wff = thm syl6rbbr (step 2, step 3) |- ( A =/= (/) -> ( E. x e. A ( ph -> ps ) <-> ( A. x e. A ph -> ps ) ) ) ;
	qed prop 1 = step 4 ;
}

theorem rzal (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A = (/) -> A. x e. A ph ) ;
}

proof of rzal {
	step 1 : wff = thm eleq2 () |- ( A = (/) -> ( x e. A <-> x e. (/) ) ) ;
	step 2 : wff = thm noel () |- -. x e. (/) ;
	step 3 : wff = thm pm2_21i (step 2) |- ( x e. (/) -> ph ) ;
	step 4 : wff = thm syl6bi (step 1, step 3) |- ( A = (/) -> ( x e. A -> ph ) ) ;
	step 5 : wff = thm r19_21aiv (step 4) |- ( A = (/) -> A. x e. A ph ) ;
	qed prop 1 = step 5 ;
}

theorem rexn0 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E. x e. A ph -> A =/= (/) ) ;
}

proof of rexn0 {
	step 1 : wff = thm ne0i () |- ( x e. A -> A =/= (/) ) ;
	step 2 : wff = thm a1d (step 1) |- ( x e. A -> ( ph -> A =/= (/) ) ) ;
	step 3 : wff = thm r19_23aiv (step 2) |- ( E. x e. A ph -> A =/= (/) ) ;
	qed prop 1 = step 3 ;
}

theorem ralidm (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A A. x e. A ph <-> A. x e. A ph ) ;
}

proof of ralidm {
	step 1 : wff = thm pm5_1 () |- ( ( A. x e. A A. x e. A ph /\ A. x e. A ph ) -> ( A. x e. A A. x e. A ph <-> A. x e. A ph ) ) ;
	step 2 : wff = thm rzal () |- ( A = (/) -> A. x e. A A. x e. A ph ) ;
	step 3 : wff = thm rzal () |- ( A = (/) -> A. x e. A ph ) ;
	step 4 : wff = thm sylanc (step 1, step 2, step 3) |- ( A = (/) -> ( A. x e. A A. x e. A ph <-> A. x e. A ph ) ) ;
	step 5 : wff = thm neq0 () |- ( -. A = (/) <-> E. x x e. A ) ;
	step 6 : wff = thm biimt () |- ( E. x x e. A -> ( A. x e. A ph <-> ( E. x x e. A -> A. x e. A ph ) ) ) ;
	step 7 : wff = def df-ral () |- ( A. x e. A A. x e. A ph <-> A. x ( x e. A -> A. x e. A ph ) ) ;
	step 8 : wff = thm hbra1 () |- ( A. x e. A ph -> A. x A. x e. A ph ) ;
	step 9 : wff = thm 19_23 (step 8) |- ( A. x ( x e. A -> A. x e. A ph ) <-> ( E. x x e. A -> A. x e. A ph ) ) ;
	step 10 : wff = thm bitri (step 7, step 9) |- ( A. x e. A A. x e. A ph <-> ( E. x x e. A -> A. x e. A ph ) ) ;
	step 11 : wff = thm syl6rbbr (step 6, step 10) |- ( E. x x e. A -> ( A. x e. A A. x e. A ph <-> A. x e. A ph ) ) ;
	step 12 : wff = thm sylbi (step 5, step 11) |- ( -. A = (/) -> ( A. x e. A A. x e. A ph <-> A. x e. A ph ) ) ;
	step 13 : wff = thm pm2_61i (step 4, step 12) |- ( A. x e. A A. x e. A ph <-> A. x e. A ph ) ;
	qed prop 1 = step 13 ;
}

theorem ral0 (ph : wff, x : set)  {
	prop 1 : wff = |- A. x e. (/) ph ;
}

proof of ral0 {
	step 1 : wff = thm noel () |- -. x e. (/) ;
	step 2 : wff = thm pm2_21i (step 1) |- ( x e. (/) -> ph ) ;
	step 3 : wff = thm rgen (step 2) |- A. x e. (/) ph ;
	qed prop 1 = step 3 ;
}

theorem ralf0 (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- -. ph ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A ph <-> A = (/) ) ;
}

proof of ralf0 {
	step 1 : wff = thm con3 () |- ( ( x e. A -> ph ) -> ( -. ph -> -. x e. A ) ) ;
	step 2 : wff = thm mpi (hyp 1, step 1) |- ( ( x e. A -> ph ) -> -. x e. A ) ;
	step 3 : wff = thm 19_20i (step 2) |- ( A. x ( x e. A -> ph ) -> A. x -. x e. A ) ;
	step 4 : wff = def df-ral () |- ( A. x e. A ph <-> A. x ( x e. A -> ph ) ) ;
	step 5 : wff = thm eq0 () |- ( A = (/) <-> A. x -. x e. A ) ;
	step 6 : wff = thm 3imtr4i (step 3, step 4, step 5) |- ( A. x e. A ph -> A = (/) ) ;
	step 7 : wff = thm rzal () |- ( A = (/) -> A. x e. A ph ) ;
	step 8 : wff = thm impbii (step 6, step 7) |- ( A. x e. A ph <-> A = (/) ) ;
	qed prop 1 = step 8 ;
}

theorem raaanv (ph : wff, ps : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- ( A. x e. A A. y e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. y e. A ps ) ) ;
}

proof of raaanv {
	step 1 : wff = thm pm5_1 () |- ( ( A. x e. A A. y e. A ( ph /\ ps ) /\ ( A. x e. A ph /\ A. y e. A ps ) ) -> ( A. x e. A A. y e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. y e. A ps ) ) ) ;
	step 2 : wff = thm rzal () |- ( A = (/) -> A. x e. A A. y e. A ( ph /\ ps ) ) ;
	step 3 : wff = thm rzal () |- ( A = (/) -> A. x e. A ph ) ;
	step 4 : wff = thm rzal () |- ( A = (/) -> A. y e. A ps ) ;
	step 5 : wff = thm jca (step 3, step 4) |- ( A = (/) -> ( A. x e. A ph /\ A. y e. A ps ) ) ;
	step 6 : wff = thm sylanc (step 1, step 2, step 5) |- ( A = (/) -> ( A. x e. A A. y e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. y e. A ps ) ) ) ;
	step 7 : wff = thm r19_28zv () |- ( A =/= (/) -> ( A. y e. A ( ph /\ ps ) <-> ( ph /\ A. y e. A ps ) ) ) ;
	step 8 : wff = thm ralbidv (step 7) |- ( A =/= (/) -> ( A. x e. A A. y e. A ( ph /\ ps ) <-> A. x e. A ( ph /\ A. y e. A ps ) ) ) ;
	step 9 : wff = thm r19_27zv () |- ( A =/= (/) -> ( A. x e. A ( ph /\ A. y e. A ps ) <-> ( A. x e. A ph /\ A. y e. A ps ) ) ) ;
	step 10 : wff = thm bitrd (step 8, step 9) |- ( A =/= (/) -> ( A. x e. A A. y e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. y e. A ps ) ) ) ;
	step 11 : wff = thm pm2_61ine (step 6, step 10) |- ( A. x e. A A. y e. A ( ph /\ ps ) <-> ( A. x e. A ph /\ A. y e. A ps ) ) ;
	qed prop 1 = step 11 ;
}

theorem sbsslem (x : set, y : set, w : set, A : class)  {
	prop 1 : wff = |- ( [ y / x ] x C_ A <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) ;
}

proof of sbsslem {
	var v : set;
	step 1 : wff = def df-ss () |- ( x C_ A <-> ( x i^i A ) = x ) ;
	step 2 : wff = def df-in () |- ( x i^i A ) = { v | ( v e. x /\ v e. A ) } ;
	step 3 : wff = thm eqeq1i (step 2) |- ( ( x i^i A ) = x <-> { v | ( v e. x /\ v e. A ) } = x ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( x C_ A <-> { v | ( v e. x /\ v e. A ) } = x ) ;
	step 5 : wff = thm sbbii (step 4) |- ( [ y / x ] x C_ A <-> [ y / x ] { v | ( v e. x /\ v e. A ) } = x ) ;
	step 6 : wff = thm dfcleq () |- ( { v | ( v e. x /\ v e. A ) } = x <-> A. w ( w e. { v | ( v e. x /\ v e. A ) } <-> w e. x ) ) ;
	step 7 : wff = def df-clab () |- ( w e. { v | ( v e. x /\ v e. A ) } <-> [ w / v ] ( v e. x /\ v e. A ) ) ;
	step 8 : wff = thm sban () |- ( [ w / v ] ( v e. x /\ v e. A ) <-> ( [ w / v ] v e. x /\ [ w / v ] v e. A ) ) ;
	step 9 : wff = thm elsb3 () |- ( [ w / v ] v e. x <-> w e. x ) ;
	step 10 : wff = thm clelsb3 () |- ( [ w / v ] v e. A <-> w e. A ) ;
	step 11 : wff = thm anbi12i (step 9, step 10) |- ( ( [ w / v ] v e. x /\ [ w / v ] v e. A ) <-> ( w e. x /\ w e. A ) ) ;
	step 12 : wff = thm 3bitri (step 7, step 8, step 11) |- ( w e. { v | ( v e. x /\ v e. A ) } <-> ( w e. x /\ w e. A ) ) ;
	step 13 : wff = thm bibi1i (step 12) |- ( ( w e. { v | ( v e. x /\ v e. A ) } <-> w e. x ) <-> ( ( w e. x /\ w e. A ) <-> w e. x ) ) ;
	step 14 : wff = thm albii (step 13) |- ( A. w ( w e. { v | ( v e. x /\ v e. A ) } <-> w e. x ) <-> A. w ( ( w e. x /\ w e. A ) <-> w e. x ) ) ;
	step 15 : wff = thm bitri (step 6, step 14) |- ( { v | ( v e. x /\ v e. A ) } = x <-> A. w ( ( w e. x /\ w e. A ) <-> w e. x ) ) ;
	step 16 : wff = thm sbbii (step 15) |- ( [ y / x ] { v | ( v e. x /\ v e. A ) } = x <-> [ y / x ] A. w ( ( w e. x /\ w e. A ) <-> w e. x ) ) ;
	step 17 : wff = thm sbal () |- ( [ y / x ] A. w ( ( w e. x /\ w e. A ) <-> w e. x ) <-> A. w [ y / x ] ( ( w e. x /\ w e. A ) <-> w e. x ) ) ;
	step 18 : wff = thm sbbi () |- ( [ y / x ] ( ( w e. x /\ w e. A ) <-> w e. x ) <-> ( [ y / x ] ( w e. x /\ w e. A ) <-> [ y / x ] w e. x ) ) ;
	step 19 : wff = thm sban () |- ( [ y / x ] ( w e. x /\ w e. A ) <-> ( [ y / x ] w e. x /\ [ y / x ] w e. A ) ) ;
	step 20 : wff = thm elsb4 () |- ( [ y / x ] w e. x <-> w e. y ) ;
	step 21 : wff = axm ax-17 () |- ( w e. A -> A. x w e. A ) ;
	step 22 : wff = thm sbf (step 21) |- ( [ y / x ] w e. A <-> w e. A ) ;
	step 23 : wff = thm anbi12i (step 20, step 22) |- ( ( [ y / x ] w e. x /\ [ y / x ] w e. A ) <-> ( w e. y /\ w e. A ) ) ;
	step 24 : wff = thm bitri (step 19, step 23) |- ( [ y / x ] ( w e. x /\ w e. A ) <-> ( w e. y /\ w e. A ) ) ;
	step 25 : wff = thm elsb4 () |- ( [ y / x ] w e. x <-> w e. y ) ;
	step 26 : wff = thm bibi12i (step 24, step 25) |- ( ( [ y / x ] ( w e. x /\ w e. A ) <-> [ y / x ] w e. x ) <-> ( ( w e. y /\ w e. A ) <-> w e. y ) ) ;
	step 27 : wff = thm bitri (step 18, step 26) |- ( [ y / x ] ( ( w e. x /\ w e. A ) <-> w e. x ) <-> ( ( w e. y /\ w e. A ) <-> w e. y ) ) ;
	step 28 : wff = thm albii (step 27) |- ( A. w [ y / x ] ( ( w e. x /\ w e. A ) <-> w e. x ) <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) ;
	step 29 : wff = thm bitri (step 17, step 28) |- ( [ y / x ] A. w ( ( w e. x /\ w e. A ) <-> w e. x ) <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) ;
	step 30 : wff = thm 3bitri (step 5, step 16, step 29) |- ( [ y / x ] x C_ A <-> A. w ( ( w e. y /\ w e. A ) <-> w e. y ) ) ;
	qed prop 1 = step 30 ;
}

theorem sbss (x : set, y : set, A : class)  {
	prop 1 : wff = |- ( [ y / x ] x C_ A <-> y C_ A ) ;
}

proof of sbss {
	var v : set;
	step 1 : wff = thm sbsslem () |- ( [ y / x ] x C_ A <-> A. v ( ( v e. y /\ v e. A ) <-> v e. y ) ) ;
	step 2 : wff = thm sbsslem () |- ( [ y / y ] y C_ A <-> A. v ( ( v e. y /\ v e. A ) <-> v e. y ) ) ;
	step 3 : wff = thm sbid () |- ( [ y / y ] y C_ A <-> y C_ A ) ;
	step 4 : wff = thm 3bitr2i (step 1, step 2, step 3) |- ( [ y / x ] x C_ A <-> y C_ A ) ;
	qed prop 1 = step 4 ;
}

constant {
	symbol if ;
}

constant {
	symbol , ;
}

rule cif (ph : wff, A : class, B : class) {
	term : class = # if ( ph , A , B ) ;
}

definition df-if (ph : wff, x : set, A : class, B : class)  {
	defiendum : class = # if ( ph , A , B ) ;
	definiens : class = # { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem dfif2 (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- if ( ph , A , B ) = { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } ;
}

proof of dfif2 {
	step 1 : wff = def df-if () |- if ( ph , A , B ) = { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } ;
	step 2 : wff = def df-or () |- ( ( ( x e. B /\ -. ph ) \/ ( x e. A /\ ph ) ) <-> ( -. ( x e. B /\ -. ph ) -> ( x e. A /\ ph ) ) ) ;
	step 3 : wff = thm orcom () |- ( ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) <-> ( ( x e. B /\ -. ph ) \/ ( x e. A /\ ph ) ) ) ;
	step 4 : wff = thm iman () |- ( ( x e. B -> ph ) <-> -. ( x e. B /\ -. ph ) ) ;
	step 5 : wff = thm imbi1i (step 4) |- ( ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) <-> ( -. ( x e. B /\ -. ph ) -> ( x e. A /\ ph ) ) ) ;
	step 6 : wff = thm 3bitr4i (step 2, step 3, step 5) |- ( ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) <-> ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) ) ;
	step 7 : wff = thm abbii (step 6) |- { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } = { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } ;
	step 8 : wff = thm eqtri (step 1, step 7) |- if ( ph , A , B ) = { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } ;
	qed prop 1 = step 8 ;
}

theorem ifeq1 (ph : wff, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) ;
}

proof of ifeq1 {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( A = B -> ( ( x e. A /\ ph ) <-> ( x e. B /\ ph ) ) ) ;
	step 3 : wff = thm orbi1d (step 2) |- ( A = B -> ( ( ( x e. A /\ ph ) \/ ( x e. C /\ -. ph ) ) <-> ( ( x e. B /\ ph ) \/ ( x e. C /\ -. ph ) ) ) ) ;
	step 4 : wff = thm abbidv (step 3) |- ( A = B -> { x | ( ( x e. A /\ ph ) \/ ( x e. C /\ -. ph ) ) } = { x | ( ( x e. B /\ ph ) \/ ( x e. C /\ -. ph ) ) } ) ;
	step 5 : wff = def df-if () |- if ( ph , A , C ) = { x | ( ( x e. A /\ ph ) \/ ( x e. C /\ -. ph ) ) } ;
	step 6 : wff = def df-if () |- if ( ph , B , C ) = { x | ( ( x e. B /\ ph ) \/ ( x e. C /\ -. ph ) ) } ;
	step 7 : wff = thm 3eqtr4g (step 4, step 5, step 6) |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) ;
	qed prop 1 = step 7 ;
}

theorem ifeq2 (ph : wff, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) ;
}

proof of ifeq2 {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( x e. A <-> x e. B ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( A = B -> ( ( x e. A /\ -. ph ) <-> ( x e. B /\ -. ph ) ) ) ;
	step 3 : wff = thm orbi2d (step 2) |- ( A = B -> ( ( ( x e. C /\ ph ) \/ ( x e. A /\ -. ph ) ) <-> ( ( x e. C /\ ph ) \/ ( x e. B /\ -. ph ) ) ) ) ;
	step 4 : wff = thm abbidv (step 3) |- ( A = B -> { x | ( ( x e. C /\ ph ) \/ ( x e. A /\ -. ph ) ) } = { x | ( ( x e. C /\ ph ) \/ ( x e. B /\ -. ph ) ) } ) ;
	step 5 : wff = def df-if () |- if ( ph , C , A ) = { x | ( ( x e. C /\ ph ) \/ ( x e. A /\ -. ph ) ) } ;
	step 6 : wff = def df-if () |- if ( ph , C , B ) = { x | ( ( x e. C /\ ph ) \/ ( x e. B /\ -. ph ) ) } ;
	step 7 : wff = thm 3eqtr4g (step 4, step 5, step 6) |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) ;
	qed prop 1 = step 7 ;
}

theorem iftrue (ph : wff, A : class, B : class)  {
	prop 1 : wff = |- ( ph -> if ( ph , A , B ) = A ) ;
}

proof of iftrue {
	var x : set;
	step 1 : wff = thm dedlema () |- ( ph -> ( x e. A <-> ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) ) ) ;
	step 2 : wff = thm abbi2dv (step 1) |- ( ph -> A = { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } ) ;
	step 3 : wff = def df-if () |- if ( ph , A , B ) = { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } ;
	step 4 : wff = thm syl6reqr (step 2, step 3) |- ( ph -> if ( ph , A , B ) = A ) ;
	qed prop 1 = step 4 ;
}

theorem iffalse (ph : wff, A : class, B : class)  {
	prop 1 : wff = |- ( -. ph -> if ( ph , A , B ) = B ) ;
}

proof of iffalse {
	var x : set;
	step 1 : wff = thm dedlemb () |- ( -. ph -> ( x e. B <-> ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) ) ) ;
	step 2 : wff = thm abbi2dv (step 1) |- ( -. ph -> B = { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } ) ;
	step 3 : wff = def df-if () |- if ( ph , A , B ) = { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } ;
	step 4 : wff = thm syl6reqr (step 2, step 3) |- ( -. ph -> if ( ph , A , B ) = B ) ;
	qed prop 1 = step 4 ;
}

theorem ifeq12 (ph : wff, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> if ( ph , A , C ) = if ( ph , B , D ) ) ;
}

proof of ifeq12 {
	step 1 : wff = thm ifeq1 () |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) ;
	step 2 : wff = thm ifeq2 () |- ( C = D -> if ( ph , B , C ) = if ( ph , B , D ) ) ;
	step 3 : wff = thm sylan9eq (step 1, step 2) |- ( ( A = B /\ C = D ) -> if ( ph , A , C ) = if ( ph , B , D ) ) ;
	qed prop 1 = step 3 ;
}

theorem ifeq1d (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) ;
}

proof of ifeq1d {
	step 1 : wff = thm ifeq1 () |- ( A = B -> if ( ps , A , C ) = if ( ps , B , C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) ;
	qed prop 1 = step 2 ;
}

theorem ifeq2d (ph : wff, ps : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) ;
}

proof of ifeq2d {
	step 1 : wff = thm ifeq2 () |- ( A = B -> if ( ps , C , A ) = if ( ps , C , B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) ;
	qed prop 1 = step 2 ;
}

theorem ifbi (ph : wff, ps : wff, A : class, B : class)  {
	prop 1 : wff = |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) ;
}

proof of ifbi {
	step 1 : wff = thm dfbi3 () |- ( ( ph <-> ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) ) ;
	step 2 : wff = thm iftrue () |- ( ph -> if ( ph , A , B ) = A ) ;
	step 3 : wff = thm iftrue () |- ( ps -> if ( ps , A , B ) = A ) ;
	step 4 : wff = thm eqcomd (step 3) |- ( ps -> A = if ( ps , A , B ) ) ;
	step 5 : wff = thm sylan9eq (step 2, step 4) |- ( ( ph /\ ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) ;
	step 6 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , B ) = B ) ;
	step 7 : wff = thm iffalse () |- ( -. ps -> if ( ps , A , B ) = B ) ;
	step 8 : wff = thm eqcomd (step 7) |- ( -. ps -> B = if ( ps , A , B ) ) ;
	step 9 : wff = thm sylan9eq (step 6, step 8) |- ( ( -. ph /\ -. ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) ;
	step 10 : wff = thm jaoi (step 5, step 9) |- ( ( ( ph /\ ps ) \/ ( -. ph /\ -. ps ) ) -> if ( ph , A , B ) = if ( ps , A , B ) ) ;
	step 11 : wff = thm sylbi (step 1, step 10) |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) ;
	qed prop 1 = step 11 ;
}

theorem ifbid (ph : wff, ps : wff, ch : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ( ps <-> ch ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) ;
}

proof of ifbid {
	step 1 : wff = thm ifbi () |- ( ( ps <-> ch ) -> if ( ps , A , B ) = if ( ch , A , B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) ;
	qed prop 1 = step 2 ;
}

theorem hbif (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 3 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. if ( ph , A , B ) -> A. x y e. if ( ph , A , B ) ) ;
}

proof of hbif {
	var z : set;
	step 1 : wff = def df-if () |- if ( ph , A , B ) = { z | ( ( z e. A /\ ph ) \/ ( z e. B /\ -. ph ) ) } ;
	step 2 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 3 : wff = thm hbel (step 2, hyp 2) |- ( z e. A -> A. x z e. A ) ;
	step 4 : wff = thm hban (step 3, hyp 1) |- ( ( z e. A /\ ph ) -> A. x ( z e. A /\ ph ) ) ;
	step 5 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 6 : wff = thm hbel (step 5, hyp 3) |- ( z e. B -> A. x z e. B ) ;
	step 7 : wff = thm hbn (hyp 1) |- ( -. ph -> A. x -. ph ) ;
	step 8 : wff = thm hban (step 6, step 7) |- ( ( z e. B /\ -. ph ) -> A. x ( z e. B /\ -. ph ) ) ;
	step 9 : wff = thm hbor (step 4, step 8) |- ( ( ( z e. A /\ ph ) \/ ( z e. B /\ -. ph ) ) -> A. x ( ( z e. A /\ ph ) \/ ( z e. B /\ -. ph ) ) ) ;
	step 10 : wff = thm hbab (step 9) |- ( y e. { z | ( ( z e. A /\ ph ) \/ ( z e. B /\ -. ph ) ) } -> A. x y e. { z | ( ( z e. A /\ ph ) \/ ( z e. B /\ -. ph ) ) } ) ;
	step 11 : wff = thm hbxfr (step 1, step 10) |- ( y e. if ( ph , A , B ) -> A. x y e. if ( ph , A , B ) ) ;
	qed prop 1 = step 11 ;
}

theorem elimif (ph : wff, ps : wff, ch : wff, th : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) ;
}

proof of elimif {
	step 1 : wff = thm exmid () |- ( ph \/ -. ph ) ;
	step 2 : wff = thm biantrur (step 1) |- ( ps <-> ( ( ph \/ -. ph ) /\ ps ) ) ;
	step 3 : wff = thm andir () |- ( ( ( ph \/ -. ph ) /\ ps ) <-> ( ( ph /\ ps ) \/ ( -. ph /\ ps ) ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , A , B ) = A ) ;
	step 5 : wff = thm syl (step 4, hyp 1) |- ( ph -> ( ps <-> ch ) ) ;
	step 6 : wff = thm pm5_32i (step 5) |- ( ( ph /\ ps ) <-> ( ph /\ ch ) ) ;
	step 7 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , B ) = B ) ;
	step 8 : wff = thm syl (step 7, hyp 2) |- ( -. ph -> ( ps <-> th ) ) ;
	step 9 : wff = thm pm5_32i (step 8) |- ( ( -. ph /\ ps ) <-> ( -. ph /\ th ) ) ;
	step 10 : wff = thm orbi12i (step 6, step 9) |- ( ( ( ph /\ ps ) \/ ( -. ph /\ ps ) ) <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) ;
	step 11 : wff = thm 3bitri (step 2, step 3, step 10) |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) ;
	qed prop 1 = step 11 ;
}

theorem ifboth (ph : wff, ps : wff, ch : wff, th : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ch ) -> th ) ;
}

proof of ifboth {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , B ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , B ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ps <-> th ) ) ;
	step 4 : wff = thm biimpa (step 3) |- ( ( ph /\ ps ) -> th ) ;
	step 5 : wff = thm adantrr (step 4) |- ( ( ph /\ ( ps /\ ch ) ) -> th ) ;
	step 6 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , B ) = B ) ;
	step 7 : wff = thm eqcomd (step 6) |- ( -. ph -> B = if ( ph , A , B ) ) ;
	step 8 : wff = thm bicomd (hyp 2) |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( -. ph -> ( th <-> ch ) ) ;
	step 10 : wff = thm biimpar (step 9) |- ( ( -. ph /\ ch ) -> th ) ;
	step 11 : wff = thm adantrl (step 10) |- ( ( -. ph /\ ( ps /\ ch ) ) -> th ) ;
	step 12 : wff = thm pm2_61ian (step 5, step 11) |- ( ( ps /\ ch ) -> th ) ;
	qed prop 1 = step 12 ;
}

theorem ifid (ph : wff, A : class)  {
	prop 1 : wff = |- if ( ph , A , A ) = A ;
}

proof of ifid {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , A ) = A ) ;
	step 2 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , A ) = A ) ;
	step 3 : wff = thm pm2_61i (step 1, step 2) |- if ( ph , A , A ) = A ;
	qed prop 1 = step 3 ;
}

theorem eqif (ph : wff, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = if ( ph , B , C ) <-> ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) ;
}

proof of eqif {
	step 1 : wff = thm eqeq2 () |- ( if ( ph , B , C ) = B -> ( A = if ( ph , B , C ) <-> A = B ) ) ;
	step 2 : wff = thm eqeq2 () |- ( if ( ph , B , C ) = C -> ( A = if ( ph , B , C ) <-> A = C ) ) ;
	step 3 : wff = thm elimif (step 1, step 2) |- ( A = if ( ph , B , C ) <-> ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem elif (ph : wff, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. if ( ph , B , C ) <-> ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) ;
}

proof of elif {
	step 1 : wff = thm eleq2 () |- ( if ( ph , B , C ) = B -> ( A e. if ( ph , B , C ) <-> A e. B ) ) ;
	step 2 : wff = thm eleq2 () |- ( if ( ph , B , C ) = C -> ( A e. if ( ph , B , C ) <-> A e. C ) ) ;
	step 3 : wff = thm elimif (step 1, step 2) |- ( A e. if ( ph , B , C ) <-> ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ifel (ph : wff, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( if ( ph , A , B ) e. C <-> ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) ;
}

proof of ifel {
	step 1 : wff = thm eleq1 () |- ( if ( ph , A , B ) = A -> ( if ( ph , A , B ) e. C <-> A e. C ) ) ;
	step 2 : wff = thm eleq1 () |- ( if ( ph , A , B ) = B -> ( if ( ph , A , B ) e. C <-> B e. C ) ) ;
	step 3 : wff = thm elimif (step 1, step 2) |- ( if ( ph , A , B ) e. C <-> ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) ;
	qed prop 1 = step 3 ;
}

theorem ifcl (ph : wff, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) ;
}

proof of ifcl {
	step 1 : wff = thm eleq1 () |- ( A = if ( ph , A , B ) -> ( A e. C <-> if ( ph , A , B ) e. C ) ) ;
	step 2 : wff = thm eleq1 () |- ( B = if ( ph , A , B ) -> ( B e. C <-> if ( ph , A , B ) e. C ) ) ;
	step 3 : wff = thm ifboth (step 1, step 2) |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) ;
	qed prop 1 = step 3 ;
}

theorem ifor (ph : wff, A : class, B : class)  {
	prop 1 : wff = |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) ;
}

proof of ifor {
	step 1 : wff = thm eqid () |- if ( ph , A , B ) = if ( ph , A , B ) ;
	step 2 : wff = thm eqif () |- ( if ( ph , A , B ) = if ( ph , A , B ) <-> ( ( ph /\ if ( ph , A , B ) = A ) \/ ( -. ph /\ if ( ph , A , B ) = B ) ) ) ;
	step 3 : wff = thm mpbi (step 1, step 2) |- ( ( ph /\ if ( ph , A , B ) = A ) \/ ( -. ph /\ if ( ph , A , B ) = B ) ) ;
	step 4 : wff = thm pm3_27 () |- ( ( ph /\ if ( ph , A , B ) = A ) -> if ( ph , A , B ) = A ) ;
	step 5 : wff = thm pm3_27 () |- ( ( -. ph /\ if ( ph , A , B ) = B ) -> if ( ph , A , B ) = B ) ;
	step 6 : wff = thm orim12i (step 4, step 5) |- ( ( ( ph /\ if ( ph , A , B ) = A ) \/ ( -. ph /\ if ( ph , A , B ) = B ) ) -> ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) ) ;
	step 7 : wff = axm ax-mp (step 3, step 6) |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) ;
	qed prop 1 = step 7 ;
}

theorem ifswap (ph : wff, A : class, B : class)  {
	prop 1 : wff = |- if ( -. ph , A , B ) = if ( ph , B , A ) ;
}

proof of ifswap {
	step 1 : wff = thm notnot1 () |- ( ph -> -. -. ph ) ;
	step 2 : wff = thm iffalse () |- ( -. -. ph -> if ( -. ph , A , B ) = B ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> if ( -. ph , A , B ) = B ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , A ) = B ) ;
	step 5 : wff = thm eqtr4d (step 3, step 4) |- ( ph -> if ( -. ph , A , B ) = if ( ph , B , A ) ) ;
	step 6 : wff = thm iftrue () |- ( -. ph -> if ( -. ph , A , B ) = A ) ;
	step 7 : wff = thm iffalse () |- ( -. ph -> if ( ph , B , A ) = A ) ;
	step 8 : wff = thm eqtr4d (step 6, step 7) |- ( -. ph -> if ( -. ph , A , B ) = if ( ph , B , A ) ) ;
	step 9 : wff = thm pm2_61i (step 5, step 8) |- if ( -. ph , A , B ) = if ( ph , B , A ) ;
	qed prop 1 = step 9 ;
}

theorem dedth (ph : wff, ps : wff, ch : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , B ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , B ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ps <-> ch ) ) ;
	step 4 : wff = thm mpbiri (hyp 2, step 3) |- ( ph -> ps ) ;
	qed prop 1 = step 4 ;
}

theorem dedth2vOLD (ph : wff, ps : wff, ch : wff, th : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- th ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth2vOLD {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , C ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , C ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ps <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , D ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , D ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm bitrd (step 3, step 6) |- ( ph -> ( ps <-> th ) ) ;
	step 8 : wff = thm mpbiri (hyp 3, step 7) |- ( ph -> ps ) ;
	qed prop 1 = step 8 ;
}

theorem dedth3vOLD (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ta ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth3vOLD {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , D ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , D ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ps <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , R ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , R ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm iftrue () |- ( ph -> if ( ph , C , S ) = C ) ;
	step 8 : wff = thm eqcomd (step 7) |- ( ph -> C = if ( ph , C , S ) ) ;
	step 9 : wff = thm syl (step 8, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	step 10 : wff = thm 3bitrd (step 3, step 6, step 9) |- ( ph -> ( ps <-> ta ) ) ;
	step 11 : wff = thm mpbiri (hyp 4, step 10) |- ( ph -> ps ) ;
	qed prop 1 = step 11 ;
}

theorem dedth4vOLD (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, T : class, U : class, et : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) ;
	hyp 5 : wff = |- et ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth4vOLD {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , R ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , R ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ps <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , S ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , S ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm bitrd (step 3, step 6) |- ( ph -> ( ps <-> th ) ) ;
	step 8 : wff = thm iftrue () |- ( ph -> if ( ph , C , T ) = C ) ;
	step 9 : wff = thm eqcomd (step 8) |- ( ph -> C = if ( ph , C , T ) ) ;
	step 10 : wff = thm syl (step 9, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	step 11 : wff = thm iftrue () |- ( ph -> if ( ph , D , U ) = D ) ;
	step 12 : wff = thm eqcomd (step 11) |- ( ph -> D = if ( ph , D , U ) ) ;
	step 13 : wff = thm syl (step 12, hyp 4) |- ( ph -> ( ta <-> et ) ) ;
	step 14 : wff = thm 3bitrd (step 7, step 10, step 13) |- ( ph -> ( ps <-> et ) ) ;
	step 15 : wff = thm mpbiri (hyp 5, step 14) |- ( ph -> ps ) ;
	qed prop 1 = step 15 ;
}

theorem dedth2h (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) ;
	hyp 2 : wff = |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) ;
	hyp 3 : wff = |- ta ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ch ) ;
}

proof of dedth2h {
	step 1 : wff = thm imbi2d (hyp 1) |- ( A = if ( ph , A , C ) -> ( ( ps -> ch ) <-> ( ps -> th ) ) ) ;
	step 2 : wff = thm dedth (hyp 2, hyp 3) |- ( ps -> th ) ;
	step 3 : wff = thm dedth (step 1, step 2) |- ( ph -> ( ps -> ch ) ) ;
	step 4 : wff = thm imp (step 3) |- ( ( ph /\ ps ) -> ch ) ;
	qed prop 1 = step 4 ;
}

theorem dedth3h (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, et : wff, ze : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) ;
	hyp 2 : wff = |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) ;
	hyp 3 : wff = |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) ;
	hyp 4 : wff = |- ze ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps /\ ch ) -> th ) ;
}

proof of dedth3h {
	step 1 : wff = thm imbi2d (hyp 1) |- ( A = if ( ph , A , D ) -> ( ( ( ps /\ ch ) -> th ) <-> ( ( ps /\ ch ) -> ta ) ) ) ;
	step 2 : wff = thm dedth2h (hyp 2, hyp 3, hyp 4) |- ( ( ps /\ ch ) -> ta ) ;
	step 3 : wff = thm dedth (step 1, step 2) |- ( ph -> ( ( ps /\ ch ) -> th ) ) ;
	step 4 : wff = thm 3impib (step 3) |- ( ( ph /\ ps /\ ch ) -> th ) ;
	qed prop 1 = step 4 ;
}

theorem dedth4h (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, et : wff, ze : wff, si : wff, rh : wff, F : class, G : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) ;
	hyp 2 : wff = |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) ;
	hyp 3 : wff = |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) ;
	hyp 4 : wff = |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) ;
	hyp 5 : wff = |- rh ;
	-----------------------
	prop 1 : wff = |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
}

proof of dedth4h {
	step 1 : wff = thm imbi2d (hyp 1) |- ( A = if ( ph , A , R ) -> ( ( ( ch /\ th ) -> ta ) <-> ( ( ch /\ th ) -> et ) ) ) ;
	step 2 : wff = thm imbi2d (hyp 2) |- ( B = if ( ps , B , S ) -> ( ( ( ch /\ th ) -> et ) <-> ( ( ch /\ th ) -> ze ) ) ) ;
	step 3 : wff = thm dedth2h (hyp 3, hyp 4, hyp 5) |- ( ( ch /\ th ) -> ze ) ;
	step 4 : wff = thm dedth2h (step 1, step 2, step 3) |- ( ( ph /\ ps ) -> ( ( ch /\ th ) -> ta ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) ;
	qed prop 1 = step 5 ;
}

theorem dedth2v (ph : wff, ps : wff, ch : wff, th : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- th ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth2v {
	step 1 : wff = thm dedth2h (hyp 1, hyp 2, hyp 3) |- ( ( ph /\ ph ) -> ps ) ;
	step 2 : wff = thm anidms (step 1) |- ( ph -> ps ) ;
	qed prop 1 = step 2 ;
}

theorem dedth3v (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ta ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth3v {
	step 1 : wff = thm dedth3h (hyp 1, hyp 2, hyp 3, hyp 4) |- ( ( ph /\ ph /\ ph ) -> ps ) ;
	step 2 : wff = thm 3anidm12 (step 1) |- ( ( ph /\ ph ) -> ps ) ;
	step 3 : wff = thm anidms (step 2) |- ( ph -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem dedth4v (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, T : class, U : class, et : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) ;
	hyp 5 : wff = |- et ;
	-----------------------
	prop 1 : wff = |- ( ph -> ps ) ;
}

proof of dedth4v {
	step 1 : wff = thm dedth4h (hyp 1, hyp 2, hyp 3, hyp 4, hyp 5) |- ( ( ( ph /\ ph ) /\ ( ph /\ ph ) ) -> ps ) ;
	step 2 : wff = thm anidms (step 1) |- ( ( ph /\ ph ) -> ps ) ;
	step 3 : wff = thm anidms (step 2) |- ( ph -> ps ) ;
	qed prop 1 = step 3 ;
}

theorem elimhyp (ph : wff, ps : wff, ch : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) ;
	hyp 3 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of elimhyp {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , B ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , B ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ph <-> ps ) ) ;
	step 4 : wff = thm ibi (step 3) |- ( ph -> ps ) ;
	step 5 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , B ) = B ) ;
	step 6 : wff = thm eqcomd (step 5) |- ( -. ph -> B = if ( ph , A , B ) ) ;
	step 7 : wff = thm syl (step 6, hyp 2) |- ( -. ph -> ( ch <-> ps ) ) ;
	step 8 : wff = thm mpbii (hyp 3, step 7) |- ( -. ph -> ps ) ;
	step 9 : wff = thm pm2_61i (step 4, step 8) |- ps ;
	qed prop 1 = step 9 ;
}

theorem elimhyp2v (ph : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, et : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) ;
	hyp 4 : wff = |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) ;
	hyp 5 : wff = |- ta ;
	-----------------------
	prop 1 : wff = |- th ;
}

proof of elimhyp2v {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , C ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , C ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ph <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , D ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , D ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm bitrd (step 3, step 6) |- ( ph -> ( ph <-> th ) ) ;
	step 8 : wff = thm ibi (step 7) |- ( ph -> th ) ;
	step 9 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , C ) = C ) ;
	step 10 : wff = thm eqcomd (step 9) |- ( -. ph -> C = if ( ph , A , C ) ) ;
	step 11 : wff = thm syl (step 10, hyp 3) |- ( -. ph -> ( ta <-> et ) ) ;
	step 12 : wff = thm iffalse () |- ( -. ph -> if ( ph , B , D ) = D ) ;
	step 13 : wff = thm eqcomd (step 12) |- ( -. ph -> D = if ( ph , B , D ) ) ;
	step 14 : wff = thm syl (step 13, hyp 4) |- ( -. ph -> ( et <-> th ) ) ;
	step 15 : wff = thm bitrd (step 11, step 14) |- ( -. ph -> ( ta <-> th ) ) ;
	step 16 : wff = thm mpbii (hyp 5, step 15) |- ( -. ph -> th ) ;
	step 17 : wff = thm pm2_61i (step 8, step 16) |- th ;
	qed prop 1 = step 17 ;
}

theorem elimhyp3v (ph : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, et : wff, ze : wff, si : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) ;
	hyp 5 : wff = |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) ;
	hyp 6 : wff = |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) ;
	hyp 7 : wff = |- et ;
	-----------------------
	prop 1 : wff = |- ta ;
}

proof of elimhyp3v {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , D ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , D ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ph <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , R ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , R ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm iftrue () |- ( ph -> if ( ph , C , S ) = C ) ;
	step 8 : wff = thm eqcomd (step 7) |- ( ph -> C = if ( ph , C , S ) ) ;
	step 9 : wff = thm syl (step 8, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	step 10 : wff = thm 3bitrd (step 3, step 6, step 9) |- ( ph -> ( ph <-> ta ) ) ;
	step 11 : wff = thm ibi (step 10) |- ( ph -> ta ) ;
	step 12 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , D ) = D ) ;
	step 13 : wff = thm eqcomd (step 12) |- ( -. ph -> D = if ( ph , A , D ) ) ;
	step 14 : wff = thm syl (step 13, hyp 4) |- ( -. ph -> ( et <-> ze ) ) ;
	step 15 : wff = thm iffalse () |- ( -. ph -> if ( ph , B , R ) = R ) ;
	step 16 : wff = thm eqcomd (step 15) |- ( -. ph -> R = if ( ph , B , R ) ) ;
	step 17 : wff = thm syl (step 16, hyp 5) |- ( -. ph -> ( ze <-> si ) ) ;
	step 18 : wff = thm iffalse () |- ( -. ph -> if ( ph , C , S ) = S ) ;
	step 19 : wff = thm eqcomd (step 18) |- ( -. ph -> S = if ( ph , C , S ) ) ;
	step 20 : wff = thm syl (step 19, hyp 6) |- ( -. ph -> ( si <-> ta ) ) ;
	step 21 : wff = thm 3bitrd (step 14, step 17, step 20) |- ( -. ph -> ( et <-> ta ) ) ;
	step 22 : wff = thm mpbii (hyp 7, step 21) |- ( -. ph -> ta ) ;
	step 23 : wff = thm pm2_61i (step 11, step 22) |- ta ;
	qed prop 1 = step 23 ;
}

theorem elimhyp4v (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, et : wff, ze : wff, si : wff, rh : wff, F : class, G : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) ;
	hyp 5 : wff = |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) ;
	hyp 6 : wff = |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) ;
	hyp 7 : wff = |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) ;
	hyp 8 : wff = |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) ;
	hyp 9 : wff = |- et ;
	-----------------------
	prop 1 : wff = |- ps ;
}

proof of elimhyp4v {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , D ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , D ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ph <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , R ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , R ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm bitrd (step 3, step 6) |- ( ph -> ( ph <-> th ) ) ;
	step 8 : wff = thm iftrue () |- ( ph -> if ( ph , C , S ) = C ) ;
	step 9 : wff = thm eqcomd (step 8) |- ( ph -> C = if ( ph , C , S ) ) ;
	step 10 : wff = thm syl (step 9, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	step 11 : wff = thm iftrue () |- ( ph -> if ( ph , F , G ) = F ) ;
	step 12 : wff = thm eqcomd (step 11) |- ( ph -> F = if ( ph , F , G ) ) ;
	step 13 : wff = thm syl (step 12, hyp 4) |- ( ph -> ( ta <-> ps ) ) ;
	step 14 : wff = thm 3bitrd (step 7, step 10, step 13) |- ( ph -> ( ph <-> ps ) ) ;
	step 15 : wff = thm ibi (step 14) |- ( ph -> ps ) ;
	step 16 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , D ) = D ) ;
	step 17 : wff = thm eqcomd (step 16) |- ( -. ph -> D = if ( ph , A , D ) ) ;
	step 18 : wff = thm syl (step 17, hyp 5) |- ( -. ph -> ( et <-> ze ) ) ;
	step 19 : wff = thm iffalse () |- ( -. ph -> if ( ph , B , R ) = R ) ;
	step 20 : wff = thm eqcomd (step 19) |- ( -. ph -> R = if ( ph , B , R ) ) ;
	step 21 : wff = thm syl (step 20, hyp 6) |- ( -. ph -> ( ze <-> si ) ) ;
	step 22 : wff = thm bitrd (step 18, step 21) |- ( -. ph -> ( et <-> si ) ) ;
	step 23 : wff = thm iffalse () |- ( -. ph -> if ( ph , C , S ) = S ) ;
	step 24 : wff = thm eqcomd (step 23) |- ( -. ph -> S = if ( ph , C , S ) ) ;
	step 25 : wff = thm syl (step 24, hyp 7) |- ( -. ph -> ( si <-> rh ) ) ;
	step 26 : wff = thm iffalse () |- ( -. ph -> if ( ph , F , G ) = G ) ;
	step 27 : wff = thm eqcomd (step 26) |- ( -. ph -> G = if ( ph , F , G ) ) ;
	step 28 : wff = thm syl (step 27, hyp 8) |- ( -. ph -> ( rh <-> ps ) ) ;
	step 29 : wff = thm 3bitrd (step 22, step 25, step 28) |- ( -. ph -> ( et <-> ps ) ) ;
	step 30 : wff = thm mpbii (hyp 9, step 29) |- ( -. ph -> ps ) ;
	step 31 : wff = thm pm2_61i (step 15, step 30) |- ps ;
	qed prop 1 = step 31 ;
}

theorem elimel (A : class, B : class, C : class)  {
	hyp 1 : wff = |- B e. C ;
	-----------------------
	prop 1 : wff = |- if ( A e. C , A , B ) e. C ;
}

proof of elimel {
	step 1 : wff = thm eleq1 () |- ( A = if ( A e. C , A , B ) -> ( A e. C <-> if ( A e. C , A , B ) e. C ) ) ;
	step 2 : wff = thm eleq1 () |- ( B = if ( A e. C , A , B ) -> ( B e. C <-> if ( A e. C , A , B ) e. C ) ) ;
	step 3 : wff = thm elimhyp (step 1, step 2, hyp 1) |- if ( A e. C , A , B ) e. C ;
	qed prop 1 = step 3 ;
}

theorem elimdhyp (ph : wff, ps : wff, ch : wff, th : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> ps ) ;
	hyp 2 : wff = |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) ;
	hyp 3 : wff = |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) ;
	hyp 4 : wff = |- th ;
	-----------------------
	prop 1 : wff = |- ch ;
}

proof of elimdhyp {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , B ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , B ) ) ;
	step 3 : wff = thm syl (step 2, hyp 2) |- ( ph -> ( ps <-> ch ) ) ;
	step 4 : wff = thm mpbid (hyp 1, step 3) |- ( ph -> ch ) ;
	step 5 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , B ) = B ) ;
	step 6 : wff = thm eqcomd (step 5) |- ( -. ph -> B = if ( ph , A , B ) ) ;
	step 7 : wff = thm syl (step 6, hyp 3) |- ( -. ph -> ( th <-> ch ) ) ;
	step 8 : wff = thm mpbii (hyp 4, step 7) |- ( -. ph -> ch ) ;
	step 9 : wff = thm pm2_61i (step 4, step 8) |- ch ;
	qed prop 1 = step 9 ;
}

theorem keephyp (ph : wff, ps : wff, ch : wff, th : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ps ;
	hyp 4 : wff = |- ch ;
	-----------------------
	prop 1 : wff = |- th ;
}

proof of keephyp {
	step 1 : wff = thm ifboth (hyp 1, hyp 2) |- ( ( ps /\ ch ) -> th ) ;
	step 2 : wff = thm mp2an (hyp 3, hyp 4, step 1) |- th ;
	qed prop 1 = step 2 ;
}

theorem keephyp2v (ph : wff, ps : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, et : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) ;
	hyp 4 : wff = |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) ;
	hyp 5 : wff = |- ps ;
	hyp 6 : wff = |- ta ;
	-----------------------
	prop 1 : wff = |- th ;
}

proof of keephyp2v {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , C ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , C ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( ps <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , D ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , D ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm bitrd (step 3, step 6) |- ( ph -> ( ps <-> th ) ) ;
	step 8 : wff = thm mpbii (hyp 5, step 7) |- ( ph -> th ) ;
	step 9 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , C ) = C ) ;
	step 10 : wff = thm eqcomd (step 9) |- ( -. ph -> C = if ( ph , A , C ) ) ;
	step 11 : wff = thm syl (step 10, hyp 3) |- ( -. ph -> ( ta <-> et ) ) ;
	step 12 : wff = thm iffalse () |- ( -. ph -> if ( ph , B , D ) = D ) ;
	step 13 : wff = thm eqcomd (step 12) |- ( -. ph -> D = if ( ph , B , D ) ) ;
	step 14 : wff = thm syl (step 13, hyp 4) |- ( -. ph -> ( et <-> th ) ) ;
	step 15 : wff = thm bitrd (step 11, step 14) |- ( -. ph -> ( ta <-> th ) ) ;
	step 16 : wff = thm mpbii (hyp 6, step 15) |- ( -. ph -> th ) ;
	step 17 : wff = thm pm2_61i (step 8, step 16) |- th ;
	qed prop 1 = step 17 ;
}

theorem keephyp3v (ph : wff, ch : wff, th : wff, ta : wff, A : class, B : class, C : class, D : class, R : class, S : class, et : wff, ze : wff, si : wff, rh : wff)  {
	hyp 1 : wff = |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) ;
	hyp 2 : wff = |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) ;
	hyp 3 : wff = |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) ;
	hyp 4 : wff = |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) ;
	hyp 5 : wff = |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) ;
	hyp 6 : wff = |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) ;
	hyp 7 : wff = |- rh ;
	hyp 8 : wff = |- et ;
	-----------------------
	prop 1 : wff = |- ta ;
}

proof of keephyp3v {
	step 1 : wff = thm iftrue () |- ( ph -> if ( ph , A , D ) = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ph -> A = if ( ph , A , D ) ) ;
	step 3 : wff = thm syl (step 2, hyp 1) |- ( ph -> ( rh <-> ch ) ) ;
	step 4 : wff = thm iftrue () |- ( ph -> if ( ph , B , R ) = B ) ;
	step 5 : wff = thm eqcomd (step 4) |- ( ph -> B = if ( ph , B , R ) ) ;
	step 6 : wff = thm syl (step 5, hyp 2) |- ( ph -> ( ch <-> th ) ) ;
	step 7 : wff = thm iftrue () |- ( ph -> if ( ph , C , S ) = C ) ;
	step 8 : wff = thm eqcomd (step 7) |- ( ph -> C = if ( ph , C , S ) ) ;
	step 9 : wff = thm syl (step 8, hyp 3) |- ( ph -> ( th <-> ta ) ) ;
	step 10 : wff = thm 3bitrd (step 3, step 6, step 9) |- ( ph -> ( rh <-> ta ) ) ;
	step 11 : wff = thm mpbii (hyp 7, step 10) |- ( ph -> ta ) ;
	step 12 : wff = thm iffalse () |- ( -. ph -> if ( ph , A , D ) = D ) ;
	step 13 : wff = thm eqcomd (step 12) |- ( -. ph -> D = if ( ph , A , D ) ) ;
	step 14 : wff = thm syl (step 13, hyp 4) |- ( -. ph -> ( et <-> ze ) ) ;
	step 15 : wff = thm iffalse () |- ( -. ph -> if ( ph , B , R ) = R ) ;
	step 16 : wff = thm eqcomd (step 15) |- ( -. ph -> R = if ( ph , B , R ) ) ;
	step 17 : wff = thm syl (step 16, hyp 5) |- ( -. ph -> ( ze <-> si ) ) ;
	step 18 : wff = thm iffalse () |- ( -. ph -> if ( ph , C , S ) = S ) ;
	step 19 : wff = thm eqcomd (step 18) |- ( -. ph -> S = if ( ph , C , S ) ) ;
	step 20 : wff = thm syl (step 19, hyp 6) |- ( -. ph -> ( si <-> ta ) ) ;
	step 21 : wff = thm 3bitrd (step 14, step 17, step 20) |- ( -. ph -> ( et <-> ta ) ) ;
	step 22 : wff = thm mpbii (hyp 8, step 21) |- ( -. ph -> ta ) ;
	step 23 : wff = thm pm2_61i (step 11, step 22) |- ta ;
	qed prop 1 = step 23 ;
}

theorem keepel (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. C ;
	hyp 2 : wff = |- B e. C ;
	-----------------------
	prop 1 : wff = |- if ( ph , A , B ) e. C ;
}

proof of keepel {
	step 1 : wff = thm eleq1 () |- ( A = if ( ph , A , B ) -> ( A e. C <-> if ( ph , A , B ) e. C ) ) ;
	step 2 : wff = thm eleq1 () |- ( B = if ( ph , A , B ) -> ( B e. C <-> if ( ph , A , B ) e. C ) ) ;
	step 3 : wff = thm keephyp (step 1, step 2, hyp 1, hyp 2) |- if ( ph , A , B ) e. C ;
	qed prop 1 = step 3 ;
}

theorem ifex (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- if ( ph , A , B ) e. _V ;
}

proof of ifex {
	step 1 : wff = thm keepel (hyp 1, hyp 2) |- if ( ph , A , B ) e. _V ;
	qed prop 1 = step 1 ;
}

constant {
	symbol ~P ;
}

rule cpw (A : class) {
	term : class = # ~P A ;
}

theorem pwjust (x : set, y : set, A : class)  {
	prop 1 : wff = |- { x | x C_ A } = { y | y C_ A } ;
}

proof of pwjust {
	var z : set, w : set;
	step 1 : wff = thm sbsslem () |- ( [ z / x ] x C_ A <-> A. w ( ( w e. z /\ w e. A ) <-> w e. z ) ) ;
	step 2 : wff = def df-clab () |- ( z e. { x | x C_ A } <-> [ z / x ] x C_ A ) ;
	step 3 : wff = def df-clab () |- ( z e. { y | y C_ A } <-> [ z / y ] y C_ A ) ;
	step 4 : wff = thm sbsslem () |- ( [ z / y ] y C_ A <-> A. w ( ( w e. z /\ w e. A ) <-> w e. z ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( z e. { y | y C_ A } <-> A. w ( ( w e. z /\ w e. A ) <-> w e. z ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 2, step 5) |- ( z e. { x | x C_ A } <-> z e. { y | y C_ A } ) ;
	step 7 : wff = thm eqriv (step 6) |- { x | x C_ A } = { y | y C_ A } ;
	qed prop 1 = step 7 ;
}

definition df-pw (x : set, A : class)  {
	defiendum : class = # ~P A ;
	definiens : class = # { x | x C_ A } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem pweq (A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> ~P A = ~P B ) ;
}

proof of pweq {
	var x : set;
	step 1 : wff = thm sseq2 () |- ( A = B -> ( x C_ A <-> x C_ B ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( A = B -> { x | x C_ A } = { x | x C_ B } ) ;
	step 3 : wff = def df-pw () |- ~P A = { x | x C_ A } ;
	step 4 : wff = def df-pw () |- ~P B = { x | x C_ B } ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( A = B -> ~P A = ~P B ) ;
	qed prop 1 = step 5 ;
}

theorem elpw (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. ~P B <-> A C_ B ) ;
}

proof of elpw {
	var x : set;
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. ~P B <-> A e. ~P B ) ) ;
	step 2 : wff = thm sseq1 () |- ( x = A -> ( x C_ B <-> A C_ B ) ) ;
	step 3 : wff = def df-pw () |- ~P B = { x | x C_ B } ;
	step 4 : wff = thm abeq2i (step 3) |- ( x e. ~P B <-> x C_ B ) ;
	step 5 : wff = thm vtoclb (hyp 1, step 1, step 2, step 4) |- ( A e. ~P B <-> A C_ B ) ;
	qed prop 1 = step 5 ;
}

theorem elpwg (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( A e. ~P B <-> A C_ B ) ) ;
}

proof of elpwg {
	var x : set;
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. ~P B <-> A e. ~P B ) ) ;
	step 2 : wff = thm sseq1 () |- ( x = A -> ( x C_ B <-> A C_ B ) ) ;
	step 3 : wff = thm bibi12d (step 1, step 2) |- ( x = A -> ( ( x e. ~P B <-> x C_ B ) <-> ( A e. ~P B <-> A C_ B ) ) ) ;
	step 4 : wff = thm visset () |- x e. _V ;
	step 5 : wff = thm elpw (step 4) |- ( x e. ~P B <-> x C_ B ) ;
	step 6 : wff = thm vtoclg (step 3, step 5) |- ( A e. C -> ( A e. ~P B <-> A C_ B ) ) ;
	qed prop 1 = step 6 ;
}

theorem elpwi (A : class, B : class)  {
	prop 1 : wff = |- ( A e. ~P B -> A C_ B ) ;
}

proof of elpwi {
	step 1 : wff = thm elpwg () |- ( A e. ~P B -> ( A e. ~P B <-> A C_ B ) ) ;
	step 2 : wff = thm ibi (step 1) |- ( A e. ~P B -> A C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem hbpw (x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( y e. ~P A -> A. x y e. ~P A ) ;
}

proof of hbpw {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 2 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 3 : wff = thm hbel (step 2, hyp 1) |- ( z e. A -> A. x z e. A ) ;
	step 4 : wff = thm hbss (step 1, step 3) |- ( y C_ A -> A. x y C_ A ) ;
	step 5 : wff = thm visset () |- y e. _V ;
	step 6 : wff = thm elpw (step 5) |- ( y e. ~P A <-> y C_ A ) ;
	step 7 : wff = thm visset () |- y e. _V ;
	step 8 : wff = thm elpw (step 7) |- ( y e. ~P A <-> y C_ A ) ;
	step 9 : wff = thm albii (step 8) |- ( A. x y e. ~P A <-> A. x y C_ A ) ;
	step 10 : wff = thm 3imtr4i (step 4, step 6, step 9) |- ( y e. ~P A -> A. x y e. ~P A ) ;
	qed prop 1 = step 10 ;
}

theorem pwid (A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- A e. ~P A ;
}

proof of pwid {
	step 1 : wff = thm ssid () |- A C_ A ;
	step 2 : wff = thm elpw (hyp 1) |- ( A e. ~P A <-> A C_ A ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- A e. ~P A ;
	qed prop 1 = step 3 ;
}

theorem pwss (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ~P A C_ B <-> A. x ( x C_ A -> x e. B ) ) ;
}

proof of pwss {
	step 1 : wff = thm dfss2 () |- ( ~P A C_ B <-> A. x ( x e. ~P A -> x e. B ) ) ;
	step 2 : wff = def df-pw () |- ~P A = { x | x C_ A } ;
	step 3 : wff = thm abeq2i (step 2) |- ( x e. ~P A <-> x C_ A ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( x e. ~P A -> x e. B ) <-> ( x C_ A -> x e. B ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. ~P A -> x e. B ) <-> A. x ( x C_ A -> x e. B ) ) ;
	step 6 : wff = thm bitri (step 1, step 5) |- ( ~P A C_ B <-> A. x ( x C_ A -> x e. B ) ) ;
	qed prop 1 = step 6 ;
}

constant {
	symbol <. ;
}

constant {
	symbol >. ;
}

rule csn (A : class) {
	term : class = # { A } ;
}

rule cpr (A : class, B : class) {
	term : class = # { A , B } ;
}

rule cop (A : class, B : class) {
	term : class = # <. A , B >. ;
}

theorem snjust (x : set, y : set, A : class)  {
	prop 1 : wff = |- { x | x = A } = { y | y = A } ;
}

proof of snjust {
	var z : set;
	step 1 : wff = def df-clab () |- ( z e. { x | x = A } <-> [ z / x ] x = A ) ;
	step 2 : wff = thm eqsb3 () |- ( [ z / x ] x = A <-> z = A ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( z e. { x | x = A } <-> z = A ) ;
	step 4 : wff = def df-clab () |- ( z e. { y | y = A } <-> [ z / y ] y = A ) ;
	step 5 : wff = thm eqsb3 () |- ( [ z / y ] y = A <-> z = A ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( z e. { y | y = A } <-> z = A ) ;
	step 7 : wff = thm bitr4i (step 3, step 6) |- ( z e. { x | x = A } <-> z e. { y | y = A } ) ;
	step 8 : wff = thm eqriv (step 7) |- { x | x = A } = { y | y = A } ;
	qed prop 1 = step 8 ;
}

definition df-sn (x : set, A : class)  {
	defiendum : class = # { A } ;
	definiens : class = # { x | x = A } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

definition df-pr (A : class, B : class)  {
	defiendum : class = # { A , B } ;
	definiens : class = # ( { A } u. { B } ) ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

rule ctp (A : class, B : class, C : class) {
	term : class = # { A , B , C } ;
}

definition df-tp (A : class, B : class, C : class)  {
	defiendum : class = # { A , B , C } ;
	definiens : class = # ( { A , B } u. { C } ) ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

definition df-op (A : class, B : class)  {
	defiendum : class = # <. A , B >. ;
	definiens : class = # { { A } , { A , B } } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem sneq (A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> { A } = { B } ) ;
}

proof of sneq {
	var x : set;
	step 1 : wff = thm eqeq2 () |- ( A = B -> ( x = A <-> x = B ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( A = B -> { x | x = A } = { x | x = B } ) ;
	step 3 : wff = def df-sn () |- { A } = { x | x = A } ;
	step 4 : wff = def df-sn () |- { B } = { x | x = B } ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( A = B -> { A } = { B } ) ;
	qed prop 1 = step 5 ;
}

theorem sneqi (A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- { A } = { B } ;
}

proof of sneqi {
	step 1 : wff = thm sneq () |- ( A = B -> { A } = { B } ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- { A } = { B } ;
	qed prop 1 = step 2 ;
}

theorem sneqd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> { A } = { B } ) ;
}

proof of sneqd {
	step 1 : wff = thm sneq () |- ( A = B -> { A } = { B } ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> { A } = { B } ) ;
	qed prop 1 = step 2 ;
}

theorem dfsn2 (A : class)  {
	prop 1 : wff = |- { A } = { A , A } ;
}

proof of dfsn2 {
	step 1 : wff = def df-pr () |- { A , A } = ( { A } u. { A } ) ;
	step 2 : wff = thm unidm () |- ( { A } u. { A } ) = { A } ;
	step 3 : wff = thm eqtr2i (step 1, step 2) |- { A } = { A , A } ;
	qed prop 1 = step 3 ;
}

theorem elsn (x : set, A : class)  {
	prop 1 : wff = |- ( x e. { A } <-> x = A ) ;
}

proof of elsn {
	step 1 : wff = def df-sn () |- { A } = { x | x = A } ;
	step 2 : wff = thm abeq2i (step 1) |- ( x e. { A } <-> x = A ) ;
	qed prop 1 = step 2 ;
}

theorem dfpr2 (x : set, A : class, B : class)  {
	prop 1 : wff = |- { A , B } = { x | ( x = A \/ x = B ) } ;
}

proof of dfpr2 {
	step 1 : wff = def df-pr () |- { A , B } = ( { A } u. { B } ) ;
	step 2 : wff = thm elun () |- ( x e. ( { A } u. { B } ) <-> ( x e. { A } \/ x e. { B } ) ) ;
	step 3 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 4 : wff = thm elsn () |- ( x e. { B } <-> x = B ) ;
	step 5 : wff = thm orbi12i (step 3, step 4) |- ( ( x e. { A } \/ x e. { B } ) <-> ( x = A \/ x = B ) ) ;
	step 6 : wff = thm bitri (step 2, step 5) |- ( x e. ( { A } u. { B } ) <-> ( x = A \/ x = B ) ) ;
	step 7 : wff = thm abbi2i (step 6) |- ( { A } u. { B } ) = { x | ( x = A \/ x = B ) } ;
	step 8 : wff = thm eqtri (step 1, step 7) |- { A , B } = { x | ( x = A \/ x = B ) } ;
	qed prop 1 = step 8 ;
}

theorem elprg (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) ;
}

proof of elprg {
	var x : set;
	step 1 : wff = thm eqeq1 () |- ( x = A -> ( x = B <-> A = B ) ) ;
	step 2 : wff = thm eqeq1 () |- ( x = A -> ( x = C <-> A = C ) ) ;
	step 3 : wff = thm orbi12d (step 1, step 2) |- ( x = A -> ( ( x = B \/ x = C ) <-> ( A = B \/ A = C ) ) ) ;
	step 4 : wff = thm dfpr2 () |- { B , C } = { x | ( x = B \/ x = C ) } ;
	step 5 : wff = thm elab2g (step 3, step 4) |- ( A e. D -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) ;
	qed prop 1 = step 5 ;
}

theorem elpr (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) ;
}

proof of elpr {
	step 1 : wff = thm elprg () |- ( A e. _V -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) ;
	qed prop 1 = step 2 ;
}

theorem elpr2 (A : class, B : class, C : class)  {
	hyp 1 : wff = |- B e. _V ;
	hyp 2 : wff = |- C e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) ;
}

proof of elpr2 {
	step 1 : wff = thm elprg () |- ( A e. { B , C } -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) ;
	step 2 : wff = thm ibi (step 1) |- ( A e. { B , C } -> ( A = B \/ A = C ) ) ;
	step 3 : wff = thm eleq1 () |- ( A = B -> ( A e. _V <-> B e. _V ) ) ;
	step 4 : wff = thm mpbiri (hyp 1, step 3) |- ( A = B -> A e. _V ) ;
	step 5 : wff = thm eleq1 () |- ( A = C -> ( A e. _V <-> C e. _V ) ) ;
	step 6 : wff = thm mpbiri (hyp 2, step 5) |- ( A = C -> A e. _V ) ;
	step 7 : wff = thm jaoi (step 4, step 6) |- ( ( A = B \/ A = C ) -> A e. _V ) ;
	step 8 : wff = thm elprg () |- ( A e. _V -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( ( A = B \/ A = C ) -> ( A e. { B , C } <-> ( A = B \/ A = C ) ) ) ;
	step 10 : wff = thm ibir (step 9) |- ( ( A = B \/ A = C ) -> A e. { B , C } ) ;
	step 11 : wff = thm impbii (step 2, step 10) |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) ;
	qed prop 1 = step 11 ;
}

theorem hbpr (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. { A , B } -> A. x y e. { A , B } ) ;
}

proof of hbpr {
	step 1 : wff = thm hbeleq (hyp 1) |- ( y = A -> A. x y = A ) ;
	step 2 : wff = thm hbeleq (hyp 2) |- ( y = B -> A. x y = B ) ;
	step 3 : wff = thm hbor (step 1, step 2) |- ( ( y = A \/ y = B ) -> A. x ( y = A \/ y = B ) ) ;
	step 4 : wff = thm visset () |- y e. _V ;
	step 5 : wff = thm elpr (step 4) |- ( y e. { A , B } <-> ( y = A \/ y = B ) ) ;
	step 6 : wff = thm visset () |- y e. _V ;
	step 7 : wff = thm elpr (step 6) |- ( y e. { A , B } <-> ( y = A \/ y = B ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x y e. { A , B } <-> A. x ( y = A \/ y = B ) ) ;
	step 9 : wff = thm 3imtr4i (step 3, step 5, step 8) |- ( y e. { A , B } -> A. x y e. { A , B } ) ;
	qed prop 1 = step 9 ;
}

theorem ifpr (ph : wff, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. { A , B } ) ;
}

proof of ifpr {
	step 1 : wff = thm ifcl () |- ( ( A e. _V /\ B e. _V ) -> if ( ph , A , B ) e. _V ) ;
	step 2 : wff = thm ifor () |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) ;
	step 3 : wff = thm elprg () |- ( if ( ph , A , B ) e. _V -> ( if ( ph , A , B ) e. { A , B } <-> ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) ) ) ;
	step 4 : wff = thm mpbiri (step 2, step 3) |- ( if ( ph , A , B ) e. _V -> if ( ph , A , B ) e. { A , B } ) ;
	step 5 : wff = thm syl (step 1, step 4) |- ( ( A e. _V /\ B e. _V ) -> if ( ph , A , B ) e. { A , B } ) ;
	step 6 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 7 : wff = thm elisset () |- ( B e. D -> B e. _V ) ;
	step 8 : wff = thm syl2an (step 5, step 6, step 7) |- ( ( A e. C /\ B e. D ) -> if ( ph , A , B ) e. { A , B } ) ;
	qed prop 1 = step 8 ;
}

theorem ralpr (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( A. x e. { A , B } ph <-> ( [ A / x ] ph /\ [ B / x ] ph ) ) ;
}

proof of ralpr {
	step 1 : wff = def df-ral () |- ( A. x e. { A , B } ph <-> A. x ( x e. { A , B } -> ph ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm elpr (step 2) |- ( x e. { A , B } <-> ( x = A \/ x = B ) ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( x e. { A , B } -> ph ) <-> ( ( x = A \/ x = B ) -> ph ) ) ;
	step 5 : wff = thm jaob () |- ( ( ( x = A \/ x = B ) -> ph ) <-> ( ( x = A -> ph ) /\ ( x = B -> ph ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( x e. { A , B } -> ph ) <-> ( ( x = A -> ph ) /\ ( x = B -> ph ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. x ( x e. { A , B } -> ph ) <-> A. x ( ( x = A -> ph ) /\ ( x = B -> ph ) ) ) ;
	step 8 : wff = thm 19_26 () |- ( A. x ( ( x = A -> ph ) /\ ( x = B -> ph ) ) <-> ( A. x ( x = A -> ph ) /\ A. x ( x = B -> ph ) ) ) ;
	step 9 : wff = thm sbc6 (hyp 1) |- ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ;
	step 10 : wff = thm sbc6 (hyp 2) |- ( [ B / x ] ph <-> A. x ( x = B -> ph ) ) ;
	step 11 : wff = thm anbi12i (step 9, step 10) |- ( ( [ A / x ] ph /\ [ B / x ] ph ) <-> ( A. x ( x = A -> ph ) /\ A. x ( x = B -> ph ) ) ) ;
	step 12 : wff = thm bitr4i (step 8, step 11) |- ( A. x ( ( x = A -> ph ) /\ ( x = B -> ph ) ) <-> ( [ A / x ] ph /\ [ B / x ] ph ) ) ;
	step 13 : wff = thm 3bitri (step 1, step 7, step 12) |- ( A. x e. { A , B } ph <-> ( [ A / x ] ph /\ [ B / x ] ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem rexpr (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( E. x e. { A , B } ph <-> ( [ A / x ] ph \/ [ B / x ] ph ) ) ;
}

proof of rexpr {
	step 1 : wff = thm ralpr (hyp 1, hyp 2) |- ( A. x e. { A , B } -. ph <-> ( [ A / x ] -. ph /\ [ B / x ] -. ph ) ) ;
	step 2 : wff = thm sbcng () |- ( A e. _V -> ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ) ;
	step 3 : wff = axm ax-mp (hyp 1, step 2) |- ( [ A / x ] -. ph <-> -. [ A / x ] ph ) ;
	step 4 : wff = thm sbcng () |- ( B e. _V -> ( [ B / x ] -. ph <-> -. [ B / x ] ph ) ) ;
	step 5 : wff = axm ax-mp (hyp 2, step 4) |- ( [ B / x ] -. ph <-> -. [ B / x ] ph ) ;
	step 6 : wff = thm anbi12i (step 3, step 5) |- ( ( [ A / x ] -. ph /\ [ B / x ] -. ph ) <-> ( -. [ A / x ] ph /\ -. [ B / x ] ph ) ) ;
	step 7 : wff = thm bitri (step 1, step 6) |- ( A. x e. { A , B } -. ph <-> ( -. [ A / x ] ph /\ -. [ B / x ] ph ) ) ;
	step 8 : wff = thm notbii (step 7) |- ( -. A. x e. { A , B } -. ph <-> -. ( -. [ A / x ] ph /\ -. [ B / x ] ph ) ) ;
	step 9 : wff = thm dfrex2 () |- ( E. x e. { A , B } ph <-> -. A. x e. { A , B } -. ph ) ;
	step 10 : wff = thm oran () |- ( ( [ A / x ] ph \/ [ B / x ] ph ) <-> -. ( -. [ A / x ] ph /\ -. [ B / x ] ph ) ) ;
	step 11 : wff = thm 3bitr4i (step 8, step 9, step 10) |- ( E. x e. { A , B } ph <-> ( [ A / x ] ph \/ [ B / x ] ph ) ) ;
	qed prop 1 = step 11 ;
}

theorem ralsn (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A. x e. { A } ph <-> [ A / x ] ph ) ;
}

proof of ralsn {
	step 1 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 2 : wff = thm raleq1 () |- ( { A } = { A , A } -> ( A. x e. { A } ph <-> A. x e. { A , A } ph ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( A. x e. { A } ph <-> A. x e. { A , A } ph ) ;
	step 4 : wff = thm ralpr (hyp 1, hyp 1) |- ( A. x e. { A , A } ph <-> ( [ A / x ] ph /\ [ A / x ] ph ) ) ;
	step 5 : wff = thm anidm () |- ( ( [ A / x ] ph /\ [ A / x ] ph ) <-> [ A / x ] ph ) ;
	step 6 : wff = thm 3bitri (step 3, step 4, step 5) |- ( A. x e. { A } ph <-> [ A / x ] ph ) ;
	qed prop 1 = step 6 ;
}

theorem ralsng (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( A. x e. { A } ph <-> [ A / x ] ph ) ) ;
}

proof of ralsng {
	step 1 : wff = thm sbc6g () |- ( A e. B -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. { A } ph <-> A. x ( x e. { A } -> ph ) ) ;
	step 3 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( x e. { A } -> ph ) <-> ( x = A -> ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. { A } -> ph ) <-> A. x ( x = A -> ph ) ) ;
	step 6 : wff = thm bitri (step 2, step 5) |- ( A. x e. { A } ph <-> A. x ( x = A -> ph ) ) ;
	step 7 : wff = thm syl6rbbr (step 1, step 6) |- ( A e. B -> ( A. x e. { A } ph <-> [ A / x ] ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem sbcsng (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> ( [ A / x ] ph <-> A. x e. { A } ph ) ) ;
}

proof of sbcsng {
	step 1 : wff = thm sbc6g () |- ( A e. B -> ( [ A / x ] ph <-> A. x ( x = A -> ph ) ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. { A } ph <-> A. x ( x e. { A } -> ph ) ) ;
	step 3 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( x e. { A } -> ph ) <-> ( x = A -> ph ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x ( x e. { A } -> ph ) <-> A. x ( x = A -> ph ) ) ;
	step 6 : wff = thm bitr2i (step 2, step 5) |- ( A. x ( x = A -> ph ) <-> A. x e. { A } ph ) ;
	step 7 : wff = thm syl6bb (step 1, step 6) |- ( A e. B -> ( [ A / x ] ph <-> A. x e. { A } ph ) ) ;
	qed prop 1 = step 7 ;
}

theorem elsncg (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( A e. { B } <-> A = B ) ) ;
}

proof of elsncg {
	step 1 : wff = thm elprg () |- ( A e. C -> ( A e. { B , B } <-> ( A = B \/ A = B ) ) ) ;
	step 2 : wff = thm dfsn2 () |- { B } = { B , B } ;
	step 3 : wff = thm eqcomi (step 2) |- { B , B } = { B } ;
	step 4 : wff = thm eleq2i (step 3) |- ( A e. { B , B } <-> A e. { B } ) ;
	step 5 : wff = thm oridm () |- ( ( A = B \/ A = B ) <-> A = B ) ;
	step 6 : wff = thm 3bitr3g (step 1, step 4, step 5) |- ( A e. C -> ( A e. { B } <-> A = B ) ) ;
	qed prop 1 = step 6 ;
}

theorem elsnc (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. { B } <-> A = B ) ;
}

proof of elsnc {
	step 1 : wff = thm elsncg () |- ( A e. _V -> ( A e. { B } <-> A = B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. { B } <-> A = B ) ;
	qed prop 1 = step 2 ;
}

theorem elsni (A : class, B : class)  {
	prop 1 : wff = |- ( A e. { B } -> A = B ) ;
}

proof of elsni {
	step 1 : wff = thm elsncg () |- ( A e. { B } -> ( A e. { B } <-> A = B ) ) ;
	step 2 : wff = thm ibi (step 1) |- ( A e. { B } -> A = B ) ;
	qed prop 1 = step 2 ;
}

theorem snidg (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> A e. { A } ) ;
}

proof of snidg {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm elsncg () |- ( A e. B -> ( A e. { A } <-> A = A ) ) ;
	step 3 : wff = thm mpbiri (step 1, step 2) |- ( A e. B -> A e. { A } ) ;
	qed prop 1 = step 3 ;
}

theorem snidb (A : class)  {
	prop 1 : wff = |- ( A e. _V <-> A e. { A } ) ;
}

proof of snidb {
	step 1 : wff = thm snidg () |- ( A e. _V -> A e. { A } ) ;
	step 2 : wff = thm elisset () |- ( A e. { A } -> A e. _V ) ;
	step 3 : wff = thm impbii (step 1, step 2) |- ( A e. _V <-> A e. { A } ) ;
	qed prop 1 = step 3 ;
}

theorem snid (A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- A e. { A } ;
}

proof of snid {
	step 1 : wff = thm snidb () |- ( A e. _V <-> A e. { A } ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- A e. { A } ;
	qed prop 1 = step 2 ;
}

theorem elsnc2g (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( B e. C -> ( A e. { B } <-> A = B ) ) ;
}

proof of elsnc2g {
	step 1 : wff = thm elsni () |- ( A e. { B } -> A = B ) ;
	step 2 : wff = thm eleq1 () |- ( A = B -> ( A e. { B } <-> B e. { B } ) ) ;
	step 3 : wff = thm snidg () |- ( B e. C -> B e. { B } ) ;
	step 4 : wff = thm syl5cbir (step 2, step 3) |- ( B e. C -> ( A = B -> A e. { B } ) ) ;
	step 5 : wff = thm impbid2 (step 1, step 4) |- ( B e. C -> ( A e. { B } <-> A = B ) ) ;
	qed prop 1 = step 5 ;
}

theorem elsnc2 (A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. { B } <-> A = B ) ;
}

proof of elsnc2 {
	step 1 : wff = thm elsnc2g () |- ( B e. _V -> ( A e. { B } <-> A = B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A e. { B } <-> A = B ) ;
	qed prop 1 = step 2 ;
}

theorem hbsn (x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( y e. { A } -> A. x y e. { A } ) ;
}

proof of hbsn {
	step 1 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 2 : wff = thm hbpr (hyp 1, hyp 1) |- ( y e. { A , A } -> A. x y e. { A , A } ) ;
	step 3 : wff = thm hbxfr (step 1, step 2) |- ( y e. { A } -> A. x y e. { A } ) ;
	qed prop 1 = step 3 ;
}

theorem eltp (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. { B , C , D } <-> ( A = B \/ A = C \/ A = D ) ) ;
}

proof of eltp {
	step 1 : wff = def df-tp () |- { B , C , D } = ( { B , C } u. { D } ) ;
	step 2 : wff = thm eleq2i (step 1) |- ( A e. { B , C , D } <-> A e. ( { B , C } u. { D } ) ) ;
	step 3 : wff = thm elun () |- ( A e. ( { B , C } u. { D } ) <-> ( A e. { B , C } \/ A e. { D } ) ) ;
	step 4 : wff = thm elpr (hyp 1) |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) ;
	step 5 : wff = thm elsnc (hyp 1) |- ( A e. { D } <-> A = D ) ;
	step 6 : wff = thm orbi12i (step 4, step 5) |- ( ( A e. { B , C } \/ A e. { D } ) <-> ( ( A = B \/ A = C ) \/ A = D ) ) ;
	step 7 : wff = thm 3bitri (step 2, step 3, step 6) |- ( A e. { B , C , D } <-> ( ( A = B \/ A = C ) \/ A = D ) ) ;
	step 8 : wff = def df-3or () |- ( ( A = B \/ A = C \/ A = D ) <-> ( ( A = B \/ A = C ) \/ A = D ) ) ;
	step 9 : wff = thm bitr4i (step 7, step 8) |- ( A e. { B , C , D } <-> ( A = B \/ A = C \/ A = D ) ) ;
	qed prop 1 = step 9 ;
}

theorem dftp2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- { A , B , C } = { x | ( x = A \/ x = B \/ x = C ) } ;
}

proof of dftp2 {
	step 1 : wff = thm visset () |- x e. _V ;
	step 2 : wff = thm eltp (step 1) |- ( x e. { A , B , C } <-> ( x = A \/ x = B \/ x = C ) ) ;
	step 3 : wff = thm abbi2i (step 2) |- { A , B , C } = { x | ( x = A \/ x = B \/ x = C ) } ;
	qed prop 1 = step 3 ;
}

theorem disjsn (A : class, B : class)  {
	prop 1 : wff = |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) ;
}

proof of disjsn {
	var x : set;
	step 1 : wff = thm noel () |- -. B e. (/) ;
	step 2 : wff = thm eleq2 () |- ( ( A i^i { B } ) = (/) -> ( B e. ( A i^i { B } ) <-> B e. (/) ) ) ;
	step 3 : wff = thm mtbiri (step 1, step 2) |- ( ( A i^i { B } ) = (/) -> -. B e. ( A i^i { B } ) ) ;
	step 4 : wff = thm snidg () |- ( B e. A -> B e. { B } ) ;
	step 5 : wff = thm ancli (step 4) |- ( B e. A -> ( B e. A /\ B e. { B } ) ) ;
	step 6 : wff = thm elin () |- ( B e. ( A i^i { B } ) <-> ( B e. A /\ B e. { B } ) ) ;
	step 7 : wff = thm sylibr (step 5, step 6) |- ( B e. A -> B e. ( A i^i { B } ) ) ;
	step 8 : wff = thm nsyl (step 3, step 7) |- ( ( A i^i { B } ) = (/) -> -. B e. A ) ;
	step 9 : wff = thm eleq1 () |- ( x = B -> ( x e. A <-> B e. A ) ) ;
	step 10 : wff = thm biimpcd (step 9) |- ( x e. A -> ( x = B -> B e. A ) ) ;
	step 11 : wff = thm elsn () |- ( x e. { B } <-> x = B ) ;
	step 12 : wff = thm syl5ib (step 10, step 11) |- ( x e. A -> ( x e. { B } -> B e. A ) ) ;
	step 13 : wff = thm con3d (step 12) |- ( x e. A -> ( -. B e. A -> -. x e. { B } ) ) ;
	step 14 : wff = thm com12 (step 13) |- ( -. B e. A -> ( x e. A -> -. x e. { B } ) ) ;
	step 15 : wff = thm 19_21aiv (step 14) |- ( -. B e. A -> A. x ( x e. A -> -. x e. { B } ) ) ;
	step 16 : wff = thm disj1 () |- ( ( A i^i { B } ) = (/) <-> A. x ( x e. A -> -. x e. { B } ) ) ;
	step 17 : wff = thm sylibr (step 15, step 16) |- ( -. B e. A -> ( A i^i { B } ) = (/) ) ;
	step 18 : wff = thm impbii (step 8, step 17) |- ( ( A i^i { B } ) = (/) <-> -. B e. A ) ;
	qed prop 1 = step 18 ;
}

theorem disjsn2 (A : class, B : class)  {
	prop 1 : wff = |- ( A =/= B -> ( { A } i^i { B } ) = (/) ) ;
}

proof of disjsn2 {
	step 1 : wff = thm elsni () |- ( B e. { A } -> B = A ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( B e. { A } -> A = B ) ;
	step 3 : wff = thm necon3ai (step 2) |- ( A =/= B -> -. B e. { A } ) ;
	step 4 : wff = thm disjsn () |- ( ( { A } i^i { B } ) = (/) <-> -. B e. { A } ) ;
	step 5 : wff = thm sylibr (step 3, step 4) |- ( A =/= B -> ( { A } i^i { B } ) = (/) ) ;
	qed prop 1 = step 5 ;
}

theorem snprc (A : class)  {
	prop 1 : wff = |- ( -. A e. _V <-> { A } = (/) ) ;
}

proof of snprc {
	var x : set;
	step 1 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 2 : wff = thm exbii (step 1) |- ( E. x x e. { A } <-> E. x x = A ) ;
	step 3 : wff = thm neq0 () |- ( -. { A } = (/) <-> E. x x e. { A } ) ;
	step 4 : wff = thm isset () |- ( A e. _V <-> E. x x = A ) ;
	step 5 : wff = thm 3bitr4i (step 2, step 3, step 4) |- ( -. { A } = (/) <-> A e. _V ) ;
	step 6 : wff = thm con1bii (step 5) |- ( -. A e. _V <-> { A } = (/) ) ;
	qed prop 1 = step 6 ;
}

theorem r19_12sn (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( E. x e. { A } A. y e. B ph <-> A. y e. B E. x e. { A } ph ) ;
}

proof of r19_12sn {
	step 1 : wff = thm rexpr (hyp 1, hyp 1) |- ( E. x e. { A , A } A. y e. B ph <-> ( [ A / x ] A. y e. B ph \/ [ A / x ] A. y e. B ph ) ) ;
	step 2 : wff = thm oridm () |- ( ( [ A / x ] A. y e. B ph \/ [ A / x ] A. y e. B ph ) <-> [ A / x ] A. y e. B ph ) ;
	step 3 : wff = thm sbcralg () |- ( A e. _V -> ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ) ;
	step 4 : wff = axm ax-mp (hyp 1, step 3) |- ( [ A / x ] A. y e. B ph <-> A. y e. B [ A / x ] ph ) ;
	step 5 : wff = thm 3bitri (step 1, step 2, step 4) |- ( E. x e. { A , A } A. y e. B ph <-> A. y e. B [ A / x ] ph ) ;
	step 6 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 7 : wff = thm rexeq1 () |- ( { A } = { A , A } -> ( E. x e. { A } A. y e. B ph <-> E. x e. { A , A } A. y e. B ph ) ) ;
	step 8 : wff = axm ax-mp (step 6, step 7) |- ( E. x e. { A } A. y e. B ph <-> E. x e. { A , A } A. y e. B ph ) ;
	step 9 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 10 : wff = thm rexeq1 () |- ( { A } = { A , A } -> ( E. x e. { A } ph <-> E. x e. { A , A } ph ) ) ;
	step 11 : wff = axm ax-mp (step 9, step 10) |- ( E. x e. { A } ph <-> E. x e. { A , A } ph ) ;
	step 12 : wff = thm rexpr (hyp 1, hyp 1) |- ( E. x e. { A , A } ph <-> ( [ A / x ] ph \/ [ A / x ] ph ) ) ;
	step 13 : wff = thm oridm () |- ( ( [ A / x ] ph \/ [ A / x ] ph ) <-> [ A / x ] ph ) ;
	step 14 : wff = thm 3bitri (step 11, step 12, step 13) |- ( E. x e. { A } ph <-> [ A / x ] ph ) ;
	step 15 : wff = thm ralbii (step 14) |- ( A. y e. B E. x e. { A } ph <-> A. y e. B [ A / x ] ph ) ;
	step 16 : wff = thm 3bitr4i (step 5, step 8, step 15) |- ( E. x e. { A } A. y e. B ph <-> A. y e. B E. x e. { A } ph ) ;
	qed prop 1 = step 16 ;
}

theorem rabsn (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( B e. A -> { x e. A | x = B } = { B } ) ;
}

proof of rabsn {
	step 1 : wff = thm eleq1 () |- ( x = B -> ( x e. A <-> B e. A ) ) ;
	step 2 : wff = thm pm5_32ri (step 1) |- ( ( x e. A /\ x = B ) <-> ( B e. A /\ x = B ) ) ;
	step 3 : wff = thm baib (step 2) |- ( B e. A -> ( ( x e. A /\ x = B ) <-> x = B ) ) ;
	step 4 : wff = thm abbidv (step 3) |- ( B e. A -> { x | ( x e. A /\ x = B ) } = { x | x = B } ) ;
	step 5 : wff = def df-rab () |- { x e. A | x = B } = { x | ( x e. A /\ x = B ) } ;
	step 6 : wff = def df-sn () |- { B } = { x | x = B } ;
	step 7 : wff = thm 3eqtr4g (step 4, step 5, step 6) |- ( B e. A -> { x e. A | x = B } = { B } ) ;
	qed prop 1 = step 7 ;
}

theorem euabsn (ph : wff, x : set)  {
	prop 1 : wff = |- ( E! x ph <-> E. x { x | ph } = { x } ) ;
}

proof of euabsn {
	var y : set, z : set;
	step 1 : wff = thm abeq1 () |- ( { x | ph } = { y } <-> A. x ( ph <-> x e. { y } ) ) ;
	step 2 : wff = thm elsn () |- ( x e. { y } <-> x = y ) ;
	step 3 : wff = thm bibi2i (step 2) |- ( ( ph <-> x e. { y } ) <-> ( ph <-> x = y ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. x ( ph <-> x e. { y } ) <-> A. x ( ph <-> x = y ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( { x | ph } = { y } <-> A. x ( ph <-> x = y ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. y { x | ph } = { y } <-> E. y A. x ( ph <-> x = y ) ) ;
	step 7 : wff = axm ax-17 () |- ( { x | ph } = { x } -> A. y { x | ph } = { x } ) ;
	step 8 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 9 : wff = axm ax-17 () |- ( z e. { y } -> A. x z e. { y } ) ;
	step 10 : wff = thm hbeq (step 8, step 9) |- ( { x | ph } = { y } -> A. x { x | ph } = { y } ) ;
	step 11 : wff = thm sneq () |- ( x = y -> { x } = { y } ) ;
	step 12 : wff = thm eqeq2d (step 11) |- ( x = y -> ( { x | ph } = { x } <-> { x | ph } = { y } ) ) ;
	step 13 : wff = thm cbvex (step 7, step 10, step 12) |- ( E. x { x | ph } = { x } <-> E. y { x | ph } = { y } ) ;
	step 14 : wff = def df-eu () |- ( E! x ph <-> E. y A. x ( ph <-> x = y ) ) ;
	step 15 : wff = thm 3bitr4ri (step 6, step 13, step 14) |- ( E! x ph <-> E. x { x | ph } = { x } ) ;
	qed prop 1 = step 15 ;
}

theorem eusn (x : set, A : class)  {
	prop 1 : wff = |- ( E! x x e. A <-> E. x A = { x } ) ;
}

proof of eusn {
	step 1 : wff = thm euabsn () |- ( E! x x e. A <-> E. x { x | x e. A } = { x } ) ;
	step 2 : wff = thm abid2 () |- { x | x e. A } = A ;
	step 3 : wff = thm eqeq1i (step 2) |- ( { x | x e. A } = { x } <-> A = { x } ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. x { x | x e. A } = { x } <-> E. x A = { x } ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( E! x x e. A <-> E. x A = { x } ) ;
	qed prop 1 = step 5 ;
}

theorem prcom (A : class, B : class)  {
	prop 1 : wff = |- { A , B } = { B , A } ;
}

proof of prcom {
	step 1 : wff = thm uncom () |- ( { A } u. { B } ) = ( { B } u. { A } ) ;
	step 2 : wff = def df-pr () |- { A , B } = ( { A } u. { B } ) ;
	step 3 : wff = def df-pr () |- { B , A } = ( { B } u. { A } ) ;
	step 4 : wff = thm 3eqtr4i (step 1, step 2, step 3) |- { A , B } = { B , A } ;
	qed prop 1 = step 4 ;
}

theorem preq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> { A , C } = { B , C } ) ;
}

proof of preq1 {
	step 1 : wff = thm sneq () |- ( A = B -> { A } = { B } ) ;
	step 2 : wff = thm uneq1d (step 1) |- ( A = B -> ( { A } u. { C } ) = ( { B } u. { C } ) ) ;
	step 3 : wff = def df-pr () |- { A , C } = ( { A } u. { C } ) ;
	step 4 : wff = def df-pr () |- { B , C } = ( { B } u. { C } ) ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( A = B -> { A , C } = { B , C } ) ;
	qed prop 1 = step 5 ;
}

theorem preq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> { C , A } = { C , B } ) ;
}

proof of preq2 {
	step 1 : wff = thm preq1 () |- ( A = B -> { A , C } = { B , C } ) ;
	step 2 : wff = thm prcom () |- { C , A } = { A , C } ;
	step 3 : wff = thm prcom () |- { C , B } = { B , C } ;
	step 4 : wff = thm 3eqtr4g (step 1, step 2, step 3) |- ( A = B -> { C , A } = { C , B } ) ;
	qed prop 1 = step 4 ;
}

theorem prid1g (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> A e. { A , B } ) ;
}

proof of prid1g {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm orci (step 1) |- ( A = A \/ A = B ) ;
	step 3 : wff = thm elprg () |- ( A e. C -> ( A e. { A , B } <-> ( A = A \/ A = B ) ) ) ;
	step 4 : wff = thm mpbiri (step 2, step 3) |- ( A e. C -> A e. { A , B } ) ;
	qed prop 1 = step 4 ;
}

theorem prid2g (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( B e. C -> B e. { A , B } ) ;
}

proof of prid2g {
	step 1 : wff = thm prid1g () |- ( B e. C -> B e. { B , A } ) ;
	step 2 : wff = thm prcom () |- { B , A } = { A , B } ;
	step 3 : wff = thm syl6eleq (step 1, step 2) |- ( B e. C -> B e. { A , B } ) ;
	qed prop 1 = step 3 ;
}

theorem prid1 (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- A e. { A , B } ;
}

proof of prid1 {
	step 1 : wff = thm prid1g () |- ( A e. _V -> A e. { A , B } ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- A e. { A , B } ;
	qed prop 1 = step 2 ;
}

theorem prid2 (A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- B e. { A , B } ;
}

proof of prid2 {
	step 1 : wff = thm prid1 (hyp 1) |- B e. { B , A } ;
	step 2 : wff = thm prcom () |- { B , A } = { A , B } ;
	step 3 : wff = thm eleqtri (step 1, step 2) |- B e. { A , B } ;
	qed prop 1 = step 3 ;
}

theorem prprc1 (A : class, B : class)  {
	prop 1 : wff = |- ( -. A e. _V -> { A , B } = { B } ) ;
}

proof of prprc1 {
	step 1 : wff = thm snprc () |- ( -. A e. _V <-> { A } = (/) ) ;
	step 2 : wff = thm uneq1 () |- ( { A } = (/) -> ( { A } u. { B } ) = ( (/) u. { B } ) ) ;
	step 3 : wff = def df-pr () |- { A , B } = ( { A } u. { B } ) ;
	step 4 : wff = thm uncom () |- ( (/) u. { B } ) = ( { B } u. (/) ) ;
	step 5 : wff = thm un0 () |- ( { B } u. (/) ) = { B } ;
	step 6 : wff = thm eqtr2i (step 4, step 5) |- { B } = ( (/) u. { B } ) ;
	step 7 : wff = thm 3eqtr4g (step 2, step 3, step 6) |- ( { A } = (/) -> { A , B } = { B } ) ;
	step 8 : wff = thm sylbi (step 1, step 7) |- ( -. A e. _V -> { A , B } = { B } ) ;
	qed prop 1 = step 8 ;
}

theorem prprc2 (A : class, B : class)  {
	prop 1 : wff = |- ( -. B e. _V -> { A , B } = { A } ) ;
}

proof of prprc2 {
	step 1 : wff = thm prprc1 () |- ( -. B e. _V -> { B , A } = { A } ) ;
	step 2 : wff = thm prcom () |- { A , B } = { B , A } ;
	step 3 : wff = thm syl5eq (step 1, step 2) |- ( -. B e. _V -> { A , B } = { A } ) ;
	qed prop 1 = step 3 ;
}

theorem prprc (A : class, B : class)  {
	prop 1 : wff = |- ( ( -. A e. _V /\ -. B e. _V ) -> { A , B } = (/) ) ;
}

proof of prprc {
	step 1 : wff = thm prprc1 () |- ( -. A e. _V -> { A , B } = { B } ) ;
	step 2 : wff = thm snprc () |- ( -. B e. _V <-> { B } = (/) ) ;
	step 3 : wff = thm biimpi (step 2) |- ( -. B e. _V -> { B } = (/) ) ;
	step 4 : wff = thm sylan9eq (step 1, step 3) |- ( ( -. A e. _V /\ -. B e. _V ) -> { A , B } = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem tpi1 (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- A e. { A , B , C } ;
}

proof of tpi1 {
	step 1 : wff = thm prid1 (hyp 1) |- A e. { A , B } ;
	step 2 : wff = thm elun1 () |- ( A e. { A , B } -> A e. ( { A , B } u. { C } ) ) ;
	step 3 : wff = def df-tp () |- { A , B , C } = ( { A , B } u. { C } ) ;
	step 4 : wff = thm syl6eleqr (step 2, step 3) |- ( A e. { A , B } -> A e. { A , B , C } ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- A e. { A , B , C } ;
	qed prop 1 = step 5 ;
}

theorem tpi2 (A : class, B : class, C : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- B e. { A , B , C } ;
}

proof of tpi2 {
	step 1 : wff = thm prid2 (hyp 1) |- B e. { A , B } ;
	step 2 : wff = thm elun1 () |- ( B e. { A , B } -> B e. ( { A , B } u. { C } ) ) ;
	step 3 : wff = def df-tp () |- { A , B , C } = ( { A , B } u. { C } ) ;
	step 4 : wff = thm syl6eleqr (step 2, step 3) |- ( B e. { A , B } -> B e. { A , B , C } ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- B e. { A , B , C } ;
	qed prop 1 = step 5 ;
}

theorem tpi3 (A : class, B : class, C : class)  {
	hyp 1 : wff = |- C e. _V ;
	-----------------------
	prop 1 : wff = |- C e. { A , B , C } ;
}

proof of tpi3 {
	step 1 : wff = thm snid (hyp 1) |- C e. { C } ;
	step 2 : wff = thm elun2 () |- ( C e. { C } -> C e. ( { A , B } u. { C } ) ) ;
	step 3 : wff = def df-tp () |- { A , B , C } = ( { A , B } u. { C } ) ;
	step 4 : wff = thm syl6eleqr (step 2, step 3) |- ( C e. { C } -> C e. { A , B , C } ) ;
	step 5 : wff = axm ax-mp (step 1, step 4) |- C e. { A , B , C } ;
	qed prop 1 = step 5 ;
}

theorem snnzg (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> { A } =/= (/) ) ;
}

proof of snnzg {
	step 1 : wff = thm snidg () |- ( A e. B -> A e. { A } ) ;
	step 2 : wff = thm ne0i () |- ( A e. { A } -> { A } =/= (/) ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A e. B -> { A } =/= (/) ) ;
	qed prop 1 = step 3 ;
}

theorem snnz (A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- { A } =/= (/) ;
}

proof of snnz {
	step 1 : wff = thm snnzg () |- ( A e. _V -> { A } =/= (/) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- { A } =/= (/) ;
	qed prop 1 = step 2 ;
}

theorem prnz (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- { A , B } =/= (/) ;
}

proof of prnz {
	step 1 : wff = thm prid1 (hyp 1) |- A e. { A , B } ;
	step 2 : wff = thm ne0i () |- ( A e. { A , B } -> { A , B } =/= (/) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- { A , B } =/= (/) ;
	qed prop 1 = step 3 ;
}

theorem tpnz (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- { A , B , C } =/= (/) ;
}

proof of tpnz {
	step 1 : wff = thm tpi1 (hyp 1) |- A e. { A , B , C } ;
	step 2 : wff = thm ne0i () |- ( A e. { A , B , C } -> { A , B , C } =/= (/) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- { A , B , C } =/= (/) ;
	qed prop 1 = step 3 ;
}

theorem snss (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. B <-> { A } C_ B ) ;
}

proof of snss {
	var x : set;
	step 1 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 2 : wff = thm imbi1i (step 1) |- ( ( x e. { A } -> x e. B ) <-> ( x = A -> x e. B ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( x e. { A } -> x e. B ) <-> A. x ( x = A -> x e. B ) ) ;
	step 4 : wff = thm dfss2 () |- ( { A } C_ B <-> A. x ( x e. { A } -> x e. B ) ) ;
	step 5 : wff = thm clel2 (hyp 1) |- ( A e. B <-> A. x ( x = A -> x e. B ) ) ;
	step 6 : wff = thm 3bitr4ri (step 3, step 4, step 5) |- ( A e. B <-> { A } C_ B ) ;
	qed prop 1 = step 6 ;
}

theorem eldifsn (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. ( B \ { C } ) <-> ( A e. B /\ A =/= C ) ) ;
}

proof of eldifsn {
	step 1 : wff = thm eldif () |- ( A e. ( B \ { C } ) <-> ( A e. B /\ -. A e. { C } ) ) ;
	step 2 : wff = thm elsncg () |- ( A e. B -> ( A e. { C } <-> A = C ) ) ;
	step 3 : wff = thm necon3bbid (step 2) |- ( A e. B -> ( -. A e. { C } <-> A =/= C ) ) ;
	step 4 : wff = thm pm5_32i (step 3) |- ( ( A e. B /\ -. A e. { C } ) <-> ( A e. B /\ A =/= C ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( A e. ( B \ { C } ) <-> ( A e. B /\ A =/= C ) ) ;
	qed prop 1 = step 5 ;
}

theorem snssg (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( A e. B <-> { A } C_ B ) ) ;
}

proof of snssg {
	var x : set;
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. B <-> A e. B ) ) ;
	step 2 : wff = thm sneq () |- ( x = A -> { x } = { A } ) ;
	step 3 : wff = thm sseq1d (step 2) |- ( x = A -> ( { x } C_ B <-> { A } C_ B ) ) ;
	step 4 : wff = thm visset () |- x e. _V ;
	step 5 : wff = thm snss (step 4) |- ( x e. B <-> { x } C_ B ) ;
	step 6 : wff = thm vtoclbg (step 1, step 3, step 5) |- ( A e. C -> ( A e. B <-> { A } C_ B ) ) ;
	qed prop 1 = step 6 ;
}

theorem difsn (A : class, B : class)  {
	prop 1 : wff = |- ( -. A e. B -> ( B \ { A } ) = B ) ;
}

proof of difsn {
	var x : set;
	step 1 : wff = thm difss () |- ( B \ { A } ) C_ B ;
	step 2 : wff = thm a1i (step 1) |- ( -. A e. B -> ( B \ { A } ) C_ B ) ;
	step 3 : wff = thm nelneq () |- ( ( x e. B /\ -. A e. B ) -> -. x = A ) ;
	step 4 : wff = def df-ne () |- ( x =/= A <-> -. x = A ) ;
	step 5 : wff = thm sylibr (step 3, step 4) |- ( ( x e. B /\ -. A e. B ) -> x =/= A ) ;
	step 6 : wff = thm expcom (step 5) |- ( -. A e. B -> ( x e. B -> x =/= A ) ) ;
	step 7 : wff = thm ancld (step 6) |- ( -. A e. B -> ( x e. B -> ( x e. B /\ x =/= A ) ) ) ;
	step 8 : wff = thm eldifsn () |- ( x e. ( B \ { A } ) <-> ( x e. B /\ x =/= A ) ) ;
	step 9 : wff = thm syl6ibr (step 7, step 8) |- ( -. A e. B -> ( x e. B -> x e. ( B \ { A } ) ) ) ;
	step 10 : wff = thm ssrdv (step 9) |- ( -. A e. B -> B C_ ( B \ { A } ) ) ;
	step 11 : wff = thm eqssd (step 2, step 10) |- ( -. A e. B -> ( B \ { A } ) = B ) ;
	qed prop 1 = step 11 ;
}

theorem difprsn (A : class, B : class)  {
	prop 1 : wff = |- ( { A , B } \ { A } ) C_ { B } ;
}

proof of difprsn {
	var x : set;
	step 1 : wff = thm pm3_26 () |- ( ( x = B /\ -. x = A ) -> x = B ) ;
	step 2 : wff = thm eldifsn () |- ( x e. ( { A , B } \ { A } ) <-> ( x e. { A , B } /\ x =/= A ) ) ;
	step 3 : wff = thm visset () |- x e. _V ;
	step 4 : wff = thm elpr (step 3) |- ( x e. { A , B } <-> ( x = A \/ x = B ) ) ;
	step 5 : wff = thm orcom () |- ( ( x = A \/ x = B ) <-> ( x = B \/ x = A ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( x e. { A , B } <-> ( x = B \/ x = A ) ) ;
	step 7 : wff = def df-ne () |- ( x =/= A <-> -. x = A ) ;
	step 8 : wff = thm anbi12i (step 6, step 7) |- ( ( x e. { A , B } /\ x =/= A ) <-> ( ( x = B \/ x = A ) /\ -. x = A ) ) ;
	step 9 : wff = thm pm5_61 () |- ( ( ( x = B \/ x = A ) /\ -. x = A ) <-> ( x = B /\ -. x = A ) ) ;
	step 10 : wff = thm 3bitri (step 2, step 8, step 9) |- ( x e. ( { A , B } \ { A } ) <-> ( x = B /\ -. x = A ) ) ;
	step 11 : wff = thm elsn () |- ( x e. { B } <-> x = B ) ;
	step 12 : wff = thm 3imtr4i (step 1, step 10, step 11) |- ( x e. ( { A , B } \ { A } ) -> x e. { B } ) ;
	step 13 : wff = thm ssriv (step 12) |- ( { A , B } \ { A } ) C_ { B } ;
	qed prop 1 = step 13 ;
}

theorem snssi (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> { A } C_ B ) ;
}

proof of snssi {
	step 1 : wff = thm snssg () |- ( A e. B -> ( A e. B <-> { A } C_ B ) ) ;
	step 2 : wff = thm ibi (step 1) |- ( A e. B -> { A } C_ B ) ;
	qed prop 1 = step 2 ;
}

theorem difsnid (A : class, B : class)  {
	prop 1 : wff = |- ( B e. A -> ( ( A \ { B } ) u. { B } ) = A ) ;
}

proof of difsnid {
	step 1 : wff = thm snssi () |- ( B e. A -> { B } C_ A ) ;
	step 2 : wff = thm undif () |- ( { B } C_ A <-> ( { B } u. ( A \ { B } ) ) = A ) ;
	step 3 : wff = thm sylib (step 1, step 2) |- ( B e. A -> ( { B } u. ( A \ { B } ) ) = A ) ;
	step 4 : wff = thm uncom () |- ( ( A \ { B } ) u. { B } ) = ( { B } u. ( A \ { B } ) ) ;
	step 5 : wff = thm syl5eq (step 3, step 4) |- ( B e. A -> ( ( A \ { B } ) u. { B } ) = A ) ;
	qed prop 1 = step 5 ;
}

theorem pw0 ()  {
	prop 1 : wff = |- ~P (/) = { (/) } ;
}

proof of pw0 {
	var x : set;
	step 1 : wff = def df-pw () |- ~P (/) = { x | x C_ (/) } ;
	step 2 : wff = thm abeq2i (step 1) |- ( x e. ~P (/) <-> x C_ (/) ) ;
	step 3 : wff = thm ss0b () |- ( x C_ (/) <-> x = (/) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( x e. ~P (/) <-> x = (/) ) ;
	step 5 : wff = thm abbi2i (step 4) |- ~P (/) = { x | x = (/) } ;
	step 6 : wff = def df-sn () |- { (/) } = { x | x = (/) } ;
	step 7 : wff = thm eqtr4i (step 5, step 6) |- ~P (/) = { (/) } ;
	qed prop 1 = step 7 ;
}

theorem pwpw0 ()  {
	prop 1 : wff = |- ~P { (/) } = { (/) , { (/) } } ;
}

proof of pwpw0 {
	var x : set, y : set;
	step 1 : wff = thm dfss2 () |- ( x C_ { (/) } <-> A. y ( y e. x -> y e. { (/) } ) ) ;
	step 2 : wff = thm elsn () |- ( y e. { (/) } <-> y = (/) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( y e. x -> y e. { (/) } ) <-> ( y e. x -> y = (/) ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. y ( y e. x -> y e. { (/) } ) <-> A. y ( y e. x -> y = (/) ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( x C_ { (/) } <-> A. y ( y e. x -> y = (/) ) ) ;
	step 6 : wff = thm exintr () |- ( A. y ( y e. x -> y = (/) ) -> ( E. y y e. x -> E. y ( y e. x /\ y = (/) ) ) ) ;
	step 7 : wff = thm neq0 () |- ( -. x = (/) <-> E. y y e. x ) ;
	step 8 : wff = thm syl5ib (step 6, step 7) |- ( A. y ( y e. x -> y = (/) ) -> ( -. x = (/) -> E. y ( y e. x /\ y = (/) ) ) ) ;
	step 9 : wff = thm exancom () |- ( E. y ( y e. x /\ y = (/) ) <-> E. y ( y = (/) /\ y e. x ) ) ;
	step 10 : wff = def df-clel () |- ( (/) e. x <-> E. y ( y = (/) /\ y e. x ) ) ;
	step 11 : wff = thm bitr4i (step 9, step 10) |- ( E. y ( y e. x /\ y = (/) ) <-> (/) e. x ) ;
	step 12 : wff = thm snssi () |- ( (/) e. x -> { (/) } C_ x ) ;
	step 13 : wff = thm sylbi (step 11, step 12) |- ( E. y ( y e. x /\ y = (/) ) -> { (/) } C_ x ) ;
	step 14 : wff = thm syl6 (step 8, step 13) |- ( A. y ( y e. x -> y = (/) ) -> ( -. x = (/) -> { (/) } C_ x ) ) ;
	step 15 : wff = thm sylbi (step 5, step 14) |- ( x C_ { (/) } -> ( -. x = (/) -> { (/) } C_ x ) ) ;
	step 16 : wff = thm anc2li (step 15) |- ( x C_ { (/) } -> ( -. x = (/) -> ( x C_ { (/) } /\ { (/) } C_ x ) ) ) ;
	step 17 : wff = thm eqss () |- ( x = { (/) } <-> ( x C_ { (/) } /\ { (/) } C_ x ) ) ;
	step 18 : wff = thm syl6ibr (step 16, step 17) |- ( x C_ { (/) } -> ( -. x = (/) -> x = { (/) } ) ) ;
	step 19 : wff = thm orrd (step 18) |- ( x C_ { (/) } -> ( x = (/) \/ x = { (/) } ) ) ;
	step 20 : wff = thm 0ss () |- (/) C_ { (/) } ;
	step 21 : wff = thm sseq1 () |- ( x = (/) -> ( x C_ { (/) } <-> (/) C_ { (/) } ) ) ;
	step 22 : wff = thm mpbiri (step 20, step 21) |- ( x = (/) -> x C_ { (/) } ) ;
	step 23 : wff = thm eqimss () |- ( x = { (/) } -> x C_ { (/) } ) ;
	step 24 : wff = thm jaoi (step 22, step 23) |- ( ( x = (/) \/ x = { (/) } ) -> x C_ { (/) } ) ;
	step 25 : wff = thm impbii (step 19, step 24) |- ( x C_ { (/) } <-> ( x = (/) \/ x = { (/) } ) ) ;
	step 26 : wff = thm abbii (step 25) |- { x | x C_ { (/) } } = { x | ( x = (/) \/ x = { (/) } ) } ;
	step 27 : wff = def df-pw () |- ~P { (/) } = { x | x C_ { (/) } } ;
	step 28 : wff = thm dfpr2 () |- { (/) , { (/) } } = { x | ( x = (/) \/ x = { (/) } ) } ;
	step 29 : wff = thm 3eqtr4i (step 26, step 27, step 28) |- ~P { (/) } = { (/) , { (/) } } ;
	qed prop 1 = step 29 ;
}

theorem snsspr1 (A : class, B : class)  {
	prop 1 : wff = |- { A } C_ { A , B } ;
}

proof of snsspr1 {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm orci (step 1) |- ( A = A \/ A = B ) ;
	step 3 : wff = thm elprg () |- ( A e. _V -> ( A e. { A , B } <-> ( A = A \/ A = B ) ) ) ;
	step 4 : wff = thm mpbiri (step 2, step 3) |- ( A e. _V -> A e. { A , B } ) ;
	step 5 : wff = thm snssi () |- ( A e. { A , B } -> { A } C_ { A , B } ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( A e. _V -> { A } C_ { A , B } ) ;
	step 7 : wff = thm snprc () |- ( -. A e. _V <-> { A } = (/) ) ;
	step 8 : wff = thm biimpi (step 7) |- ( -. A e. _V -> { A } = (/) ) ;
	step 9 : wff = thm 0ss () |- (/) C_ { A , B } ;
	step 10 : wff = thm a1i (step 9) |- ( -. A e. _V -> (/) C_ { A , B } ) ;
	step 11 : wff = thm eqsstrd (step 8, step 10) |- ( -. A e. _V -> { A } C_ { A , B } ) ;
	step 12 : wff = thm pm2_61i (step 6, step 11) |- { A } C_ { A , B } ;
	qed prop 1 = step 12 ;
}

theorem snsspr2 (A : class, B : class)  {
	prop 1 : wff = |- { B } C_ { A , B } ;
}

proof of snsspr2 {
	step 1 : wff = thm snsspr1 () |- { B } C_ { B , A } ;
	step 2 : wff = thm prcom () |- { B , A } = { A , B } ;
	step 3 : wff = thm sseqtri (step 1, step 2) |- { B } C_ { A , B } ;
	qed prop 1 = step 3 ;
}

theorem prss (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ;
}

proof of prss {
	var x : set;
	step 1 : wff = thm eleq1a () |- ( A e. C -> ( x = A -> x e. C ) ) ;
	step 2 : wff = thm eleq1a () |- ( B e. C -> ( x = B -> x e. C ) ) ;
	step 3 : wff = thm jaao (step 1, step 2) |- ( ( A e. C /\ B e. C ) -> ( ( x = A \/ x = B ) -> x e. C ) ) ;
	step 4 : wff = thm visset () |- x e. _V ;
	step 5 : wff = thm elpr (step 4) |- ( x e. { A , B } <-> ( x = A \/ x = B ) ) ;
	step 6 : wff = thm syl5ib (step 3, step 5) |- ( ( A e. C /\ B e. C ) -> ( x e. { A , B } -> x e. C ) ) ;
	step 7 : wff = thm ssrdv (step 6) |- ( ( A e. C /\ B e. C ) -> { A , B } C_ C ) ;
	step 8 : wff = thm prid1 (hyp 1) |- A e. { A , B } ;
	step 9 : wff = thm ssel () |- ( { A , B } C_ C -> ( A e. { A , B } -> A e. C ) ) ;
	step 10 : wff = thm mpi (step 8, step 9) |- ( { A , B } C_ C -> A e. C ) ;
	step 11 : wff = thm prid2 (hyp 2) |- B e. { A , B } ;
	step 12 : wff = thm ssel () |- ( { A , B } C_ C -> ( B e. { A , B } -> B e. C ) ) ;
	step 13 : wff = thm mpi (step 11, step 12) |- ( { A , B } C_ C -> B e. C ) ;
	step 14 : wff = thm jca (step 10, step 13) |- ( { A , B } C_ C -> ( A e. C /\ B e. C ) ) ;
	step 15 : wff = thm impbii (step 7, step 14) |- ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ;
	qed prop 1 = step 15 ;
}

theorem prssg (A : class, B : class, C : class, R : class, S : class)  {
	prop 1 : wff = |- ( ( A e. R /\ B e. S ) -> ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) ;
}

proof of prssg {
	var x : set, y : set;
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. C <-> A e. C ) ) ;
	step 2 : wff = thm anbi1d (step 1) |- ( x = A -> ( ( x e. C /\ y e. C ) <-> ( A e. C /\ y e. C ) ) ) ;
	step 3 : wff = thm preq1 () |- ( x = A -> { x , y } = { A , y } ) ;
	step 4 : wff = thm sseq1d (step 3) |- ( x = A -> ( { x , y } C_ C <-> { A , y } C_ C ) ) ;
	step 5 : wff = thm bibi12d (step 2, step 4) |- ( x = A -> ( ( ( x e. C /\ y e. C ) <-> { x , y } C_ C ) <-> ( ( A e. C /\ y e. C ) <-> { A , y } C_ C ) ) ) ;
	step 6 : wff = thm eleq1 () |- ( y = B -> ( y e. C <-> B e. C ) ) ;
	step 7 : wff = thm anbi2d (step 6) |- ( y = B -> ( ( A e. C /\ y e. C ) <-> ( A e. C /\ B e. C ) ) ) ;
	step 8 : wff = thm preq2 () |- ( y = B -> { A , y } = { A , B } ) ;
	step 9 : wff = thm sseq1d (step 8) |- ( y = B -> ( { A , y } C_ C <-> { A , B } C_ C ) ) ;
	step 10 : wff = thm bibi12d (step 7, step 9) |- ( y = B -> ( ( ( A e. C /\ y e. C ) <-> { A , y } C_ C ) <-> ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) ) ;
	step 11 : wff = thm visset () |- x e. _V ;
	step 12 : wff = thm visset () |- y e. _V ;
	step 13 : wff = thm prss (step 11, step 12) |- ( ( x e. C /\ y e. C ) <-> { x , y } C_ C ) ;
	step 14 : wff = thm vtocl2g (step 5, step 10, step 13) |- ( ( A e. R /\ B e. S ) -> ( ( A e. C /\ B e. C ) <-> { A , B } C_ C ) ) ;
	qed prop 1 = step 14 ;
}

theorem sssn (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) ;
}

proof of sssn {
	var x : set;
	step 1 : wff = thm ssel () |- ( A C_ { B } -> ( x e. A -> x e. { B } ) ) ;
	step 2 : wff = thm elsni () |- ( x e. { B } -> x = B ) ;
	step 3 : wff = thm syl6 (step 1, step 2) |- ( A C_ { B } -> ( x e. A -> x = B ) ) ;
	step 4 : wff = thm eleq1 () |- ( x = B -> ( x e. A <-> B e. A ) ) ;
	step 5 : wff = thm syl6 (step 3, step 4) |- ( A C_ { B } -> ( x e. A -> ( x e. A <-> B e. A ) ) ) ;
	step 6 : wff = thm ibd (step 5) |- ( A C_ { B } -> ( x e. A -> B e. A ) ) ;
	step 7 : wff = thm 19_23adv (step 6) |- ( A C_ { B } -> ( E. x x e. A -> B e. A ) ) ;
	step 8 : wff = thm neq0 () |- ( -. A = (/) <-> E. x x e. A ) ;
	step 9 : wff = thm syl5ib (step 7, step 8) |- ( A C_ { B } -> ( -. A = (/) -> B e. A ) ) ;
	step 10 : wff = thm snssi () |- ( B e. A -> { B } C_ A ) ;
	step 11 : wff = thm syl6 (step 9, step 10) |- ( A C_ { B } -> ( -. A = (/) -> { B } C_ A ) ) ;
	step 12 : wff = thm anc2li (step 11) |- ( A C_ { B } -> ( -. A = (/) -> ( A C_ { B } /\ { B } C_ A ) ) ) ;
	step 13 : wff = thm eqss () |- ( A = { B } <-> ( A C_ { B } /\ { B } C_ A ) ) ;
	step 14 : wff = thm syl6ibr (step 12, step 13) |- ( A C_ { B } -> ( -. A = (/) -> A = { B } ) ) ;
	step 15 : wff = thm orrd (step 14) |- ( A C_ { B } -> ( A = (/) \/ A = { B } ) ) ;
	step 16 : wff = thm 0ss () |- (/) C_ { B } ;
	step 17 : wff = thm sseq1 () |- ( A = (/) -> ( A C_ { B } <-> (/) C_ { B } ) ) ;
	step 18 : wff = thm mpbiri (step 16, step 17) |- ( A = (/) -> A C_ { B } ) ;
	step 19 : wff = thm eqimss () |- ( A = { B } -> A C_ { B } ) ;
	step 20 : wff = thm jaoi (step 18, step 19) |- ( ( A = (/) \/ A = { B } ) -> A C_ { B } ) ;
	step 21 : wff = thm impbii (step 15, step 20) |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) ;
	qed prop 1 = step 21 ;
}

theorem eqsn (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A =/= (/) -> ( A = { B } <-> A. x e. A x = B ) ) ;
}

proof of eqsn {
	step 1 : wff = thm eqimss () |- ( A = { B } -> A C_ { B } ) ;
	step 2 : wff = thm sssn () |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) ;
	step 3 : wff = thm biimpi (step 2) |- ( A C_ { B } -> ( A = (/) \/ A = { B } ) ) ;
	step 4 : wff = thm ord (step 3) |- ( A C_ { B } -> ( -. A = (/) -> A = { B } ) ) ;
	step 5 : wff = def df-ne () |- ( A =/= (/) <-> -. A = (/) ) ;
	step 6 : wff = thm syl5ib (step 4, step 5) |- ( A C_ { B } -> ( A =/= (/) -> A = { B } ) ) ;
	step 7 : wff = thm com12 (step 6) |- ( A =/= (/) -> ( A C_ { B } -> A = { B } ) ) ;
	step 8 : wff = thm impbid2 (step 1, step 7) |- ( A =/= (/) -> ( A = { B } <-> A C_ { B } ) ) ;
	step 9 : wff = thm dfss3 () |- ( A C_ { B } <-> A. x e. A x e. { B } ) ;
	step 10 : wff = thm elsn () |- ( x e. { B } <-> x = B ) ;
	step 11 : wff = thm ralbii (step 10) |- ( A. x e. A x e. { B } <-> A. x e. A x = B ) ;
	step 12 : wff = thm bitri (step 9, step 11) |- ( A C_ { B } <-> A. x e. A x = B ) ;
	step 13 : wff = thm syl6bb (step 8, step 12) |- ( A =/= (/) -> ( A = { B } <-> A. x e. A x = B ) ) ;
	qed prop 1 = step 13 ;
}

theorem sspr (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ { B , C } <-> ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) ;
}

proof of sspr {
	step 1 : wff = thm simpll () |- ( ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) /\ -. A = { C } ) -> A C_ { B , C } ) ;
	step 2 : wff = thm prssg () |- ( ( B e. A /\ C e. A ) -> ( ( B e. A /\ C e. A ) <-> { B , C } C_ A ) ) ;
	step 3 : wff = thm ibi (step 2) |- ( ( B e. A /\ C e. A ) -> { B , C } C_ A ) ;
	step 4 : wff = thm difsn () |- ( -. B e. A -> ( A \ { B } ) = A ) ;
	step 5 : wff = thm adantl (step 4) |- ( ( A C_ { B , C } /\ -. B e. A ) -> ( A \ { B } ) = A ) ;
	step 6 : wff = thm ssdif () |- ( A C_ { B , C } -> ( A \ { B } ) C_ ( { B , C } \ { B } ) ) ;
	step 7 : wff = thm difprsn () |- ( { B , C } \ { B } ) C_ { C } ;
	step 8 : wff = thm a1i (step 7) |- ( A C_ { B , C } -> ( { B , C } \ { B } ) C_ { C } ) ;
	step 9 : wff = thm sstrd (step 6, step 8) |- ( A C_ { B , C } -> ( A \ { B } ) C_ { C } ) ;
	step 10 : wff = thm adantr (step 9) |- ( ( A C_ { B , C } /\ -. B e. A ) -> ( A \ { B } ) C_ { C } ) ;
	step 11 : wff = thm eqsstr3d (step 5, step 10) |- ( ( A C_ { B , C } /\ -. B e. A ) -> A C_ { C } ) ;
	step 12 : wff = thm ex (step 11) |- ( A C_ { B , C } -> ( -. B e. A -> A C_ { C } ) ) ;
	step 13 : wff = thm sssn () |- ( A C_ { C } <-> ( A = (/) \/ A = { C } ) ) ;
	step 14 : wff = thm syl6ib (step 12, step 13) |- ( A C_ { B , C } -> ( -. B e. A -> ( A = (/) \/ A = { C } ) ) ) ;
	step 15 : wff = thm con1d (step 14) |- ( A C_ { B , C } -> ( -. ( A = (/) \/ A = { C } ) -> B e. A ) ) ;
	step 16 : wff = thm imp (step 15) |- ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { C } ) ) -> B e. A ) ;
	step 17 : wff = thm pm2_45 () |- ( -. ( A = (/) \/ A = { B } ) -> -. A = (/) ) ;
	step 18 : wff = thm anim1i (step 17) |- ( ( -. ( A = (/) \/ A = { B } ) /\ -. A = { C } ) -> ( -. A = (/) /\ -. A = { C } ) ) ;
	step 19 : wff = thm ioran () |- ( -. ( A = (/) \/ A = { C } ) <-> ( -. A = (/) /\ -. A = { C } ) ) ;
	step 20 : wff = thm sylibr (step 18, step 19) |- ( ( -. ( A = (/) \/ A = { B } ) /\ -. A = { C } ) -> -. ( A = (/) \/ A = { C } ) ) ;
	step 21 : wff = thm sylan2 (step 16, step 20) |- ( ( A C_ { B , C } /\ ( -. ( A = (/) \/ A = { B } ) /\ -. A = { C } ) ) -> B e. A ) ;
	step 22 : wff = thm anassrs (step 21) |- ( ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) /\ -. A = { C } ) -> B e. A ) ;
	step 23 : wff = thm difsn () |- ( -. C e. A -> ( A \ { C } ) = A ) ;
	step 24 : wff = thm adantl (step 23) |- ( ( A C_ { B , C } /\ -. C e. A ) -> ( A \ { C } ) = A ) ;
	step 25 : wff = thm prcom () |- { B , C } = { C , B } ;
	step 26 : wff = thm sseq2i (step 25) |- ( A C_ { B , C } <-> A C_ { C , B } ) ;
	step 27 : wff = thm ssdif () |- ( A C_ { C , B } -> ( A \ { C } ) C_ ( { C , B } \ { C } ) ) ;
	step 28 : wff = thm sylbi (step 26, step 27) |- ( A C_ { B , C } -> ( A \ { C } ) C_ ( { C , B } \ { C } ) ) ;
	step 29 : wff = thm adantr (step 28) |- ( ( A C_ { B , C } /\ -. C e. A ) -> ( A \ { C } ) C_ ( { C , B } \ { C } ) ) ;
	step 30 : wff = thm difprsn () |- ( { C , B } \ { C } ) C_ { B } ;
	step 31 : wff = thm a1i (step 30) |- ( ( A C_ { B , C } /\ -. C e. A ) -> ( { C , B } \ { C } ) C_ { B } ) ;
	step 32 : wff = thm sstrd (step 29, step 31) |- ( ( A C_ { B , C } /\ -. C e. A ) -> ( A \ { C } ) C_ { B } ) ;
	step 33 : wff = thm eqsstr3d (step 24, step 32) |- ( ( A C_ { B , C } /\ -. C e. A ) -> A C_ { B } ) ;
	step 34 : wff = thm ex (step 33) |- ( A C_ { B , C } -> ( -. C e. A -> A C_ { B } ) ) ;
	step 35 : wff = thm sssn () |- ( A C_ { B } <-> ( A = (/) \/ A = { B } ) ) ;
	step 36 : wff = thm syl6ib (step 34, step 35) |- ( A C_ { B , C } -> ( -. C e. A -> ( A = (/) \/ A = { B } ) ) ) ;
	step 37 : wff = thm con1d (step 36) |- ( A C_ { B , C } -> ( -. ( A = (/) \/ A = { B } ) -> C e. A ) ) ;
	step 38 : wff = thm imp (step 37) |- ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) -> C e. A ) ;
	step 39 : wff = thm adantr (step 38) |- ( ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) /\ -. A = { C } ) -> C e. A ) ;
	step 40 : wff = thm sylanc (step 3, step 22, step 39) |- ( ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) /\ -. A = { C } ) -> { B , C } C_ A ) ;
	step 41 : wff = thm eqssd (step 1, step 40) |- ( ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) /\ -. A = { C } ) -> A = { B , C } ) ;
	step 42 : wff = thm ex (step 41) |- ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) -> ( -. A = { C } -> A = { B , C } ) ) ;
	step 43 : wff = thm orrd (step 42) |- ( ( A C_ { B , C } /\ -. ( A = (/) \/ A = { B } ) ) -> ( A = { C } \/ A = { B , C } ) ) ;
	step 44 : wff = thm ex (step 43) |- ( A C_ { B , C } -> ( -. ( A = (/) \/ A = { B } ) -> ( A = { C } \/ A = { B , C } ) ) ) ;
	step 45 : wff = thm orrd (step 44) |- ( A C_ { B , C } -> ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) ;
	step 46 : wff = thm 0ss () |- (/) C_ { B , C } ;
	step 47 : wff = thm sseq1 () |- ( A = (/) -> ( A C_ { B , C } <-> (/) C_ { B , C } ) ) ;
	step 48 : wff = thm mpbiri (step 46, step 47) |- ( A = (/) -> A C_ { B , C } ) ;
	step 49 : wff = thm snsspr1 () |- { B } C_ { B , C } ;
	step 50 : wff = thm sseq1 () |- ( A = { B } -> ( A C_ { B , C } <-> { B } C_ { B , C } ) ) ;
	step 51 : wff = thm mpbiri (step 49, step 50) |- ( A = { B } -> A C_ { B , C } ) ;
	step 52 : wff = thm jaoi (step 48, step 51) |- ( ( A = (/) \/ A = { B } ) -> A C_ { B , C } ) ;
	step 53 : wff = thm snsspr2 () |- { C } C_ { B , C } ;
	step 54 : wff = thm sseq1 () |- ( A = { C } -> ( A C_ { B , C } <-> { C } C_ { B , C } ) ) ;
	step 55 : wff = thm mpbiri (step 53, step 54) |- ( A = { C } -> A C_ { B , C } ) ;
	step 56 : wff = thm eqimss () |- ( A = { B , C } -> A C_ { B , C } ) ;
	step 57 : wff = thm jaoi (step 55, step 56) |- ( ( A = { C } \/ A = { B , C } ) -> A C_ { B , C } ) ;
	step 58 : wff = thm jaoi (step 52, step 57) |- ( ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) -> A C_ { B , C } ) ;
	step 59 : wff = thm impbii (step 45, step 58) |- ( A C_ { B , C } <-> ( ( A = (/) \/ A = { B } ) \/ ( A = { C } \/ A = { B , C } ) ) ) ;
	qed prop 1 = step 59 ;
}

theorem tpss (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	-----------------------
	prop 1 : wff = |- ( ( A e. D /\ B e. D /\ C e. D ) <-> { A , B , C } C_ D ) ;
}

proof of tpss {
	var x : set;
	step 1 : wff = thm 3jao () |- ( ( ( x = A -> x e. D ) /\ ( x = B -> x e. D ) /\ ( x = C -> x e. D ) ) -> ( ( x = A \/ x = B \/ x = C ) -> x e. D ) ) ;
	step 2 : wff = thm eleq1a () |- ( A e. D -> ( x = A -> x e. D ) ) ;
	step 3 : wff = thm eleq1a () |- ( B e. D -> ( x = B -> x e. D ) ) ;
	step 4 : wff = thm eleq1a () |- ( C e. D -> ( x = C -> x e. D ) ) ;
	step 5 : wff = thm syl3an (step 1, step 2, step 3, step 4) |- ( ( A e. D /\ B e. D /\ C e. D ) -> ( ( x = A \/ x = B \/ x = C ) -> x e. D ) ) ;
	step 6 : wff = thm visset () |- x e. _V ;
	step 7 : wff = thm eltp (step 6) |- ( x e. { A , B , C } <-> ( x = A \/ x = B \/ x = C ) ) ;
	step 8 : wff = thm syl5ib (step 5, step 7) |- ( ( A e. D /\ B e. D /\ C e. D ) -> ( x e. { A , B , C } -> x e. D ) ) ;
	step 9 : wff = thm ssrdv (step 8) |- ( ( A e. D /\ B e. D /\ C e. D ) -> { A , B , C } C_ D ) ;
	step 10 : wff = thm tpi1 (hyp 1) |- A e. { A , B , C } ;
	step 11 : wff = thm ssel () |- ( { A , B , C } C_ D -> ( A e. { A , B , C } -> A e. D ) ) ;
	step 12 : wff = thm mpi (step 10, step 11) |- ( { A , B , C } C_ D -> A e. D ) ;
	step 13 : wff = thm tpi2 (hyp 2) |- B e. { A , B , C } ;
	step 14 : wff = thm ssel () |- ( { A , B , C } C_ D -> ( B e. { A , B , C } -> B e. D ) ) ;
	step 15 : wff = thm mpi (step 13, step 14) |- ( { A , B , C } C_ D -> B e. D ) ;
	step 16 : wff = thm tpi3 (hyp 3) |- C e. { A , B , C } ;
	step 17 : wff = thm ssel () |- ( { A , B , C } C_ D -> ( C e. { A , B , C } -> C e. D ) ) ;
	step 18 : wff = thm mpi (step 16, step 17) |- ( { A , B , C } C_ D -> C e. D ) ;
	step 19 : wff = thm 3jca (step 12, step 15, step 18) |- ( { A , B , C } C_ D -> ( A e. D /\ B e. D /\ C e. D ) ) ;
	step 20 : wff = thm impbii (step 9, step 19) |- ( ( A e. D /\ B e. D /\ C e. D ) <-> { A , B , C } C_ D ) ;
	qed prop 1 = step 20 ;
}

theorem sneqr (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( { A } = { B } -> A = B ) ;
}

proof of sneqr {
	step 1 : wff = thm snid (hyp 1) |- A e. { A } ;
	step 2 : wff = thm eleq2 () |- ( { A } = { B } -> ( A e. { A } <-> A e. { B } ) ) ;
	step 3 : wff = thm mpbii (step 1, step 2) |- ( { A } = { B } -> A e. { B } ) ;
	step 4 : wff = thm elsnc (hyp 1) |- ( A e. { B } <-> A = B ) ;
	step 5 : wff = thm sylib (step 3, step 4) |- ( { A } = { B } -> A = B ) ;
	qed prop 1 = step 5 ;
}

theorem snsssn (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( { A } C_ { B } -> A = B ) ;
}

proof of snsssn {
	step 1 : wff = thm sssn () |- ( { A } C_ { B } <-> ( { A } = (/) \/ { A } = { B } ) ) ;
	step 2 : wff = thm snnz (hyp 1) |- { A } =/= (/) ;
	step 3 : wff = def df-ne () |- ( { A } =/= (/) <-> -. { A } = (/) ) ;
	step 4 : wff = thm mpbi (step 2, step 3) |- -. { A } = (/) ;
	step 5 : wff = thm pm2_21i (step 4) |- ( { A } = (/) -> A = B ) ;
	step 6 : wff = thm sneqr (hyp 1) |- ( { A } = { B } -> A = B ) ;
	step 7 : wff = thm jaoi (step 5, step 6) |- ( ( { A } = (/) \/ { A } = { B } ) -> A = B ) ;
	step 8 : wff = thm sylbi (step 1, step 7) |- ( { A } C_ { B } -> A = B ) ;
	qed prop 1 = step 8 ;
}

theorem snsspw (A : class)  {
	prop 1 : wff = |- { A } C_ ~P A ;
}

proof of snsspw {
	var x : set;
	step 1 : wff = thm eqimss () |- ( x = A -> x C_ A ) ;
	step 2 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 3 : wff = def df-pw () |- ~P A = { x | x C_ A } ;
	step 4 : wff = thm abeq2i (step 3) |- ( x e. ~P A <-> x C_ A ) ;
	step 5 : wff = thm 3imtr4i (step 1, step 2, step 4) |- ( x e. { A } -> x e. ~P A ) ;
	step 6 : wff = thm ssriv (step 5) |- { A } C_ ~P A ;
	qed prop 1 = step 6 ;
}

theorem prsspw (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( { A , B } C_ ~P C <-> ( A C_ C /\ B C_ C ) ) ;
}

proof of prsspw {
	var x : set;
	step 1 : wff = thm dfss2 () |- ( { A , B } C_ ~P C <-> A. x ( x e. { A , B } -> x e. ~P C ) ) ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm elpr (step 2) |- ( x e. { A , B } <-> ( x = A \/ x = B ) ) ;
	step 4 : wff = thm visset () |- x e. _V ;
	step 5 : wff = thm elpw (step 4) |- ( x e. ~P C <-> x C_ C ) ;
	step 6 : wff = thm imbi12i (step 3, step 5) |- ( ( x e. { A , B } -> x e. ~P C ) <-> ( ( x = A \/ x = B ) -> x C_ C ) ) ;
	step 7 : wff = thm jaob () |- ( ( ( x = A \/ x = B ) -> x C_ C ) <-> ( ( x = A -> x C_ C ) /\ ( x = B -> x C_ C ) ) ) ;
	step 8 : wff = thm bitri (step 6, step 7) |- ( ( x e. { A , B } -> x e. ~P C ) <-> ( ( x = A -> x C_ C ) /\ ( x = B -> x C_ C ) ) ) ;
	step 9 : wff = thm albii (step 8) |- ( A. x ( x e. { A , B } -> x e. ~P C ) <-> A. x ( ( x = A -> x C_ C ) /\ ( x = B -> x C_ C ) ) ) ;
	step 10 : wff = thm 19_26 () |- ( A. x ( ( x = A -> x C_ C ) /\ ( x = B -> x C_ C ) ) <-> ( A. x ( x = A -> x C_ C ) /\ A. x ( x = B -> x C_ C ) ) ) ;
	step 11 : wff = thm sseq1 () |- ( x = A -> ( x C_ C <-> A C_ C ) ) ;
	step 12 : wff = thm ceqsalv (hyp 1, step 11) |- ( A. x ( x = A -> x C_ C ) <-> A C_ C ) ;
	step 13 : wff = thm sseq1 () |- ( x = B -> ( x C_ C <-> B C_ C ) ) ;
	step 14 : wff = thm ceqsalv (hyp 2, step 13) |- ( A. x ( x = B -> x C_ C ) <-> B C_ C ) ;
	step 15 : wff = thm anbi12i (step 12, step 14) |- ( ( A. x ( x = A -> x C_ C ) /\ A. x ( x = B -> x C_ C ) ) <-> ( A C_ C /\ B C_ C ) ) ;
	step 16 : wff = thm bitri (step 10, step 15) |- ( A. x ( ( x = A -> x C_ C ) /\ ( x = B -> x C_ C ) ) <-> ( A C_ C /\ B C_ C ) ) ;
	step 17 : wff = thm 3bitri (step 1, step 9, step 16) |- ( { A , B } C_ ~P C <-> ( A C_ C /\ B C_ C ) ) ;
	qed prop 1 = step 17 ;
}

theorem preqr1 (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( { A , C } = { B , C } -> A = B ) ;
}

proof of preqr1 {
	step 1 : wff = thm prid1 (hyp 1) |- A e. { A , C } ;
	step 2 : wff = thm eleq2 () |- ( { A , C } = { B , C } -> ( A e. { A , C } <-> A e. { B , C } ) ) ;
	step 3 : wff = thm mpbii (step 1, step 2) |- ( { A , C } = { B , C } -> A e. { B , C } ) ;
	step 4 : wff = thm elpr (hyp 1) |- ( A e. { B , C } <-> ( A = B \/ A = C ) ) ;
	step 5 : wff = thm sylib (step 3, step 4) |- ( { A , C } = { B , C } -> ( A = B \/ A = C ) ) ;
	step 6 : wff = thm prid1 (hyp 2) |- B e. { B , C } ;
	step 7 : wff = thm eleq2 () |- ( { A , C } = { B , C } -> ( B e. { A , C } <-> B e. { B , C } ) ) ;
	step 8 : wff = thm mpbiri (step 6, step 7) |- ( { A , C } = { B , C } -> B e. { A , C } ) ;
	step 9 : wff = thm elpr (hyp 2) |- ( B e. { A , C } <-> ( B = A \/ B = C ) ) ;
	step 10 : wff = thm sylib (step 8, step 9) |- ( { A , C } = { B , C } -> ( B = A \/ B = C ) ) ;
	step 11 : wff = thm eqcom () |- ( A = B <-> B = A ) ;
	step 12 : wff = thm eqeq2 () |- ( A = C -> ( B = A <-> B = C ) ) ;
	step 13 : wff = thm oplem1 (step 5, step 10, step 11, step 12) |- ( { A , C } = { B , C } -> A = B ) ;
	qed prop 1 = step 13 ;
}

theorem preqr2 (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- ( { C , A } = { C , B } -> A = B ) ;
}

proof of preqr2 {
	step 1 : wff = thm prcom () |- { C , A } = { A , C } ;
	step 2 : wff = thm prcom () |- { C , B } = { B , C } ;
	step 3 : wff = thm eqeq12i (step 1, step 2) |- ( { C , A } = { C , B } <-> { A , C } = { B , C } ) ;
	step 4 : wff = thm preqr1 (hyp 1, hyp 2) |- ( { A , C } = { B , C } -> A = B ) ;
	step 5 : wff = thm sylbi (step 3, step 4) |- ( { C , A } = { C , B } -> A = B ) ;
	qed prop 1 = step 5 ;
}

theorem preq12b (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	hyp 4 : wff = |- D e. _V ;
	-----------------------
	prop 1 : wff = |- ( { A , B } = { C , D } <-> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ;
}

proof of preq12b {
	step 1 : wff = thm prid1 (hyp 1) |- A e. { A , B } ;
	step 2 : wff = thm eleq2 () |- ( { A , B } = { C , D } -> ( A e. { A , B } <-> A e. { C , D } ) ) ;
	step 3 : wff = thm mpbii (step 1, step 2) |- ( { A , B } = { C , D } -> A e. { C , D } ) ;
	step 4 : wff = thm elpr (hyp 1) |- ( A e. { C , D } <-> ( A = C \/ A = D ) ) ;
	step 5 : wff = thm sylib (step 3, step 4) |- ( { A , B } = { C , D } -> ( A = C \/ A = D ) ) ;
	step 6 : wff = thm preq1 () |- ( A = C -> { A , B } = { C , B } ) ;
	step 7 : wff = thm eqeq1d (step 6) |- ( A = C -> ( { A , B } = { C , D } <-> { C , B } = { C , D } ) ) ;
	step 8 : wff = thm preqr2 (hyp 2, hyp 4) |- ( { C , B } = { C , D } -> B = D ) ;
	step 9 : wff = thm syl6bi (step 7, step 8) |- ( A = C -> ( { A , B } = { C , D } -> B = D ) ) ;
	step 10 : wff = thm com12 (step 9) |- ( { A , B } = { C , D } -> ( A = C -> B = D ) ) ;
	step 11 : wff = thm ancld (step 10) |- ( { A , B } = { C , D } -> ( A = C -> ( A = C /\ B = D ) ) ) ;
	step 12 : wff = thm prcom () |- { C , D } = { D , C } ;
	step 13 : wff = thm eqeq2i (step 12) |- ( { A , B } = { C , D } <-> { A , B } = { D , C } ) ;
	step 14 : wff = thm preq1 () |- ( A = D -> { A , B } = { D , B } ) ;
	step 15 : wff = thm eqeq1d (step 14) |- ( A = D -> ( { A , B } = { D , C } <-> { D , B } = { D , C } ) ) ;
	step 16 : wff = thm preqr2 (hyp 2, hyp 3) |- ( { D , B } = { D , C } -> B = C ) ;
	step 17 : wff = thm syl6bi (step 15, step 16) |- ( A = D -> ( { A , B } = { D , C } -> B = C ) ) ;
	step 18 : wff = thm com12 (step 17) |- ( { A , B } = { D , C } -> ( A = D -> B = C ) ) ;
	step 19 : wff = thm sylbi (step 13, step 18) |- ( { A , B } = { C , D } -> ( A = D -> B = C ) ) ;
	step 20 : wff = thm ancld (step 19) |- ( { A , B } = { C , D } -> ( A = D -> ( A = D /\ B = C ) ) ) ;
	step 21 : wff = thm orim12d (step 11, step 20) |- ( { A , B } = { C , D } -> ( ( A = C \/ A = D ) -> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ) ;
	step 22 : wff = thm mpd (step 5, step 21) |- ( { A , B } = { C , D } -> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ;
	step 23 : wff = thm preq1 () |- ( A = C -> { A , B } = { C , B } ) ;
	step 24 : wff = thm preq2 () |- ( B = D -> { C , B } = { C , D } ) ;
	step 25 : wff = thm sylan9eq (step 23, step 24) |- ( ( A = C /\ B = D ) -> { A , B } = { C , D } ) ;
	step 26 : wff = thm preq1 () |- ( A = D -> { A , B } = { D , B } ) ;
	step 27 : wff = thm prcom () |- { D , B } = { B , D } ;
	step 28 : wff = thm syl6eq (step 26, step 27) |- ( A = D -> { A , B } = { B , D } ) ;
	step 29 : wff = thm preq1 () |- ( B = C -> { B , D } = { C , D } ) ;
	step 30 : wff = thm sylan9eq (step 28, step 29) |- ( ( A = D /\ B = C ) -> { A , B } = { C , D } ) ;
	step 31 : wff = thm jaoi (step 25, step 30) |- ( ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) -> { A , B } = { C , D } ) ;
	step 32 : wff = thm impbii (step 22, step 31) |- ( { A , B } = { C , D } <-> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ;
	qed prop 1 = step 32 ;
}

theorem prel12 (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	hyp 4 : wff = |- D e. _V ;
	-----------------------
	prop 1 : wff = |- ( -. A = B -> ( { A , B } = { C , D } <-> ( A e. { C , D } /\ B e. { C , D } ) ) ) ;
}

proof of prel12 {
	step 1 : wff = thm prid1 (hyp 1) |- A e. { A , B } ;
	step 2 : wff = thm eleq2 () |- ( { A , B } = { C , D } -> ( A e. { A , B } <-> A e. { C , D } ) ) ;
	step 3 : wff = thm mpbii (step 1, step 2) |- ( { A , B } = { C , D } -> A e. { C , D } ) ;
	step 4 : wff = thm prid2 (hyp 2) |- B e. { A , B } ;
	step 5 : wff = thm eleq2 () |- ( { A , B } = { C , D } -> ( B e. { A , B } <-> B e. { C , D } ) ) ;
	step 6 : wff = thm mpbii (step 4, step 5) |- ( { A , B } = { C , D } -> B e. { C , D } ) ;
	step 7 : wff = thm jca (step 3, step 6) |- ( { A , B } = { C , D } -> ( A e. { C , D } /\ B e. { C , D } ) ) ;
	step 8 : wff = thm eqeq2 () |- ( B = D -> ( A = B <-> A = D ) ) ;
	step 9 : wff = thm notbid (step 8) |- ( B = D -> ( -. A = B <-> -. A = D ) ) ;
	step 10 : wff = thm orel2 () |- ( -. A = D -> ( ( A = C \/ A = D ) -> A = C ) ) ;
	step 11 : wff = thm syl6bi (step 9, step 10) |- ( B = D -> ( -. A = B -> ( ( A = C \/ A = D ) -> A = C ) ) ) ;
	step 12 : wff = thm com3l (step 11) |- ( -. A = B -> ( ( A = C \/ A = D ) -> ( B = D -> A = C ) ) ) ;
	step 13 : wff = thm imp (step 12) |- ( ( -. A = B /\ ( A = C \/ A = D ) ) -> ( B = D -> A = C ) ) ;
	step 14 : wff = thm ancrd (step 13) |- ( ( -. A = B /\ ( A = C \/ A = D ) ) -> ( B = D -> ( A = C /\ B = D ) ) ) ;
	step 15 : wff = thm eqeq2 () |- ( B = C -> ( A = B <-> A = C ) ) ;
	step 16 : wff = thm notbid (step 15) |- ( B = C -> ( -. A = B <-> -. A = C ) ) ;
	step 17 : wff = thm orel1 () |- ( -. A = C -> ( ( A = C \/ A = D ) -> A = D ) ) ;
	step 18 : wff = thm syl6bi (step 16, step 17) |- ( B = C -> ( -. A = B -> ( ( A = C \/ A = D ) -> A = D ) ) ) ;
	step 19 : wff = thm com3l (step 18) |- ( -. A = B -> ( ( A = C \/ A = D ) -> ( B = C -> A = D ) ) ) ;
	step 20 : wff = thm imp (step 19) |- ( ( -. A = B /\ ( A = C \/ A = D ) ) -> ( B = C -> A = D ) ) ;
	step 21 : wff = thm ancrd (step 20) |- ( ( -. A = B /\ ( A = C \/ A = D ) ) -> ( B = C -> ( A = D /\ B = C ) ) ) ;
	step 22 : wff = thm orim12d (step 14, step 21) |- ( ( -. A = B /\ ( A = C \/ A = D ) ) -> ( ( B = D \/ B = C ) -> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ) ;
	step 23 : wff = thm elpr (hyp 2) |- ( B e. { C , D } <-> ( B = C \/ B = D ) ) ;
	step 24 : wff = thm orcom () |- ( ( B = C \/ B = D ) <-> ( B = D \/ B = C ) ) ;
	step 25 : wff = thm bitri (step 23, step 24) |- ( B e. { C , D } <-> ( B = D \/ B = C ) ) ;
	step 26 : wff = thm preq12b (hyp 1, hyp 2, hyp 3, hyp 4) |- ( { A , B } = { C , D } <-> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ;
	step 27 : wff = thm 3imtr4g (step 22, step 25, step 26) |- ( ( -. A = B /\ ( A = C \/ A = D ) ) -> ( B e. { C , D } -> { A , B } = { C , D } ) ) ;
	step 28 : wff = thm ex (step 27) |- ( -. A = B -> ( ( A = C \/ A = D ) -> ( B e. { C , D } -> { A , B } = { C , D } ) ) ) ;
	step 29 : wff = thm elpr (hyp 1) |- ( A e. { C , D } <-> ( A = C \/ A = D ) ) ;
	step 30 : wff = thm syl5ib (step 28, step 29) |- ( -. A = B -> ( A e. { C , D } -> ( B e. { C , D } -> { A , B } = { C , D } ) ) ) ;
	step 31 : wff = thm imp3a (step 30) |- ( -. A = B -> ( ( A e. { C , D } /\ B e. { C , D } ) -> { A , B } = { C , D } ) ) ;
	step 32 : wff = thm impbid2 (step 7, step 31) |- ( -. A = B -> ( { A , B } = { C , D } <-> ( A e. { C , D } /\ B e. { C , D } ) ) ) ;
	qed prop 1 = step 32 ;
}

theorem opthpr (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	hyp 4 : wff = |- D e. _V ;
	-----------------------
	prop 1 : wff = |- ( A =/= D -> ( { A , B } = { C , D } <-> ( A = C /\ B = D ) ) ) ;
}

proof of opthpr {
	step 1 : wff = thm idd () |- ( A =/= D -> ( ( A = C /\ B = D ) -> ( A = C /\ B = D ) ) ) ;
	step 2 : wff = def df-ne () |- ( A =/= D <-> -. A = D ) ;
	step 3 : wff = thm pm2_21 () |- ( -. A = D -> ( A = D -> ( B = C -> ( A = C /\ B = D ) ) ) ) ;
	step 4 : wff = thm sylbi (step 2, step 3) |- ( A =/= D -> ( A = D -> ( B = C -> ( A = C /\ B = D ) ) ) ) ;
	step 5 : wff = thm imp3a (step 4) |- ( A =/= D -> ( ( A = D /\ B = C ) -> ( A = C /\ B = D ) ) ) ;
	step 6 : wff = thm jaod (step 1, step 5) |- ( A =/= D -> ( ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) -> ( A = C /\ B = D ) ) ) ;
	step 7 : wff = thm orc () |- ( ( A = C /\ B = D ) -> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ;
	step 8 : wff = thm impbid1 (step 6, step 7) |- ( A =/= D -> ( ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) <-> ( A = C /\ B = D ) ) ) ;
	step 9 : wff = thm preq12b (hyp 1, hyp 2, hyp 3, hyp 4) |- ( { A , B } = { C , D } <-> ( ( A = C /\ B = D ) \/ ( A = D /\ B = C ) ) ) ;
	step 10 : wff = thm syl5bb (step 8, step 9) |- ( A =/= D -> ( { A , B } = { C , D } <-> ( A = C /\ B = D ) ) ) ;
	qed prop 1 = step 10 ;
}

theorem preqsn (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	hyp 3 : wff = |- C e. _V ;
	-----------------------
	prop 1 : wff = |- ( { A , B } = { C } <-> ( A = B /\ B = C ) ) ;
}

proof of preqsn {
	step 1 : wff = thm dfsn2 () |- { C } = { C , C } ;
	step 2 : wff = thm eqeq2i (step 1) |- ( { A , B } = { C } <-> { A , B } = { C , C } ) ;
	step 3 : wff = thm preq12b (hyp 1, hyp 2, hyp 3, hyp 3) |- ( { A , B } = { C , C } <-> ( ( A = C /\ B = C ) \/ ( A = C /\ B = C ) ) ) ;
	step 4 : wff = thm oridm () |- ( ( ( A = C /\ B = C ) \/ ( A = C /\ B = C ) ) <-> ( A = C /\ B = C ) ) ;
	step 5 : wff = thm eqtr3 () |- ( ( A = C /\ B = C ) -> A = B ) ;
	step 6 : wff = thm pm3_27 () |- ( ( A = C /\ B = C ) -> B = C ) ;
	step 7 : wff = thm jca (step 5, step 6) |- ( ( A = C /\ B = C ) -> ( A = B /\ B = C ) ) ;
	step 8 : wff = thm eqtr () |- ( ( A = B /\ B = C ) -> A = C ) ;
	step 9 : wff = thm pm3_27 () |- ( ( A = B /\ B = C ) -> B = C ) ;
	step 10 : wff = thm jca (step 8, step 9) |- ( ( A = B /\ B = C ) -> ( A = C /\ B = C ) ) ;
	step 11 : wff = thm impbii (step 7, step 10) |- ( ( A = C /\ B = C ) <-> ( A = B /\ B = C ) ) ;
	step 12 : wff = thm bitri (step 4, step 11) |- ( ( ( A = C /\ B = C ) \/ ( A = C /\ B = C ) ) <-> ( A = B /\ B = C ) ) ;
	step 13 : wff = thm 3bitri (step 2, step 3, step 12) |- ( { A , B } = { C } <-> ( A = B /\ B = C ) ) ;
	qed prop 1 = step 13 ;
}

theorem opeq1 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> <. A , C >. = <. B , C >. ) ;
}

proof of opeq1 {
	step 1 : wff = thm preq1 () |- ( A = B -> { A , C } = { B , C } ) ;
	step 2 : wff = thm preq2 () |- ( { A , C } = { B , C } -> { { A } , { A , C } } = { { A } , { B , C } } ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A = B -> { { A } , { A , C } } = { { A } , { B , C } } ) ;
	step 4 : wff = thm sneq () |- ( A = B -> { A } = { B } ) ;
	step 5 : wff = thm preq1 () |- ( { A } = { B } -> { { A } , { B , C } } = { { B } , { B , C } } ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( A = B -> { { A } , { B , C } } = { { B } , { B , C } } ) ;
	step 7 : wff = thm eqtrd (step 3, step 6) |- ( A = B -> { { A } , { A , C } } = { { B } , { B , C } } ) ;
	step 8 : wff = def df-op () |- <. A , C >. = { { A } , { A , C } } ;
	step 9 : wff = def df-op () |- <. B , C >. = { { B } , { B , C } } ;
	step 10 : wff = thm 3eqtr4g (step 7, step 8, step 9) |- ( A = B -> <. A , C >. = <. B , C >. ) ;
	qed prop 1 = step 10 ;
}

theorem opeq2 (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> <. C , A >. = <. C , B >. ) ;
}

proof of opeq2 {
	step 1 : wff = thm preq2 () |- ( A = B -> { C , A } = { C , B } ) ;
	step 2 : wff = thm preq2 () |- ( { C , A } = { C , B } -> { { C } , { C , A } } = { { C } , { C , B } } ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( A = B -> { { C } , { C , A } } = { { C } , { C , B } } ) ;
	step 4 : wff = def df-op () |- <. C , A >. = { { C } , { C , A } } ;
	step 5 : wff = def df-op () |- <. C , B >. = { { C } , { C , B } } ;
	step 6 : wff = thm 3eqtr4g (step 3, step 4, step 5) |- ( A = B -> <. C , A >. = <. C , B >. ) ;
	qed prop 1 = step 6 ;
}

theorem opeq12 (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A = C /\ B = D ) -> <. A , B >. = <. C , D >. ) ;
}

proof of opeq12 {
	step 1 : wff = thm opeq1 () |- ( A = C -> <. A , B >. = <. C , B >. ) ;
	step 2 : wff = thm opeq2 () |- ( B = D -> <. C , B >. = <. C , D >. ) ;
	step 3 : wff = thm sylan9eq (step 1, step 2) |- ( ( A = C /\ B = D ) -> <. A , B >. = <. C , D >. ) ;
	qed prop 1 = step 3 ;
}

theorem opeq1i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- <. A , C >. = <. B , C >. ;
}

proof of opeq1i {
	step 1 : wff = thm opeq1 () |- ( A = B -> <. A , C >. = <. B , C >. ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- <. A , C >. = <. B , C >. ;
	qed prop 1 = step 2 ;
}

theorem opeq2i (A : class, B : class, C : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- <. C , A >. = <. C , B >. ;
}

proof of opeq2i {
	step 1 : wff = thm opeq2 () |- ( A = B -> <. C , A >. = <. C , B >. ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- <. C , A >. = <. C , B >. ;
	qed prop 1 = step 2 ;
}

theorem opeq12i (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- <. A , C >. = <. B , D >. ;
}

proof of opeq12i {
	step 1 : wff = thm opeq12 () |- ( ( A = B /\ C = D ) -> <. A , C >. = <. B , D >. ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- <. A , C >. = <. B , D >. ;
	qed prop 1 = step 2 ;
}

theorem opeq1d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> <. A , C >. = <. B , C >. ) ;
}

proof of opeq1d {
	step 1 : wff = thm opeq1 () |- ( A = B -> <. A , C >. = <. B , C >. ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> <. A , C >. = <. B , C >. ) ;
	qed prop 1 = step 2 ;
}

theorem opeq2d (ph : wff, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> <. C , A >. = <. C , B >. ) ;
}

proof of opeq2d {
	step 1 : wff = thm opeq2 () |- ( A = B -> <. C , A >. = <. C , B >. ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> <. C , A >. = <. C , B >. ) ;
	qed prop 1 = step 2 ;
}

theorem opeq12d (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> <. A , C >. = <. B , D >. ) ;
}

proof of opeq12d {
	step 1 : wff = thm opeq1d (hyp 1) |- ( ph -> <. A , C >. = <. B , C >. ) ;
	step 2 : wff = thm opeq2d (hyp 2) |- ( ph -> <. B , C >. = <. B , D >. ) ;
	step 3 : wff = thm eqtrd (step 1, step 2) |- ( ph -> <. A , C >. = <. B , D >. ) ;
	qed prop 1 = step 3 ;
}

theorem hbop (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ;
}

proof of hbop {
	step 1 : wff = def df-op () |- <. A , B >. = { { A } , { A , B } } ;
	step 2 : wff = thm hbsn (hyp 1) |- ( y e. { A } -> A. x y e. { A } ) ;
	step 3 : wff = thm hbpr (hyp 1, hyp 2) |- ( y e. { A , B } -> A. x y e. { A , B } ) ;
	step 4 : wff = thm hbpr (step 2, step 3) |- ( y e. { { A } , { A , B } } -> A. x y e. { { A } , { A , B } } ) ;
	step 5 : wff = thm hbxfr (step 1, step 4) |- ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ;
	qed prop 1 = step 5 ;
}

theorem hbopd (ph : wff, x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( y e. A -> A. x y e. A ) ) ;
	hyp 3 : wff = |- ( ph -> ( y e. B -> A. x y e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ) ;
}

proof of hbopd {
	var z : set;
	step 1 : wff = thm hba1 () |- ( A. x z e. A -> A. x A. x z e. A ) ;
	step 2 : wff = thm hbab (step 1) |- ( y e. { z | A. x z e. A } -> A. x y e. { z | A. x z e. A } ) ;
	step 3 : wff = thm hba1 () |- ( A. x z e. B -> A. x A. x z e. B ) ;
	step 4 : wff = thm hbab (step 3) |- ( y e. { z | A. x z e. B } -> A. x y e. { z | A. x z e. B } ) ;
	step 5 : wff = thm hbop (step 2, step 4) |- ( y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. -> A. x y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. ) ;
	step 6 : wff = thm a1i (step 5) |- ( ph -> ( y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. -> A. x y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. ) ) ;
	step 7 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 8 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 9 : wff = thm syl (step 7, step 8) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 10 : wff = thm opeq1d (step 9) |- ( ph -> <. { z | A. x z e. A } , { z | A. x z e. B } >. = <. A , { z | A. x z e. B } >. ) ;
	step 11 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 12 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 13 : wff = thm syl (step 11, step 12) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 14 : wff = thm opeq2d (step 13) |- ( ph -> <. A , { z | A. x z e. B } >. = <. A , B >. ) ;
	step 15 : wff = thm eqtrd (step 10, step 14) |- ( ph -> <. { z | A. x z e. A } , { z | A. x z e. B } >. = <. A , B >. ) ;
	step 16 : wff = thm eleq2d (step 15) |- ( ph -> ( y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. <-> y e. <. A , B >. ) ) ;
	step 17 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 18 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 19 : wff = thm syl (step 17, step 18) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 20 : wff = thm opeq1d (step 19) |- ( ph -> <. { z | A. x z e. A } , { z | A. x z e. B } >. = <. A , { z | A. x z e. B } >. ) ;
	step 21 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 22 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 23 : wff = thm syl (step 21, step 22) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 24 : wff = thm opeq2d (step 23) |- ( ph -> <. A , { z | A. x z e. B } >. = <. A , B >. ) ;
	step 25 : wff = thm eqtrd (step 20, step 24) |- ( ph -> <. { z | A. x z e. A } , { z | A. x z e. B } >. = <. A , B >. ) ;
	step 26 : wff = thm eleq2d (step 25) |- ( ph -> ( y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. <-> y e. <. A , B >. ) ) ;
	step 27 : wff = thm albid (hyp 1, step 26) |- ( ph -> ( A. x y e. <. { z | A. x z e. A } , { z | A. x z e. B } >. <-> A. x y e. <. A , B >. ) ) ;
	step 28 : wff = thm 3imtr3d (step 6, step 16, step 27) |- ( ph -> ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ) ;
	qed prop 1 = step 28 ;
}

theorem opprc1 (A : class, B : class)  {
	prop 1 : wff = |- ( -. A e. _V -> <. A , B >. = { (/) , { B } } ) ;
}

proof of opprc1 {
	step 1 : wff = thm snprc () |- ( -. A e. _V <-> { A } = (/) ) ;
	step 2 : wff = thm preq1 () |- ( { A } = (/) -> { { A } , { A , B } } = { (/) , { A , B } } ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( -. A e. _V -> { { A } , { A , B } } = { (/) , { A , B } } ) ;
	step 4 : wff = thm prprc1 () |- ( -. A e. _V -> { A , B } = { B } ) ;
	step 5 : wff = thm preq2 () |- ( { A , B } = { B } -> { (/) , { A , B } } = { (/) , { B } } ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( -. A e. _V -> { (/) , { A , B } } = { (/) , { B } } ) ;
	step 7 : wff = thm eqtrd (step 3, step 6) |- ( -. A e. _V -> { { A } , { A , B } } = { (/) , { B } } ) ;
	step 8 : wff = def df-op () |- <. A , B >. = { { A } , { A , B } } ;
	step 9 : wff = thm syl5eq (step 7, step 8) |- ( -. A e. _V -> <. A , B >. = { (/) , { B } } ) ;
	qed prop 1 = step 9 ;
}

theorem opprc2 (A : class, B : class)  {
	prop 1 : wff = |- ( -. B e. _V -> <. A , B >. = <. A , A >. ) ;
}

proof of opprc2 {
	step 1 : wff = thm prprc1 () |- ( -. B e. _V -> { B , A } = { A } ) ;
	step 2 : wff = thm prcom () |- { B , A } = { A , B } ;
	step 3 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 4 : wff = thm 3eqtr3g (step 1, step 2, step 3) |- ( -. B e. _V -> { A , B } = { A , A } ) ;
	step 5 : wff = thm preq2 () |- ( { A , B } = { A , A } -> { { A } , { A , B } } = { { A } , { A , A } } ) ;
	step 6 : wff = thm syl (step 4, step 5) |- ( -. B e. _V -> { { A } , { A , B } } = { { A } , { A , A } } ) ;
	step 7 : wff = def df-op () |- <. A , B >. = { { A } , { A , B } } ;
	step 8 : wff = def df-op () |- <. A , A >. = { { A } , { A , A } } ;
	step 9 : wff = thm 3eqtr4g (step 6, step 7, step 8) |- ( -. B e. _V -> <. A , B >. = <. A , A >. ) ;
	qed prop 1 = step 9 ;
}

theorem pwsn (A : class)  {
	prop 1 : wff = |- ~P { A } = { (/) , { A } } ;
}

proof of pwsn {
	var x : set;
	step 1 : wff = thm sssn () |- ( x C_ { A } <-> ( x = (/) \/ x = { A } ) ) ;
	step 2 : wff = thm abbii (step 1) |- { x | x C_ { A } } = { x | ( x = (/) \/ x = { A } ) } ;
	step 3 : wff = def df-pw () |- ~P { A } = { x | x C_ { A } } ;
	step 4 : wff = thm dfpr2 () |- { (/) , { A } } = { x | ( x = (/) \/ x = { A } ) } ;
	step 5 : wff = thm 3eqtr4i (step 2, step 3, step 4) |- ~P { A } = { (/) , { A } } ;
	qed prop 1 = step 5 ;
}

theorem pwsnALT (A : class)  {
	prop 1 : wff = |- ~P { A } = { (/) , { A } } ;
}

proof of pwsnALT {
	var x : set, y : set;
	step 1 : wff = thm dfss2 () |- ( x C_ { A } <-> A. y ( y e. x -> y e. { A } ) ) ;
	step 2 : wff = thm elsn () |- ( y e. { A } <-> y = A ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( y e. x -> y e. { A } ) <-> ( y e. x -> y = A ) ) ;
	step 4 : wff = thm albii (step 3) |- ( A. y ( y e. x -> y e. { A } ) <-> A. y ( y e. x -> y = A ) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( x C_ { A } <-> A. y ( y e. x -> y = A ) ) ;
	step 6 : wff = thm exintr () |- ( A. y ( y e. x -> y = A ) -> ( E. y y e. x -> E. y ( y e. x /\ y = A ) ) ) ;
	step 7 : wff = thm neq0 () |- ( -. x = (/) <-> E. y y e. x ) ;
	step 8 : wff = thm syl5ib (step 6, step 7) |- ( A. y ( y e. x -> y = A ) -> ( -. x = (/) -> E. y ( y e. x /\ y = A ) ) ) ;
	step 9 : wff = def df-clel () |- ( A e. x <-> E. y ( y = A /\ y e. x ) ) ;
	step 10 : wff = thm exancom () |- ( E. y ( y = A /\ y e. x ) <-> E. y ( y e. x /\ y = A ) ) ;
	step 11 : wff = thm bitr2i (step 9, step 10) |- ( E. y ( y e. x /\ y = A ) <-> A e. x ) ;
	step 12 : wff = thm snssi () |- ( A e. x -> { A } C_ x ) ;
	step 13 : wff = thm sylbi (step 11, step 12) |- ( E. y ( y e. x /\ y = A ) -> { A } C_ x ) ;
	step 14 : wff = thm syl6 (step 8, step 13) |- ( A. y ( y e. x -> y = A ) -> ( -. x = (/) -> { A } C_ x ) ) ;
	step 15 : wff = thm sylbi (step 5, step 14) |- ( x C_ { A } -> ( -. x = (/) -> { A } C_ x ) ) ;
	step 16 : wff = thm anc2li (step 15) |- ( x C_ { A } -> ( -. x = (/) -> ( x C_ { A } /\ { A } C_ x ) ) ) ;
	step 17 : wff = thm eqss () |- ( x = { A } <-> ( x C_ { A } /\ { A } C_ x ) ) ;
	step 18 : wff = thm syl6ibr (step 16, step 17) |- ( x C_ { A } -> ( -. x = (/) -> x = { A } ) ) ;
	step 19 : wff = thm orrd (step 18) |- ( x C_ { A } -> ( x = (/) \/ x = { A } ) ) ;
	step 20 : wff = thm 0ss () |- (/) C_ { A } ;
	step 21 : wff = thm sseq1 () |- ( x = (/) -> ( x C_ { A } <-> (/) C_ { A } ) ) ;
	step 22 : wff = thm mpbiri (step 20, step 21) |- ( x = (/) -> x C_ { A } ) ;
	step 23 : wff = thm eqimss () |- ( x = { A } -> x C_ { A } ) ;
	step 24 : wff = thm jaoi (step 22, step 23) |- ( ( x = (/) \/ x = { A } ) -> x C_ { A } ) ;
	step 25 : wff = thm impbii (step 19, step 24) |- ( x C_ { A } <-> ( x = (/) \/ x = { A } ) ) ;
	step 26 : wff = thm abbii (step 25) |- { x | x C_ { A } } = { x | ( x = (/) \/ x = { A } ) } ;
	step 27 : wff = def df-pw () |- ~P { A } = { x | x C_ { A } } ;
	step 28 : wff = thm dfpr2 () |- { (/) , { A } } = { x | ( x = (/) \/ x = { A } ) } ;
	step 29 : wff = thm 3eqtr4i (step 26, step 27, step 28) |- ~P { A } = { (/) , { A } } ;
	qed prop 1 = step 29 ;
}

theorem pwpr (A : class, B : class)  {
	prop 1 : wff = |- ~P { A , B } = ( { (/) , { A } } u. { { B } , { A , B } } ) ;
}

proof of pwpr {
	var x : set;
	step 1 : wff = def df-pw () |- ~P { A , B } = { x | x C_ { A , B } } ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm elpr (step 2) |- ( x e. { (/) , { A } } <-> ( x = (/) \/ x = { A } ) ) ;
	step 4 : wff = thm visset () |- x e. _V ;
	step 5 : wff = thm elpr (step 4) |- ( x e. { { B } , { A , B } } <-> ( x = { B } \/ x = { A , B } ) ) ;
	step 6 : wff = thm orbi12i (step 3, step 5) |- ( ( x e. { (/) , { A } } \/ x e. { { B } , { A , B } } ) <-> ( ( x = (/) \/ x = { A } ) \/ ( x = { B } \/ x = { A , B } ) ) ) ;
	step 7 : wff = thm elun () |- ( x e. ( { (/) , { A } } u. { { B } , { A , B } } ) <-> ( x e. { (/) , { A } } \/ x e. { { B } , { A , B } } ) ) ;
	step 8 : wff = thm sspr () |- ( x C_ { A , B } <-> ( ( x = (/) \/ x = { A } ) \/ ( x = { B } \/ x = { A , B } ) ) ) ;
	step 9 : wff = thm 3bitr4ri (step 6, step 7, step 8) |- ( x C_ { A , B } <-> x e. ( { (/) , { A } } u. { { B } , { A , B } } ) ) ;
	step 10 : wff = thm abbii (step 9) |- { x | x C_ { A , B } } = { x | x e. ( { (/) , { A } } u. { { B } , { A , B } } ) } ;
	step 11 : wff = thm abid2 () |- { x | x e. ( { (/) , { A } } u. { { B } , { A , B } } ) } = ( { (/) , { A } } u. { { B } , { A , B } } ) ;
	step 12 : wff = thm 3eqtri (step 1, step 10, step 11) |- ~P { A , B } = ( { (/) , { A } } u. { { B } , { A , B } } ) ;
	qed prop 1 = step 12 ;
}

theorem pwv ()  {
	prop 1 : wff = |- ~P _V = _V ;
}

proof of pwv {
	var x : set;
	step 1 : wff = thm ssv () |- x C_ _V ;
	step 2 : wff = thm visset () |- x e. _V ;
	step 3 : wff = thm elpw (step 2) |- ( x e. ~P _V <-> x C_ _V ) ;
	step 4 : wff = thm mpbir (step 1, step 3) |- x e. ~P _V ;
	step 5 : wff = thm visset () |- x e. _V ;
	step 6 : wff = thm 2th (step 4, step 5) |- ( x e. ~P _V <-> x e. _V ) ;
	step 7 : wff = thm eqriv (step 6) |- ~P _V = _V ;
	qed prop 1 = step 7 ;
}

constant {
	symbol U. ;
}

rule cuni (A : class) {
	term : class = # U. A ;
}

definition df-uni (x : set, y : set, A : class)  {
	defiendum : class = # U. A ;
	definiens : class = # { x | E. y ( x e. y /\ y e. A ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem dfuni2 (x : set, y : set, A : class)  {
	prop 1 : wff = |- U. A = { x | E. y e. A x e. y } ;
}

proof of dfuni2 {
	step 1 : wff = def df-uni () |- U. A = { x | E. y ( x e. y /\ y e. A ) } ;
	step 2 : wff = thm exancom () |- ( E. y ( x e. y /\ y e. A ) <-> E. y ( y e. A /\ x e. y ) ) ;
	step 3 : wff = def df-rex () |- ( E. y e. A x e. y <-> E. y ( y e. A /\ x e. y ) ) ;
	step 4 : wff = thm bitr4i (step 2, step 3) |- ( E. y ( x e. y /\ y e. A ) <-> E. y e. A x e. y ) ;
	step 5 : wff = thm abbii (step 4) |- { x | E. y ( x e. y /\ y e. A ) } = { x | E. y e. A x e. y } ;
	step 6 : wff = thm eqtri (step 1, step 5) |- U. A = { x | E. y e. A x e. y } ;
	qed prop 1 = step 6 ;
}

theorem eluni (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) ;
}

proof of eluni {
	var y : set;
	step 1 : wff = thm elisset () |- ( A e. U. B -> A e. _V ) ;
	step 2 : wff = thm elisset () |- ( A e. x -> A e. _V ) ;
	step 3 : wff = thm adantr (step 2) |- ( ( A e. x /\ x e. B ) -> A e. _V ) ;
	step 4 : wff = thm 19_23aiv (step 3) |- ( E. x ( A e. x /\ x e. B ) -> A e. _V ) ;
	step 5 : wff = thm eleq1 () |- ( y = A -> ( y e. x <-> A e. x ) ) ;
	step 6 : wff = thm anbi1d (step 5) |- ( y = A -> ( ( y e. x /\ x e. B ) <-> ( A e. x /\ x e. B ) ) ) ;
	step 7 : wff = thm exbidv (step 6) |- ( y = A -> ( E. x ( y e. x /\ x e. B ) <-> E. x ( A e. x /\ x e. B ) ) ) ;
	step 8 : wff = def df-uni () |- U. B = { y | E. x ( y e. x /\ x e. B ) } ;
	step 9 : wff = thm elab2g (step 7, step 8) |- ( A e. _V -> ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) ) ;
	step 10 : wff = thm pm5_21nii (step 1, step 4, step 9) |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) ;
	qed prop 1 = step 10 ;
}

theorem eluni2 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. U. B <-> E. x e. B A e. x ) ;
}

proof of eluni2 {
	step 1 : wff = thm exancom () |- ( E. x ( A e. x /\ x e. B ) <-> E. x ( x e. B /\ A e. x ) ) ;
	step 2 : wff = thm eluni () |- ( A e. U. B <-> E. x ( A e. x /\ x e. B ) ) ;
	step 3 : wff = def df-rex () |- ( E. x e. B A e. x <-> E. x ( x e. B /\ A e. x ) ) ;
	step 4 : wff = thm 3bitr4i (step 1, step 2, step 3) |- ( A e. U. B <-> E. x e. B A e. x ) ;
	qed prop 1 = step 4 ;
}

theorem elunii (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A e. B /\ B e. C ) -> A e. U. C ) ;
}

proof of elunii {
	var x : set;
	step 1 : wff = thm eleq2 () |- ( x = B -> ( A e. x <-> A e. B ) ) ;
	step 2 : wff = thm eleq1 () |- ( x = B -> ( x e. C <-> B e. C ) ) ;
	step 3 : wff = thm anbi12d (step 1, step 2) |- ( x = B -> ( ( A e. x /\ x e. C ) <-> ( A e. B /\ B e. C ) ) ) ;
	step 4 : wff = thm cla4egv (step 3) |- ( B e. C -> ( ( A e. B /\ B e. C ) -> E. x ( A e. x /\ x e. C ) ) ) ;
	step 5 : wff = thm anabsi7 (step 4) |- ( ( A e. B /\ B e. C ) -> E. x ( A e. x /\ x e. C ) ) ;
	step 6 : wff = thm eluni () |- ( A e. U. C <-> E. x ( A e. x /\ x e. C ) ) ;
	step 7 : wff = thm sylibr (step 5, step 6) |- ( ( A e. B /\ B e. C ) -> A e. U. C ) ;
	qed prop 1 = step 7 ;
}

theorem hbuni (x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( y e. U. A -> A. x y e. U. A ) ;
}

proof of hbuni {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 2 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 3 : wff = thm hbel (step 2, hyp 1) |- ( z e. A -> A. x z e. A ) ;
	step 4 : wff = thm hban (step 1, step 3) |- ( ( y e. z /\ z e. A ) -> A. x ( y e. z /\ z e. A ) ) ;
	step 5 : wff = thm hbex (step 4) |- ( E. z ( y e. z /\ z e. A ) -> A. x E. z ( y e. z /\ z e. A ) ) ;
	step 6 : wff = thm eluni () |- ( y e. U. A <-> E. z ( y e. z /\ z e. A ) ) ;
	step 7 : wff = thm eluni () |- ( y e. U. A <-> E. z ( y e. z /\ z e. A ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x y e. U. A <-> A. x E. z ( y e. z /\ z e. A ) ) ;
	step 9 : wff = thm 3imtr4i (step 5, step 6, step 8) |- ( y e. U. A -> A. x y e. U. A ) ;
	qed prop 1 = step 9 ;
}

theorem unieq (A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> U. A = U. B ) ;
}

proof of unieq {
	var x : set, y : set;
	step 1 : wff = thm eleq2 () |- ( A = B -> ( y e. A <-> y e. B ) ) ;
	step 2 : wff = thm anbi2d (step 1) |- ( A = B -> ( ( x e. y /\ y e. A ) <-> ( x e. y /\ y e. B ) ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( A = B -> ( E. y ( x e. y /\ y e. A ) <-> E. y ( x e. y /\ y e. B ) ) ) ;
	step 4 : wff = thm abbidv (step 3) |- ( A = B -> { x | E. y ( x e. y /\ y e. A ) } = { x | E. y ( x e. y /\ y e. B ) } ) ;
	step 5 : wff = def df-uni () |- U. A = { x | E. y ( x e. y /\ y e. A ) } ;
	step 6 : wff = def df-uni () |- U. B = { x | E. y ( x e. y /\ y e. B ) } ;
	step 7 : wff = thm 3eqtr4g (step 4, step 5, step 6) |- ( A = B -> U. A = U. B ) ;
	qed prop 1 = step 7 ;
}

theorem unieqi (A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- U. A = U. B ;
}

proof of unieqi {
	step 1 : wff = thm unieq () |- ( A = B -> U. A = U. B ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- U. A = U. B ;
	qed prop 1 = step 2 ;
}

theorem unieqd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> U. A = U. B ) ;
}

proof of unieqd {
	step 1 : wff = thm unieq () |- ( A = B -> U. A = U. B ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> U. A = U. B ) ;
	qed prop 1 = step 2 ;
}

theorem eluniab (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A e. U. { x | ph } <-> E. x ( A e. x /\ ph ) ) ;
}

proof of eluniab {
	var y : set;
	step 1 : wff = thm eluni () |- ( A e. U. { x | ph } <-> E. y ( A e. y /\ y e. { x | ph } ) ) ;
	step 2 : wff = axm ax-17 () |- ( A e. y -> A. x A e. y ) ;
	step 3 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 4 : wff = thm hban (step 2, step 3) |- ( ( A e. y /\ y e. { x | ph } ) -> A. x ( A e. y /\ y e. { x | ph } ) ) ;
	step 5 : wff = axm ax-17 () |- ( ( A e. x /\ ph ) -> A. y ( A e. x /\ ph ) ) ;
	step 6 : wff = thm eleq2 () |- ( y = x -> ( A e. y <-> A e. x ) ) ;
	step 7 : wff = thm eleq1 () |- ( y = x -> ( y e. { x | ph } <-> x e. { x | ph } ) ) ;
	step 8 : wff = thm anbi12d (step 6, step 7) |- ( y = x -> ( ( A e. y /\ y e. { x | ph } ) <-> ( A e. x /\ x e. { x | ph } ) ) ) ;
	step 9 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 10 : wff = thm anbi2i (step 9) |- ( ( A e. x /\ x e. { x | ph } ) <-> ( A e. x /\ ph ) ) ;
	step 11 : wff = thm syl6bb (step 8, step 10) |- ( y = x -> ( ( A e. y /\ y e. { x | ph } ) <-> ( A e. x /\ ph ) ) ) ;
	step 12 : wff = thm cbvex (step 4, step 5, step 11) |- ( E. y ( A e. y /\ y e. { x | ph } ) <-> E. x ( A e. x /\ ph ) ) ;
	step 13 : wff = thm bitri (step 1, step 12) |- ( A e. U. { x | ph } <-> E. x ( A e. x /\ ph ) ) ;
	qed prop 1 = step 13 ;
}

theorem elunirab (ph : wff, x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. U. { x e. B | ph } <-> E. x e. B ( A e. x /\ ph ) ) ;
}

proof of elunirab {
	step 1 : wff = thm eluniab () |- ( A e. U. { x | ( x e. B /\ ph ) } <-> E. x ( A e. x /\ ( x e. B /\ ph ) ) ) ;
	step 2 : wff = def df-rab () |- { x e. B | ph } = { x | ( x e. B /\ ph ) } ;
	step 3 : wff = thm unieqi (step 2) |- U. { x e. B | ph } = U. { x | ( x e. B /\ ph ) } ;
	step 4 : wff = thm eleq2i (step 3) |- ( A e. U. { x e. B | ph } <-> A e. U. { x | ( x e. B /\ ph ) } ) ;
	step 5 : wff = def df-rex () |- ( E. x e. B ( A e. x /\ ph ) <-> E. x ( x e. B /\ ( A e. x /\ ph ) ) ) ;
	step 6 : wff = thm an12 () |- ( ( x e. B /\ ( A e. x /\ ph ) ) <-> ( A e. x /\ ( x e. B /\ ph ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. x ( x e. B /\ ( A e. x /\ ph ) ) <-> E. x ( A e. x /\ ( x e. B /\ ph ) ) ) ;
	step 8 : wff = thm bitri (step 5, step 7) |- ( E. x e. B ( A e. x /\ ph ) <-> E. x ( A e. x /\ ( x e. B /\ ph ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 1, step 4, step 8) |- ( A e. U. { x e. B | ph } <-> E. x e. B ( A e. x /\ ph ) ) ;
	qed prop 1 = step 9 ;
}

theorem unipr (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- U. { A , B } = ( A u. B ) ;
}

proof of unipr {
	var x : set, y : set;
	step 1 : wff = thm 19_43 () |- ( E. y ( ( x e. y /\ y = A ) \/ ( x e. y /\ y = B ) ) <-> ( E. y ( x e. y /\ y = A ) \/ E. y ( x e. y /\ y = B ) ) ) ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm elpr (step 2) |- ( y e. { A , B } <-> ( y = A \/ y = B ) ) ;
	step 4 : wff = thm anbi2i (step 3) |- ( ( x e. y /\ y e. { A , B } ) <-> ( x e. y /\ ( y = A \/ y = B ) ) ) ;
	step 5 : wff = thm andi () |- ( ( x e. y /\ ( y = A \/ y = B ) ) <-> ( ( x e. y /\ y = A ) \/ ( x e. y /\ y = B ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( x e. y /\ y e. { A , B } ) <-> ( ( x e. y /\ y = A ) \/ ( x e. y /\ y = B ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. y ( x e. y /\ y e. { A , B } ) <-> E. y ( ( x e. y /\ y = A ) \/ ( x e. y /\ y = B ) ) ) ;
	step 8 : wff = thm clel3 (hyp 1) |- ( x e. A <-> E. y ( y = A /\ x e. y ) ) ;
	step 9 : wff = thm exancom () |- ( E. y ( y = A /\ x e. y ) <-> E. y ( x e. y /\ y = A ) ) ;
	step 10 : wff = thm bitri (step 8, step 9) |- ( x e. A <-> E. y ( x e. y /\ y = A ) ) ;
	step 11 : wff = thm clel3 (hyp 2) |- ( x e. B <-> E. y ( y = B /\ x e. y ) ) ;
	step 12 : wff = thm exancom () |- ( E. y ( y = B /\ x e. y ) <-> E. y ( x e. y /\ y = B ) ) ;
	step 13 : wff = thm bitri (step 11, step 12) |- ( x e. B <-> E. y ( x e. y /\ y = B ) ) ;
	step 14 : wff = thm orbi12i (step 10, step 13) |- ( ( x e. A \/ x e. B ) <-> ( E. y ( x e. y /\ y = A ) \/ E. y ( x e. y /\ y = B ) ) ) ;
	step 15 : wff = thm 3bitr4ri (step 1, step 7, step 14) |- ( ( x e. A \/ x e. B ) <-> E. y ( x e. y /\ y e. { A , B } ) ) ;
	step 16 : wff = thm abbii (step 15) |- { x | ( x e. A \/ x e. B ) } = { x | E. y ( x e. y /\ y e. { A , B } ) } ;
	step 17 : wff = def df-un () |- ( A u. B ) = { x | ( x e. A \/ x e. B ) } ;
	step 18 : wff = def df-uni () |- U. { A , B } = { x | E. y ( x e. y /\ y e. { A , B } ) } ;
	step 19 : wff = thm 3eqtr4ri (step 16, step 17, step 18) |- U. { A , B } = ( A u. B ) ;
	qed prop 1 = step 19 ;
}

theorem uniprg (A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( ( A e. C /\ B e. D ) -> U. { A , B } = ( A u. B ) ) ;
}

proof of uniprg {
	var x : set, y : set;
	step 1 : wff = thm preq1 () |- ( x = A -> { x , y } = { A , y } ) ;
	step 2 : wff = thm unieqd (step 1) |- ( x = A -> U. { x , y } = U. { A , y } ) ;
	step 3 : wff = thm uneq1 () |- ( x = A -> ( x u. y ) = ( A u. y ) ) ;
	step 4 : wff = thm eqeq12d (step 2, step 3) |- ( x = A -> ( U. { x , y } = ( x u. y ) <-> U. { A , y } = ( A u. y ) ) ) ;
	step 5 : wff = thm preq2 () |- ( y = B -> { A , y } = { A , B } ) ;
	step 6 : wff = thm unieqd (step 5) |- ( y = B -> U. { A , y } = U. { A , B } ) ;
	step 7 : wff = thm uneq2 () |- ( y = B -> ( A u. y ) = ( A u. B ) ) ;
	step 8 : wff = thm eqeq12d (step 6, step 7) |- ( y = B -> ( U. { A , y } = ( A u. y ) <-> U. { A , B } = ( A u. B ) ) ) ;
	step 9 : wff = thm visset () |- x e. _V ;
	step 10 : wff = thm visset () |- y e. _V ;
	step 11 : wff = thm unipr (step 9, step 10) |- U. { x , y } = ( x u. y ) ;
	step 12 : wff = thm vtocl2g (step 4, step 8, step 11) |- ( ( A e. C /\ B e. D ) -> U. { A , B } = ( A u. B ) ) ;
	qed prop 1 = step 12 ;
}

theorem unisn (A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- U. { A } = A ;
}

proof of unisn {
	step 1 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 2 : wff = thm unieqi (step 1) |- U. { A } = U. { A , A } ;
	step 3 : wff = thm unipr (hyp 1, hyp 1) |- U. { A , A } = ( A u. A ) ;
	step 4 : wff = thm unidm () |- ( A u. A ) = A ;
	step 5 : wff = thm 3eqtri (step 2, step 3, step 4) |- U. { A } = A ;
	qed prop 1 = step 5 ;
}

theorem unisng (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> U. { A } = A ) ;
}

proof of unisng {
	var x : set;
	step 1 : wff = thm sneq () |- ( x = A -> { x } = { A } ) ;
	step 2 : wff = thm unieqd (step 1) |- ( x = A -> U. { x } = U. { A } ) ;
	step 3 : wff = thm id () |- ( x = A -> x = A ) ;
	step 4 : wff = thm eqeq12d (step 2, step 3) |- ( x = A -> ( U. { x } = x <-> U. { A } = A ) ) ;
	step 5 : wff = thm visset () |- x e. _V ;
	step 6 : wff = thm unisn (step 5) |- U. { x } = x ;
	step 7 : wff = thm vtoclg (step 4, step 6) |- ( A e. B -> U. { A } = A ) ;
	qed prop 1 = step 7 ;
}

theorem hbeqel (x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( y = A -> A. x y = A ) ;
	-----------------------
	prop 1 : wff = |- ( y e. A -> A. x y e. A ) ;
}

proof of hbeqel {
	step 1 : wff = thm unisn (hyp 1) |- U. { A } = A ;
	step 2 : wff = thm eqcomi (step 1) |- A = U. { A } ;
	step 3 : wff = thm elsn () |- ( y e. { A } <-> y = A ) ;
	step 4 : wff = thm elsn () |- ( y e. { A } <-> y = A ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x y e. { A } <-> A. x y = A ) ;
	step 6 : wff = thm 3imtr4i (hyp 2, step 3, step 5) |- ( y e. { A } -> A. x y e. { A } ) ;
	step 7 : wff = thm hbuni (step 6) |- ( y e. U. { A } -> A. x y e. U. { A } ) ;
	step 8 : wff = thm hbxfr (step 2, step 7) |- ( y e. A -> A. x y e. A ) ;
	qed prop 1 = step 8 ;
}

theorem uniun (A : class, B : class)  {
	prop 1 : wff = |- U. ( A u. B ) = ( U. A u. U. B ) ;
}

proof of uniun {
	var x : set, y : set;
	step 1 : wff = thm 19_43 () |- ( E. y ( ( x e. y /\ y e. A ) \/ ( x e. y /\ y e. B ) ) <-> ( E. y ( x e. y /\ y e. A ) \/ E. y ( x e. y /\ y e. B ) ) ) ;
	step 2 : wff = thm elun () |- ( y e. ( A u. B ) <-> ( y e. A \/ y e. B ) ) ;
	step 3 : wff = thm anbi2i (step 2) |- ( ( x e. y /\ y e. ( A u. B ) ) <-> ( x e. y /\ ( y e. A \/ y e. B ) ) ) ;
	step 4 : wff = thm andi () |- ( ( x e. y /\ ( y e. A \/ y e. B ) ) <-> ( ( x e. y /\ y e. A ) \/ ( x e. y /\ y e. B ) ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( x e. y /\ y e. ( A u. B ) ) <-> ( ( x e. y /\ y e. A ) \/ ( x e. y /\ y e. B ) ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. y ( x e. y /\ y e. ( A u. B ) ) <-> E. y ( ( x e. y /\ y e. A ) \/ ( x e. y /\ y e. B ) ) ) ;
	step 7 : wff = thm eluni () |- ( x e. U. A <-> E. y ( x e. y /\ y e. A ) ) ;
	step 8 : wff = thm eluni () |- ( x e. U. B <-> E. y ( x e. y /\ y e. B ) ) ;
	step 9 : wff = thm orbi12i (step 7, step 8) |- ( ( x e. U. A \/ x e. U. B ) <-> ( E. y ( x e. y /\ y e. A ) \/ E. y ( x e. y /\ y e. B ) ) ) ;
	step 10 : wff = thm 3bitr4i (step 1, step 6, step 9) |- ( E. y ( x e. y /\ y e. ( A u. B ) ) <-> ( x e. U. A \/ x e. U. B ) ) ;
	step 11 : wff = thm eluni () |- ( x e. U. ( A u. B ) <-> E. y ( x e. y /\ y e. ( A u. B ) ) ) ;
	step 12 : wff = thm elun () |- ( x e. ( U. A u. U. B ) <-> ( x e. U. A \/ x e. U. B ) ) ;
	step 13 : wff = thm 3bitr4i (step 10, step 11, step 12) |- ( x e. U. ( A u. B ) <-> x e. ( U. A u. U. B ) ) ;
	step 14 : wff = thm eqriv (step 13) |- U. ( A u. B ) = ( U. A u. U. B ) ;
	qed prop 1 = step 14 ;
}

theorem uniin (A : class, B : class)  {
	prop 1 : wff = |- U. ( A i^i B ) C_ ( U. A i^i U. B ) ;
}

proof of uniin {
	var x : set, y : set;
	step 1 : wff = thm 19_40 () |- ( E. y ( ( x e. y /\ y e. A ) /\ ( x e. y /\ y e. B ) ) -> ( E. y ( x e. y /\ y e. A ) /\ E. y ( x e. y /\ y e. B ) ) ) ;
	step 2 : wff = thm eluni () |- ( x e. U. ( A i^i B ) <-> E. y ( x e. y /\ y e. ( A i^i B ) ) ) ;
	step 3 : wff = thm elin () |- ( y e. ( A i^i B ) <-> ( y e. A /\ y e. B ) ) ;
	step 4 : wff = thm anbi2i (step 3) |- ( ( x e. y /\ y e. ( A i^i B ) ) <-> ( x e. y /\ ( y e. A /\ y e. B ) ) ) ;
	step 5 : wff = thm anandi () |- ( ( x e. y /\ ( y e. A /\ y e. B ) ) <-> ( ( x e. y /\ y e. A ) /\ ( x e. y /\ y e. B ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( x e. y /\ y e. ( A i^i B ) ) <-> ( ( x e. y /\ y e. A ) /\ ( x e. y /\ y e. B ) ) ) ;
	step 7 : wff = thm exbii (step 6) |- ( E. y ( x e. y /\ y e. ( A i^i B ) ) <-> E. y ( ( x e. y /\ y e. A ) /\ ( x e. y /\ y e. B ) ) ) ;
	step 8 : wff = thm bitri (step 2, step 7) |- ( x e. U. ( A i^i B ) <-> E. y ( ( x e. y /\ y e. A ) /\ ( x e. y /\ y e. B ) ) ) ;
	step 9 : wff = thm elin () |- ( x e. ( U. A i^i U. B ) <-> ( x e. U. A /\ x e. U. B ) ) ;
	step 10 : wff = thm eluni () |- ( x e. U. A <-> E. y ( x e. y /\ y e. A ) ) ;
	step 11 : wff = thm eluni () |- ( x e. U. B <-> E. y ( x e. y /\ y e. B ) ) ;
	step 12 : wff = thm anbi12i (step 10, step 11) |- ( ( x e. U. A /\ x e. U. B ) <-> ( E. y ( x e. y /\ y e. A ) /\ E. y ( x e. y /\ y e. B ) ) ) ;
	step 13 : wff = thm bitri (step 9, step 12) |- ( x e. ( U. A i^i U. B ) <-> ( E. y ( x e. y /\ y e. A ) /\ E. y ( x e. y /\ y e. B ) ) ) ;
	step 14 : wff = thm 3imtr4i (step 1, step 8, step 13) |- ( x e. U. ( A i^i B ) -> x e. ( U. A i^i U. B ) ) ;
	step 15 : wff = thm ssriv (step 14) |- U. ( A i^i B ) C_ ( U. A i^i U. B ) ;
	qed prop 1 = step 15 ;
}

theorem uniss (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B -> U. A C_ U. B ) ;
}

proof of uniss {
	var x : set, y : set;
	step 1 : wff = thm ssel () |- ( A C_ B -> ( y e. A -> y e. B ) ) ;
	step 2 : wff = thm anim2d (step 1) |- ( A C_ B -> ( ( x e. y /\ y e. A ) -> ( x e. y /\ y e. B ) ) ) ;
	step 3 : wff = thm 19_22dv (step 2) |- ( A C_ B -> ( E. y ( x e. y /\ y e. A ) -> E. y ( x e. y /\ y e. B ) ) ) ;
	step 4 : wff = thm 19_21aiv (step 3) |- ( A C_ B -> A. x ( E. y ( x e. y /\ y e. A ) -> E. y ( x e. y /\ y e. B ) ) ) ;
	step 5 : wff = thm ss2ab () |- ( { x | E. y ( x e. y /\ y e. A ) } C_ { x | E. y ( x e. y /\ y e. B ) } <-> A. x ( E. y ( x e. y /\ y e. A ) -> E. y ( x e. y /\ y e. B ) ) ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( A C_ B -> { x | E. y ( x e. y /\ y e. A ) } C_ { x | E. y ( x e. y /\ y e. B ) } ) ;
	step 7 : wff = def df-uni () |- U. A = { x | E. y ( x e. y /\ y e. A ) } ;
	step 8 : wff = def df-uni () |- U. B = { x | E. y ( x e. y /\ y e. B ) } ;
	step 9 : wff = thm 3sstr4g (step 6, step 7, step 8) |- ( A C_ B -> U. A C_ U. B ) ;
	qed prop 1 = step 9 ;
}

theorem ssuni (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ B e. C ) -> A C_ U. C ) ;
}

proof of ssuni {
	var x : set, y : set;
	step 1 : wff = thm sseq2 () |- ( x = B -> ( A C_ x <-> A C_ B ) ) ;
	step 2 : wff = thm imbi1d (step 1) |- ( x = B -> ( ( A C_ x -> A C_ U. C ) <-> ( A C_ B -> A C_ U. C ) ) ) ;
	step 3 : wff = thm 19_8a () |- ( ( y e. x /\ x e. C ) -> E. x ( y e. x /\ x e. C ) ) ;
	step 4 : wff = thm expcom (step 3) |- ( x e. C -> ( y e. x -> E. x ( y e. x /\ x e. C ) ) ) ;
	step 5 : wff = thm eluni () |- ( y e. U. C <-> E. x ( y e. x /\ x e. C ) ) ;
	step 6 : wff = thm syl6ibr (step 4, step 5) |- ( x e. C -> ( y e. x -> y e. U. C ) ) ;
	step 7 : wff = thm imim2d (step 6) |- ( x e. C -> ( ( y e. A -> y e. x ) -> ( y e. A -> y e. U. C ) ) ) ;
	step 8 : wff = thm 19_20dv (step 7) |- ( x e. C -> ( A. y ( y e. A -> y e. x ) -> A. y ( y e. A -> y e. U. C ) ) ) ;
	step 9 : wff = thm dfss2 () |- ( A C_ x <-> A. y ( y e. A -> y e. x ) ) ;
	step 10 : wff = thm dfss2 () |- ( A C_ U. C <-> A. y ( y e. A -> y e. U. C ) ) ;
	step 11 : wff = thm 3imtr4g (step 8, step 9, step 10) |- ( x e. C -> ( A C_ x -> A C_ U. C ) ) ;
	step 12 : wff = thm vtoclga (step 2, step 11) |- ( B e. C -> ( A C_ B -> A C_ U. C ) ) ;
	step 13 : wff = thm impcom (step 12) |- ( ( A C_ B /\ B e. C ) -> A C_ U. C ) ;
	qed prop 1 = step 13 ;
}

theorem uni0b (A : class)  {
	prop 1 : wff = |- ( U. A = (/) <-> A C_ { (/) } ) ;
}

proof of uni0b {
	var x : set, y : set;
	step 1 : wff = thm elsn () |- ( x e. { (/) } <-> x = (/) ) ;
	step 2 : wff = thm ralbii (step 1) |- ( A. x e. A x e. { (/) } <-> A. x e. A x = (/) ) ;
	step 3 : wff = thm dfss3 () |- ( A C_ { (/) } <-> A. x e. A x e. { (/) } ) ;
	step 4 : wff = thm neq0 () |- ( -. U. A = (/) <-> E. y y e. U. A ) ;
	step 5 : wff = thm rexcom4 () |- ( E. x e. A E. y y e. x <-> E. y E. x e. A y e. x ) ;
	step 6 : wff = thm neq0 () |- ( -. x = (/) <-> E. y y e. x ) ;
	step 7 : wff = thm rexbii (step 6) |- ( E. x e. A -. x = (/) <-> E. x e. A E. y y e. x ) ;
	step 8 : wff = thm eluni2 () |- ( y e. U. A <-> E. x e. A y e. x ) ;
	step 9 : wff = thm exbii (step 8) |- ( E. y y e. U. A <-> E. y E. x e. A y e. x ) ;
	step 10 : wff = thm 3bitr4ri (step 5, step 7, step 9) |- ( E. y y e. U. A <-> E. x e. A -. x = (/) ) ;
	step 11 : wff = thm rexnal () |- ( E. x e. A -. x = (/) <-> -. A. x e. A x = (/) ) ;
	step 12 : wff = thm 3bitri (step 4, step 10, step 11) |- ( -. U. A = (/) <-> -. A. x e. A x = (/) ) ;
	step 13 : wff = thm con4bii (step 12) |- ( U. A = (/) <-> A. x e. A x = (/) ) ;
	step 14 : wff = thm 3bitr4ri (step 2, step 3, step 13) |- ( U. A = (/) <-> A C_ { (/) } ) ;
	qed prop 1 = step 14 ;
}

theorem uni0c (x : set, A : class)  {
	prop 1 : wff = |- ( U. A = (/) <-> A. x e. A x = (/) ) ;
}

proof of uni0c {
	step 1 : wff = thm uni0b () |- ( U. A = (/) <-> A C_ { (/) } ) ;
	step 2 : wff = thm dfss3 () |- ( A C_ { (/) } <-> A. x e. A x e. { (/) } ) ;
	step 3 : wff = thm elsn () |- ( x e. { (/) } <-> x = (/) ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. x e. A x e. { (/) } <-> A. x e. A x = (/) ) ;
	step 5 : wff = thm 3bitri (step 1, step 2, step 4) |- ( U. A = (/) <-> A. x e. A x = (/) ) ;
	qed prop 1 = step 5 ;
}

theorem uni0 ()  {
	prop 1 : wff = |- U. (/) = (/) ;
}

proof of uni0 {
	step 1 : wff = thm 0ss () |- (/) C_ { (/) } ;
	step 2 : wff = thm uni0b () |- ( U. (/) = (/) <-> (/) C_ { (/) } ) ;
	step 3 : wff = thm mpbir (step 1, step 2) |- U. (/) = (/) ;
	qed prop 1 = step 3 ;
}

theorem elssuni (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> A C_ U. B ) ;
}

proof of elssuni {
	step 1 : wff = thm ssid () |- A C_ A ;
	step 2 : wff = thm ssuni () |- ( ( A C_ A /\ A e. B ) -> A C_ U. B ) ;
	step 3 : wff = thm mpan (step 1, step 2) |- ( A e. B -> A C_ U. B ) ;
	qed prop 1 = step 3 ;
}

theorem unissel (A : class, B : class)  {
	prop 1 : wff = |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) ;
}

proof of unissel {
	step 1 : wff = thm pm3_26 () |- ( ( U. A C_ B /\ B e. A ) -> U. A C_ B ) ;
	step 2 : wff = thm elssuni () |- ( B e. A -> B C_ U. A ) ;
	step 3 : wff = thm adantl (step 2) |- ( ( U. A C_ B /\ B e. A ) -> B C_ U. A ) ;
	step 4 : wff = thm eqssd (step 1, step 3) |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) ;
	qed prop 1 = step 4 ;
}

theorem unissb (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( U. A C_ B <-> A. x e. A x C_ B ) ;
}

proof of unissb {
	var y : set;
	step 1 : wff = thm dfss2 () |- ( U. A C_ B <-> A. y ( y e. U. A -> y e. B ) ) ;
	step 2 : wff = thm eluni () |- ( y e. U. A <-> E. x ( y e. x /\ x e. A ) ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( y e. U. A -> y e. B ) <-> ( E. x ( y e. x /\ x e. A ) -> y e. B ) ) ;
	step 4 : wff = thm 19_23v () |- ( A. x ( ( y e. x /\ x e. A ) -> y e. B ) <-> ( E. x ( y e. x /\ x e. A ) -> y e. B ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( y e. U. A -> y e. B ) <-> A. x ( ( y e. x /\ x e. A ) -> y e. B ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. y ( y e. U. A -> y e. B ) <-> A. y A. x ( ( y e. x /\ x e. A ) -> y e. B ) ) ;
	step 7 : wff = thm alcom () |- ( A. y A. x ( ( y e. x /\ x e. A ) -> y e. B ) <-> A. x A. y ( ( y e. x /\ x e. A ) -> y e. B ) ) ;
	step 8 : wff = thm 19_21v () |- ( A. y ( x e. A -> ( y e. x -> y e. B ) ) <-> ( x e. A -> A. y ( y e. x -> y e. B ) ) ) ;
	step 9 : wff = thm impexp () |- ( ( ( y e. x /\ x e. A ) -> y e. B ) <-> ( y e. x -> ( x e. A -> y e. B ) ) ) ;
	step 10 : wff = thm bi2_04 () |- ( ( y e. x -> ( x e. A -> y e. B ) ) <-> ( x e. A -> ( y e. x -> y e. B ) ) ) ;
	step 11 : wff = thm bitri (step 9, step 10) |- ( ( ( y e. x /\ x e. A ) -> y e. B ) <-> ( x e. A -> ( y e. x -> y e. B ) ) ) ;
	step 12 : wff = thm albii (step 11) |- ( A. y ( ( y e. x /\ x e. A ) -> y e. B ) <-> A. y ( x e. A -> ( y e. x -> y e. B ) ) ) ;
	step 13 : wff = thm dfss2 () |- ( x C_ B <-> A. y ( y e. x -> y e. B ) ) ;
	step 14 : wff = thm imbi2i (step 13) |- ( ( x e. A -> x C_ B ) <-> ( x e. A -> A. y ( y e. x -> y e. B ) ) ) ;
	step 15 : wff = thm 3bitr4i (step 8, step 12, step 14) |- ( A. y ( ( y e. x /\ x e. A ) -> y e. B ) <-> ( x e. A -> x C_ B ) ) ;
	step 16 : wff = thm albii (step 15) |- ( A. x A. y ( ( y e. x /\ x e. A ) -> y e. B ) <-> A. x ( x e. A -> x C_ B ) ) ;
	step 17 : wff = thm bitri (step 7, step 16) |- ( A. y A. x ( ( y e. x /\ x e. A ) -> y e. B ) <-> A. x ( x e. A -> x C_ B ) ) ;
	step 18 : wff = thm 3bitri (step 1, step 6, step 17) |- ( U. A C_ B <-> A. x ( x e. A -> x C_ B ) ) ;
	step 19 : wff = def df-ral () |- ( A. x e. A x C_ B <-> A. x ( x e. A -> x C_ B ) ) ;
	step 20 : wff = thm bitr4i (step 18, step 19) |- ( U. A C_ B <-> A. x e. A x C_ B ) ;
	qed prop 1 = step 20 ;
}

theorem uniss2 (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A E. y e. B x C_ y -> U. A C_ U. B ) ;
}

proof of uniss2 {
	step 1 : wff = thm ssuni () |- ( ( x C_ y /\ y e. B ) -> x C_ U. B ) ;
	step 2 : wff = thm expcom (step 1) |- ( y e. B -> ( x C_ y -> x C_ U. B ) ) ;
	step 3 : wff = thm r19_23aiv (step 2) |- ( E. y e. B x C_ y -> x C_ U. B ) ;
	step 4 : wff = thm r19_20si (step 3) |- ( A. x e. A E. y e. B x C_ y -> A. x e. A x C_ U. B ) ;
	step 5 : wff = thm unissb () |- ( U. A C_ U. B <-> A. x e. A x C_ U. B ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( A. x e. A E. y e. B x C_ y -> U. A C_ U. B ) ;
	qed prop 1 = step 6 ;
}

theorem unidif (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( A. x e. A E. y e. ( A \ B ) x C_ y -> U. ( A \ B ) = U. A ) ;
}

proof of unidif {
	step 1 : wff = thm uniss2 () |- ( A. x e. A E. y e. ( A \ B ) x C_ y -> U. A C_ U. ( A \ B ) ) ;
	step 2 : wff = thm difss () |- ( A \ B ) C_ A ;
	step 3 : wff = thm uniss () |- ( ( A \ B ) C_ A -> U. ( A \ B ) C_ U. A ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- U. ( A \ B ) C_ U. A ;
	step 5 : wff = thm jctil (step 1, step 4) |- ( A. x e. A E. y e. ( A \ B ) x C_ y -> ( U. ( A \ B ) C_ U. A /\ U. A C_ U. ( A \ B ) ) ) ;
	step 6 : wff = thm eqss () |- ( U. ( A \ B ) = U. A <-> ( U. ( A \ B ) C_ U. A /\ U. A C_ U. ( A \ B ) ) ) ;
	step 7 : wff = thm sylibr (step 5, step 6) |- ( A. x e. A E. y e. ( A \ B ) x C_ y -> U. ( A \ B ) = U. A ) ;
	qed prop 1 = step 7 ;
}

theorem ssunieq (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( A e. B /\ A. x e. B x C_ A ) -> A = U. B ) ;
}

proof of ssunieq {
	step 1 : wff = thm elssuni () |- ( A e. B -> A C_ U. B ) ;
	step 2 : wff = thm unissb () |- ( U. B C_ A <-> A. x e. B x C_ A ) ;
	step 3 : wff = thm biimpri (step 2) |- ( A. x e. B x C_ A -> U. B C_ A ) ;
	step 4 : wff = thm anim12i (step 1, step 3) |- ( ( A e. B /\ A. x e. B x C_ A ) -> ( A C_ U. B /\ U. B C_ A ) ) ;
	step 5 : wff = thm eqss () |- ( A = U. B <-> ( A C_ U. B /\ U. B C_ A ) ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( ( A e. B /\ A. x e. B x C_ A ) -> A = U. B ) ;
	qed prop 1 = step 6 ;
}

theorem unimax (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> U. { x e. B | x C_ A } = A ) ;
}

proof of unimax {
	var y : set;
	step 1 : wff = thm ssunieq () |- ( ( A e. { x e. B | x C_ A } /\ A. y e. { x e. B | x C_ A } y C_ A ) -> A = U. { x e. B | x C_ A } ) ;
	step 2 : wff = thm eqcomd (step 1) |- ( ( A e. { x e. B | x C_ A } /\ A. y e. { x e. B | x C_ A } y C_ A ) -> U. { x e. B | x C_ A } = A ) ;
	step 3 : wff = thm ssid () |- A C_ A ;
	step 4 : wff = thm sseq1 () |- ( x = A -> ( x C_ A <-> A C_ A ) ) ;
	step 5 : wff = thm elrab3 (step 4) |- ( A e. B -> ( A e. { x e. B | x C_ A } <-> A C_ A ) ) ;
	step 6 : wff = thm mpbiri (step 3, step 5) |- ( A e. B -> A e. { x e. B | x C_ A } ) ;
	step 7 : wff = thm sseq1 () |- ( x = y -> ( x C_ A <-> y C_ A ) ) ;
	step 8 : wff = thm elrab (step 7) |- ( y e. { x e. B | x C_ A } <-> ( y e. B /\ y C_ A ) ) ;
	step 9 : wff = thm pm3_27bi (step 8) |- ( y e. { x e. B | x C_ A } -> y C_ A ) ;
	step 10 : wff = thm rgen (step 9) |- A. y e. { x e. B | x C_ A } y C_ A ;
	step 11 : wff = thm sylancl (step 2, step 6, step 10) |- ( A e. B -> U. { x e. B | x C_ A } = A ) ;
	qed prop 1 = step 11 ;
}

theorem reucl (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( E! x e. A ph -> U. { x e. A | ph } e. A ) ;
}

proof of reucl {
	var y : set;
	step 1 : wff = thm euabsn () |- ( E! x ( x e. A /\ ph ) <-> E. x { x | ( x e. A /\ ph ) } = { x } ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ( x e. A /\ ph ) } -> A. x y e. { x | ( x e. A /\ ph ) } ) ;
	step 3 : wff = thm hbuni (step 2) |- ( y e. U. { x | ( x e. A /\ ph ) } -> A. x y e. U. { x | ( x e. A /\ ph ) } ) ;
	step 4 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 5 : wff = thm hbel (step 3, step 4) |- ( U. { x | ( x e. A /\ ph ) } e. A -> A. x U. { x | ( x e. A /\ ph ) } e. A ) ;
	step 6 : wff = thm unieq () |- ( { x | ( x e. A /\ ph ) } = { x } -> U. { x | ( x e. A /\ ph ) } = U. { x } ) ;
	step 7 : wff = thm visset () |- x e. _V ;
	step 8 : wff = thm unisn (step 7) |- U. { x } = x ;
	step 9 : wff = thm syl6req (step 6, step 8) |- ( { x | ( x e. A /\ ph ) } = { x } -> x = U. { x | ( x e. A /\ ph ) } ) ;
	step 10 : wff = thm visset () |- x e. _V ;
	step 11 : wff = thm snid (step 10) |- x e. { x } ;
	step 12 : wff = thm eleq2 () |- ( { x | ( x e. A /\ ph ) } = { x } -> ( x e. { x | ( x e. A /\ ph ) } <-> x e. { x } ) ) ;
	step 13 : wff = thm mpbiri (step 11, step 12) |- ( { x | ( x e. A /\ ph ) } = { x } -> x e. { x | ( x e. A /\ ph ) } ) ;
	step 14 : wff = thm abid () |- ( x e. { x | ( x e. A /\ ph ) } <-> ( x e. A /\ ph ) ) ;
	step 15 : wff = thm sylib (step 13, step 14) |- ( { x | ( x e. A /\ ph ) } = { x } -> ( x e. A /\ ph ) ) ;
	step 16 : wff = thm pm3_26d (step 15) |- ( { x | ( x e. A /\ ph ) } = { x } -> x e. A ) ;
	step 17 : wff = thm eqeltrrd (step 9, step 16) |- ( { x | ( x e. A /\ ph ) } = { x } -> U. { x | ( x e. A /\ ph ) } e. A ) ;
	step 18 : wff = thm 19_23ai (step 5, step 17) |- ( E. x { x | ( x e. A /\ ph ) } = { x } -> U. { x | ( x e. A /\ ph ) } e. A ) ;
	step 19 : wff = thm sylbi (step 1, step 18) |- ( E! x ( x e. A /\ ph ) -> U. { x | ( x e. A /\ ph ) } e. A ) ;
	step 20 : wff = def df-reu () |- ( E! x e. A ph <-> E! x ( x e. A /\ ph ) ) ;
	step 21 : wff = def df-rab () |- { x e. A | ph } = { x | ( x e. A /\ ph ) } ;
	step 22 : wff = thm unieqi (step 21) |- U. { x e. A | ph } = U. { x | ( x e. A /\ ph ) } ;
	step 23 : wff = thm eleq1i (step 22) |- ( U. { x e. A | ph } e. A <-> U. { x | ( x e. A /\ ph ) } e. A ) ;
	step 24 : wff = thm 3imtr4i (step 19, step 20, step 23) |- ( E! x e. A ph -> U. { x e. A | ph } e. A ) ;
	qed prop 1 = step 24 ;
}

constant {
	symbol |^| ;
}

rule cint (A : class) {
	term : class = # |^| A ;
}

definition df-int (x : set, y : set, A : class)  {
	defiendum : class = # |^| A ;
	definiens : class = # { x | A. y ( y e. A -> x e. y ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem dfint2 (x : set, y : set, A : class)  {
	prop 1 : wff = |- |^| A = { x | A. y e. A x e. y } ;
}

proof of dfint2 {
	step 1 : wff = def df-int () |- |^| A = { x | A. y ( y e. A -> x e. y ) } ;
	step 2 : wff = def df-ral () |- ( A. y e. A x e. y <-> A. y ( y e. A -> x e. y ) ) ;
	step 3 : wff = thm abbii (step 2) |- { x | A. y e. A x e. y } = { x | A. y ( y e. A -> x e. y ) } ;
	step 4 : wff = thm eqtr4i (step 1, step 3) |- |^| A = { x | A. y e. A x e. y } ;
	qed prop 1 = step 4 ;
}

theorem inteq (A : class, B : class)  {
	prop 1 : wff = |- ( A = B -> |^| A = |^| B ) ;
}

proof of inteq {
	var x : set, y : set;
	step 1 : wff = thm raleq1 () |- ( A = B -> ( A. y e. A x e. y <-> A. y e. B x e. y ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( A = B -> { x | A. y e. A x e. y } = { x | A. y e. B x e. y } ) ;
	step 3 : wff = thm dfint2 () |- |^| A = { x | A. y e. A x e. y } ;
	step 4 : wff = thm dfint2 () |- |^| B = { x | A. y e. B x e. y } ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( A = B -> |^| A = |^| B ) ;
	qed prop 1 = step 5 ;
}

theorem inteqi (A : class, B : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- |^| A = |^| B ;
}

proof of inteqi {
	step 1 : wff = thm inteq () |- ( A = B -> |^| A = |^| B ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- |^| A = |^| B ;
	qed prop 1 = step 2 ;
}

theorem inteqd (ph : wff, A : class, B : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> |^| A = |^| B ) ;
}

proof of inteqd {
	step 1 : wff = thm inteq () |- ( A = B -> |^| A = |^| B ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> |^| A = |^| B ) ;
	qed prop 1 = step 2 ;
}

theorem elint (x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) ;
}

proof of elint {
	var y : set;
	step 1 : wff = thm eleq1 () |- ( y = A -> ( y e. x <-> A e. x ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( y = A -> ( ( x e. B -> y e. x ) <-> ( x e. B -> A e. x ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( y = A -> ( A. x ( x e. B -> y e. x ) <-> A. x ( x e. B -> A e. x ) ) ) ;
	step 4 : wff = def df-int () |- |^| B = { y | A. x ( x e. B -> y e. x ) } ;
	step 5 : wff = thm elab2 (hyp 1, step 3, step 4) |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) ;
	qed prop 1 = step 5 ;
}

theorem elint2 (x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. |^| B <-> A. x e. B A e. x ) ;
}

proof of elint2 {
	step 1 : wff = thm elint (hyp 1) |- ( A e. |^| B <-> A. x ( x e. B -> A e. x ) ) ;
	step 2 : wff = def df-ral () |- ( A. x e. B A e. x <-> A. x ( x e. B -> A e. x ) ) ;
	step 3 : wff = thm bitr4i (step 1, step 2) |- ( A e. |^| B <-> A. x e. B A e. x ) ;
	qed prop 1 = step 3 ;
}

theorem elintg (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( A e. |^| B <-> A. x e. B A e. x ) ) ;
}

proof of elintg {
	var y : set;
	step 1 : wff = thm eleq1 () |- ( y = A -> ( y e. |^| B <-> A e. |^| B ) ) ;
	step 2 : wff = thm eleq1 () |- ( y = A -> ( y e. x <-> A e. x ) ) ;
	step 3 : wff = thm ralbidv (step 2) |- ( y = A -> ( A. x e. B y e. x <-> A. x e. B A e. x ) ) ;
	step 4 : wff = thm bibi12d (step 1, step 3) |- ( y = A -> ( ( y e. |^| B <-> A. x e. B y e. x ) <-> ( A e. |^| B <-> A. x e. B A e. x ) ) ) ;
	step 5 : wff = thm visset () |- y e. _V ;
	step 6 : wff = thm elint2 (step 5) |- ( y e. |^| B <-> A. x e. B y e. x ) ;
	step 7 : wff = thm vtoclg (step 4, step 6) |- ( A e. C -> ( A e. |^| B <-> A. x e. B A e. x ) ) ;
	qed prop 1 = step 7 ;
}

theorem elinti (A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. |^| B -> ( C e. B -> A e. C ) ) ;
}

proof of elinti {
	var x : set, y : set;
	step 1 : wff = thm eleq1 () |- ( x = A -> ( x e. y <-> A e. y ) ) ;
	step 2 : wff = thm imbi2d (step 1) |- ( x = A -> ( ( y e. B -> x e. y ) <-> ( y e. B -> A e. y ) ) ) ;
	step 3 : wff = thm albidv (step 2) |- ( x = A -> ( A. y ( y e. B -> x e. y ) <-> A. y ( y e. B -> A e. y ) ) ) ;
	step 4 : wff = thm visset () |- x e. _V ;
	step 5 : wff = thm elint (step 4) |- ( x e. |^| B <-> A. y ( y e. B -> x e. y ) ) ;
	step 6 : wff = thm biimpi (step 5) |- ( x e. |^| B -> A. y ( y e. B -> x e. y ) ) ;
	step 7 : wff = thm vtoclga (step 3, step 6) |- ( A e. |^| B -> A. y ( y e. B -> A e. y ) ) ;
	step 8 : wff = thm eleq1 () |- ( y = C -> ( y e. B <-> C e. B ) ) ;
	step 9 : wff = thm eleq2 () |- ( y = C -> ( A e. y <-> A e. C ) ) ;
	step 10 : wff = thm imbi12d (step 8, step 9) |- ( y = C -> ( ( y e. B -> A e. y ) <-> ( C e. B -> A e. C ) ) ) ;
	step 11 : wff = thm cla4gv (step 10) |- ( C e. B -> ( A. y ( y e. B -> A e. y ) -> ( C e. B -> A e. C ) ) ) ;
	step 12 : wff = thm pm2_43b (step 11) |- ( A. y ( y e. B -> A e. y ) -> ( C e. B -> A e. C ) ) ;
	step 13 : wff = thm syl (step 7, step 12) |- ( A e. |^| B -> ( C e. B -> A e. C ) ) ;
	qed prop 1 = step 13 ;
}

theorem hbint (x : set, y : set, A : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	-----------------------
	prop 1 : wff = |- ( y e. |^| A -> A. x y e. |^| A ) ;
}

proof of hbint {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 2 : wff = thm hbel (step 1, hyp 1) |- ( z e. A -> A. x z e. A ) ;
	step 3 : wff = axm ax-17 () |- ( y e. z -> A. x y e. z ) ;
	step 4 : wff = thm hbim (step 2, step 3) |- ( ( z e. A -> y e. z ) -> A. x ( z e. A -> y e. z ) ) ;
	step 5 : wff = thm hbal (step 4) |- ( A. z ( z e. A -> y e. z ) -> A. x A. z ( z e. A -> y e. z ) ) ;
	step 6 : wff = thm visset () |- y e. _V ;
	step 7 : wff = thm elint (step 6) |- ( y e. |^| A <-> A. z ( z e. A -> y e. z ) ) ;
	step 8 : wff = thm visset () |- y e. _V ;
	step 9 : wff = thm elint (step 8) |- ( y e. |^| A <-> A. z ( z e. A -> y e. z ) ) ;
	step 10 : wff = thm albii (step 9) |- ( A. x y e. |^| A <-> A. x A. z ( z e. A -> y e. z ) ) ;
	step 11 : wff = thm 3imtr4i (step 5, step 7, step 10) |- ( y e. |^| A -> A. x y e. |^| A ) ;
	qed prop 1 = step 11 ;
}

theorem elintab (ph : wff, x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. |^| { x | ph } <-> A. x ( ph -> A e. x ) ) ;
}

proof of elintab {
	var y : set;
	step 1 : wff = thm elint (hyp 1) |- ( A e. |^| { x | ph } <-> A. y ( y e. { x | ph } -> A e. y ) ) ;
	step 2 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 3 : wff = axm ax-17 () |- ( A e. y -> A. x A e. y ) ;
	step 4 : wff = thm hbim (step 2, step 3) |- ( ( y e. { x | ph } -> A e. y ) -> A. x ( y e. { x | ph } -> A e. y ) ) ;
	step 5 : wff = axm ax-17 () |- ( ( ph -> A e. x ) -> A. y ( ph -> A e. x ) ) ;
	step 6 : wff = thm eleq1 () |- ( y = x -> ( y e. { x | ph } <-> x e. { x | ph } ) ) ;
	step 7 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 8 : wff = thm syl6bb (step 6, step 7) |- ( y = x -> ( y e. { x | ph } <-> ph ) ) ;
	step 9 : wff = thm eleq2 () |- ( y = x -> ( A e. y <-> A e. x ) ) ;
	step 10 : wff = thm imbi12d (step 8, step 9) |- ( y = x -> ( ( y e. { x | ph } -> A e. y ) <-> ( ph -> A e. x ) ) ) ;
	step 11 : wff = thm cbval (step 4, step 5, step 10) |- ( A. y ( y e. { x | ph } -> A e. y ) <-> A. x ( ph -> A e. x ) ) ;
	step 12 : wff = thm bitri (step 1, step 11) |- ( A e. |^| { x | ph } <-> A. x ( ph -> A e. x ) ) ;
	qed prop 1 = step 12 ;
}

theorem elintrab (ph : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- ( A e. |^| { x e. B | ph } <-> A. x e. B ( ph -> A e. x ) ) ;
}

proof of elintrab {
	step 1 : wff = thm elintab (hyp 1) |- ( A e. |^| { x | ( x e. B /\ ph ) } <-> A. x ( ( x e. B /\ ph ) -> A e. x ) ) ;
	step 2 : wff = thm impexp () |- ( ( ( x e. B /\ ph ) -> A e. x ) <-> ( x e. B -> ( ph -> A e. x ) ) ) ;
	step 3 : wff = thm albii (step 2) |- ( A. x ( ( x e. B /\ ph ) -> A e. x ) <-> A. x ( x e. B -> ( ph -> A e. x ) ) ) ;
	step 4 : wff = thm bitri (step 1, step 3) |- ( A e. |^| { x | ( x e. B /\ ph ) } <-> A. x ( x e. B -> ( ph -> A e. x ) ) ) ;
	step 5 : wff = def df-rab () |- { x e. B | ph } = { x | ( x e. B /\ ph ) } ;
	step 6 : wff = thm inteqi (step 5) |- |^| { x e. B | ph } = |^| { x | ( x e. B /\ ph ) } ;
	step 7 : wff = thm eleq2i (step 6) |- ( A e. |^| { x e. B | ph } <-> A e. |^| { x | ( x e. B /\ ph ) } ) ;
	step 8 : wff = def df-ral () |- ( A. x e. B ( ph -> A e. x ) <-> A. x ( x e. B -> ( ph -> A e. x ) ) ) ;
	step 9 : wff = thm 3bitr4i (step 4, step 7, step 8) |- ( A e. |^| { x e. B | ph } <-> A. x e. B ( ph -> A e. x ) ) ;
	qed prop 1 = step 9 ;
}

theorem elintrabg (ph : wff, x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. C -> ( A e. |^| { x e. B | ph } <-> A. x e. B ( ph -> A e. x ) ) ) ;
}

proof of elintrabg {
	var y : set;
	step 1 : wff = thm eleq1 () |- ( y = A -> ( y e. |^| { x e. B | ph } <-> A e. |^| { x e. B | ph } ) ) ;
	step 2 : wff = thm eleq1 () |- ( y = A -> ( y e. x <-> A e. x ) ) ;
	step 3 : wff = thm imbi2d (step 2) |- ( y = A -> ( ( ph -> y e. x ) <-> ( ph -> A e. x ) ) ) ;
	step 4 : wff = thm ralbidv (step 3) |- ( y = A -> ( A. x e. B ( ph -> y e. x ) <-> A. x e. B ( ph -> A e. x ) ) ) ;
	step 5 : wff = thm visset () |- y e. _V ;
	step 6 : wff = thm elintrab (step 5) |- ( y e. |^| { x e. B | ph } <-> A. x e. B ( ph -> y e. x ) ) ;
	step 7 : wff = thm vtoclbg (step 1, step 4, step 6) |- ( A e. C -> ( A e. |^| { x e. B | ph } <-> A. x e. B ( ph -> A e. x ) ) ) ;
	qed prop 1 = step 7 ;
}

theorem int0 ()  {
	prop 1 : wff = |- |^| (/) = _V ;
}

proof of int0 {
	var x : set, y : set;
	step 1 : wff = thm noel () |- -. y e. (/) ;
	step 2 : wff = thm pm2_21i (step 1) |- ( y e. (/) -> x e. y ) ;
	step 3 : wff = axm ax-gen (step 2) |- A. y ( y e. (/) -> x e. y ) ;
	step 4 : wff = thm eqid () |- x = x ;
	step 5 : wff = thm 2th (step 3, step 4) |- ( A. y ( y e. (/) -> x e. y ) <-> x = x ) ;
	step 6 : wff = thm abbii (step 5) |- { x | A. y ( y e. (/) -> x e. y ) } = { x | x = x } ;
	step 7 : wff = def df-int () |- |^| (/) = { x | A. y ( y e. (/) -> x e. y ) } ;
	step 8 : wff = def df-v () |- _V = { x | x = x } ;
	step 9 : wff = thm 3eqtr4i (step 6, step 7, step 8) |- |^| (/) = _V ;
	qed prop 1 = step 9 ;
}

theorem intss1 (A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> |^| B C_ A ) ;
}

proof of intss1 {
	var x : set, y : set;
	step 1 : wff = thm eleq1 () |- ( y = A -> ( y e. B <-> A e. B ) ) ;
	step 2 : wff = thm eleq2 () |- ( y = A -> ( x e. y <-> x e. A ) ) ;
	step 3 : wff = thm imbi12d (step 1, step 2) |- ( y = A -> ( ( y e. B -> x e. y ) <-> ( A e. B -> x e. A ) ) ) ;
	step 4 : wff = thm cla4gv (step 3) |- ( A e. B -> ( A. y ( y e. B -> x e. y ) -> ( A e. B -> x e. A ) ) ) ;
	step 5 : wff = thm pm2_43a (step 4) |- ( A e. B -> ( A. y ( y e. B -> x e. y ) -> x e. A ) ) ;
	step 6 : wff = thm visset () |- x e. _V ;
	step 7 : wff = thm elint (step 6) |- ( x e. |^| B <-> A. y ( y e. B -> x e. y ) ) ;
	step 8 : wff = thm syl5ib (step 5, step 7) |- ( A e. B -> ( x e. |^| B -> x e. A ) ) ;
	step 9 : wff = thm ssrdv (step 8) |- ( A e. B -> |^| B C_ A ) ;
	qed prop 1 = step 9 ;
}

theorem ssint (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ |^| B <-> A. x e. B A C_ x ) ;
}

proof of ssint {
	var y : set;
	step 1 : wff = thm dfss3 () |- ( A C_ |^| B <-> A. y e. A y e. |^| B ) ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm elint2 (step 2) |- ( y e. |^| B <-> A. x e. B y e. x ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. y e. A y e. |^| B <-> A. y e. A A. x e. B y e. x ) ;
	step 5 : wff = thm ralcom () |- ( A. y e. A A. x e. B y e. x <-> A. x e. B A. y e. A y e. x ) ;
	step 6 : wff = thm dfss3 () |- ( A C_ x <-> A. y e. A y e. x ) ;
	step 7 : wff = thm ralbii (step 6) |- ( A. x e. B A C_ x <-> A. x e. B A. y e. A y e. x ) ;
	step 8 : wff = thm bitr4i (step 5, step 7) |- ( A. y e. A A. x e. B y e. x <-> A. x e. B A C_ x ) ;
	step 9 : wff = thm 3bitri (step 1, step 4, step 8) |- ( A C_ |^| B <-> A. x e. B A C_ x ) ;
	qed prop 1 = step 9 ;
}

theorem ssintab (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) ;
}

proof of ssintab {
	var y : set;
	step 1 : wff = thm ssint () |- ( A C_ |^| { x | ph } <-> A. y e. { x | ph } A C_ y ) ;
	step 2 : wff = def df-ral () |- ( A. y e. { x | ph } A C_ y <-> A. y ( y e. { x | ph } -> A C_ y ) ) ;
	step 3 : wff = thm hbab1 () |- ( y e. { x | ph } -> A. x y e. { x | ph } ) ;
	step 4 : wff = axm ax-17 () |- ( A C_ y -> A. x A C_ y ) ;
	step 5 : wff = thm hbim (step 3, step 4) |- ( ( y e. { x | ph } -> A C_ y ) -> A. x ( y e. { x | ph } -> A C_ y ) ) ;
	step 6 : wff = axm ax-17 () |- ( ( x e. { x | ph } -> A C_ x ) -> A. y ( x e. { x | ph } -> A C_ x ) ) ;
	step 7 : wff = thm eleq1 () |- ( y = x -> ( y e. { x | ph } <-> x e. { x | ph } ) ) ;
	step 8 : wff = thm sseq2 () |- ( y = x -> ( A C_ y <-> A C_ x ) ) ;
	step 9 : wff = thm imbi12d (step 7, step 8) |- ( y = x -> ( ( y e. { x | ph } -> A C_ y ) <-> ( x e. { x | ph } -> A C_ x ) ) ) ;
	step 10 : wff = thm cbval (step 5, step 6, step 9) |- ( A. y ( y e. { x | ph } -> A C_ y ) <-> A. x ( x e. { x | ph } -> A C_ x ) ) ;
	step 11 : wff = thm abid () |- ( x e. { x | ph } <-> ph ) ;
	step 12 : wff = thm imbi1i (step 11) |- ( ( x e. { x | ph } -> A C_ x ) <-> ( ph -> A C_ x ) ) ;
	step 13 : wff = thm albii (step 12) |- ( A. x ( x e. { x | ph } -> A C_ x ) <-> A. x ( ph -> A C_ x ) ) ;
	step 14 : wff = thm bitri (step 10, step 13) |- ( A. y ( y e. { x | ph } -> A C_ y ) <-> A. x ( ph -> A C_ x ) ) ;
	step 15 : wff = thm 3bitri (step 1, step 2, step 14) |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) ;
	qed prop 1 = step 15 ;
}

theorem ssintub (x : set, A : class, B : class)  {
	prop 1 : wff = |- A C_ |^| { x e. B | A C_ x } ;
}

proof of ssintub {
	var y : set;
	step 1 : wff = thm ssint () |- ( A C_ |^| { x e. B | A C_ x } <-> A. y e. { x e. B | A C_ x } A C_ y ) ;
	step 2 : wff = thm sseq2 () |- ( x = y -> ( A C_ x <-> A C_ y ) ) ;
	step 3 : wff = thm elrab (step 2) |- ( y e. { x e. B | A C_ x } <-> ( y e. B /\ A C_ y ) ) ;
	step 4 : wff = thm pm3_27bi (step 3) |- ( y e. { x e. B | A C_ x } -> A C_ y ) ;
	step 5 : wff = thm mprgbir (step 1, step 4) |- A C_ |^| { x e. B | A C_ x } ;
	qed prop 1 = step 5 ;
}

theorem ssmin (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- A C_ |^| { x | ( A C_ x /\ ph ) } ;
}

proof of ssmin {
	step 1 : wff = thm ssintab () |- ( A C_ |^| { x | ( A C_ x /\ ph ) } <-> A. x ( ( A C_ x /\ ph ) -> A C_ x ) ) ;
	step 2 : wff = thm pm3_26 () |- ( ( A C_ x /\ ph ) -> A C_ x ) ;
	step 3 : wff = thm mpgbir (step 1, step 2) |- A C_ |^| { x | ( A C_ x /\ ph ) } ;
	qed prop 1 = step 3 ;
}

theorem intmin (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A e. B -> |^| { x e. B | A C_ x } = A ) ;
}

proof of intmin {
	var y : set;
	step 1 : wff = thm ssid () |- A C_ A ;
	step 2 : wff = thm sseq2 () |- ( x = A -> ( A C_ x <-> A C_ A ) ) ;
	step 3 : wff = thm eleq2 () |- ( x = A -> ( y e. x <-> y e. A ) ) ;
	step 4 : wff = thm imbi12d (step 2, step 3) |- ( x = A -> ( ( A C_ x -> y e. x ) <-> ( A C_ A -> y e. A ) ) ) ;
	step 5 : wff = thm rcla4v (step 4) |- ( A e. B -> ( A. x e. B ( A C_ x -> y e. x ) -> ( A C_ A -> y e. A ) ) ) ;
	step 6 : wff = thm mpii (step 1, step 5) |- ( A e. B -> ( A. x e. B ( A C_ x -> y e. x ) -> y e. A ) ) ;
	step 7 : wff = thm visset () |- y e. _V ;
	step 8 : wff = thm elintrab (step 7) |- ( y e. |^| { x e. B | A C_ x } <-> A. x e. B ( A C_ x -> y e. x ) ) ;
	step 9 : wff = thm syl5ib (step 6, step 8) |- ( A e. B -> ( y e. |^| { x e. B | A C_ x } -> y e. A ) ) ;
	step 10 : wff = thm ssrdv (step 9) |- ( A e. B -> |^| { x e. B | A C_ x } C_ A ) ;
	step 11 : wff = thm ssintub () |- A C_ |^| { x e. B | A C_ x } ;
	step 12 : wff = thm jctir (step 10, step 11) |- ( A e. B -> ( |^| { x e. B | A C_ x } C_ A /\ A C_ |^| { x e. B | A C_ x } ) ) ;
	step 13 : wff = thm eqss () |- ( |^| { x e. B | A C_ x } = A <-> ( |^| { x e. B | A C_ x } C_ A /\ A C_ |^| { x e. B | A C_ x } ) ) ;
	step 14 : wff = thm sylibr (step 12, step 13) |- ( A e. B -> |^| { x e. B | A C_ x } = A ) ;
	qed prop 1 = step 14 ;
}

theorem intss (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ B -> |^| B C_ |^| A ) ;
}

proof of intss {
	var x : set, y : set;
	step 1 : wff = thm imim1 () |- ( ( y e. A -> y e. B ) -> ( ( y e. B -> x e. y ) -> ( y e. A -> x e. y ) ) ) ;
	step 2 : wff = thm 19_20ii (step 1) |- ( A. y ( y e. A -> y e. B ) -> ( A. y ( y e. B -> x e. y ) -> A. y ( y e. A -> x e. y ) ) ) ;
	step 3 : wff = thm visset () |- x e. _V ;
	step 4 : wff = thm elint (step 3) |- ( x e. |^| B <-> A. y ( y e. B -> x e. y ) ) ;
	step 5 : wff = thm visset () |- x e. _V ;
	step 6 : wff = thm elint (step 5) |- ( x e. |^| A <-> A. y ( y e. A -> x e. y ) ) ;
	step 7 : wff = thm 3imtr4g (step 2, step 4, step 6) |- ( A. y ( y e. A -> y e. B ) -> ( x e. |^| B -> x e. |^| A ) ) ;
	step 8 : wff = thm 19_21aiv (step 7) |- ( A. y ( y e. A -> y e. B ) -> A. x ( x e. |^| B -> x e. |^| A ) ) ;
	step 9 : wff = thm dfss2 () |- ( A C_ B <-> A. y ( y e. A -> y e. B ) ) ;
	step 10 : wff = thm dfss2 () |- ( |^| B C_ |^| A <-> A. x ( x e. |^| B -> x e. |^| A ) ) ;
	step 11 : wff = thm 3imtr4i (step 8, step 9, step 10) |- ( A C_ B -> |^| B C_ |^| A ) ;
	qed prop 1 = step 11 ;
}

theorem intssuni (A : class)  {
	prop 1 : wff = |- ( A =/= (/) -> |^| A C_ U. A ) ;
}

proof of intssuni {
	var x : set, y : set;
	step 1 : wff = thm r19_2z () |- ( ( A =/= (/) /\ A. y e. A x e. y ) -> E. y e. A x e. y ) ;
	step 2 : wff = thm ex (step 1) |- ( A =/= (/) -> ( A. y e. A x e. y -> E. y e. A x e. y ) ) ;
	step 3 : wff = thm visset () |- x e. _V ;
	step 4 : wff = thm elint2 (step 3) |- ( x e. |^| A <-> A. y e. A x e. y ) ;
	step 5 : wff = thm eluni2 () |- ( x e. U. A <-> E. y e. A x e. y ) ;
	step 6 : wff = thm 3imtr4g (step 2, step 4, step 5) |- ( A =/= (/) -> ( x e. |^| A -> x e. U. A ) ) ;
	step 7 : wff = thm ssrdv (step 6) |- ( A =/= (/) -> |^| A C_ U. A ) ;
	qed prop 1 = step 7 ;
}

theorem unissint (A : class)  {
	prop 1 : wff = |- ( U. A C_ |^| A <-> ( A = (/) \/ U. A = |^| A ) ) ;
}

proof of unissint {
	step 1 : wff = thm sspss () |- ( U. A C_ |^| A <-> ( U. A C. |^| A \/ U. A = |^| A ) ) ;
	step 2 : wff = thm dfpss3 () |- ( U. A C. |^| A <-> ( U. A C_ |^| A /\ -. |^| A C_ U. A ) ) ;
	step 3 : wff = thm intssuni () |- ( A =/= (/) -> |^| A C_ U. A ) ;
	step 4 : wff = thm necon1bi (step 3) |- ( -. |^| A C_ U. A -> A = (/) ) ;
	step 5 : wff = thm adantl (step 4) |- ( ( U. A C_ |^| A /\ -. |^| A C_ U. A ) -> A = (/) ) ;
	step 6 : wff = thm sylbi (step 2, step 5) |- ( U. A C. |^| A -> A = (/) ) ;
	step 7 : wff = thm vn0 () |- _V =/= (/) ;
	step 8 : wff = thm necom () |- ( _V =/= (/) <-> (/) =/= _V ) ;
	step 9 : wff = thm mpbi (step 7, step 8) |- (/) =/= _V ;
	step 10 : wff = def df-ne () |- ( (/) =/= _V <-> -. (/) = _V ) ;
	step 11 : wff = thm mpbi (step 9, step 10) |- -. (/) = _V ;
	step 12 : wff = thm pssv () |- ( (/) C. _V <-> -. (/) = _V ) ;
	step 13 : wff = thm mpbir (step 11, step 12) |- (/) C. _V ;
	step 14 : wff = thm unieq () |- ( A = (/) -> U. A = U. (/) ) ;
	step 15 : wff = thm uni0 () |- U. (/) = (/) ;
	step 16 : wff = thm syl6eq (step 14, step 15) |- ( A = (/) -> U. A = (/) ) ;
	step 17 : wff = thm inteq () |- ( A = (/) -> |^| A = |^| (/) ) ;
	step 18 : wff = thm int0 () |- |^| (/) = _V ;
	step 19 : wff = thm syl6eq (step 17, step 18) |- ( A = (/) -> |^| A = _V ) ;
	step 20 : wff = thm psseq12d (step 16, step 19) |- ( A = (/) -> ( U. A C. |^| A <-> (/) C. _V ) ) ;
	step 21 : wff = thm mpbiri (step 13, step 20) |- ( A = (/) -> U. A C. |^| A ) ;
	step 22 : wff = thm impbii (step 6, step 21) |- ( U. A C. |^| A <-> A = (/) ) ;
	step 23 : wff = thm orbi1i (step 22) |- ( ( U. A C. |^| A \/ U. A = |^| A ) <-> ( A = (/) \/ U. A = |^| A ) ) ;
	step 24 : wff = thm bitri (step 1, step 23) |- ( U. A C_ |^| A <-> ( A = (/) \/ U. A = |^| A ) ) ;
	qed prop 1 = step 24 ;
}

theorem intssuni2 (A : class, B : class)  {
	prop 1 : wff = |- ( ( A C_ B /\ A =/= (/) ) -> |^| A C_ U. B ) ;
}

proof of intssuni2 {
	step 1 : wff = thm intssuni () |- ( A =/= (/) -> |^| A C_ U. A ) ;
	step 2 : wff = thm uniss () |- ( A C_ B -> U. A C_ U. B ) ;
	step 3 : wff = thm sylan9ssr (step 1, step 2) |- ( ( A C_ B /\ A =/= (/) ) -> |^| A C_ U. B ) ;
	qed prop 1 = step 3 ;
}

theorem intmin2 (x : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- |^| { x | A C_ x } = A ;
}

proof of intmin2 {
	step 1 : wff = thm rabab () |- { x e. _V | A C_ x } = { x | A C_ x } ;
	step 2 : wff = thm inteqi (step 1) |- |^| { x e. _V | A C_ x } = |^| { x | A C_ x } ;
	step 3 : wff = thm intmin () |- ( A e. _V -> |^| { x e. _V | A C_ x } = A ) ;
	step 4 : wff = axm ax-mp (hyp 1, step 3) |- |^| { x e. _V | A C_ x } = A ;
	step 5 : wff = thm eqtr3i (step 2, step 4) |- |^| { x | A C_ x } = A ;
	qed prop 1 = step 5 ;
}

theorem intmin3 (ph : wff, ps : wff, x : set, A : class, B : class)  {
	hyp 1 : wff = |- ( x = A -> ( ph <-> ps ) ) ;
	hyp 2 : wff = |- ps ;
	-----------------------
	prop 1 : wff = |- ( A e. B -> |^| { x | ph } C_ A ) ;
}

proof of intmin3 {
	step 1 : wff = thm elabg (hyp 1) |- ( A e. B -> ( A e. { x | ph } <-> ps ) ) ;
	step 2 : wff = thm mpbiri (hyp 2, step 1) |- ( A e. B -> A e. { x | ph } ) ;
	step 3 : wff = thm intss1 () |- ( A e. { x | ph } -> |^| { x | ph } C_ A ) ;
	step 4 : wff = thm syl (step 2, step 3) |- ( A e. B -> |^| { x | ph } C_ A ) ;
	qed prop 1 = step 4 ;
}

theorem intmin4 (ph : wff, x : set, A : class)  {
	prop 1 : wff = |- ( A C_ |^| { x | ph } -> |^| { x | ( A C_ x /\ ph ) } = |^| { x | ph } ) ;
}

proof of intmin4 {
	var y : set;
	step 1 : wff = thm ssintab () |- ( A C_ |^| { x | ph } <-> A. x ( ph -> A C_ x ) ) ;
	step 2 : wff = thm pm3_27 () |- ( ( A C_ x /\ ph ) -> ph ) ;
	step 3 : wff = thm ancr () |- ( ( ph -> A C_ x ) -> ( ph -> ( A C_ x /\ ph ) ) ) ;
	step 4 : wff = thm impbid2 (step 2, step 3) |- ( ( ph -> A C_ x ) -> ( ( A C_ x /\ ph ) <-> ph ) ) ;
	step 5 : wff = thm imbi1d (step 4) |- ( ( ph -> A C_ x ) -> ( ( ( A C_ x /\ ph ) -> y e. x ) <-> ( ph -> y e. x ) ) ) ;
	step 6 : wff = thm 19_20i (step 5) |- ( A. x ( ph -> A C_ x ) -> A. x ( ( ( A C_ x /\ ph ) -> y e. x ) <-> ( ph -> y e. x ) ) ) ;
	step 7 : wff = thm 19_15 () |- ( A. x ( ( ( A C_ x /\ ph ) -> y e. x ) <-> ( ph -> y e. x ) ) -> ( A. x ( ( A C_ x /\ ph ) -> y e. x ) <-> A. x ( ph -> y e. x ) ) ) ;
	step 8 : wff = thm syl (step 6, step 7) |- ( A. x ( ph -> A C_ x ) -> ( A. x ( ( A C_ x /\ ph ) -> y e. x ) <-> A. x ( ph -> y e. x ) ) ) ;
	step 9 : wff = thm sylbi (step 1, step 8) |- ( A C_ |^| { x | ph } -> ( A. x ( ( A C_ x /\ ph ) -> y e. x ) <-> A. x ( ph -> y e. x ) ) ) ;
	step 10 : wff = thm visset () |- y e. _V ;
	step 11 : wff = thm elintab (step 10) |- ( y e. |^| { x | ( A C_ x /\ ph ) } <-> A. x ( ( A C_ x /\ ph ) -> y e. x ) ) ;
	step 12 : wff = thm visset () |- y e. _V ;
	step 13 : wff = thm elintab (step 12) |- ( y e. |^| { x | ph } <-> A. x ( ph -> y e. x ) ) ;
	step 14 : wff = thm 3bitr4g (step 9, step 11, step 13) |- ( A C_ |^| { x | ph } -> ( y e. |^| { x | ( A C_ x /\ ph ) } <-> y e. |^| { x | ph } ) ) ;
	step 15 : wff = thm eqrdv (step 14) |- ( A C_ |^| { x | ph } -> |^| { x | ( A C_ x /\ ph ) } = |^| { x | ph } ) ;
	qed prop 1 = step 15 ;
}

theorem intab (ph : wff, x : set, y : set, A : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- { x | E. y ( ph /\ x = A ) } e. _V ;
	-----------------------
	prop 1 : wff = |- |^| { x | A. y ( ph -> A e. x ) } = { x | E. y ( ph /\ x = A ) } ;
}

proof of intab {
	var z : set;
	step 1 : wff = thm eqeq1 () |- ( z = x -> ( z = A <-> x = A ) ) ;
	step 2 : wff = thm anbi2d (step 1) |- ( z = x -> ( ( ph /\ z = A ) <-> ( ph /\ x = A ) ) ) ;
	step 3 : wff = thm exbidv (step 2) |- ( z = x -> ( E. y ( ph /\ z = A ) <-> E. y ( ph /\ x = A ) ) ) ;
	step 4 : wff = thm cbvabv (step 3) |- { z | E. y ( ph /\ z = A ) } = { x | E. y ( ph /\ x = A ) } ;
	step 5 : wff = thm eqeltri (step 4, hyp 2) |- { z | E. y ( ph /\ z = A ) } e. _V ;
	step 6 : wff = thm hbe1 () |- ( E. y ( ph /\ z = A ) -> A. y E. y ( ph /\ z = A ) ) ;
	step 7 : wff = thm hbab (step 6) |- ( x e. { z | E. y ( ph /\ z = A ) } -> A. y x e. { z | E. y ( ph /\ z = A ) } ) ;
	step 8 : wff = thm hbeleq (step 7) |- ( x = { z | E. y ( ph /\ z = A ) } -> A. y x = { z | E. y ( ph /\ z = A ) } ) ;
	step 9 : wff = thm eleq2 () |- ( x = { z | E. y ( ph /\ z = A ) } -> ( A e. x <-> A e. { z | E. y ( ph /\ z = A ) } ) ) ;
	step 10 : wff = thm imbi2d (step 9) |- ( x = { z | E. y ( ph /\ z = A ) } -> ( ( ph -> A e. x ) <-> ( ph -> A e. { z | E. y ( ph /\ z = A ) } ) ) ) ;
	step 11 : wff = thm albid (step 8, step 10) |- ( x = { z | E. y ( ph /\ z = A ) } -> ( A. y ( ph -> A e. x ) <-> A. y ( ph -> A e. { z | E. y ( ph /\ z = A ) } ) ) ) ;
	step 12 : wff = thm sbcie (step 5, step 11) |- ( [ { z | E. y ( ph /\ z = A ) } / x ] A. y ( ph -> A e. x ) <-> A. y ( ph -> A e. { z | E. y ( ph /\ z = A ) } ) ) ;
	step 13 : wff = axm ax-17 () |- ( ph -> A. z ph ) ;
	step 14 : wff = thm sbcgf (step 13) |- ( A e. _V -> ( [ A / z ] ph <-> ph ) ) ;
	step 15 : wff = axm ax-mp (hyp 1, step 14) |- ( [ A / z ] ph <-> ph ) ;
	step 16 : wff = thm biimpri (step 15) |- ( ph -> [ A / z ] ph ) ;
	step 17 : wff = thm csbvarg () |- ( A e. _V -> [_ A / z ]_ z = A ) ;
	step 18 : wff = axm ax-mp (hyp 1, step 17) |- [_ A / z ]_ z = A ;
	step 19 : wff = thm sbceq1dig () |- ( A e. _V -> ( [ A / z ] z = A <-> [_ A / z ]_ z = A ) ) ;
	step 20 : wff = axm ax-mp (hyp 1, step 19) |- ( [ A / z ] z = A <-> [_ A / z ]_ z = A ) ;
	step 21 : wff = thm mpbir (step 18, step 20) |- [ A / z ] z = A ;
	step 22 : wff = thm jctir (step 16, step 21) |- ( ph -> ( [ A / z ] ph /\ [ A / z ] z = A ) ) ;
	step 23 : wff = thm sbcang () |- ( A e. _V -> ( [ A / z ] ( ph /\ z = A ) <-> ( [ A / z ] ph /\ [ A / z ] z = A ) ) ) ;
	step 24 : wff = axm ax-mp (hyp 1, step 23) |- ( [ A / z ] ( ph /\ z = A ) <-> ( [ A / z ] ph /\ [ A / z ] z = A ) ) ;
	step 25 : wff = thm sylibr (step 22, step 24) |- ( ph -> [ A / z ] ( ph /\ z = A ) ) ;
	step 26 : wff = thm 19_8a () |- ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) ;
	step 27 : wff = axm ax-gen (step 26) |- A. z ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) ;
	step 28 : wff = thm a4sbc () |- ( A e. _V -> ( A. z ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) -> [ A / z ] ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) ) ) ;
	step 29 : wff = thm mp2 (hyp 1, step 27, step 28) |- [ A / z ] ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) ;
	step 30 : wff = thm sbcimg () |- ( A e. _V -> ( [ A / z ] ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) <-> ( [ A / z ] ( ph /\ z = A ) -> [ A / z ] E. y ( ph /\ z = A ) ) ) ) ;
	step 31 : wff = axm ax-mp (hyp 1, step 30) |- ( [ A / z ] ( ( ph /\ z = A ) -> E. y ( ph /\ z = A ) ) <-> ( [ A / z ] ( ph /\ z = A ) -> [ A / z ] E. y ( ph /\ z = A ) ) ) ;
	step 32 : wff = thm mpbi (step 29, step 31) |- ( [ A / z ] ( ph /\ z = A ) -> [ A / z ] E. y ( ph /\ z = A ) ) ;
	step 33 : wff = thm syl (step 25, step 32) |- ( ph -> [ A / z ] E. y ( ph /\ z = A ) ) ;
	step 34 : wff = thm elabs (hyp 1) |- ( A e. { z | E. y ( ph /\ z = A ) } <-> [ A / z ] E. y ( ph /\ z = A ) ) ;
	step 35 : wff = thm sylibr (step 33, step 34) |- ( ph -> A e. { z | E. y ( ph /\ z = A ) } ) ;
	step 36 : wff = thm mpgbir (step 12, step 35) |- [ { z | E. y ( ph /\ z = A ) } / x ] A. y ( ph -> A e. x ) ;
	step 37 : wff = thm eqeq1 () |- ( z = x -> ( z = A <-> x = A ) ) ;
	step 38 : wff = thm anbi2d (step 37) |- ( z = x -> ( ( ph /\ z = A ) <-> ( ph /\ x = A ) ) ) ;
	step 39 : wff = thm exbidv (step 38) |- ( z = x -> ( E. y ( ph /\ z = A ) <-> E. y ( ph /\ x = A ) ) ) ;
	step 40 : wff = thm cbvabv (step 39) |- { z | E. y ( ph /\ z = A ) } = { x | E. y ( ph /\ x = A ) } ;
	step 41 : wff = thm eqeltri (step 40, hyp 2) |- { z | E. y ( ph /\ z = A ) } e. _V ;
	step 42 : wff = thm elabs (step 41) |- ( { z | E. y ( ph /\ z = A ) } e. { x | A. y ( ph -> A e. x ) } <-> [ { z | E. y ( ph /\ z = A ) } / x ] A. y ( ph -> A e. x ) ) ;
	step 43 : wff = thm mpbir (step 36, step 42) |- { z | E. y ( ph /\ z = A ) } e. { x | A. y ( ph -> A e. x ) } ;
	step 44 : wff = thm intss1 () |- ( { z | E. y ( ph /\ z = A ) } e. { x | A. y ( ph -> A e. x ) } -> |^| { x | A. y ( ph -> A e. x ) } C_ { z | E. y ( ph /\ z = A ) } ) ;
	step 45 : wff = axm ax-mp (step 43, step 44) |- |^| { x | A. y ( ph -> A e. x ) } C_ { z | E. y ( ph /\ z = A ) } ;
	step 46 : wff = thm hba1 () |- ( A. y ( ph -> A e. x ) -> A. y A. y ( ph -> A e. x ) ) ;
	step 47 : wff = thm hbab (step 46) |- ( z e. { x | A. y ( ph -> A e. x ) } -> A. y z e. { x | A. y ( ph -> A e. x ) } ) ;
	step 48 : wff = thm hbint (step 47) |- ( z e. |^| { x | A. y ( ph -> A e. x ) } -> A. y z e. |^| { x | A. y ( ph -> A e. x ) } ) ;
	step 49 : wff = axm ax-4 () |- ( A. y ( ph -> A e. x ) -> ( ph -> A e. x ) ) ;
	step 50 : wff = thm com12 (step 49) |- ( ph -> ( A. y ( ph -> A e. x ) -> A e. x ) ) ;
	step 51 : wff = thm adantr (step 50) |- ( ( ph /\ z = A ) -> ( A. y ( ph -> A e. x ) -> A e. x ) ) ;
	step 52 : wff = thm eleq1 () |- ( z = A -> ( z e. x <-> A e. x ) ) ;
	step 53 : wff = thm adantl (step 52) |- ( ( ph /\ z = A ) -> ( z e. x <-> A e. x ) ) ;
	step 54 : wff = thm sylibrd (step 51, step 53) |- ( ( ph /\ z = A ) -> ( A. y ( ph -> A e. x ) -> z e. x ) ) ;
	step 55 : wff = thm 19_21aiv (step 54) |- ( ( ph /\ z = A ) -> A. x ( A. y ( ph -> A e. x ) -> z e. x ) ) ;
	step 56 : wff = thm visset () |- z e. _V ;
	step 57 : wff = thm elintab (step 56) |- ( z e. |^| { x | A. y ( ph -> A e. x ) } <-> A. x ( A. y ( ph -> A e. x ) -> z e. x ) ) ;
	step 58 : wff = thm sylibr (step 55, step 57) |- ( ( ph /\ z = A ) -> z e. |^| { x | A. y ( ph -> A e. x ) } ) ;
	step 59 : wff = thm 19_23ai (step 48, step 58) |- ( E. y ( ph /\ z = A ) -> z e. |^| { x | A. y ( ph -> A e. x ) } ) ;
	step 60 : wff = thm abssi (step 59) |- { z | E. y ( ph /\ z = A ) } C_ |^| { x | A. y ( ph -> A e. x ) } ;
	step 61 : wff = thm eqssi (step 45, step 60) |- |^| { x | A. y ( ph -> A e. x ) } = { z | E. y ( ph /\ z = A ) } ;
	step 62 : wff = thm eqeq1 () |- ( z = x -> ( z = A <-> x = A ) ) ;
	step 63 : wff = thm anbi2d (step 62) |- ( z = x -> ( ( ph /\ z = A ) <-> ( ph /\ x = A ) ) ) ;
	step 64 : wff = thm exbidv (step 63) |- ( z = x -> ( E. y ( ph /\ z = A ) <-> E. y ( ph /\ x = A ) ) ) ;
	step 65 : wff = thm cbvabv (step 64) |- { z | E. y ( ph /\ z = A ) } = { x | E. y ( ph /\ x = A ) } ;
	step 66 : wff = thm eqtri (step 61, step 65) |- |^| { x | A. y ( ph -> A e. x ) } = { x | E. y ( ph /\ x = A ) } ;
	qed prop 1 = step 66 ;
}

theorem int0el (A : class)  {
	prop 1 : wff = |- ( (/) e. A -> |^| A = (/) ) ;
}

proof of int0el {
	step 1 : wff = thm intss1 () |- ( (/) e. A -> |^| A C_ (/) ) ;
	step 2 : wff = thm 0ss () |- (/) C_ |^| A ;
	step 3 : wff = thm a1i (step 2) |- ( (/) e. A -> (/) C_ |^| A ) ;
	step 4 : wff = thm eqssd (step 1, step 3) |- ( (/) e. A -> |^| A = (/) ) ;
	qed prop 1 = step 4 ;
}

theorem intun (A : class, B : class)  {
	prop 1 : wff = |- |^| ( A u. B ) = ( |^| A i^i |^| B ) ;
}

proof of intun {
	var x : set, y : set;
	step 1 : wff = thm 19_26 () |- ( A. y ( ( y e. A -> x e. y ) /\ ( y e. B -> x e. y ) ) <-> ( A. y ( y e. A -> x e. y ) /\ A. y ( y e. B -> x e. y ) ) ) ;
	step 2 : wff = thm elun () |- ( y e. ( A u. B ) <-> ( y e. A \/ y e. B ) ) ;
	step 3 : wff = thm imbi1i (step 2) |- ( ( y e. ( A u. B ) -> x e. y ) <-> ( ( y e. A \/ y e. B ) -> x e. y ) ) ;
	step 4 : wff = thm jaob () |- ( ( ( y e. A \/ y e. B ) -> x e. y ) <-> ( ( y e. A -> x e. y ) /\ ( y e. B -> x e. y ) ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( y e. ( A u. B ) -> x e. y ) <-> ( ( y e. A -> x e. y ) /\ ( y e. B -> x e. y ) ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. y ( y e. ( A u. B ) -> x e. y ) <-> A. y ( ( y e. A -> x e. y ) /\ ( y e. B -> x e. y ) ) ) ;
	step 7 : wff = thm visset () |- x e. _V ;
	step 8 : wff = thm elint (step 7) |- ( x e. |^| A <-> A. y ( y e. A -> x e. y ) ) ;
	step 9 : wff = thm visset () |- x e. _V ;
	step 10 : wff = thm elint (step 9) |- ( x e. |^| B <-> A. y ( y e. B -> x e. y ) ) ;
	step 11 : wff = thm anbi12i (step 8, step 10) |- ( ( x e. |^| A /\ x e. |^| B ) <-> ( A. y ( y e. A -> x e. y ) /\ A. y ( y e. B -> x e. y ) ) ) ;
	step 12 : wff = thm 3bitr4i (step 1, step 6, step 11) |- ( A. y ( y e. ( A u. B ) -> x e. y ) <-> ( x e. |^| A /\ x e. |^| B ) ) ;
	step 13 : wff = thm visset () |- x e. _V ;
	step 14 : wff = thm elint (step 13) |- ( x e. |^| ( A u. B ) <-> A. y ( y e. ( A u. B ) -> x e. y ) ) ;
	step 15 : wff = thm elin () |- ( x e. ( |^| A i^i |^| B ) <-> ( x e. |^| A /\ x e. |^| B ) ) ;
	step 16 : wff = thm 3bitr4i (step 12, step 14, step 15) |- ( x e. |^| ( A u. B ) <-> x e. ( |^| A i^i |^| B ) ) ;
	step 17 : wff = thm eqriv (step 16) |- |^| ( A u. B ) = ( |^| A i^i |^| B ) ;
	qed prop 1 = step 17 ;
}

theorem intpr (A : class, B : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- |^| { A , B } = ( A i^i B ) ;
}

proof of intpr {
	var x : set, y : set;
	step 1 : wff = thm 19_26 () |- ( A. y ( ( y = A -> x e. y ) /\ ( y = B -> x e. y ) ) <-> ( A. y ( y = A -> x e. y ) /\ A. y ( y = B -> x e. y ) ) ) ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm elpr (step 2) |- ( y e. { A , B } <-> ( y = A \/ y = B ) ) ;
	step 4 : wff = thm imbi1i (step 3) |- ( ( y e. { A , B } -> x e. y ) <-> ( ( y = A \/ y = B ) -> x e. y ) ) ;
	step 5 : wff = thm jaob () |- ( ( ( y = A \/ y = B ) -> x e. y ) <-> ( ( y = A -> x e. y ) /\ ( y = B -> x e. y ) ) ) ;
	step 6 : wff = thm bitri (step 4, step 5) |- ( ( y e. { A , B } -> x e. y ) <-> ( ( y = A -> x e. y ) /\ ( y = B -> x e. y ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. y ( y e. { A , B } -> x e. y ) <-> A. y ( ( y = A -> x e. y ) /\ ( y = B -> x e. y ) ) ) ;
	step 8 : wff = thm clel4 (hyp 1) |- ( x e. A <-> A. y ( y = A -> x e. y ) ) ;
	step 9 : wff = thm clel4 (hyp 2) |- ( x e. B <-> A. y ( y = B -> x e. y ) ) ;
	step 10 : wff = thm anbi12i (step 8, step 9) |- ( ( x e. A /\ x e. B ) <-> ( A. y ( y = A -> x e. y ) /\ A. y ( y = B -> x e. y ) ) ) ;
	step 11 : wff = thm 3bitr4i (step 1, step 7, step 10) |- ( A. y ( y e. { A , B } -> x e. y ) <-> ( x e. A /\ x e. B ) ) ;
	step 12 : wff = thm visset () |- x e. _V ;
	step 13 : wff = thm elint (step 12) |- ( x e. |^| { A , B } <-> A. y ( y e. { A , B } -> x e. y ) ) ;
	step 14 : wff = thm elin () |- ( x e. ( A i^i B ) <-> ( x e. A /\ x e. B ) ) ;
	step 15 : wff = thm 3bitr4i (step 11, step 13, step 14) |- ( x e. |^| { A , B } <-> x e. ( A i^i B ) ) ;
	step 16 : wff = thm eqriv (step 15) |- |^| { A , B } = ( A i^i B ) ;
	qed prop 1 = step 16 ;
}

theorem intsn (A : class)  {
	hyp 1 : wff = |- A e. _V ;
	-----------------------
	prop 1 : wff = |- |^| { A } = A ;
}

proof of intsn {
	step 1 : wff = thm dfsn2 () |- { A } = { A , A } ;
	step 2 : wff = thm inteqi (step 1) |- |^| { A } = |^| { A , A } ;
	step 3 : wff = thm intpr (hyp 1, hyp 1) |- |^| { A , A } = ( A i^i A ) ;
	step 4 : wff = thm inidm () |- ( A i^i A ) = A ;
	step 5 : wff = thm 3eqtri (step 2, step 3, step 4) |- |^| { A } = A ;
	qed prop 1 = step 5 ;
}

theorem uniintsn (x : set, A : class)  {
	prop 1 : wff = |- ( U. A = |^| A <-> E. x A = { x } ) ;
}

proof of uniintsn {
	var y : set;
	step 1 : wff = thm vn0 () |- _V =/= (/) ;
	step 2 : wff = thm inteq () |- ( A = (/) -> |^| A = |^| (/) ) ;
	step 3 : wff = thm int0 () |- |^| (/) = _V ;
	step 4 : wff = thm syl6eq (step 2, step 3) |- ( A = (/) -> |^| A = _V ) ;
	step 5 : wff = thm adantl (step 4) |- ( ( U. A = |^| A /\ A = (/) ) -> |^| A = _V ) ;
	step 6 : wff = thm eqeq1 () |- ( U. A = |^| A -> ( U. A = (/) <-> |^| A = (/) ) ) ;
	step 7 : wff = thm unieq () |- ( A = (/) -> U. A = U. (/) ) ;
	step 8 : wff = thm uni0 () |- U. (/) = (/) ;
	step 9 : wff = thm syl6eq (step 7, step 8) |- ( A = (/) -> U. A = (/) ) ;
	step 10 : wff = thm syl5bi (step 6, step 9) |- ( U. A = |^| A -> ( A = (/) -> |^| A = (/) ) ) ;
	step 11 : wff = thm imp (step 10) |- ( ( U. A = |^| A /\ A = (/) ) -> |^| A = (/) ) ;
	step 12 : wff = thm eqtr3d (step 5, step 11) |- ( ( U. A = |^| A /\ A = (/) ) -> _V = (/) ) ;
	step 13 : wff = thm ex (step 12) |- ( U. A = |^| A -> ( A = (/) -> _V = (/) ) ) ;
	step 14 : wff = thm necon3d (step 13) |- ( U. A = |^| A -> ( _V =/= (/) -> A =/= (/) ) ) ;
	step 15 : wff = thm mpi (step 1, step 14) |- ( U. A = |^| A -> A =/= (/) ) ;
	step 16 : wff = thm n0 () |- ( A =/= (/) <-> E. x x e. A ) ;
	step 17 : wff = thm sylib (step 15, step 16) |- ( U. A = |^| A -> E. x x e. A ) ;
	step 18 : wff = thm uniss () |- ( { x , y } C_ A -> U. { x , y } C_ U. A ) ;
	step 19 : wff = thm adantl (step 18) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> U. { x , y } C_ U. A ) ;
	step 20 : wff = thm pm3_26 () |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> U. A = |^| A ) ;
	step 21 : wff = thm sseqtrd (step 19, step 20) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> U. { x , y } C_ |^| A ) ;
	step 22 : wff = thm intss () |- ( { x , y } C_ A -> |^| A C_ |^| { x , y } ) ;
	step 23 : wff = thm adantl (step 22) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> |^| A C_ |^| { x , y } ) ;
	step 24 : wff = thm sstrd (step 21, step 23) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> U. { x , y } C_ |^| { x , y } ) ;
	step 25 : wff = thm visset () |- x e. _V ;
	step 26 : wff = thm visset () |- y e. _V ;
	step 27 : wff = thm unipr (step 25, step 26) |- U. { x , y } = ( x u. y ) ;
	step 28 : wff = thm visset () |- x e. _V ;
	step 29 : wff = thm visset () |- y e. _V ;
	step 30 : wff = thm intpr (step 28, step 29) |- |^| { x , y } = ( x i^i y ) ;
	step 31 : wff = thm 3sstr3g (step 24, step 27, step 30) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> ( x u. y ) C_ ( x i^i y ) ) ;
	step 32 : wff = thm inss1 () |- ( x i^i y ) C_ x ;
	step 33 : wff = thm ssun1 () |- x C_ ( x u. y ) ;
	step 34 : wff = thm sstri (step 32, step 33) |- ( x i^i y ) C_ ( x u. y ) ;
	step 35 : wff = thm jctir (step 31, step 34) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> ( ( x u. y ) C_ ( x i^i y ) /\ ( x i^i y ) C_ ( x u. y ) ) ) ;
	step 36 : wff = thm eqss () |- ( ( x u. y ) = ( x i^i y ) <-> ( ( x u. y ) C_ ( x i^i y ) /\ ( x i^i y ) C_ ( x u. y ) ) ) ;
	step 37 : wff = thm uneqin () |- ( ( x u. y ) = ( x i^i y ) <-> x = y ) ;
	step 38 : wff = thm bitr3i (step 36, step 37) |- ( ( ( x u. y ) C_ ( x i^i y ) /\ ( x i^i y ) C_ ( x u. y ) ) <-> x = y ) ;
	step 39 : wff = thm sylib (step 35, step 38) |- ( ( U. A = |^| A /\ { x , y } C_ A ) -> x = y ) ;
	step 40 : wff = thm ex (step 39) |- ( U. A = |^| A -> ( { x , y } C_ A -> x = y ) ) ;
	step 41 : wff = thm visset () |- x e. _V ;
	step 42 : wff = thm visset () |- y e. _V ;
	step 43 : wff = thm prss (step 41, step 42) |- ( ( x e. A /\ y e. A ) <-> { x , y } C_ A ) ;
	step 44 : wff = thm syl5ib (step 40, step 43) |- ( U. A = |^| A -> ( ( x e. A /\ y e. A ) -> x = y ) ) ;
	step 45 : wff = thm 19_21aivv (step 44) |- ( U. A = |^| A -> A. x A. y ( ( x e. A /\ y e. A ) -> x = y ) ) ;
	step 46 : wff = thm jca (step 17, step 45) |- ( U. A = |^| A -> ( E. x x e. A /\ A. x A. y ( ( x e. A /\ y e. A ) -> x = y ) ) ) ;
	step 47 : wff = thm euabsn () |- ( E! x x e. A <-> E. x { x | x e. A } = { x } ) ;
	step 48 : wff = thm eleq1 () |- ( x = y -> ( x e. A <-> y e. A ) ) ;
	step 49 : wff = thm eu4 (step 48) |- ( E! x x e. A <-> ( E. x x e. A /\ A. x A. y ( ( x e. A /\ y e. A ) -> x = y ) ) ) ;
	step 50 : wff = thm abid2 () |- { x | x e. A } = A ;
	step 51 : wff = thm eqeq1i (step 50) |- ( { x | x e. A } = { x } <-> A = { x } ) ;
	step 52 : wff = thm exbii (step 51) |- ( E. x { x | x e. A } = { x } <-> E. x A = { x } ) ;
	step 53 : wff = thm 3bitr3i (step 47, step 49, step 52) |- ( ( E. x x e. A /\ A. x A. y ( ( x e. A /\ y e. A ) -> x = y ) ) <-> E. x A = { x } ) ;
	step 54 : wff = thm sylib (step 46, step 53) |- ( U. A = |^| A -> E. x A = { x } ) ;
	step 55 : wff = thm visset () |- x e. _V ;
	step 56 : wff = thm unisn (step 55) |- U. { x } = x ;
	step 57 : wff = thm unieq () |- ( A = { x } -> U. A = U. { x } ) ;
	step 58 : wff = thm inteq () |- ( A = { x } -> |^| A = |^| { x } ) ;
	step 59 : wff = thm visset () |- x e. _V ;
	step 60 : wff = thm intsn (step 59) |- |^| { x } = x ;
	step 61 : wff = thm syl6eq (step 58, step 60) |- ( A = { x } -> |^| A = x ) ;
	step 62 : wff = thm 3eqtr4a (step 56, step 57, step 61) |- ( A = { x } -> U. A = |^| A ) ;
	step 63 : wff = thm 19_23aiv (step 62) |- ( E. x A = { x } -> U. A = |^| A ) ;
	step 64 : wff = thm impbii (step 54, step 63) |- ( U. A = |^| A <-> E. x A = { x } ) ;
	qed prop 1 = step 64 ;
}

theorem intunsn (A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- |^| ( A u. { B } ) = ( |^| A i^i B ) ;
}

proof of intunsn {
	step 1 : wff = thm intun () |- |^| ( A u. { B } ) = ( |^| A i^i |^| { B } ) ;
	step 2 : wff = thm intsn (hyp 1) |- |^| { B } = B ;
	step 3 : wff = thm ineq2i (step 2) |- ( |^| A i^i |^| { B } ) = ( |^| A i^i B ) ;
	step 4 : wff = thm eqtri (step 1, step 3) |- |^| ( A u. { B } ) = ( |^| A i^i B ) ;
	qed prop 1 = step 4 ;
}

constant {
	symbol U_ ;
}

constant {
	symbol |^|_ ;
}

rule ciun (x : set, A : class, B : class) {
	term : class = # U_ x e. A B ;
}

rule ciin (x : set, A : class, B : class) {
	term : class = # |^|_ x e. A B ;
}

definition df-iun (x : set, y : set, A : class, B : class)  {
	defiendum : class = # U_ x e. A B ;
	definiens : class = # { y | E. x e. A y e. B } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

definition df-iin (x : set, y : set, A : class, B : class)  {
	defiendum : class = # |^|_ x e. A B ;
	definiens : class = # { y | A. x e. A y e. B } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem eliun (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A e. U_ x e. B C <-> E. x e. B A e. C ) ;
}

proof of eliun {
	var y : set;
	step 1 : wff = thm elisset () |- ( A e. U_ x e. B C -> A e. _V ) ;
	step 2 : wff = thm elisset () |- ( A e. C -> A e. _V ) ;
	step 3 : wff = thm a1i (step 2) |- ( x e. B -> ( A e. C -> A e. _V ) ) ;
	step 4 : wff = thm r19_23aiv (step 3) |- ( E. x e. B A e. C -> A e. _V ) ;
	step 5 : wff = thm eleq1 () |- ( y = A -> ( y e. C <-> A e. C ) ) ;
	step 6 : wff = thm rexbidv (step 5) |- ( y = A -> ( E. x e. B y e. C <-> E. x e. B A e. C ) ) ;
	step 7 : wff = def df-iun () |- U_ x e. B C = { y | E. x e. B y e. C } ;
	step 8 : wff = thm elab2g (step 6, step 7) |- ( A e. _V -> ( A e. U_ x e. B C <-> E. x e. B A e. C ) ) ;
	step 9 : wff = thm pm5_21nii (step 1, step 4, step 8) |- ( A e. U_ x e. B C <-> E. x e. B A e. C ) ;
	qed prop 1 = step 9 ;
}

theorem eliin (x : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A e. D -> ( A e. |^|_ x e. B C <-> A. x e. B A e. C ) ) ;
}

proof of eliin {
	var y : set;
	step 1 : wff = thm eleq1 () |- ( y = A -> ( y e. C <-> A e. C ) ) ;
	step 2 : wff = thm ralbidv (step 1) |- ( y = A -> ( A. x e. B y e. C <-> A. x e. B A e. C ) ) ;
	step 3 : wff = def df-iin () |- |^|_ x e. B C = { y | A. x e. B y e. C } ;
	step 4 : wff = thm elab2g (step 2, step 3) |- ( A e. D -> ( A e. |^|_ x e. B C <-> A. x e. B A e. C ) ) ;
	qed prop 1 = step 4 ;
}

theorem iuncom (x : set, y : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- U_ x e. A U_ y e. B C = U_ y e. B U_ x e. A C ;
}

proof of iuncom {
	var z : set;
	step 1 : wff = thm rexcom () |- ( E. x e. A E. y e. B z e. C <-> E. y e. B E. x e. A z e. C ) ;
	step 2 : wff = thm eliun () |- ( z e. U_ y e. B C <-> E. y e. B z e. C ) ;
	step 3 : wff = thm rexbii (step 2) |- ( E. x e. A z e. U_ y e. B C <-> E. x e. A E. y e. B z e. C ) ;
	step 4 : wff = thm eliun () |- ( z e. U_ x e. A C <-> E. x e. A z e. C ) ;
	step 5 : wff = thm rexbii (step 4) |- ( E. y e. B z e. U_ x e. A C <-> E. y e. B E. x e. A z e. C ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 3, step 5) |- ( E. x e. A z e. U_ y e. B C <-> E. y e. B z e. U_ x e. A C ) ;
	step 7 : wff = thm eliun () |- ( z e. U_ x e. A U_ y e. B C <-> E. x e. A z e. U_ y e. B C ) ;
	step 8 : wff = thm eliun () |- ( z e. U_ y e. B U_ x e. A C <-> E. y e. B z e. U_ x e. A C ) ;
	step 9 : wff = thm 3bitr4i (step 6, step 7, step 8) |- ( z e. U_ x e. A U_ y e. B C <-> z e. U_ y e. B U_ x e. A C ) ;
	step 10 : wff = thm eqriv (step 9) |- U_ x e. A U_ y e. B C = U_ y e. B U_ x e. A C ;
	qed prop 1 = step 10 ;
}

theorem iunconst (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A =/= (/) -> U_ x e. A B = B ) ;
}

proof of iunconst {
	var y : set;
	step 1 : wff = thm n0 () |- ( A =/= (/) <-> E. x x e. A ) ;
	step 2 : wff = thm ibar () |- ( E. x x e. A -> ( y e. B <-> ( E. x x e. A /\ y e. B ) ) ) ;
	step 3 : wff = thm sylbi (step 1, step 2) |- ( A =/= (/) -> ( y e. B <-> ( E. x x e. A /\ y e. B ) ) ) ;
	step 4 : wff = thm eliun () |- ( y e. U_ x e. A B <-> E. x e. A y e. B ) ;
	step 5 : wff = def df-rex () |- ( E. x e. A y e. B <-> E. x ( x e. A /\ y e. B ) ) ;
	step 6 : wff = thm 19_41v () |- ( E. x ( x e. A /\ y e. B ) <-> ( E. x x e. A /\ y e. B ) ) ;
	step 7 : wff = thm 3bitri (step 4, step 5, step 6) |- ( y e. U_ x e. A B <-> ( E. x x e. A /\ y e. B ) ) ;
	step 8 : wff = thm syl6rbbr (step 3, step 7) |- ( A =/= (/) -> ( y e. U_ x e. A B <-> y e. B ) ) ;
	step 9 : wff = thm eqrdv (step 8) |- ( A =/= (/) -> U_ x e. A B = B ) ;
	qed prop 1 = step 9 ;
}

theorem iuniin (x : set, y : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- U_ x e. A |^|_ y e. B C C_ |^|_ y e. B U_ x e. A C ;
}

proof of iuniin {
	var z : set;
	step 1 : wff = thm r19_12 () |- ( E. x e. A A. y e. B z e. C -> A. y e. B E. x e. A z e. C ) ;
	step 2 : wff = thm eliun () |- ( z e. U_ x e. A |^|_ y e. B C <-> E. x e. A z e. |^|_ y e. B C ) ;
	step 3 : wff = thm visset () |- z e. _V ;
	step 4 : wff = thm eliin () |- ( z e. _V -> ( z e. |^|_ y e. B C <-> A. y e. B z e. C ) ) ;
	step 5 : wff = axm ax-mp (step 3, step 4) |- ( z e. |^|_ y e. B C <-> A. y e. B z e. C ) ;
	step 6 : wff = thm rexbii (step 5) |- ( E. x e. A z e. |^|_ y e. B C <-> E. x e. A A. y e. B z e. C ) ;
	step 7 : wff = thm bitri (step 2, step 6) |- ( z e. U_ x e. A |^|_ y e. B C <-> E. x e. A A. y e. B z e. C ) ;
	step 8 : wff = thm visset () |- z e. _V ;
	step 9 : wff = thm eliin () |- ( z e. _V -> ( z e. |^|_ y e. B U_ x e. A C <-> A. y e. B z e. U_ x e. A C ) ) ;
	step 10 : wff = axm ax-mp (step 8, step 9) |- ( z e. |^|_ y e. B U_ x e. A C <-> A. y e. B z e. U_ x e. A C ) ;
	step 11 : wff = thm eliun () |- ( z e. U_ x e. A C <-> E. x e. A z e. C ) ;
	step 12 : wff = thm ralbii (step 11) |- ( A. y e. B z e. U_ x e. A C <-> A. y e. B E. x e. A z e. C ) ;
	step 13 : wff = thm bitri (step 10, step 12) |- ( z e. |^|_ y e. B U_ x e. A C <-> A. y e. B E. x e. A z e. C ) ;
	step 14 : wff = thm 3imtr4i (step 1, step 7, step 13) |- ( z e. U_ x e. A |^|_ y e. B C -> z e. |^|_ y e. B U_ x e. A C ) ;
	step 15 : wff = thm ssriv (step 14) |- U_ x e. A |^|_ y e. B C C_ |^|_ y e. B U_ x e. A C ;
	qed prop 1 = step 15 ;
}

theorem iunss1 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) ;
}

proof of iunss1 {
	var y : set;
	step 1 : wff = thm ssel () |- ( A C_ B -> ( x e. A -> x e. B ) ) ;
	step 2 : wff = thm anim1d (step 1) |- ( A C_ B -> ( ( x e. A /\ y e. C ) -> ( x e. B /\ y e. C ) ) ) ;
	step 3 : wff = thm r19_22dv2 (step 2) |- ( A C_ B -> ( E. x e. A y e. C -> E. x e. B y e. C ) ) ;
	step 4 : wff = thm 19_21aiv (step 3) |- ( A C_ B -> A. y ( E. x e. A y e. C -> E. x e. B y e. C ) ) ;
	step 5 : wff = thm ss2ab () |- ( { y | E. x e. A y e. C } C_ { y | E. x e. B y e. C } <-> A. y ( E. x e. A y e. C -> E. x e. B y e. C ) ) ;
	step 6 : wff = thm sylibr (step 4, step 5) |- ( A C_ B -> { y | E. x e. A y e. C } C_ { y | E. x e. B y e. C } ) ;
	step 7 : wff = def df-iun () |- U_ x e. A C = { y | E. x e. A y e. C } ;
	step 8 : wff = def df-iun () |- U_ x e. B C = { y | E. x e. B y e. C } ;
	step 9 : wff = thm 3sstr4g (step 6, step 7, step 8) |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) ;
	qed prop 1 = step 9 ;
}

theorem iuneq1 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> U_ x e. A C = U_ x e. B C ) ;
}

proof of iuneq1 {
	step 1 : wff = thm iunss1 () |- ( A C_ B -> U_ x e. A C C_ U_ x e. B C ) ;
	step 2 : wff = thm iunss1 () |- ( B C_ A -> U_ x e. B C C_ U_ x e. A C ) ;
	step 3 : wff = thm anim12i (step 1, step 2) |- ( ( A C_ B /\ B C_ A ) -> ( U_ x e. A C C_ U_ x e. B C /\ U_ x e. B C C_ U_ x e. A C ) ) ;
	step 4 : wff = thm eqss () |- ( A = B <-> ( A C_ B /\ B C_ A ) ) ;
	step 5 : wff = thm eqss () |- ( U_ x e. A C = U_ x e. B C <-> ( U_ x e. A C C_ U_ x e. B C /\ U_ x e. B C C_ U_ x e. A C ) ) ;
	step 6 : wff = thm 3imtr4i (step 3, step 4, step 5) |- ( A = B -> U_ x e. A C = U_ x e. B C ) ;
	qed prop 1 = step 6 ;
}

theorem iineq1 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A = B -> |^|_ x e. A C = |^|_ x e. B C ) ;
}

proof of iineq1 {
	var y : set;
	step 1 : wff = thm raleq1 () |- ( A = B -> ( A. x e. A y e. C <-> A. x e. B y e. C ) ) ;
	step 2 : wff = thm abbidv (step 1) |- ( A = B -> { y | A. x e. A y e. C } = { y | A. x e. B y e. C } ) ;
	step 3 : wff = def df-iin () |- |^|_ x e. A C = { y | A. x e. A y e. C } ;
	step 4 : wff = def df-iin () |- |^|_ x e. B C = { y | A. x e. B y e. C } ;
	step 5 : wff = thm 3eqtr4g (step 2, step 3, step 4) |- ( A = B -> |^|_ x e. A C = |^|_ x e. B C ) ;
	qed prop 1 = step 5 ;
}

theorem ss2iun (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) ;
}

proof of ss2iun {
	var y : set;
	step 1 : wff = thm hbra1 () |- ( A. x e. A B C_ C -> A. x A. x e. A B C_ C ) ;
	step 2 : wff = thm ra4 () |- ( A. x e. A B C_ C -> ( x e. A -> B C_ C ) ) ;
	step 3 : wff = thm ssel () |- ( B C_ C -> ( y e. B -> y e. C ) ) ;
	step 4 : wff = thm syl6 (step 2, step 3) |- ( A. x e. A B C_ C -> ( x e. A -> ( y e. B -> y e. C ) ) ) ;
	step 5 : wff = thm r19_22d (step 1, step 4) |- ( A. x e. A B C_ C -> ( E. x e. A y e. B -> E. x e. A y e. C ) ) ;
	step 6 : wff = thm eliun () |- ( y e. U_ x e. A B <-> E. x e. A y e. B ) ;
	step 7 : wff = thm eliun () |- ( y e. U_ x e. A C <-> E. x e. A y e. C ) ;
	step 8 : wff = thm 3imtr4g (step 5, step 6, step 7) |- ( A. x e. A B C_ C -> ( y e. U_ x e. A B -> y e. U_ x e. A C ) ) ;
	step 9 : wff = thm ssrdv (step 8) |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) ;
	qed prop 1 = step 9 ;
}

theorem iuneq2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) ;
}

proof of iuneq2 {
	step 1 : wff = thm ss2iun () |- ( A. x e. A B C_ C -> U_ x e. A B C_ U_ x e. A C ) ;
	step 2 : wff = thm ss2iun () |- ( A. x e. A C C_ B -> U_ x e. A C C_ U_ x e. A B ) ;
	step 3 : wff = thm anim12i (step 1, step 2) |- ( ( A. x e. A B C_ C /\ A. x e. A C C_ B ) -> ( U_ x e. A B C_ U_ x e. A C /\ U_ x e. A C C_ U_ x e. A B ) ) ;
	step 4 : wff = thm eqss () |- ( B = C <-> ( B C_ C /\ C C_ B ) ) ;
	step 5 : wff = thm ralbii (step 4) |- ( A. x e. A B = C <-> A. x e. A ( B C_ C /\ C C_ B ) ) ;
	step 6 : wff = thm r19_26 () |- ( A. x e. A ( B C_ C /\ C C_ B ) <-> ( A. x e. A B C_ C /\ A. x e. A C C_ B ) ) ;
	step 7 : wff = thm bitri (step 5, step 6) |- ( A. x e. A B = C <-> ( A. x e. A B C_ C /\ A. x e. A C C_ B ) ) ;
	step 8 : wff = thm eqss () |- ( U_ x e. A B = U_ x e. A C <-> ( U_ x e. A B C_ U_ x e. A C /\ U_ x e. A C C_ U_ x e. A B ) ) ;
	step 9 : wff = thm 3imtr4i (step 3, step 7, step 8) |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) ;
	qed prop 1 = step 9 ;
}

theorem iineq2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) ;
}

proof of iineq2 {
	var y : set;
	step 1 : wff = thm hbra1 () |- ( A. x e. A B = C -> A. x A. x e. A B = C ) ;
	step 2 : wff = thm ra4 () |- ( A. x e. A B = C -> ( x e. A -> B = C ) ) ;
	step 3 : wff = thm eleq2 () |- ( B = C -> ( y e. B <-> y e. C ) ) ;
	step 4 : wff = thm syl6 (step 2, step 3) |- ( A. x e. A B = C -> ( x e. A -> ( y e. B <-> y e. C ) ) ) ;
	step 5 : wff = thm imp (step 4) |- ( ( A. x e. A B = C /\ x e. A ) -> ( y e. B <-> y e. C ) ) ;
	step 6 : wff = thm ralbida (step 1, step 5) |- ( A. x e. A B = C -> ( A. x e. A y e. B <-> A. x e. A y e. C ) ) ;
	step 7 : wff = thm abbidv (step 6) |- ( A. x e. A B = C -> { y | A. x e. A y e. B } = { y | A. x e. A y e. C } ) ;
	step 8 : wff = def df-iin () |- |^|_ x e. A B = { y | A. x e. A y e. B } ;
	step 9 : wff = def df-iin () |- |^|_ x e. A C = { y | A. x e. A y e. C } ;
	step 10 : wff = thm 3eqtr4g (step 7, step 8, step 9) |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) ;
	qed prop 1 = step 10 ;
}

theorem iuneq2i (x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x e. A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- U_ x e. A B = U_ x e. A C ;
}

proof of iuneq2i {
	step 1 : wff = thm iuneq2 () |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) ;
	step 2 : wff = thm mprg (step 1, hyp 1) |- U_ x e. A B = U_ x e. A C ;
	qed prop 1 = step 2 ;
}

theorem iineq2i (x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x e. A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- |^|_ x e. A B = |^|_ x e. A C ;
}

proof of iineq2i {
	step 1 : wff = thm iineq2 () |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) ;
	step 2 : wff = thm mprg (step 1, hyp 1) |- |^|_ x e. A B = |^|_ x e. A C ;
	qed prop 1 = step 2 ;
}

theorem iuneq2dv (ph : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> U_ x e. A B = U_ x e. A C ) ;
}

proof of iuneq2dv {
	step 1 : wff = thm r19_21aiva (hyp 1) |- ( ph -> A. x e. A B = C ) ;
	step 2 : wff = thm iuneq2 () |- ( A. x e. A B = C -> U_ x e. A B = U_ x e. A C ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> U_ x e. A B = U_ x e. A C ) ;
	qed prop 1 = step 3 ;
}

theorem iineq2dv (ph : wff, x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( ( ph /\ x e. A ) -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) ;
}

proof of iineq2dv {
	step 1 : wff = thm r19_21aiva (hyp 1) |- ( ph -> A. x e. A B = C ) ;
	step 2 : wff = thm iineq2 () |- ( A. x e. A B = C -> |^|_ x e. A B = |^|_ x e. A C ) ;
	step 3 : wff = thm syl (step 1, step 2) |- ( ph -> |^|_ x e. A B = |^|_ x e. A C ) ;
	qed prop 1 = step 3 ;
}

theorem hbiu1 (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( y e. U_ x e. A B -> A. x y e. U_ x e. A B ) ;
}

proof of hbiu1 {
	var z : set;
	step 1 : wff = def df-iun () |- U_ x e. A B = { z | E. x e. A z e. B } ;
	step 2 : wff = thm hbre1 () |- ( E. x e. A z e. B -> A. x E. x e. A z e. B ) ;
	step 3 : wff = thm hbab (step 2) |- ( y e. { z | E. x e. A z e. B } -> A. x y e. { z | E. x e. A z e. B } ) ;
	step 4 : wff = thm hbxfr (step 1, step 3) |- ( y e. U_ x e. A B -> A. x y e. U_ x e. A B ) ;
	qed prop 1 = step 4 ;
}

theorem hbii1 (x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- ( y e. |^|_ x e. A B -> A. x y e. |^|_ x e. A B ) ;
}

proof of hbii1 {
	var z : set;
	step 1 : wff = def df-iin () |- |^|_ x e. A B = { z | A. x e. A z e. B } ;
	step 2 : wff = thm hbra1 () |- ( A. x e. A z e. B -> A. x A. x e. A z e. B ) ;
	step 3 : wff = thm hbab (step 2) |- ( y e. { z | A. x e. A z e. B } -> A. x y e. { z | A. x e. A z e. B } ) ;
	step 4 : wff = thm hbxfr (step 1, step 3) |- ( y e. |^|_ x e. A B -> A. x y e. |^|_ x e. A B ) ;
	qed prop 1 = step 4 ;
}

theorem dfiun2g (x : set, y : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A. x e. A B e. C -> U_ x e. A B = U. { y | E. x e. A y = B } ) ;
}

proof of dfiun2g {
	var z : set, w : set;
	step 1 : wff = thm hbra1 () |- ( A. x e. A B e. C -> A. x A. x e. A B e. C ) ;
	step 2 : wff = thm ra4 () |- ( A. x e. A B e. C -> ( x e. A -> B e. C ) ) ;
	step 3 : wff = thm clel3g () |- ( B e. C -> ( w e. B <-> E. z ( z = B /\ w e. z ) ) ) ;
	step 4 : wff = thm exancom () |- ( E. z ( z = B /\ w e. z ) <-> E. z ( w e. z /\ z = B ) ) ;
	step 5 : wff = thm syl6bb (step 3, step 4) |- ( B e. C -> ( w e. B <-> E. z ( w e. z /\ z = B ) ) ) ;
	step 6 : wff = thm syl6 (step 2, step 5) |- ( A. x e. A B e. C -> ( x e. A -> ( w e. B <-> E. z ( w e. z /\ z = B ) ) ) ) ;
	step 7 : wff = thm pm5_32d (step 6) |- ( A. x e. A B e. C -> ( ( x e. A /\ w e. B ) <-> ( x e. A /\ E. z ( w e. z /\ z = B ) ) ) ) ;
	step 8 : wff = thm 19_42v () |- ( E. z ( x e. A /\ ( w e. z /\ z = B ) ) <-> ( x e. A /\ E. z ( w e. z /\ z = B ) ) ) ;
	step 9 : wff = thm syl6bbr (step 7, step 8) |- ( A. x e. A B e. C -> ( ( x e. A /\ w e. B ) <-> E. z ( x e. A /\ ( w e. z /\ z = B ) ) ) ) ;
	step 10 : wff = thm exbid (step 1, step 9) |- ( A. x e. A B e. C -> ( E. x ( x e. A /\ w e. B ) <-> E. x E. z ( x e. A /\ ( w e. z /\ z = B ) ) ) ) ;
	step 11 : wff = thm excom () |- ( E. x E. z ( x e. A /\ ( w e. z /\ z = B ) ) <-> E. z E. x ( x e. A /\ ( w e. z /\ z = B ) ) ) ;
	step 12 : wff = thm 19_42v () |- ( E. x ( w e. z /\ ( x e. A /\ z = B ) ) <-> ( w e. z /\ E. x ( x e. A /\ z = B ) ) ) ;
	step 13 : wff = thm an12 () |- ( ( x e. A /\ ( w e. z /\ z = B ) ) <-> ( w e. z /\ ( x e. A /\ z = B ) ) ) ;
	step 14 : wff = thm exbii (step 13) |- ( E. x ( x e. A /\ ( w e. z /\ z = B ) ) <-> E. x ( w e. z /\ ( x e. A /\ z = B ) ) ) ;
	step 15 : wff = thm visset () |- z e. _V ;
	step 16 : wff = thm eqeq1 () |- ( y = z -> ( y = B <-> z = B ) ) ;
	step 17 : wff = thm rexbidv (step 16) |- ( y = z -> ( E. x e. A y = B <-> E. x e. A z = B ) ) ;
	step 18 : wff = thm elab (step 15, step 17) |- ( z e. { y | E. x e. A y = B } <-> E. x e. A z = B ) ;
	step 19 : wff = def df-rex () |- ( E. x e. A z = B <-> E. x ( x e. A /\ z = B ) ) ;
	step 20 : wff = thm bitri (step 18, step 19) |- ( z e. { y | E. x e. A y = B } <-> E. x ( x e. A /\ z = B ) ) ;
	step 21 : wff = thm anbi2i (step 20) |- ( ( w e. z /\ z e. { y | E. x e. A y = B } ) <-> ( w e. z /\ E. x ( x e. A /\ z = B ) ) ) ;
	step 22 : wff = thm 3bitr4i (step 12, step 14, step 21) |- ( E. x ( x e. A /\ ( w e. z /\ z = B ) ) <-> ( w e. z /\ z e. { y | E. x e. A y = B } ) ) ;
	step 23 : wff = thm exbii (step 22) |- ( E. z E. x ( x e. A /\ ( w e. z /\ z = B ) ) <-> E. z ( w e. z /\ z e. { y | E. x e. A y = B } ) ) ;
	step 24 : wff = thm bitri (step 11, step 23) |- ( E. x E. z ( x e. A /\ ( w e. z /\ z = B ) ) <-> E. z ( w e. z /\ z e. { y | E. x e. A y = B } ) ) ;
	step 25 : wff = thm syl6bb (step 10, step 24) |- ( A. x e. A B e. C -> ( E. x ( x e. A /\ w e. B ) <-> E. z ( w e. z /\ z e. { y | E. x e. A y = B } ) ) ) ;
	step 26 : wff = def df-rex () |- ( E. x e. A w e. B <-> E. x ( x e. A /\ w e. B ) ) ;
	step 27 : wff = thm syl5bb (step 25, step 26) |- ( A. x e. A B e. C -> ( E. x e. A w e. B <-> E. z ( w e. z /\ z e. { y | E. x e. A y = B } ) ) ) ;
	step 28 : wff = thm abbidv (step 27) |- ( A. x e. A B e. C -> { w | E. x e. A w e. B } = { w | E. z ( w e. z /\ z e. { y | E. x e. A y = B } ) } ) ;
	step 29 : wff = def df-iun () |- U_ x e. A B = { w | E. x e. A w e. B } ;
	step 30 : wff = def df-uni () |- U. { y | E. x e. A y = B } = { w | E. z ( w e. z /\ z e. { y | E. x e. A y = B } ) } ;
	step 31 : wff = thm 3eqtr4g (step 28, step 29, step 30) |- ( A. x e. A B e. C -> U_ x e. A B = U. { y | E. x e. A y = B } ) ;
	qed prop 1 = step 31 ;
}

theorem dfiun2 (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- U_ x e. A B = U. { y | E. x e. A y = B } ;
}

proof of dfiun2 {
	step 1 : wff = thm dfiun2g () |- ( A. x e. A B e. _V -> U_ x e. A B = U. { y | E. x e. A y = B } ) ;
	step 2 : wff = thm a1i (hyp 1) |- ( x e. A -> B e. _V ) ;
	step 3 : wff = thm mprg (step 1, step 2) |- U_ x e. A B = U. { y | E. x e. A y = B } ;
	qed prop 1 = step 3 ;
}

theorem dfiin2 (x : set, y : set, A : class, B : class)  {
	hyp 1 : wff = |- B e. _V ;
	-----------------------
	prop 1 : wff = |- |^|_ x e. A B = |^| { y | E. x e. A y = B } ;
}

proof of dfiin2 {
	var z : set, w : set;
	step 1 : wff = def df-ral () |- ( A. x e. A w e. B <-> A. x ( x e. A -> w e. B ) ) ;
	step 2 : wff = thm clel4 (hyp 1) |- ( w e. B <-> A. z ( z = B -> w e. z ) ) ;
	step 3 : wff = thm imbi2i (step 2) |- ( ( x e. A -> w e. B ) <-> ( x e. A -> A. z ( z = B -> w e. z ) ) ) ;
	step 4 : wff = thm 19_21v () |- ( A. z ( x e. A -> ( z = B -> w e. z ) ) <-> ( x e. A -> A. z ( z = B -> w e. z ) ) ) ;
	step 5 : wff = thm bitr4i (step 3, step 4) |- ( ( x e. A -> w e. B ) <-> A. z ( x e. A -> ( z = B -> w e. z ) ) ) ;
	step 6 : wff = thm albii (step 5) |- ( A. x ( x e. A -> w e. B ) <-> A. x A. z ( x e. A -> ( z = B -> w e. z ) ) ) ;
	step 7 : wff = thm alcom () |- ( A. x A. z ( x e. A -> ( z = B -> w e. z ) ) <-> A. z A. x ( x e. A -> ( z = B -> w e. z ) ) ) ;
	step 8 : wff = thm bitri (step 6, step 7) |- ( A. x ( x e. A -> w e. B ) <-> A. z A. x ( x e. A -> ( z = B -> w e. z ) ) ) ;
	step 9 : wff = thm visset () |- z e. _V ;
	step 10 : wff = thm eqeq1 () |- ( y = z -> ( y = B <-> z = B ) ) ;
	step 11 : wff = thm rexbidv (step 10) |- ( y = z -> ( E. x e. A y = B <-> E. x e. A z = B ) ) ;
	step 12 : wff = thm elab (step 9, step 11) |- ( z e. { y | E. x e. A y = B } <-> E. x e. A z = B ) ;
	step 13 : wff = def df-rex () |- ( E. x e. A z = B <-> E. x ( x e. A /\ z = B ) ) ;
	step 14 : wff = thm bitri (step 12, step 13) |- ( z e. { y | E. x e. A y = B } <-> E. x ( x e. A /\ z = B ) ) ;
	step 15 : wff = thm imbi1i (step 14) |- ( ( z e. { y | E. x e. A y = B } -> w e. z ) <-> ( E. x ( x e. A /\ z = B ) -> w e. z ) ) ;
	step 16 : wff = thm 19_23v () |- ( A. x ( ( x e. A /\ z = B ) -> w e. z ) <-> ( E. x ( x e. A /\ z = B ) -> w e. z ) ) ;
	step 17 : wff = thm impexp () |- ( ( ( x e. A /\ z = B ) -> w e. z ) <-> ( x e. A -> ( z = B -> w e. z ) ) ) ;
	step 18 : wff = thm albii (step 17) |- ( A. x ( ( x e. A /\ z = B ) -> w e. z ) <-> A. x ( x e. A -> ( z = B -> w e. z ) ) ) ;
	step 19 : wff = thm 3bitr2ri (step 15, step 16, step 18) |- ( A. x ( x e. A -> ( z = B -> w e. z ) ) <-> ( z e. { y | E. x e. A y = B } -> w e. z ) ) ;
	step 20 : wff = thm albii (step 19) |- ( A. z A. x ( x e. A -> ( z = B -> w e. z ) ) <-> A. z ( z e. { y | E. x e. A y = B } -> w e. z ) ) ;
	step 21 : wff = thm 3bitri (step 1, step 8, step 20) |- ( A. x e. A w e. B <-> A. z ( z e. { y | E. x e. A y = B } -> w e. z ) ) ;
	step 22 : wff = thm abbii (step 21) |- { w | A. x e. A w e. B } = { w | A. z ( z e. { y | E. x e. A y = B } -> w e. z ) } ;
	step 23 : wff = def df-iin () |- |^|_ x e. A B = { w | A. x e. A w e. B } ;
	step 24 : wff = def df-int () |- |^| { y | E. x e. A y = B } = { w | A. z ( z e. { y | E. x e. A y = B } -> w e. z ) } ;
	step 25 : wff = thm 3eqtr4i (step 22, step 23, step 24) |- |^|_ x e. A B = |^| { y | E. x e. A y = B } ;
	qed prop 1 = step 25 ;
}

theorem cbviun (x : set, y : set, z : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( z e. B -> A. y z e. B ) ;
	hyp 2 : wff = |- ( z e. C -> A. x z e. C ) ;
	hyp 3 : wff = |- ( x = y -> B = C ) ;
	-----------------------
	prop 1 : wff = |- U_ x e. A B = U_ y e. A C ;
}

proof of cbviun {
	step 1 : wff = thm eleq2d (hyp 3) |- ( x = y -> ( z e. B <-> z e. C ) ) ;
	step 2 : wff = thm cbvrex (hyp 1, hyp 2, step 1) |- ( E. x e. A z e. B <-> E. y e. A z e. C ) ;
	step 3 : wff = thm abbii (step 2) |- { z | E. x e. A z e. B } = { z | E. y e. A z e. C } ;
	step 4 : wff = def df-iun () |- U_ x e. A B = { z | E. x e. A z e. B } ;
	step 5 : wff = def df-iun () |- U_ y e. A C = { z | E. y e. A z e. C } ;
	step 6 : wff = thm 3eqtr4i (step 3, step 4, step 5) |- U_ x e. A B = U_ y e. A C ;
	qed prop 1 = step 6 ;
}

theorem cbviunv (x : set, y : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- ( x = y -> B = C ) ;
	-----------------------
	prop 1 : wff = |- U_ x e. A B = U_ y e. A C ;
}

proof of cbviunv {
	var z : set;
	step 1 : wff = axm ax-17 () |- ( z e. B -> A. y z e. B ) ;
	step 2 : wff = axm ax-17 () |- ( z e. C -> A. x z e. C ) ;
	step 3 : wff = thm cbviun (step 1, step 2, hyp 1) |- U_ x e. A B = U_ y e. A C ;
	qed prop 1 = step 3 ;
}

theorem iunss (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( U_ x e. A B C_ C <-> A. x e. A B C_ C ) ;
}

proof of iunss {
	var y : set;
	step 1 : wff = thm dfss2 () |- ( B C_ C <-> A. y ( y e. B -> y e. C ) ) ;
	step 2 : wff = thm ralbii (step 1) |- ( A. x e. A B C_ C <-> A. x e. A A. y ( y e. B -> y e. C ) ) ;
	step 3 : wff = def df-ral () |- ( A. x e. A A. y ( y e. B -> y e. C ) <-> A. x ( x e. A -> A. y ( y e. B -> y e. C ) ) ) ;
	step 4 : wff = thm impexp () |- ( ( ( x e. A /\ y e. B ) -> y e. C ) <-> ( x e. A -> ( y e. B -> y e. C ) ) ) ;
	step 5 : wff = thm albii (step 4) |- ( A. y ( ( x e. A /\ y e. B ) -> y e. C ) <-> A. y ( x e. A -> ( y e. B -> y e. C ) ) ) ;
	step 6 : wff = thm 19_21v () |- ( A. y ( x e. A -> ( y e. B -> y e. C ) ) <-> ( x e. A -> A. y ( y e. B -> y e. C ) ) ) ;
	step 7 : wff = thm bitr2i (step 5, step 6) |- ( ( x e. A -> A. y ( y e. B -> y e. C ) ) <-> A. y ( ( x e. A /\ y e. B ) -> y e. C ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. x ( x e. A -> A. y ( y e. B -> y e. C ) ) <-> A. x A. y ( ( x e. A /\ y e. B ) -> y e. C ) ) ;
	step 9 : wff = thm 3bitri (step 2, step 3, step 8) |- ( A. x e. A B C_ C <-> A. x A. y ( ( x e. A /\ y e. B ) -> y e. C ) ) ;
	step 10 : wff = thm 19_23v () |- ( A. x ( ( x e. A /\ y e. B ) -> y e. C ) <-> ( E. x ( x e. A /\ y e. B ) -> y e. C ) ) ;
	step 11 : wff = thm eliun () |- ( y e. U_ x e. A B <-> E. x e. A y e. B ) ;
	step 12 : wff = def df-rex () |- ( E. x e. A y e. B <-> E. x ( x e. A /\ y e. B ) ) ;
	step 13 : wff = thm bitri (step 11, step 12) |- ( y e. U_ x e. A B <-> E. x ( x e. A /\ y e. B ) ) ;
	step 14 : wff = thm imbi1i (step 13) |- ( ( y e. U_ x e. A B -> y e. C ) <-> ( E. x ( x e. A /\ y e. B ) -> y e. C ) ) ;
	step 15 : wff = thm bitr4i (step 10, step 14) |- ( A. x ( ( x e. A /\ y e. B ) -> y e. C ) <-> ( y e. U_ x e. A B -> y e. C ) ) ;
	step 16 : wff = thm albii (step 15) |- ( A. y A. x ( ( x e. A /\ y e. B ) -> y e. C ) <-> A. y ( y e. U_ x e. A B -> y e. C ) ) ;
	step 17 : wff = thm alcom () |- ( A. x A. y ( ( x e. A /\ y e. B ) -> y e. C ) <-> A. y A. x ( ( x e. A /\ y e. B ) -> y e. C ) ) ;
	step 18 : wff = thm dfss2 () |- ( U_ x e. A B C_ C <-> A. y ( y e. U_ x e. A B -> y e. C ) ) ;
	step 19 : wff = thm 3bitr4i (step 16, step 17, step 18) |- ( A. x A. y ( ( x e. A /\ y e. B ) -> y e. C ) <-> U_ x e. A B C_ C ) ;
	step 20 : wff = thm bitr2i (step 9, step 19) |- ( U_ x e. A B C_ C <-> A. x e. A B C_ C ) ;
	qed prop 1 = step 20 ;
}

theorem ssiun (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( E. x e. A C C_ B -> C C_ U_ x e. A B ) ;
}

proof of ssiun {
	var y : set;
	step 1 : wff = def df-rex () |- ( E. x e. A C C_ B <-> E. x ( x e. A /\ C C_ B ) ) ;
	step 2 : wff = thm pm3_35 () |- ( ( y e. C /\ ( y e. C -> y e. B ) ) -> y e. B ) ;
	step 3 : wff = thm anim2i (step 2) |- ( ( x e. A /\ ( y e. C /\ ( y e. C -> y e. B ) ) ) -> ( x e. A /\ y e. B ) ) ;
	step 4 : wff = thm exp32 (step 3) |- ( x e. A -> ( y e. C -> ( ( y e. C -> y e. B ) -> ( x e. A /\ y e. B ) ) ) ) ;
	step 5 : wff = thm com23 (step 4) |- ( x e. A -> ( ( y e. C -> y e. B ) -> ( y e. C -> ( x e. A /\ y e. B ) ) ) ) ;
	step 6 : wff = thm imp (step 5) |- ( ( x e. A /\ ( y e. C -> y e. B ) ) -> ( y e. C -> ( x e. A /\ y e. B ) ) ) ;
	step 7 : wff = thm ssel () |- ( C C_ B -> ( y e. C -> y e. B ) ) ;
	step 8 : wff = thm sylan2 (step 6, step 7) |- ( ( x e. A /\ C C_ B ) -> ( y e. C -> ( x e. A /\ y e. B ) ) ) ;
	step 9 : wff = thm 19_22i (step 8) |- ( E. x ( x e. A /\ C C_ B ) -> E. x ( y e. C -> ( x e. A /\ y e. B ) ) ) ;
	step 10 : wff = thm 19_21aiv (step 9) |- ( E. x ( x e. A /\ C C_ B ) -> A. y E. x ( y e. C -> ( x e. A /\ y e. B ) ) ) ;
	step 11 : wff = thm eliun () |- ( y e. U_ x e. A B <-> E. x e. A y e. B ) ;
	step 12 : wff = def df-rex () |- ( E. x e. A y e. B <-> E. x ( x e. A /\ y e. B ) ) ;
	step 13 : wff = thm bitr2i (step 11, step 12) |- ( E. x ( x e. A /\ y e. B ) <-> y e. U_ x e. A B ) ;
	step 14 : wff = thm imbi2i (step 13) |- ( ( y e. C -> E. x ( x e. A /\ y e. B ) ) <-> ( y e. C -> y e. U_ x e. A B ) ) ;
	step 15 : wff = thm albii (step 14) |- ( A. y ( y e. C -> E. x ( x e. A /\ y e. B ) ) <-> A. y ( y e. C -> y e. U_ x e. A B ) ) ;
	step 16 : wff = thm 19_37v () |- ( E. x ( y e. C -> ( x e. A /\ y e. B ) ) <-> ( y e. C -> E. x ( x e. A /\ y e. B ) ) ) ;
	step 17 : wff = thm albii (step 16) |- ( A. y E. x ( y e. C -> ( x e. A /\ y e. B ) ) <-> A. y ( y e. C -> E. x ( x e. A /\ y e. B ) ) ) ;
	step 18 : wff = thm dfss2 () |- ( C C_ U_ x e. A B <-> A. y ( y e. C -> y e. U_ x e. A B ) ) ;
	step 19 : wff = thm 3bitr4i (step 15, step 17, step 18) |- ( A. y E. x ( y e. C -> ( x e. A /\ y e. B ) ) <-> C C_ U_ x e. A B ) ;
	step 20 : wff = thm sylib (step 10, step 19) |- ( E. x ( x e. A /\ C C_ B ) -> C C_ U_ x e. A B ) ;
	step 21 : wff = thm sylbi (step 1, step 20) |- ( E. x e. A C C_ B -> C C_ U_ x e. A B ) ;
	qed prop 1 = step 21 ;
}

theorem ssiun2 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( x e. A -> B C_ U_ x e. A B ) ;
}

proof of ssiun2 {
	var y : set;
	step 1 : wff = thm ra4e () |- ( ( x e. A /\ y e. B ) -> E. x e. A y e. B ) ;
	step 2 : wff = thm eliun () |- ( y e. U_ x e. A B <-> E. x e. A y e. B ) ;
	step 3 : wff = thm sylibr (step 1, step 2) |- ( ( x e. A /\ y e. B ) -> y e. U_ x e. A B ) ;
	step 4 : wff = thm ex (step 3) |- ( x e. A -> ( y e. B -> y e. U_ x e. A B ) ) ;
	step 5 : wff = thm ssrdv (step 4) |- ( x e. A -> B C_ U_ x e. A B ) ;
	qed prop 1 = step 5 ;
}

theorem ssiun2s (x : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = C -> B = D ) ;
	-----------------------
	prop 1 : wff = |- ( C e. A -> D C_ U_ x e. A B ) ;
}

proof of ssiun2s {
	var y : set;
	step 1 : wff = axm ax-17 () |- ( y e. C -> A. x y e. C ) ;
	step 2 : wff = axm ax-17 () |- ( C e. A -> A. x C e. A ) ;
	step 3 : wff = axm ax-17 () |- ( y e. D -> A. x y e. D ) ;
	step 4 : wff = thm hbiu1 () |- ( y e. U_ x e. A B -> A. x y e. U_ x e. A B ) ;
	step 5 : wff = thm hbss (step 3, step 4) |- ( D C_ U_ x e. A B -> A. x D C_ U_ x e. A B ) ;
	step 6 : wff = thm hbim (step 2, step 5) |- ( ( C e. A -> D C_ U_ x e. A B ) -> A. x ( C e. A -> D C_ U_ x e. A B ) ) ;
	step 7 : wff = thm eleq1 () |- ( x = C -> ( x e. A <-> C e. A ) ) ;
	step 8 : wff = thm sseq1d (hyp 1) |- ( x = C -> ( B C_ U_ x e. A B <-> D C_ U_ x e. A B ) ) ;
	step 9 : wff = thm imbi12d (step 7, step 8) |- ( x = C -> ( ( x e. A -> B C_ U_ x e. A B ) <-> ( C e. A -> D C_ U_ x e. A B ) ) ) ;
	step 10 : wff = thm ssiun2 () |- ( x e. A -> B C_ U_ x e. A B ) ;
	step 11 : wff = thm vtoclgf (step 1, step 6, step 9, step 10) |- ( C e. A -> ( C e. A -> D C_ U_ x e. A B ) ) ;
	step 12 : wff = thm pm2_43i (step 11) |- ( C e. A -> D C_ U_ x e. A B ) ;
	qed prop 1 = step 12 ;
}

theorem iunss2 (x : set, y : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- ( A. x e. A E. y e. B C C_ D -> U_ x e. A C C_ U_ y e. B D ) ;
}

proof of iunss2 {
	step 1 : wff = thm ssiun () |- ( E. y e. B C C_ D -> C C_ U_ y e. B D ) ;
	step 2 : wff = thm r19_20si (step 1) |- ( A. x e. A E. y e. B C C_ D -> A. x e. A C C_ U_ y e. B D ) ;
	step 3 : wff = thm iunss () |- ( U_ x e. A C C_ U_ y e. B D <-> A. x e. A C C_ U_ y e. B D ) ;
	step 4 : wff = thm sylibr (step 2, step 3) |- ( A. x e. A E. y e. B C C_ D -> U_ x e. A C C_ U_ y e. B D ) ;
	qed prop 1 = step 4 ;
}

theorem iunrab (ph : wff, x : set, y : set, A : class, B : class)  {
	prop 1 : wff = |- U_ x e. A { y e. B | ph } = { y e. B | E. x e. A ph } ;
}

proof of iunrab {
	var z : set;
	step 1 : wff = def df-rab () |- { z e. B | E. x e. A [ z / y ] ph } = { z | ( z e. B /\ E. x e. A [ z / y ] ph ) } ;
	step 2 : wff = axm ax-17 () |- ( x e. B -> A. y x e. B ) ;
	step 3 : wff = axm ax-17 () |- ( x e. B -> A. z x e. B ) ;
	step 4 : wff = axm ax-17 () |- ( E. x e. A ph -> A. z E. x e. A ph ) ;
	step 5 : wff = axm ax-17 () |- ( x e. A -> A. y x e. A ) ;
	step 6 : wff = thm hbs1 () |- ( [ z / y ] ph -> A. y [ z / y ] ph ) ;
	step 7 : wff = thm hbrex (step 5, step 6) |- ( E. x e. A [ z / y ] ph -> A. y E. x e. A [ z / y ] ph ) ;
	step 8 : wff = thm sbequ12 () |- ( y = z -> ( ph <-> [ z / y ] ph ) ) ;
	step 9 : wff = thm rexbidv (step 8) |- ( y = z -> ( E. x e. A ph <-> E. x e. A [ z / y ] ph ) ) ;
	step 10 : wff = thm cbvrab (step 2, step 3, step 4, step 7, step 9) |- { y e. B | E. x e. A ph } = { z e. B | E. x e. A [ z / y ] ph } ;
	step 11 : wff = thm eliun () |- ( z e. U_ x e. A { y e. B | ph } <-> E. x e. A z e. { y e. B | ph } ) ;
	step 12 : wff = axm ax-17 () |- ( x e. B -> A. y x e. B ) ;
	step 13 : wff = thm elrabsf (step 12) |- ( z e. { y e. B | ph } <-> ( z e. B /\ [ z / y ] ph ) ) ;
	step 14 : wff = thm rexbii (step 13) |- ( E. x e. A z e. { y e. B | ph } <-> E. x e. A ( z e. B /\ [ z / y ] ph ) ) ;
	step 15 : wff = thm r19_42v () |- ( E. x e. A ( z e. B /\ [ z / y ] ph ) <-> ( z e. B /\ E. x e. A [ z / y ] ph ) ) ;
	step 16 : wff = thm 3bitri (step 11, step 14, step 15) |- ( z e. U_ x e. A { y e. B | ph } <-> ( z e. B /\ E. x e. A [ z / y ] ph ) ) ;
	step 17 : wff = thm abbi2i (step 16) |- U_ x e. A { y e. B | ph } = { z | ( z e. B /\ E. x e. A [ z / y ] ph ) } ;
	step 18 : wff = thm 3eqtr4ri (step 1, step 10, step 17) |- U_ x e. A { y e. B | ph } = { y e. B | E. x e. A ph } ;
	qed prop 1 = step 18 ;
}

theorem iunab (ph : wff, x : set, y : set, A : class)  {
	prop 1 : wff = |- U_ x e. A { y | ph } = { y | E. x e. A ph } ;
}

proof of iunab {
	step 1 : wff = thm iunrab () |- U_ x e. A { y e. _V | ph } = { y e. _V | E. x e. A ph } ;
	step 2 : wff = thm rabab () |- { y e. _V | ph } = { y | ph } ;
	step 3 : wff = thm a1i (step 2) |- ( x e. A -> { y e. _V | ph } = { y | ph } ) ;
	step 4 : wff = thm iuneq2i (step 3) |- U_ x e. A { y e. _V | ph } = U_ x e. A { y | ph } ;
	step 5 : wff = thm rabab () |- { y e. _V | E. x e. A ph } = { y | E. x e. A ph } ;
	step 6 : wff = thm 3eqtr3i (step 1, step 4, step 5) |- U_ x e. A { y | ph } = { y | E. x e. A ph } ;
	qed prop 1 = step 6 ;
}

theorem iunxdif2 (x : set, y : set, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( x = y -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( A. x e. A E. y e. ( A \ B ) C C_ D -> U_ y e. ( A \ B ) D = U_ x e. A C ) ;
}

proof of iunxdif2 {
	step 1 : wff = thm iunss2 () |- ( A. x e. A E. y e. ( A \ B ) C C_ D -> U_ x e. A C C_ U_ y e. ( A \ B ) D ) ;
	step 2 : wff = thm difss () |- ( A \ B ) C_ A ;
	step 3 : wff = thm iunss1 () |- ( ( A \ B ) C_ A -> U_ y e. ( A \ B ) D C_ U_ y e. A D ) ;
	step 4 : wff = axm ax-mp (step 2, step 3) |- U_ y e. ( A \ B ) D C_ U_ y e. A D ;
	step 5 : wff = thm cbviunv (hyp 1) |- U_ x e. A C = U_ y e. A D ;
	step 6 : wff = thm sseqtr4i (step 4, step 5) |- U_ y e. ( A \ B ) D C_ U_ x e. A C ;
	step 7 : wff = thm jctil (step 1, step 6) |- ( A. x e. A E. y e. ( A \ B ) C C_ D -> ( U_ y e. ( A \ B ) D C_ U_ x e. A C /\ U_ x e. A C C_ U_ y e. ( A \ B ) D ) ) ;
	step 8 : wff = thm eqss () |- ( U_ y e. ( A \ B ) D = U_ x e. A C <-> ( U_ y e. ( A \ B ) D C_ U_ x e. A C /\ U_ x e. A C C_ U_ y e. ( A \ B ) D ) ) ;
	step 9 : wff = thm sylibr (step 7, step 8) |- ( A. x e. A E. y e. ( A \ B ) C C_ D -> U_ y e. ( A \ B ) D = U_ x e. A C ) ;
	qed prop 1 = step 9 ;
}

theorem ssiin (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) ;
}

proof of ssiin {
	var y : set;
	step 1 : wff = thm visset () |- y e. _V ;
	step 2 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A B <-> A. x e. A y e. B ) ) ;
	step 3 : wff = axm ax-mp (step 1, step 2) |- ( y e. |^|_ x e. A B <-> A. x e. A y e. B ) ;
	step 4 : wff = thm imbi2i (step 3) |- ( ( y e. C -> y e. |^|_ x e. A B ) <-> ( y e. C -> A. x e. A y e. B ) ) ;
	step 5 : wff = thm r19_21v () |- ( A. x e. A ( y e. C -> y e. B ) <-> ( y e. C -> A. x e. A y e. B ) ) ;
	step 6 : wff = def df-ral () |- ( A. x e. A ( y e. C -> y e. B ) <-> A. x ( x e. A -> ( y e. C -> y e. B ) ) ) ;
	step 7 : wff = thm 3bitr2i (step 4, step 5, step 6) |- ( ( y e. C -> y e. |^|_ x e. A B ) <-> A. x ( x e. A -> ( y e. C -> y e. B ) ) ) ;
	step 8 : wff = thm albii (step 7) |- ( A. y ( y e. C -> y e. |^|_ x e. A B ) <-> A. y A. x ( x e. A -> ( y e. C -> y e. B ) ) ) ;
	step 9 : wff = thm dfss2 () |- ( C C_ |^|_ x e. A B <-> A. y ( y e. C -> y e. |^|_ x e. A B ) ) ;
	step 10 : wff = thm dfss2 () |- ( C C_ B <-> A. y ( y e. C -> y e. B ) ) ;
	step 11 : wff = thm ralbii (step 10) |- ( A. x e. A C C_ B <-> A. x e. A A. y ( y e. C -> y e. B ) ) ;
	step 12 : wff = def df-ral () |- ( A. x e. A A. y ( y e. C -> y e. B ) <-> A. x ( x e. A -> A. y ( y e. C -> y e. B ) ) ) ;
	step 13 : wff = thm 19_21v () |- ( A. y ( x e. A -> ( y e. C -> y e. B ) ) <-> ( x e. A -> A. y ( y e. C -> y e. B ) ) ) ;
	step 14 : wff = thm albii (step 13) |- ( A. x A. y ( x e. A -> ( y e. C -> y e. B ) ) <-> A. x ( x e. A -> A. y ( y e. C -> y e. B ) ) ) ;
	step 15 : wff = thm alcom () |- ( A. x A. y ( x e. A -> ( y e. C -> y e. B ) ) <-> A. y A. x ( x e. A -> ( y e. C -> y e. B ) ) ) ;
	step 16 : wff = thm bitr3i (step 14, step 15) |- ( A. x ( x e. A -> A. y ( y e. C -> y e. B ) ) <-> A. y A. x ( x e. A -> ( y e. C -> y e. B ) ) ) ;
	step 17 : wff = thm 3bitri (step 11, step 12, step 16) |- ( A. x e. A C C_ B <-> A. y A. x ( x e. A -> ( y e. C -> y e. B ) ) ) ;
	step 18 : wff = thm 3bitr4i (step 8, step 9, step 17) |- ( C C_ |^|_ x e. A B <-> A. x e. A C C_ B ) ;
	qed prop 1 = step 18 ;
}

theorem iinss (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( E. x e. A B C_ C -> |^|_ x e. A B C_ C ) ;
}

proof of iinss {
	var y : set;
	step 1 : wff = thm 19_12 () |- ( E. x A. y ( x e. A /\ ( y e. B -> y e. C ) ) -> A. y E. x ( x e. A /\ ( y e. B -> y e. C ) ) ) ;
	step 2 : wff = def df-rex () |- ( E. x e. A A. y ( y e. B -> y e. C ) <-> E. x ( x e. A /\ A. y ( y e. B -> y e. C ) ) ) ;
	step 3 : wff = thm 19_28v () |- ( A. y ( x e. A /\ ( y e. B -> y e. C ) ) <-> ( x e. A /\ A. y ( y e. B -> y e. C ) ) ) ;
	step 4 : wff = thm exbii (step 3) |- ( E. x A. y ( x e. A /\ ( y e. B -> y e. C ) ) <-> E. x ( x e. A /\ A. y ( y e. B -> y e. C ) ) ) ;
	step 5 : wff = thm bitr4i (step 2, step 4) |- ( E. x e. A A. y ( y e. B -> y e. C ) <-> E. x A. y ( x e. A /\ ( y e. B -> y e. C ) ) ) ;
	step 6 : wff = def df-rex () |- ( E. x e. A ( y e. B -> y e. C ) <-> E. x ( x e. A /\ ( y e. B -> y e. C ) ) ) ;
	step 7 : wff = thm albii (step 6) |- ( A. y E. x e. A ( y e. B -> y e. C ) <-> A. y E. x ( x e. A /\ ( y e. B -> y e. C ) ) ) ;
	step 8 : wff = thm 3imtr4i (step 1, step 5, step 7) |- ( E. x e. A A. y ( y e. B -> y e. C ) -> A. y E. x e. A ( y e. B -> y e. C ) ) ;
	step 9 : wff = thm r19_36av () |- ( E. x e. A ( y e. B -> y e. C ) -> ( A. x e. A y e. B -> y e. C ) ) ;
	step 10 : wff = thm visset () |- y e. _V ;
	step 11 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A B <-> A. x e. A y e. B ) ) ;
	step 12 : wff = axm ax-mp (step 10, step 11) |- ( y e. |^|_ x e. A B <-> A. x e. A y e. B ) ;
	step 13 : wff = thm syl5ib (step 9, step 12) |- ( E. x e. A ( y e. B -> y e. C ) -> ( y e. |^|_ x e. A B -> y e. C ) ) ;
	step 14 : wff = thm 19_20i (step 13) |- ( A. y E. x e. A ( y e. B -> y e. C ) -> A. y ( y e. |^|_ x e. A B -> y e. C ) ) ;
	step 15 : wff = thm syl (step 8, step 14) |- ( E. x e. A A. y ( y e. B -> y e. C ) -> A. y ( y e. |^|_ x e. A B -> y e. C ) ) ;
	step 16 : wff = thm dfss2 () |- ( B C_ C <-> A. y ( y e. B -> y e. C ) ) ;
	step 17 : wff = thm rexbii (step 16) |- ( E. x e. A B C_ C <-> E. x e. A A. y ( y e. B -> y e. C ) ) ;
	step 18 : wff = thm dfss2 () |- ( |^|_ x e. A B C_ C <-> A. y ( y e. |^|_ x e. A B -> y e. C ) ) ;
	step 19 : wff = thm 3imtr4i (step 15, step 17, step 18) |- ( E. x e. A B C_ C -> |^|_ x e. A B C_ C ) ;
	qed prop 1 = step 19 ;
}

theorem uniiun (x : set, A : class)  {
	prop 1 : wff = |- U. A = U_ x e. A x ;
}

proof of uniiun {
	var y : set;
	step 1 : wff = thm dfuni2 () |- U. A = { y | E. x e. A y e. x } ;
	step 2 : wff = def df-iun () |- U_ x e. A x = { y | E. x e. A y e. x } ;
	step 3 : wff = thm eqtr4i (step 1, step 2) |- U. A = U_ x e. A x ;
	qed prop 1 = step 3 ;
}

theorem intiin (x : set, A : class)  {
	prop 1 : wff = |- |^| A = |^|_ x e. A x ;
}

proof of intiin {
	var y : set;
	step 1 : wff = thm dfint2 () |- |^| A = { y | A. x e. A y e. x } ;
	step 2 : wff = def df-iin () |- |^|_ x e. A x = { y | A. x e. A y e. x } ;
	step 3 : wff = thm eqtr4i (step 1, step 2) |- |^| A = |^|_ x e. A x ;
	qed prop 1 = step 3 ;
}

theorem iunid (x : set, A : class)  {
	prop 1 : wff = |- U_ x e. A { x } = A ;
}

proof of iunid {
	var y : set;
	step 1 : wff = def df-sn () |- { x } = { y | y = x } ;
	step 2 : wff = thm equcom () |- ( y = x <-> x = y ) ;
	step 3 : wff = thm abbii (step 2) |- { y | y = x } = { y | x = y } ;
	step 4 : wff = thm eqtri (step 1, step 3) |- { x } = { y | x = y } ;
	step 5 : wff = thm a1i (step 4) |- ( x e. A -> { x } = { y | x = y } ) ;
	step 6 : wff = thm iuneq2i (step 5) |- U_ x e. A { x } = U_ x e. A { y | x = y } ;
	step 7 : wff = thm iunab () |- U_ x e. A { y | x = y } = { y | E. x e. A x = y } ;
	step 8 : wff = thm risset () |- ( y e. A <-> E. x e. A x = y ) ;
	step 9 : wff = thm abbii (step 8) |- { y | y e. A } = { y | E. x e. A x = y } ;
	step 10 : wff = thm abid2 () |- { y | y e. A } = A ;
	step 11 : wff = thm eqtr3i (step 9, step 10) |- { y | E. x e. A x = y } = A ;
	step 12 : wff = thm 3eqtri (step 6, step 7, step 11) |- U_ x e. A { x } = A ;
	qed prop 1 = step 12 ;
}

theorem iun0 (x : set, A : class)  {
	prop 1 : wff = |- U_ x e. A (/) = (/) ;
}

proof of iun0 {
	var y : set;
	step 1 : wff = thm eliun () |- ( y e. U_ x e. A (/) <-> E. x e. A y e. (/) ) ;
	step 2 : wff = thm noel () |- -. y e. (/) ;
	step 3 : wff = thm a1i (step 2) |- ( x e. A -> -. y e. (/) ) ;
	step 4 : wff = thm nrex (step 3) |- -. E. x e. A y e. (/) ;
	step 5 : wff = thm noel () |- -. y e. (/) ;
	step 6 : wff = thm 2false (step 4, step 5) |- ( E. x e. A y e. (/) <-> y e. (/) ) ;
	step 7 : wff = thm bitri (step 1, step 6) |- ( y e. U_ x e. A (/) <-> y e. (/) ) ;
	step 8 : wff = thm eqriv (step 7) |- U_ x e. A (/) = (/) ;
	qed prop 1 = step 8 ;
}

theorem 0iun (x : set, A : class)  {
	prop 1 : wff = |- U_ x e. (/) A = (/) ;
}

proof of 0iun {
	var y : set;
	step 1 : wff = thm eliun () |- ( y e. U_ x e. (/) A <-> E. x e. (/) y e. A ) ;
	step 2 : wff = thm rex0 () |- -. E. x e. (/) y e. A ;
	step 3 : wff = thm noel () |- -. y e. (/) ;
	step 4 : wff = thm 2false (step 2, step 3) |- ( E. x e. (/) y e. A <-> y e. (/) ) ;
	step 5 : wff = thm bitri (step 1, step 4) |- ( y e. U_ x e. (/) A <-> y e. (/) ) ;
	step 6 : wff = thm eqriv (step 5) |- U_ x e. (/) A = (/) ;
	qed prop 1 = step 6 ;
}

theorem 0iin (x : set, A : class)  {
	prop 1 : wff = |- |^|_ x e. (/) A = _V ;
}

proof of 0iin {
	var y : set;
	step 1 : wff = def df-iin () |- |^|_ x e. (/) A = { y | A. x e. (/) y e. A } ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm ral0 () |- A. x e. (/) y e. A ;
	step 4 : wff = thm 2th (step 2, step 3) |- ( y e. _V <-> A. x e. (/) y e. A ) ;
	step 5 : wff = thm abbi2i (step 4) |- _V = { y | A. x e. (/) y e. A } ;
	step 6 : wff = thm eqtr4i (step 1, step 5) |- |^|_ x e. (/) A = _V ;
	qed prop 1 = step 6 ;
}

theorem viin (x : set, y : set, A : class)  {
	prop 1 : wff = |- |^|_ x e. _V A = { y | A. x y e. A } ;
}

proof of viin {
	step 1 : wff = def df-iin () |- |^|_ x e. _V A = { y | A. x e. _V y e. A } ;
	step 2 : wff = thm ralv () |- ( A. x e. _V y e. A <-> A. x y e. A ) ;
	step 3 : wff = thm abbii (step 2) |- { y | A. x e. _V y e. A } = { y | A. x y e. A } ;
	step 4 : wff = thm eqtri (step 1, step 3) |- |^|_ x e. _V A = { y | A. x y e. A } ;
	qed prop 1 = step 4 ;
}

theorem iunn0 (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( E. x e. A B =/= (/) <-> U_ x e. A B =/= (/) ) ;
}

proof of iunn0 {
	var y : set;
	step 1 : wff = thm n0 () |- ( B =/= (/) <-> E. y y e. B ) ;
	step 2 : wff = thm rexbii (step 1) |- ( E. x e. A B =/= (/) <-> E. x e. A E. y y e. B ) ;
	step 3 : wff = def df-rex () |- ( E. x e. A E. y y e. B <-> E. x ( x e. A /\ E. y y e. B ) ) ;
	step 4 : wff = thm excom () |- ( E. x E. y ( x e. A /\ y e. B ) <-> E. y E. x ( x e. A /\ y e. B ) ) ;
	step 5 : wff = thm exdistr () |- ( E. x E. y ( x e. A /\ y e. B ) <-> E. x ( x e. A /\ E. y y e. B ) ) ;
	step 6 : wff = thm eliun () |- ( y e. U_ x e. A B <-> E. x e. A y e. B ) ;
	step 7 : wff = def df-rex () |- ( E. x e. A y e. B <-> E. x ( x e. A /\ y e. B ) ) ;
	step 8 : wff = thm bitr2i (step 6, step 7) |- ( E. x ( x e. A /\ y e. B ) <-> y e. U_ x e. A B ) ;
	step 9 : wff = thm exbii (step 8) |- ( E. y E. x ( x e. A /\ y e. B ) <-> E. y y e. U_ x e. A B ) ;
	step 10 : wff = thm 3bitr3i (step 4, step 5, step 9) |- ( E. x ( x e. A /\ E. y y e. B ) <-> E. y y e. U_ x e. A B ) ;
	step 11 : wff = thm n0 () |- ( U_ x e. A B =/= (/) <-> E. y y e. U_ x e. A B ) ;
	step 12 : wff = thm bitr4i (step 10, step 11) |- ( E. x ( x e. A /\ E. y y e. B ) <-> U_ x e. A B =/= (/) ) ;
	step 13 : wff = thm 3bitri (step 2, step 3, step 12) |- ( E. x e. A B =/= (/) <-> U_ x e. A B =/= (/) ) ;
	qed prop 1 = step 13 ;
}

theorem iunin2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- U_ x e. A ( B i^i C ) = ( B i^i U_ x e. A C ) ;
}

proof of iunin2 {
	var y : set;
	step 1 : wff = thm r19_42v () |- ( E. x e. A ( y e. B /\ y e. C ) <-> ( y e. B /\ E. x e. A y e. C ) ) ;
	step 2 : wff = thm elin () |- ( y e. ( B i^i C ) <-> ( y e. B /\ y e. C ) ) ;
	step 3 : wff = thm rexbii (step 2) |- ( E. x e. A y e. ( B i^i C ) <-> E. x e. A ( y e. B /\ y e. C ) ) ;
	step 4 : wff = thm eliun () |- ( y e. U_ x e. A C <-> E. x e. A y e. C ) ;
	step 5 : wff = thm anbi2i (step 4) |- ( ( y e. B /\ y e. U_ x e. A C ) <-> ( y e. B /\ E. x e. A y e. C ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 3, step 5) |- ( E. x e. A y e. ( B i^i C ) <-> ( y e. B /\ y e. U_ x e. A C ) ) ;
	step 7 : wff = thm eliun () |- ( y e. U_ x e. A ( B i^i C ) <-> E. x e. A y e. ( B i^i C ) ) ;
	step 8 : wff = thm elin () |- ( y e. ( B i^i U_ x e. A C ) <-> ( y e. B /\ y e. U_ x e. A C ) ) ;
	step 9 : wff = thm 3bitr4i (step 6, step 7, step 8) |- ( y e. U_ x e. A ( B i^i C ) <-> y e. ( B i^i U_ x e. A C ) ) ;
	step 10 : wff = thm eqriv (step 9) |- U_ x e. A ( B i^i C ) = ( B i^i U_ x e. A C ) ;
	qed prop 1 = step 10 ;
}

theorem iinun2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- |^|_ x e. A ( B u. C ) = ( B u. |^|_ x e. A C ) ;
}

proof of iinun2 {
	var y : set;
	step 1 : wff = thm r19_32v () |- ( A. x e. A ( y e. B \/ y e. C ) <-> ( y e. B \/ A. x e. A y e. C ) ) ;
	step 2 : wff = thm elun () |- ( y e. ( B u. C ) <-> ( y e. B \/ y e. C ) ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. A y e. ( B u. C ) <-> A. x e. A ( y e. B \/ y e. C ) ) ;
	step 4 : wff = thm visset () |- y e. _V ;
	step 5 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A C <-> A. x e. A y e. C ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( y e. |^|_ x e. A C <-> A. x e. A y e. C ) ;
	step 7 : wff = thm orbi2i (step 6) |- ( ( y e. B \/ y e. |^|_ x e. A C ) <-> ( y e. B \/ A. x e. A y e. C ) ) ;
	step 8 : wff = thm 3bitr4i (step 1, step 3, step 7) |- ( A. x e. A y e. ( B u. C ) <-> ( y e. B \/ y e. |^|_ x e. A C ) ) ;
	step 9 : wff = thm visset () |- y e. _V ;
	step 10 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A ( B u. C ) <-> A. x e. A y e. ( B u. C ) ) ) ;
	step 11 : wff = axm ax-mp (step 9, step 10) |- ( y e. |^|_ x e. A ( B u. C ) <-> A. x e. A y e. ( B u. C ) ) ;
	step 12 : wff = thm elun () |- ( y e. ( B u. |^|_ x e. A C ) <-> ( y e. B \/ y e. |^|_ x e. A C ) ) ;
	step 13 : wff = thm 3bitr4i (step 8, step 11, step 12) |- ( y e. |^|_ x e. A ( B u. C ) <-> y e. ( B u. |^|_ x e. A C ) ) ;
	step 14 : wff = thm eqriv (step 13) |- |^|_ x e. A ( B u. C ) = ( B u. |^|_ x e. A C ) ;
	qed prop 1 = step 14 ;
}

theorem iundif2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- U_ x e. A ( B \ C ) = ( B \ |^|_ x e. A C ) ;
}

proof of iundif2 {
	var y : set;
	step 1 : wff = thm r19_42v () |- ( E. x e. A ( y e. B /\ -. y e. C ) <-> ( y e. B /\ E. x e. A -. y e. C ) ) ;
	step 2 : wff = thm eldif () |- ( y e. ( B \ C ) <-> ( y e. B /\ -. y e. C ) ) ;
	step 3 : wff = thm rexbii (step 2) |- ( E. x e. A y e. ( B \ C ) <-> E. x e. A ( y e. B /\ -. y e. C ) ) ;
	step 4 : wff = thm visset () |- y e. _V ;
	step 5 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A C <-> A. x e. A y e. C ) ) ;
	step 6 : wff = axm ax-mp (step 4, step 5) |- ( y e. |^|_ x e. A C <-> A. x e. A y e. C ) ;
	step 7 : wff = thm notbii (step 6) |- ( -. y e. |^|_ x e. A C <-> -. A. x e. A y e. C ) ;
	step 8 : wff = thm rexnal () |- ( E. x e. A -. y e. C <-> -. A. x e. A y e. C ) ;
	step 9 : wff = thm bitr4i (step 7, step 8) |- ( -. y e. |^|_ x e. A C <-> E. x e. A -. y e. C ) ;
	step 10 : wff = thm anbi2i (step 9) |- ( ( y e. B /\ -. y e. |^|_ x e. A C ) <-> ( y e. B /\ E. x e. A -. y e. C ) ) ;
	step 11 : wff = thm 3bitr4i (step 1, step 3, step 10) |- ( E. x e. A y e. ( B \ C ) <-> ( y e. B /\ -. y e. |^|_ x e. A C ) ) ;
	step 12 : wff = thm eliun () |- ( y e. U_ x e. A ( B \ C ) <-> E. x e. A y e. ( B \ C ) ) ;
	step 13 : wff = thm eldif () |- ( y e. ( B \ |^|_ x e. A C ) <-> ( y e. B /\ -. y e. |^|_ x e. A C ) ) ;
	step 14 : wff = thm 3bitr4i (step 11, step 12, step 13) |- ( y e. U_ x e. A ( B \ C ) <-> y e. ( B \ |^|_ x e. A C ) ) ;
	step 15 : wff = thm eqriv (step 14) |- U_ x e. A ( B \ C ) = ( B \ |^|_ x e. A C ) ;
	qed prop 1 = step 15 ;
}

theorem 2iunin (x : set, y : set, A : class, B : class, C : class, D : class)  {
	prop 1 : wff = |- U_ x e. A U_ y e. B ( C i^i D ) = ( U_ x e. A C i^i U_ y e. B D ) ;
}

proof of 2iunin {
	step 1 : wff = thm iunin2 () |- U_ y e. B ( C i^i D ) = ( C i^i U_ y e. B D ) ;
	step 2 : wff = thm a1i (step 1) |- ( x e. A -> U_ y e. B ( C i^i D ) = ( C i^i U_ y e. B D ) ) ;
	step 3 : wff = thm iuneq2i (step 2) |- U_ x e. A U_ y e. B ( C i^i D ) = U_ x e. A ( C i^i U_ y e. B D ) ;
	step 4 : wff = thm incom () |- ( C i^i U_ y e. B D ) = ( U_ y e. B D i^i C ) ;
	step 5 : wff = thm a1i (step 4) |- ( x e. A -> ( C i^i U_ y e. B D ) = ( U_ y e. B D i^i C ) ) ;
	step 6 : wff = thm iuneq2i (step 5) |- U_ x e. A ( C i^i U_ y e. B D ) = U_ x e. A ( U_ y e. B D i^i C ) ;
	step 7 : wff = thm iunin2 () |- U_ x e. A ( U_ y e. B D i^i C ) = ( U_ y e. B D i^i U_ x e. A C ) ;
	step 8 : wff = thm eqtri (step 6, step 7) |- U_ x e. A ( C i^i U_ y e. B D ) = ( U_ y e. B D i^i U_ x e. A C ) ;
	step 9 : wff = thm incom () |- ( U_ y e. B D i^i U_ x e. A C ) = ( U_ x e. A C i^i U_ y e. B D ) ;
	step 10 : wff = thm 3eqtri (step 3, step 8, step 9) |- U_ x e. A U_ y e. B ( C i^i D ) = ( U_ x e. A C i^i U_ y e. B D ) ;
	qed prop 1 = step 10 ;
}

theorem iindif2 (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- ( A =/= (/) -> |^|_ x e. A ( B \ C ) = ( B \ U_ x e. A C ) ) ;
}

proof of iindif2 {
	var y : set;
	step 1 : wff = thm r19_28zv () |- ( A =/= (/) -> ( A. x e. A ( y e. B /\ -. y e. C ) <-> ( y e. B /\ A. x e. A -. y e. C ) ) ) ;
	step 2 : wff = thm eldif () |- ( y e. ( B \ C ) <-> ( y e. B /\ -. y e. C ) ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. A y e. ( B \ C ) <-> A. x e. A ( y e. B /\ -. y e. C ) ) ;
	step 4 : wff = thm eliun () |- ( y e. U_ x e. A C <-> E. x e. A y e. C ) ;
	step 5 : wff = thm notbii (step 4) |- ( -. y e. U_ x e. A C <-> -. E. x e. A y e. C ) ;
	step 6 : wff = thm ralnex () |- ( A. x e. A -. y e. C <-> -. E. x e. A y e. C ) ;
	step 7 : wff = thm bitr4i (step 5, step 6) |- ( -. y e. U_ x e. A C <-> A. x e. A -. y e. C ) ;
	step 8 : wff = thm anbi2i (step 7) |- ( ( y e. B /\ -. y e. U_ x e. A C ) <-> ( y e. B /\ A. x e. A -. y e. C ) ) ;
	step 9 : wff = thm 3bitr4g (step 1, step 3, step 8) |- ( A =/= (/) -> ( A. x e. A y e. ( B \ C ) <-> ( y e. B /\ -. y e. U_ x e. A C ) ) ) ;
	step 10 : wff = thm visset () |- y e. _V ;
	step 11 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A ( B \ C ) <-> A. x e. A y e. ( B \ C ) ) ) ;
	step 12 : wff = axm ax-mp (step 10, step 11) |- ( y e. |^|_ x e. A ( B \ C ) <-> A. x e. A y e. ( B \ C ) ) ;
	step 13 : wff = thm eldif () |- ( y e. ( B \ U_ x e. A C ) <-> ( y e. B /\ -. y e. U_ x e. A C ) ) ;
	step 14 : wff = thm 3bitr4g (step 9, step 12, step 13) |- ( A =/= (/) -> ( y e. |^|_ x e. A ( B \ C ) <-> y e. ( B \ U_ x e. A C ) ) ) ;
	step 15 : wff = thm eqrdv (step 14) |- ( A =/= (/) -> |^|_ x e. A ( B \ C ) = ( B \ U_ x e. A C ) ) ;
	qed prop 1 = step 15 ;
}

theorem iunxsn (x : set, A : class, B : class, C : class)  {
	hyp 1 : wff = |- A e. _V ;
	hyp 2 : wff = |- ( x = A -> B = C ) ;
	-----------------------
	prop 1 : wff = |- U_ x e. { A } B = C ;
}

proof of iunxsn {
	var y : set;
	step 1 : wff = thm eliun () |- ( y e. U_ x e. { A } B <-> E. x e. { A } y e. B ) ;
	step 2 : wff = def df-rex () |- ( E. x e. { A } y e. B <-> E. x ( x e. { A } /\ y e. B ) ) ;
	step 3 : wff = thm elsn () |- ( x e. { A } <-> x = A ) ;
	step 4 : wff = thm anbi1i (step 3) |- ( ( x e. { A } /\ y e. B ) <-> ( x = A /\ y e. B ) ) ;
	step 5 : wff = thm exbii (step 4) |- ( E. x ( x e. { A } /\ y e. B ) <-> E. x ( x = A /\ y e. B ) ) ;
	step 6 : wff = thm eleq2d (hyp 2) |- ( x = A -> ( y e. B <-> y e. C ) ) ;
	step 7 : wff = thm ceqsexv (hyp 1, step 6) |- ( E. x ( x = A /\ y e. B ) <-> y e. C ) ;
	step 8 : wff = thm bitri (step 5, step 7) |- ( E. x ( x e. { A } /\ y e. B ) <-> y e. C ) ;
	step 9 : wff = thm 3bitri (step 1, step 2, step 8) |- ( y e. U_ x e. { A } B <-> y e. C ) ;
	step 10 : wff = thm eqriv (step 9) |- U_ x e. { A } B = C ;
	qed prop 1 = step 10 ;
}

theorem iunun (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- U_ x e. A ( B u. C ) = ( U_ x e. A B u. U_ x e. A C ) ;
}

proof of iunun {
	var y : set;
	step 1 : wff = thm elun () |- ( y e. ( B u. C ) <-> ( y e. B \/ y e. C ) ) ;
	step 2 : wff = thm rexbii (step 1) |- ( E. x e. A y e. ( B u. C ) <-> E. x e. A ( y e. B \/ y e. C ) ) ;
	step 3 : wff = thm r19_43 () |- ( E. x e. A ( y e. B \/ y e. C ) <-> ( E. x e. A y e. B \/ E. x e. A y e. C ) ) ;
	step 4 : wff = thm bitri (step 2, step 3) |- ( E. x e. A y e. ( B u. C ) <-> ( E. x e. A y e. B \/ E. x e. A y e. C ) ) ;
	step 5 : wff = thm abbii (step 4) |- { y | E. x e. A y e. ( B u. C ) } = { y | ( E. x e. A y e. B \/ E. x e. A y e. C ) } ;
	step 6 : wff = thm unab () |- ( { y | E. x e. A y e. B } u. { y | E. x e. A y e. C } ) = { y | ( E. x e. A y e. B \/ E. x e. A y e. C ) } ;
	step 7 : wff = thm eqtr4i (step 5, step 6) |- { y | E. x e. A y e. ( B u. C ) } = ( { y | E. x e. A y e. B } u. { y | E. x e. A y e. C } ) ;
	step 8 : wff = def df-iun () |- U_ x e. A ( B u. C ) = { y | E. x e. A y e. ( B u. C ) } ;
	step 9 : wff = def df-iun () |- U_ x e. A B = { y | E. x e. A y e. B } ;
	step 10 : wff = def df-iun () |- U_ x e. A C = { y | E. x e. A y e. C } ;
	step 11 : wff = thm uneq12i (step 9, step 10) |- ( U_ x e. A B u. U_ x e. A C ) = ( { y | E. x e. A y e. B } u. { y | E. x e. A y e. C } ) ;
	step 12 : wff = thm 3eqtr4i (step 7, step 8, step 11) |- U_ x e. A ( B u. C ) = ( U_ x e. A B u. U_ x e. A C ) ;
	qed prop 1 = step 12 ;
}

theorem iunxun (x : set, A : class, B : class, C : class)  {
	prop 1 : wff = |- U_ x e. ( A u. B ) C = ( U_ x e. A C u. U_ x e. B C ) ;
}

proof of iunxun {
	var y : set;
	step 1 : wff = def df-rex () |- ( E. x e. ( A u. B ) y e. C <-> E. x ( x e. ( A u. B ) /\ y e. C ) ) ;
	step 2 : wff = thm elun () |- ( x e. ( A u. B ) <-> ( x e. A \/ x e. B ) ) ;
	step 3 : wff = thm anbi1i (step 2) |- ( ( x e. ( A u. B ) /\ y e. C ) <-> ( ( x e. A \/ x e. B ) /\ y e. C ) ) ;
	step 4 : wff = thm andir () |- ( ( ( x e. A \/ x e. B ) /\ y e. C ) <-> ( ( x e. A /\ y e. C ) \/ ( x e. B /\ y e. C ) ) ) ;
	step 5 : wff = thm bitri (step 3, step 4) |- ( ( x e. ( A u. B ) /\ y e. C ) <-> ( ( x e. A /\ y e. C ) \/ ( x e. B /\ y e. C ) ) ) ;
	step 6 : wff = thm exbii (step 5) |- ( E. x ( x e. ( A u. B ) /\ y e. C ) <-> E. x ( ( x e. A /\ y e. C ) \/ ( x e. B /\ y e. C ) ) ) ;
	step 7 : wff = thm 19_43 () |- ( E. x ( ( x e. A /\ y e. C ) \/ ( x e. B /\ y e. C ) ) <-> ( E. x ( x e. A /\ y e. C ) \/ E. x ( x e. B /\ y e. C ) ) ) ;
	step 8 : wff = thm eliun () |- ( y e. U_ x e. A C <-> E. x e. A y e. C ) ;
	step 9 : wff = def df-rex () |- ( E. x e. A y e. C <-> E. x ( x e. A /\ y e. C ) ) ;
	step 10 : wff = thm bitri (step 8, step 9) |- ( y e. U_ x e. A C <-> E. x ( x e. A /\ y e. C ) ) ;
	step 11 : wff = thm eliun () |- ( y e. U_ x e. B C <-> E. x e. B y e. C ) ;
	step 12 : wff = def df-rex () |- ( E. x e. B y e. C <-> E. x ( x e. B /\ y e. C ) ) ;
	step 13 : wff = thm bitri (step 11, step 12) |- ( y e. U_ x e. B C <-> E. x ( x e. B /\ y e. C ) ) ;
	step 14 : wff = thm orbi12i (step 10, step 13) |- ( ( y e. U_ x e. A C \/ y e. U_ x e. B C ) <-> ( E. x ( x e. A /\ y e. C ) \/ E. x ( x e. B /\ y e. C ) ) ) ;
	step 15 : wff = thm bitr4i (step 7, step 14) |- ( E. x ( ( x e. A /\ y e. C ) \/ ( x e. B /\ y e. C ) ) <-> ( y e. U_ x e. A C \/ y e. U_ x e. B C ) ) ;
	step 16 : wff = thm 3bitri (step 1, step 6, step 15) |- ( E. x e. ( A u. B ) y e. C <-> ( y e. U_ x e. A C \/ y e. U_ x e. B C ) ) ;
	step 17 : wff = thm eliun () |- ( y e. U_ x e. ( A u. B ) C <-> E. x e. ( A u. B ) y e. C ) ;
	step 18 : wff = thm elun () |- ( y e. ( U_ x e. A C u. U_ x e. B C ) <-> ( y e. U_ x e. A C \/ y e. U_ x e. B C ) ) ;
	step 19 : wff = thm 3bitr4i (step 16, step 17, step 18) |- ( y e. U_ x e. ( A u. B ) C <-> y e. ( U_ x e. A C u. U_ x e. B C ) ) ;
	step 20 : wff = thm eqriv (step 19) |- U_ x e. ( A u. B ) C = ( U_ x e. A C u. U_ x e. B C ) ;
	qed prop 1 = step 20 ;
}

theorem iinuni (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A u. |^| B ) = |^|_ x e. B ( A u. x ) ;
}

proof of iinuni {
	var y : set;
	step 1 : wff = thm r19_32v () |- ( A. x e. B ( y e. A \/ y e. x ) <-> ( y e. A \/ A. x e. B y e. x ) ) ;
	step 2 : wff = thm elun () |- ( y e. ( A u. x ) <-> ( y e. A \/ y e. x ) ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. B y e. ( A u. x ) <-> A. x e. B ( y e. A \/ y e. x ) ) ;
	step 4 : wff = thm visset () |- y e. _V ;
	step 5 : wff = thm elint2 (step 4) |- ( y e. |^| B <-> A. x e. B y e. x ) ;
	step 6 : wff = thm orbi2i (step 5) |- ( ( y e. A \/ y e. |^| B ) <-> ( y e. A \/ A. x e. B y e. x ) ) ;
	step 7 : wff = thm 3bitr4ri (step 1, step 3, step 6) |- ( ( y e. A \/ y e. |^| B ) <-> A. x e. B y e. ( A u. x ) ) ;
	step 8 : wff = thm elun () |- ( y e. ( A u. |^| B ) <-> ( y e. A \/ y e. |^| B ) ) ;
	step 9 : wff = thm visset () |- y e. _V ;
	step 10 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. B ( A u. x ) <-> A. x e. B y e. ( A u. x ) ) ) ;
	step 11 : wff = axm ax-mp (step 9, step 10) |- ( y e. |^|_ x e. B ( A u. x ) <-> A. x e. B y e. ( A u. x ) ) ;
	step 12 : wff = thm 3bitr4i (step 7, step 8, step 11) |- ( y e. ( A u. |^| B ) <-> y e. |^|_ x e. B ( A u. x ) ) ;
	step 13 : wff = thm eqriv (step 12) |- ( A u. |^| B ) = |^|_ x e. B ( A u. x ) ;
	qed prop 1 = step 13 ;
}

theorem iununi (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( ( B = (/) -> A = (/) ) <-> ( A u. U. B ) = U_ x e. B ( A u. x ) ) ;
}

proof of iununi {
	var y : set;
	step 1 : wff = thm imor () |- ( ( B = (/) -> A = (/) ) <-> ( -. B = (/) \/ A = (/) ) ) ;
	step 2 : wff = def df-ne () |- ( B =/= (/) <-> -. B = (/) ) ;
	step 3 : wff = thm r19_45zv () |- ( B =/= (/) -> ( E. x e. B ( y e. A \/ y e. x ) <-> ( y e. A \/ E. x e. B y e. x ) ) ) ;
	step 4 : wff = thm sylbir (step 2, step 3) |- ( -. B = (/) -> ( E. x e. B ( y e. A \/ y e. x ) <-> ( y e. A \/ E. x e. B y e. x ) ) ) ;
	step 5 : wff = thm n0i () |- ( y e. A -> -. A = (/) ) ;
	step 6 : wff = thm con2i (step 5) |- ( A = (/) -> -. y e. A ) ;
	step 7 : wff = thm biorf () |- ( -. y e. A -> ( y e. x <-> ( y e. A \/ y e. x ) ) ) ;
	step 8 : wff = thm rexbidv (step 7) |- ( -. y e. A -> ( E. x e. B y e. x <-> E. x e. B ( y e. A \/ y e. x ) ) ) ;
	step 9 : wff = thm biorf () |- ( -. y e. A -> ( E. x e. B y e. x <-> ( y e. A \/ E. x e. B y e. x ) ) ) ;
	step 10 : wff = thm bitr3d (step 8, step 9) |- ( -. y e. A -> ( E. x e. B ( y e. A \/ y e. x ) <-> ( y e. A \/ E. x e. B y e. x ) ) ) ;
	step 11 : wff = thm syl (step 6, step 10) |- ( A = (/) -> ( E. x e. B ( y e. A \/ y e. x ) <-> ( y e. A \/ E. x e. B y e. x ) ) ) ;
	step 12 : wff = thm jaoi (step 4, step 11) |- ( ( -. B = (/) \/ A = (/) ) -> ( E. x e. B ( y e. A \/ y e. x ) <-> ( y e. A \/ E. x e. B y e. x ) ) ) ;
	step 13 : wff = thm bicomd (step 12) |- ( ( -. B = (/) \/ A = (/) ) -> ( ( y e. A \/ E. x e. B y e. x ) <-> E. x e. B ( y e. A \/ y e. x ) ) ) ;
	step 14 : wff = thm sylbi (step 1, step 13) |- ( ( B = (/) -> A = (/) ) -> ( ( y e. A \/ E. x e. B y e. x ) <-> E. x e. B ( y e. A \/ y e. x ) ) ) ;
	step 15 : wff = thm elun () |- ( y e. ( A u. x ) <-> ( y e. A \/ y e. x ) ) ;
	step 16 : wff = thm rexbii (step 15) |- ( E. x e. B y e. ( A u. x ) <-> E. x e. B ( y e. A \/ y e. x ) ) ;
	step 17 : wff = thm syl6bbr (step 14, step 16) |- ( ( B = (/) -> A = (/) ) -> ( ( y e. A \/ E. x e. B y e. x ) <-> E. x e. B y e. ( A u. x ) ) ) ;
	step 18 : wff = thm elun () |- ( y e. ( A u. U. B ) <-> ( y e. A \/ y e. U. B ) ) ;
	step 19 : wff = thm eluni2 () |- ( y e. U. B <-> E. x e. B y e. x ) ;
	step 20 : wff = thm orbi2i (step 19) |- ( ( y e. A \/ y e. U. B ) <-> ( y e. A \/ E. x e. B y e. x ) ) ;
	step 21 : wff = thm bitri (step 18, step 20) |- ( y e. ( A u. U. B ) <-> ( y e. A \/ E. x e. B y e. x ) ) ;
	step 22 : wff = thm eliun () |- ( y e. U_ x e. B ( A u. x ) <-> E. x e. B y e. ( A u. x ) ) ;
	step 23 : wff = thm 3bitr4g (step 17, step 21, step 22) |- ( ( B = (/) -> A = (/) ) -> ( y e. ( A u. U. B ) <-> y e. U_ x e. B ( A u. x ) ) ) ;
	step 24 : wff = thm eqrdv (step 23) |- ( ( B = (/) -> A = (/) ) -> ( A u. U. B ) = U_ x e. B ( A u. x ) ) ;
	step 25 : wff = thm eleq2 () |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( y e. ( A u. U. B ) <-> y e. U_ x e. B ( A u. x ) ) ) ;
	step 26 : wff = thm eluni () |- ( y e. U. B <-> E. x ( y e. x /\ x e. B ) ) ;
	step 27 : wff = thm orbi2i (step 26) |- ( ( y e. A \/ y e. U. B ) <-> ( y e. A \/ E. x ( y e. x /\ x e. B ) ) ) ;
	step 28 : wff = thm elun () |- ( y e. ( A u. U. B ) <-> ( y e. A \/ y e. U. B ) ) ;
	step 29 : wff = axm ax-17 () |- ( y e. A -> A. x y e. A ) ;
	step 30 : wff = thm 19_45 (step 29) |- ( E. x ( y e. A \/ ( y e. x /\ x e. B ) ) <-> ( y e. A \/ E. x ( y e. x /\ x e. B ) ) ) ;
	step 31 : wff = thm 3bitr4i (step 27, step 28, step 30) |- ( y e. ( A u. U. B ) <-> E. x ( y e. A \/ ( y e. x /\ x e. B ) ) ) ;
	step 32 : wff = thm eliun () |- ( y e. U_ x e. B ( A u. x ) <-> E. x e. B y e. ( A u. x ) ) ;
	step 33 : wff = def df-rex () |- ( E. x e. B y e. ( A u. x ) <-> E. x ( x e. B /\ y e. ( A u. x ) ) ) ;
	step 34 : wff = thm bitri (step 32, step 33) |- ( y e. U_ x e. B ( A u. x ) <-> E. x ( x e. B /\ y e. ( A u. x ) ) ) ;
	step 35 : wff = thm 3bitr3g (step 25, step 31, step 34) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( E. x ( y e. A \/ ( y e. x /\ x e. B ) ) <-> E. x ( x e. B /\ y e. ( A u. x ) ) ) ) ;
	step 36 : wff = thm biimpd (step 35) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( E. x ( y e. A \/ ( y e. x /\ x e. B ) ) -> E. x ( x e. B /\ y e. ( A u. x ) ) ) ) ;
	step 37 : wff = thm 19_39 () |- ( ( E. x ( y e. A \/ ( y e. x /\ x e. B ) ) -> E. x ( x e. B /\ y e. ( A u. x ) ) ) -> E. x ( ( y e. A \/ ( y e. x /\ x e. B ) ) -> ( x e. B /\ y e. ( A u. x ) ) ) ) ;
	step 38 : wff = thm orc () |- ( y e. A -> ( y e. A \/ ( y e. x /\ x e. B ) ) ) ;
	step 39 : wff = thm pm3_26 () |- ( ( x e. B /\ y e. ( A u. x ) ) -> x e. B ) ;
	step 40 : wff = thm imim12i (step 38, step 39) |- ( ( ( y e. A \/ ( y e. x /\ x e. B ) ) -> ( x e. B /\ y e. ( A u. x ) ) ) -> ( y e. A -> x e. B ) ) ;
	step 41 : wff = thm 19_22i (step 40) |- ( E. x ( ( y e. A \/ ( y e. x /\ x e. B ) ) -> ( x e. B /\ y e. ( A u. x ) ) ) -> E. x ( y e. A -> x e. B ) ) ;
	step 42 : wff = thm 3syl (step 36, step 37, step 41) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> E. x ( y e. A -> x e. B ) ) ;
	step 43 : wff = thm 19_37v () |- ( E. x ( y e. A -> x e. B ) <-> ( y e. A -> E. x x e. B ) ) ;
	step 44 : wff = thm sylib (step 42, step 43) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( y e. A -> E. x x e. B ) ) ;
	step 45 : wff = thm 19_23adv (step 44) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( E. y y e. A -> E. x x e. B ) ) ;
	step 46 : wff = thm neq0 () |- ( -. A = (/) <-> E. y y e. A ) ;
	step 47 : wff = thm neq0 () |- ( -. B = (/) <-> E. x x e. B ) ;
	step 48 : wff = thm 3imtr4g (step 45, step 46, step 47) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( -. A = (/) -> -. B = (/) ) ) ;
	step 49 : wff = thm con4d (step 48) |- ( ( A u. U. B ) = U_ x e. B ( A u. x ) -> ( B = (/) -> A = (/) ) ) ;
	step 50 : wff = thm impbii (step 24, step 49) |- ( ( B = (/) -> A = (/) ) <-> ( A u. U. B ) = U_ x e. B ( A u. x ) ) ;
	qed prop 1 = step 50 ;
}

theorem sspwuni (A : class, B : class)  {
	prop 1 : wff = |- ( A C_ ~P B <-> U. A C_ B ) ;
}

proof of sspwuni {
	var x : set;
	step 1 : wff = thm visset () |- x e. _V ;
	step 2 : wff = thm elpw (step 1) |- ( x e. ~P B <-> x C_ B ) ;
	step 3 : wff = thm ralbii (step 2) |- ( A. x e. A x e. ~P B <-> A. x e. A x C_ B ) ;
	step 4 : wff = thm dfss3 () |- ( A C_ ~P B <-> A. x e. A x e. ~P B ) ;
	step 5 : wff = thm unissb () |- ( U. A C_ B <-> A. x e. A x C_ B ) ;
	step 6 : wff = thm 3bitr4i (step 3, step 4, step 5) |- ( A C_ ~P B <-> U. A C_ B ) ;
	qed prop 1 = step 6 ;
}

theorem pwssb (x : set, A : class, B : class)  {
	prop 1 : wff = |- ( A C_ ~P B <-> A. x e. A x C_ B ) ;
}

proof of pwssb {
	step 1 : wff = thm sspwuni () |- ( A C_ ~P B <-> U. A C_ B ) ;
	step 2 : wff = thm unissb () |- ( U. A C_ B <-> A. x e. A x C_ B ) ;
	step 3 : wff = thm bitri (step 1, step 2) |- ( A C_ ~P B <-> A. x e. A x C_ B ) ;
	qed prop 1 = step 3 ;
}

theorem elpwuni (A : class, B : class)  {
	prop 1 : wff = |- ( B e. A -> ( A C_ ~P B <-> U. A = B ) ) ;
}

proof of elpwuni {
	step 1 : wff = thm unissel () |- ( ( U. A C_ B /\ B e. A ) -> U. A = B ) ;
	step 2 : wff = thm expcom (step 1) |- ( B e. A -> ( U. A C_ B -> U. A = B ) ) ;
	step 3 : wff = thm eqimss () |- ( U. A = B -> U. A C_ B ) ;
	step 4 : wff = thm impbid1 (step 2, step 3) |- ( B e. A -> ( U. A C_ B <-> U. A = B ) ) ;
	step 5 : wff = thm sspwuni () |- ( A C_ ~P B <-> U. A C_ B ) ;
	step 6 : wff = thm syl5bb (step 4, step 5) |- ( B e. A -> ( A C_ ~P B <-> U. A = B ) ) ;
	qed prop 1 = step 6 ;
}

theorem iinpw (x : set, A : class)  {
	prop 1 : wff = |- ~P |^| A = |^|_ x e. A ~P x ;
}

proof of iinpw {
	var y : set;
	step 1 : wff = thm ssint () |- ( y C_ |^| A <-> A. x e. A y C_ x ) ;
	step 2 : wff = thm visset () |- y e. _V ;
	step 3 : wff = thm elpw (step 2) |- ( y e. ~P x <-> y C_ x ) ;
	step 4 : wff = thm ralbii (step 3) |- ( A. x e. A y e. ~P x <-> A. x e. A y C_ x ) ;
	step 5 : wff = thm bitr4i (step 1, step 4) |- ( y C_ |^| A <-> A. x e. A y e. ~P x ) ;
	step 6 : wff = thm visset () |- y e. _V ;
	step 7 : wff = thm elpw (step 6) |- ( y e. ~P |^| A <-> y C_ |^| A ) ;
	step 8 : wff = thm visset () |- y e. _V ;
	step 9 : wff = thm eliin () |- ( y e. _V -> ( y e. |^|_ x e. A ~P x <-> A. x e. A y e. ~P x ) ) ;
	step 10 : wff = axm ax-mp (step 8, step 9) |- ( y e. |^|_ x e. A ~P x <-> A. x e. A y e. ~P x ) ;
	step 11 : wff = thm 3bitr4i (step 5, step 7, step 10) |- ( y e. ~P |^| A <-> y e. |^|_ x e. A ~P x ) ;
	step 12 : wff = thm eqriv (step 11) |- ~P |^| A = |^|_ x e. A ~P x ;
	qed prop 1 = step 12 ;
}

theorem iunpwss (x : set, A : class)  {
	prop 1 : wff = |- U_ x e. A ~P x C_ ~P U. A ;
}

proof of iunpwss {
	var y : set;
	step 1 : wff = thm ssiun () |- ( E. x e. A y C_ x -> y C_ U_ x e. A x ) ;
	step 2 : wff = thm eliun () |- ( y e. U_ x e. A ~P x <-> E. x e. A y e. ~P x ) ;
	step 3 : wff = thm visset () |- y e. _V ;
	step 4 : wff = thm elpw (step 3) |- ( y e. ~P x <-> y C_ x ) ;
	step 5 : wff = thm rexbii (step 4) |- ( E. x e. A y e. ~P x <-> E. x e. A y C_ x ) ;
	step 6 : wff = thm bitri (step 2, step 5) |- ( y e. U_ x e. A ~P x <-> E. x e. A y C_ x ) ;
	step 7 : wff = thm visset () |- y e. _V ;
	step 8 : wff = thm elpw (step 7) |- ( y e. ~P U. A <-> y C_ U. A ) ;
	step 9 : wff = thm uniiun () |- U. A = U_ x e. A x ;
	step 10 : wff = thm sseq2i (step 9) |- ( y C_ U. A <-> y C_ U_ x e. A x ) ;
	step 11 : wff = thm bitri (step 8, step 10) |- ( y e. ~P U. A <-> y C_ U_ x e. A x ) ;
	step 12 : wff = thm 3imtr4i (step 1, step 6, step 11) |- ( y e. U_ x e. A ~P x -> y e. ~P U. A ) ;
	step 13 : wff = thm ssriv (step 12) |- U_ x e. A ~P x C_ ~P U. A ;
	qed prop 1 = step 13 ;
}

rule wbr (A : class, B : class, R : class) {
	term : wff = # A R B ;
}

definition df-br (A : class, B : class, R : class)  {
	defiendum : wff = # A R B ;
	definiens : wff = # <. A , B >. e. R ;
	-----------------------
	prop : wff = |- ( defiendum <-> definiens ) ;
}

theorem breq (A : class, B : class, R : class, S : class)  {
	prop 1 : wff = |- ( R = S -> ( A R B <-> A S B ) ) ;
}

proof of breq {
	step 1 : wff = thm eleq2 () |- ( R = S -> ( <. A , B >. e. R <-> <. A , B >. e. S ) ) ;
	step 2 : wff = def df-br () |- ( A R B <-> <. A , B >. e. R ) ;
	step 3 : wff = def df-br () |- ( A S B <-> <. A , B >. e. S ) ;
	step 4 : wff = thm 3bitr4g (step 1, step 2, step 3) |- ( R = S -> ( A R B <-> A S B ) ) ;
	qed prop 1 = step 4 ;
}

theorem breq1 (A : class, B : class, C : class, R : class)  {
	prop 1 : wff = |- ( A = B -> ( A R C <-> B R C ) ) ;
}

proof of breq1 {
	step 1 : wff = thm opeq1 () |- ( A = B -> <. A , C >. = <. B , C >. ) ;
	step 2 : wff = thm eleq1d (step 1) |- ( A = B -> ( <. A , C >. e. R <-> <. B , C >. e. R ) ) ;
	step 3 : wff = def df-br () |- ( A R C <-> <. A , C >. e. R ) ;
	step 4 : wff = def df-br () |- ( B R C <-> <. B , C >. e. R ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( A R C <-> B R C ) ) ;
	qed prop 1 = step 5 ;
}

theorem breq2 (A : class, B : class, C : class, R : class)  {
	prop 1 : wff = |- ( A = B -> ( C R A <-> C R B ) ) ;
}

proof of breq2 {
	step 1 : wff = thm opeq2 () |- ( A = B -> <. C , A >. = <. C , B >. ) ;
	step 2 : wff = thm eleq1d (step 1) |- ( A = B -> ( <. C , A >. e. R <-> <. C , B >. e. R ) ) ;
	step 3 : wff = def df-br () |- ( C R A <-> <. C , A >. e. R ) ;
	step 4 : wff = def df-br () |- ( C R B <-> <. C , B >. e. R ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( A = B -> ( C R A <-> C R B ) ) ;
	qed prop 1 = step 5 ;
}

theorem breq12 (A : class, B : class, C : class, D : class, R : class)  {
	prop 1 : wff = |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) ;
}

proof of breq12 {
	step 1 : wff = thm breq1 () |- ( A = B -> ( A R C <-> B R C ) ) ;
	step 2 : wff = thm breq2 () |- ( C = D -> ( B R C <-> B R D ) ) ;
	step 3 : wff = thm sylan9bb (step 1, step 2) |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) ;
	qed prop 1 = step 3 ;
}

theorem breqi (A : class, B : class, R : class, S : class)  {
	hyp 1 : wff = |- R = S ;
	-----------------------
	prop 1 : wff = |- ( A R B <-> A S B ) ;
}

proof of breqi {
	step 1 : wff = thm breq () |- ( R = S -> ( A R B <-> A S B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A R B <-> A S B ) ;
	qed prop 1 = step 2 ;
}

theorem breq1i (A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( A R C <-> B R C ) ;
}

proof of breq1i {
	step 1 : wff = thm breq1 () |- ( A = B -> ( A R C <-> B R C ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( A R C <-> B R C ) ;
	qed prop 1 = step 2 ;
}

theorem breq2i (A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- A = B ;
	-----------------------
	prop 1 : wff = |- ( C R A <-> C R B ) ;
}

proof of breq2i {
	step 1 : wff = thm breq2 () |- ( A = B -> ( C R A <-> C R B ) ) ;
	step 2 : wff = axm ax-mp (hyp 1, step 1) |- ( C R A <-> C R B ) ;
	qed prop 1 = step 2 ;
}

theorem breq12i (A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- C = D ;
	-----------------------
	prop 1 : wff = |- ( A R C <-> B R D ) ;
}

proof of breq12i {
	step 1 : wff = thm breq12 () |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) ;
	step 2 : wff = thm mp2an (hyp 1, hyp 2, step 1) |- ( A R C <-> B R D ) ;
	qed prop 1 = step 2 ;
}

theorem breq1d (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A R C <-> B R C ) ) ;
}

proof of breq1d {
	step 1 : wff = thm breq1 () |- ( A = B -> ( A R C <-> B R C ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( A R C <-> B R C ) ) ;
	qed prop 1 = step 2 ;
}

theorem breq2d (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C R A <-> C R B ) ) ;
}

proof of breq2d {
	step 1 : wff = thm breq2 () |- ( A = B -> ( C R A <-> C R B ) ) ;
	step 2 : wff = thm syl (hyp 1, step 1) |- ( ph -> ( C R A <-> C R B ) ) ;
	qed prop 1 = step 2 ;
}

theorem breq12d (ph : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A R C <-> B R D ) ) ;
}

proof of breq12d {
	step 1 : wff = thm breq1d (hyp 1) |- ( ph -> ( A R C <-> B R C ) ) ;
	step 2 : wff = thm breq2d (hyp 2) |- ( ph -> ( B R C <-> B R D ) ) ;
	step 3 : wff = thm bitrd (step 1, step 2) |- ( ph -> ( A R C <-> B R D ) ) ;
	qed prop 1 = step 3 ;
}

theorem breqan12d (ph : wff, ps : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ( ph /\ ps ) -> ( A R C <-> B R D ) ) ;
}

proof of breqan12d {
	step 1 : wff = thm breq12 () |- ( ( A = B /\ C = D ) -> ( A R C <-> B R D ) ) ;
	step 2 : wff = thm syl2an (step 1, hyp 1, hyp 2) |- ( ( ph /\ ps ) -> ( A R C <-> B R D ) ) ;
	qed prop 1 = step 2 ;
}

theorem breqan12rd (ph : wff, ps : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ps -> C = D ) ;
	-----------------------
	prop 1 : wff = |- ( ( ps /\ ph ) -> ( A R C <-> B R D ) ) ;
}

proof of breqan12rd {
	step 1 : wff = thm breqan12d (hyp 1, hyp 2) |- ( ( ph /\ ps ) -> ( A R C <-> B R D ) ) ;
	step 2 : wff = thm ancoms (step 1) |- ( ( ps /\ ph ) -> ( A R C <-> B R D ) ) ;
	qed prop 1 = step 2 ;
}

theorem eqbrtri (A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- B R C ;
	-----------------------
	prop 1 : wff = |- A R C ;
}

proof of eqbrtri {
	step 1 : wff = thm breq1i (hyp 1) |- ( A R C <-> B R C ) ;
	step 2 : wff = thm mpbir (hyp 2, step 1) |- A R C ;
	qed prop 1 = step 2 ;
}

theorem eqbrtrd (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> B R C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of eqbrtrd {
	step 1 : wff = thm breq1d (hyp 1) |- ( ph -> ( A R C <-> B R C ) ) ;
	step 2 : wff = thm mpbird (hyp 2, step 1) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem eqbrtrri (A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- A = B ;
	hyp 2 : wff = |- A R C ;
	-----------------------
	prop 1 : wff = |- B R C ;
}

proof of eqbrtrri {
	step 1 : wff = thm eqcomi (hyp 1) |- B = A ;
	step 2 : wff = thm eqbrtri (step 1, hyp 2) |- B R C ;
	qed prop 1 = step 2 ;
}

theorem eqbrtrrd (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- ( ph -> A R C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> B R C ) ;
}

proof of eqbrtrrd {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> B = A ) ;
	step 2 : wff = thm eqbrtrd (step 1, hyp 2) |- ( ph -> B R C ) ;
	qed prop 1 = step 2 ;
}

theorem breqtri (A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- A R B ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- A R C ;
}

proof of breqtri {
	step 1 : wff = thm breq2i (hyp 2) |- ( A R B <-> A R C ) ;
	step 2 : wff = thm mpbi (hyp 1, step 1) |- A R C ;
	qed prop 1 = step 2 ;
}

theorem breqtrd (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- ( ph -> B = C ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of breqtrd {
	step 1 : wff = thm breq2d (hyp 2) |- ( ph -> ( A R B <-> A R C ) ) ;
	step 2 : wff = thm mpbid (hyp 1, step 1) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem breqtrri (A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- A R B ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- A R C ;
}

proof of breqtrri {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm breqtri (hyp 1, step 1) |- A R C ;
	qed prop 1 = step 2 ;
}

theorem breqtrrd (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- ( ph -> C = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of breqtrrd {
	step 1 : wff = thm eqcomd (hyp 2) |- ( ph -> B = C ) ;
	step 2 : wff = thm breqtrd (hyp 1, step 1) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem 3brtr3i (A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- A R B ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- C R D ;
}

proof of 3brtr3i {
	step 1 : wff = thm eqbrtrri (hyp 2, hyp 1) |- C R B ;
	step 2 : wff = thm breqtri (step 1, hyp 3) |- C R D ;
	qed prop 1 = step 2 ;
}

theorem 3brtr4i (A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- A R B ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- C R D ;
}

proof of 3brtr4i {
	step 1 : wff = thm eqbrtri (hyp 2, hyp 1) |- C R B ;
	step 2 : wff = thm breqtrri (step 1, hyp 3) |- C R D ;
	qed prop 1 = step 2 ;
}

theorem 3brtr3d (ph : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- ( ph -> A = C ) ;
	hyp 3 : wff = |- ( ph -> B = D ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R D ) ;
}

proof of 3brtr3d {
	step 1 : wff = thm breq12d (hyp 2, hyp 3) |- ( ph -> ( A R B <-> C R D ) ) ;
	step 2 : wff = thm mpbid (hyp 1, step 1) |- ( ph -> C R D ) ;
	qed prop 1 = step 2 ;
}

theorem 3brtr4d (ph : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- ( ph -> C = A ) ;
	hyp 3 : wff = |- ( ph -> D = B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R D ) ;
}

proof of 3brtr4d {
	step 1 : wff = thm breq12d (hyp 2, hyp 3) |- ( ph -> ( C R D <-> A R B ) ) ;
	step 2 : wff = thm mpbird (hyp 1, step 1) |- ( ph -> C R D ) ;
	qed prop 1 = step 2 ;
}

theorem 3brtr3g (ph : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- A = C ;
	hyp 3 : wff = |- B = D ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R D ) ;
}

proof of 3brtr3g {
	step 1 : wff = thm breq12i (hyp 2, hyp 3) |- ( A R B <-> C R D ) ;
	step 2 : wff = thm sylib (hyp 1, step 1) |- ( ph -> C R D ) ;
	qed prop 1 = step 2 ;
}

theorem 3brtr4g (ph : wff, A : class, B : class, C : class, D : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- C = A ;
	hyp 3 : wff = |- D = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R D ) ;
}

proof of 3brtr4g {
	step 1 : wff = thm breq12i (hyp 2, hyp 3) |- ( C R D <-> A R B ) ;
	step 2 : wff = thm sylibr (hyp 1, step 1) |- ( ph -> C R D ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eqbr (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- C = A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R B ) ;
}

proof of syl5eqbr {
	step 1 : wff = thm eqid () |- B = B ;
	step 2 : wff = thm 3brtr4g (hyp 1, hyp 2, step 1) |- ( ph -> C R B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5eqbrr (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- A = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R B ) ;
}

proof of syl5eqbrr {
	step 1 : wff = thm eqid () |- B = B ;
	step 2 : wff = thm 3brtr3g (hyp 1, hyp 2, step 1) |- ( ph -> C R B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5breq (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- C R A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R B ) ;
}

proof of syl5breq {
	step 1 : wff = thm a1i (hyp 2) |- ( ph -> C R A ) ;
	step 2 : wff = thm breqtrd (step 1, hyp 1) |- ( ph -> C R B ) ;
	qed prop 1 = step 2 ;
}

theorem syl5breqr (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> B = A ) ;
	hyp 2 : wff = |- C R A ;
	-----------------------
	prop 1 : wff = |- ( ph -> C R B ) ;
}

proof of syl5breqr {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm syl5breq (step 1, hyp 2) |- ( ph -> C R B ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eqbr (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A = B ) ;
	hyp 2 : wff = |- B R C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of syl6eqbr {
	step 1 : wff = thm breq1d (hyp 1) |- ( ph -> ( A R C <-> B R C ) ) ;
	step 2 : wff = thm mpbiri (hyp 2, step 1) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6eqbrr (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> B = A ) ;
	hyp 2 : wff = |- B R C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of syl6eqbrr {
	step 1 : wff = thm eqcomd (hyp 1) |- ( ph -> A = B ) ;
	step 2 : wff = thm syl6eqbr (step 1, hyp 2) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6breq (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- B = C ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of syl6breq {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm 3brtr3g (hyp 1, step 1, hyp 2) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem syl6breqr (ph : wff, A : class, B : class, C : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A R B ) ;
	hyp 2 : wff = |- C = B ;
	-----------------------
	prop 1 : wff = |- ( ph -> A R C ) ;
}

proof of syl6breqr {
	step 1 : wff = thm eqcomi (hyp 2) |- B = C ;
	step 2 : wff = thm syl6breq (hyp 1, step 1) |- ( ph -> A R C ) ;
	qed prop 1 = step 2 ;
}

theorem ssbrd (ph : wff, A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- ( ph -> A C_ B ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( C A D -> C B D ) ) ;
}

proof of ssbrd {
	step 1 : wff = thm sseld (hyp 1) |- ( ph -> ( <. C , D >. e. A -> <. C , D >. e. B ) ) ;
	step 2 : wff = def df-br () |- ( C A D <-> <. C , D >. e. A ) ;
	step 3 : wff = def df-br () |- ( C B D <-> <. C , D >. e. B ) ;
	step 4 : wff = thm 3imtr4g (step 1, step 2, step 3) |- ( ph -> ( C A D -> C B D ) ) ;
	qed prop 1 = step 4 ;
}

theorem ssbri (A : class, B : class, C : class, D : class)  {
	hyp 1 : wff = |- A C_ B ;
	-----------------------
	prop 1 : wff = |- ( C A D -> C B D ) ;
}

proof of ssbri {
	step 1 : wff = thm eqid () |- A = A ;
	step 2 : wff = thm a1i (hyp 1) |- ( A = A -> A C_ B ) ;
	step 3 : wff = thm ssbrd (step 2) |- ( A = A -> ( C A D -> C B D ) ) ;
	step 4 : wff = axm ax-mp (step 1, step 3) |- ( C A D -> C B D ) ;
	qed prop 1 = step 4 ;
}

theorem hbbr (x : set, y : set, A : class, B : class, R : class)  {
	hyp 1 : wff = |- ( y e. A -> A. x y e. A ) ;
	hyp 2 : wff = |- ( y e. R -> A. x y e. R ) ;
	hyp 3 : wff = |- ( y e. B -> A. x y e. B ) ;
	-----------------------
	prop 1 : wff = |- ( A R B -> A. x A R B ) ;
}

proof of hbbr {
	step 1 : wff = thm hbop (hyp 1, hyp 3) |- ( y e. <. A , B >. -> A. x y e. <. A , B >. ) ;
	step 2 : wff = thm hbel (step 1, hyp 2) |- ( <. A , B >. e. R -> A. x <. A , B >. e. R ) ;
	step 3 : wff = def df-br () |- ( A R B <-> <. A , B >. e. R ) ;
	step 4 : wff = def df-br () |- ( A R B <-> <. A , B >. e. R ) ;
	step 5 : wff = thm albii (step 4) |- ( A. x A R B <-> A. x <. A , B >. e. R ) ;
	step 6 : wff = thm 3imtr4i (step 2, step 3, step 5) |- ( A R B -> A. x A R B ) ;
	qed prop 1 = step 6 ;
}

theorem hbbrd (ph : wff, x : set, y : set, A : class, B : class, R : class)  {
	hyp 1 : wff = |- ( ph -> A. x ph ) ;
	hyp 2 : wff = |- ( ph -> ( y e. A -> A. x y e. A ) ) ;
	hyp 3 : wff = |- ( ph -> ( y e. R -> A. x y e. R ) ) ;
	hyp 4 : wff = |- ( ph -> ( y e. B -> A. x y e. B ) ) ;
	-----------------------
	prop 1 : wff = |- ( ph -> ( A R B -> A. x A R B ) ) ;
}

proof of hbbrd {
	var z : set;
	step 1 : wff = thm hba1 () |- ( A. x z e. A -> A. x A. x z e. A ) ;
	step 2 : wff = thm hbab (step 1) |- ( y e. { z | A. x z e. A } -> A. x y e. { z | A. x z e. A } ) ;
	step 3 : wff = thm hba1 () |- ( A. x z e. R -> A. x A. x z e. R ) ;
	step 4 : wff = thm hbab (step 3) |- ( y e. { z | A. x z e. R } -> A. x y e. { z | A. x z e. R } ) ;
	step 5 : wff = thm hba1 () |- ( A. x z e. B -> A. x A. x z e. B ) ;
	step 6 : wff = thm hbab (step 5) |- ( y e. { z | A. x z e. B } -> A. x y e. { z | A. x z e. B } ) ;
	step 7 : wff = thm hbbr (step 2, step 4, step 6) |- ( { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } -> A. x { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } ) ;
	step 8 : wff = thm a1i (step 7) |- ( ph -> ( { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } -> A. x { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } ) ) ;
	step 9 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 10 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 11 : wff = thm syl (step 9, step 10) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 12 : wff = thm 19_21aiv (hyp 4) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 13 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 14 : wff = thm syl (step 12, step 13) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 15 : wff = thm breq12d (step 11, step 14) |- ( ph -> ( { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } <-> A { z | A. x z e. R } B ) ) ;
	step 16 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. R -> A. x y e. R ) ) ;
	step 17 : wff = thm abidhb () |- ( A. y ( y e. R -> A. x y e. R ) -> { z | A. x z e. R } = R ) ;
	step 18 : wff = thm syl (step 16, step 17) |- ( ph -> { z | A. x z e. R } = R ) ;
	step 19 : wff = thm breq () |- ( { z | A. x z e. R } = R -> ( A { z | A. x z e. R } B <-> A R B ) ) ;
	step 20 : wff = thm syl (step 18, step 19) |- ( ph -> ( A { z | A. x z e. R } B <-> A R B ) ) ;
	step 21 : wff = thm bitrd (step 15, step 20) |- ( ph -> ( { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } <-> A R B ) ) ;
	step 22 : wff = thm 19_21aiv (hyp 2) |- ( ph -> A. y ( y e. A -> A. x y e. A ) ) ;
	step 23 : wff = thm abidhb () |- ( A. y ( y e. A -> A. x y e. A ) -> { z | A. x z e. A } = A ) ;
	step 24 : wff = thm syl (step 22, step 23) |- ( ph -> { z | A. x z e. A } = A ) ;
	step 25 : wff = thm 19_21aiv (hyp 4) |- ( ph -> A. y ( y e. B -> A. x y e. B ) ) ;
	step 26 : wff = thm abidhb () |- ( A. y ( y e. B -> A. x y e. B ) -> { z | A. x z e. B } = B ) ;
	step 27 : wff = thm syl (step 25, step 26) |- ( ph -> { z | A. x z e. B } = B ) ;
	step 28 : wff = thm breq12d (step 24, step 27) |- ( ph -> ( { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } <-> A { z | A. x z e. R } B ) ) ;
	step 29 : wff = thm 19_21aiv (hyp 3) |- ( ph -> A. y ( y e. R -> A. x y e. R ) ) ;
	step 30 : wff = thm abidhb () |- ( A. y ( y e. R -> A. x y e. R ) -> { z | A. x z e. R } = R ) ;
	step 31 : wff = thm syl (step 29, step 30) |- ( ph -> { z | A. x z e. R } = R ) ;
	step 32 : wff = thm breq () |- ( { z | A. x z e. R } = R -> ( A { z | A. x z e. R } B <-> A R B ) ) ;
	step 33 : wff = thm syl (step 31, step 32) |- ( ph -> ( A { z | A. x z e. R } B <-> A R B ) ) ;
	step 34 : wff = thm bitrd (step 28, step 33) |- ( ph -> ( { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } <-> A R B ) ) ;
	step 35 : wff = thm albid (hyp 1, step 34) |- ( ph -> ( A. x { z | A. x z e. A } { z | A. x z e. R } { z | A. x z e. B } <-> A. x A R B ) ) ;
	step 36 : wff = thm 3imtr3d (step 8, step 21, step 35) |- ( ph -> ( A R B -> A. x A R B ) ) ;
	qed prop 1 = step 36 ;
}

theorem brab1 (x : set, y : set, z : set, R : class)  {
	prop 1 : wff = |- ( x R y <-> x e. { z | z R y } ) ;
}

proof of brab1 {
	step 1 : wff = thm visset () |- x e. _V ;
	step 2 : wff = thm breq1 () |- ( z = x -> ( z R y <-> x R y ) ) ;
	step 3 : wff = thm elab (step 1, step 2) |- ( x e. { z | z R y } <-> x R y ) ;
	step 4 : wff = thm bicomi (step 3) |- ( x R y <-> x e. { z | z R y } ) ;
	qed prop 1 = step 4 ;
}

theorem brprc (A : class, B : class, R : class)  {
	prop 1 : wff = |- ( -. B e. _V -> ( A R B <-> A R A ) ) ;
}

proof of brprc {
	step 1 : wff = thm opprc2 () |- ( -. B e. _V -> <. A , B >. = <. A , A >. ) ;
	step 2 : wff = thm eleq1d (step 1) |- ( -. B e. _V -> ( <. A , B >. e. R <-> <. A , A >. e. R ) ) ;
	step 3 : wff = def df-br () |- ( A R B <-> <. A , B >. e. R ) ;
	step 4 : wff = def df-br () |- ( A R A <-> <. A , A >. e. R ) ;
	step 5 : wff = thm 3bitr4g (step 2, step 3, step 4) |- ( -. B e. _V -> ( A R B <-> A R A ) ) ;
	qed prop 1 = step 5 ;
}

theorem brun (A : class, B : class, R : class, S : class)  {
	prop 1 : wff = |- ( A ( R u. S ) B <-> ( A R B \/ A S B ) ) ;
}

proof of brun {
	step 1 : wff = thm elun () |- ( <. A , B >. e. ( R u. S ) <-> ( <. A , B >. e. R \/ <. A , B >. e. S ) ) ;
	step 2 : wff = def df-br () |- ( A ( R u. S ) B <-> <. A , B >. e. ( R u. S ) ) ;
	step 3 : wff = def df-br () |- ( A R B <-> <. A , B >. e. R ) ;
	step 4 : wff = def df-br () |- ( A S B <-> <. A , B >. e. S ) ;
	step 5 : wff = thm orbi12i (step 3, step 4) |- ( ( A R B \/ A S B ) <-> ( <. A , B >. e. R \/ <. A , B >. e. S ) ) ;
	step 6 : wff = thm 3bitr4i (step 1, step 2, step 5) |- ( A ( R u. S ) B <-> ( A R B \/ A S B ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcbrg (x : set, A : class, B : class, C : class, D : class, R : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) ;
}

proof of sbcbrg {
	var y : set, z : set;
	step 1 : wff = axm ax-17 () |- ( A e. D -> A. y A e. D ) ;
	step 2 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 3 : wff = thm hbcsb1g (step 2) |- ( A e. D -> ( z e. [_ A / y ]_ [_ y / x ]_ B -> A. y z e. [_ A / y ]_ [_ y / x ]_ B ) ) ;
	step 4 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 5 : wff = thm hbcsb1g (step 4) |- ( A e. D -> ( z e. [_ A / y ]_ [_ y / x ]_ R -> A. y z e. [_ A / y ]_ [_ y / x ]_ R ) ) ;
	step 6 : wff = axm ax-17 () |- ( z e. A -> A. y z e. A ) ;
	step 7 : wff = thm hbcsb1g (step 6) |- ( A e. D -> ( z e. [_ A / y ]_ [_ y / x ]_ C -> A. y z e. [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 8 : wff = thm hbbrd (step 1, step 3, step 5, step 7) |- ( A e. D -> ( [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C -> A. y [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 9 : wff = thm a9e () |- E. x x = y ;
	step 10 : wff = thm visset () |- y e. _V ;
	step 11 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 12 : wff = thm hbsbc1g (step 11) |- ( y e. _V -> ( [ y / x ] B R C -> A. x [ y / x ] B R C ) ) ;
	step 13 : wff = axm ax-mp (step 10, step 12) |- ( [ y / x ] B R C -> A. x [ y / x ] B R C ) ;
	step 14 : wff = thm visset () |- y e. _V ;
	step 15 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 16 : wff = thm hbcsb1 (step 14, step 15) |- ( z e. [_ y / x ]_ B -> A. x z e. [_ y / x ]_ B ) ;
	step 17 : wff = thm visset () |- y e. _V ;
	step 18 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 19 : wff = thm hbcsb1 (step 17, step 18) |- ( z e. [_ y / x ]_ R -> A. x z e. [_ y / x ]_ R ) ;
	step 20 : wff = thm visset () |- y e. _V ;
	step 21 : wff = axm ax-17 () |- ( z e. y -> A. x z e. y ) ;
	step 22 : wff = thm hbcsb1 (step 20, step 21) |- ( z e. [_ y / x ]_ C -> A. x z e. [_ y / x ]_ C ) ;
	step 23 : wff = thm hbbr (step 16, step 19, step 22) |- ( [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C -> A. x [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ;
	step 24 : wff = thm hbbi (step 13, step 23) |- ( ( [ y / x ] B R C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) -> A. x ( [ y / x ] B R C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ) ;
	step 25 : wff = thm csbeq1a () |- ( x = y -> B = [_ y / x ]_ B ) ;
	step 26 : wff = thm csbeq1a () |- ( x = y -> C = [_ y / x ]_ C ) ;
	step 27 : wff = thm breq12d (step 25, step 26) |- ( x = y -> ( B R C <-> [_ y / x ]_ B R [_ y / x ]_ C ) ) ;
	step 28 : wff = thm sbceq1a () |- ( x = y -> ( B R C <-> [ y / x ] B R C ) ) ;
	step 29 : wff = thm csbeq1a () |- ( x = y -> R = [_ y / x ]_ R ) ;
	step 30 : wff = thm breq () |- ( R = [_ y / x ]_ R -> ( [_ y / x ]_ B R [_ y / x ]_ C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ) ;
	step 31 : wff = thm syl (step 29, step 30) |- ( x = y -> ( [_ y / x ]_ B R [_ y / x ]_ C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ) ;
	step 32 : wff = thm 3bitr3d (step 27, step 28, step 31) |- ( x = y -> ( [ y / x ] B R C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ) ;
	step 33 : wff = thm 19_23ai (step 24, step 32) |- ( E. x x = y -> ( [ y / x ] B R C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ) ;
	step 34 : wff = axm ax-mp (step 9, step 33) |- ( [ y / x ] B R C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ;
	step 35 : wff = thm a1i (step 34) |- ( y = A -> ( [ y / x ] B R C <-> [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C ) ) ;
	step 36 : wff = thm csbeq1a () |- ( y = A -> [_ y / x ]_ B = [_ A / y ]_ [_ y / x ]_ B ) ;
	step 37 : wff = thm csbeq1a () |- ( y = A -> [_ y / x ]_ C = [_ A / y ]_ [_ y / x ]_ C ) ;
	step 38 : wff = thm breq12d (step 36, step 37) |- ( y = A -> ( [_ y / x ]_ B [_ y / x ]_ R [_ y / x ]_ C <-> [_ A / y ]_ [_ y / x ]_ B [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 39 : wff = thm csbeq1a () |- ( y = A -> [_ y / x ]_ R = [_ A / y ]_ [_ y / x ]_ R ) ;
	step 40 : wff = thm breq () |- ( [_ y / x ]_ R = [_ A / y ]_ [_ y / x ]_ R -> ( [_ A / y ]_ [_ y / x ]_ B [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C <-> [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 41 : wff = thm syl (step 39, step 40) |- ( y = A -> ( [_ A / y ]_ [_ y / x ]_ B [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C <-> [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 42 : wff = thm 3bitrd (step 35, step 38, step 41) |- ( y = A -> ( [ y / x ] B R C <-> [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 43 : wff = thm sbciegf (step 8, step 42) |- ( A e. D -> ( [ A / y ] [ y / x ] B R C <-> [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C ) ) ;
	step 44 : wff = thm sbccog () |- ( A e. D -> ( [ A / y ] [ y / x ] B R C <-> [ A / x ] B R C ) ) ;
	step 45 : wff = thm csbcog () |- ( A e. D -> [_ A / y ]_ [_ y / x ]_ B = [_ A / x ]_ B ) ;
	step 46 : wff = thm csbcog () |- ( A e. D -> [_ A / y ]_ [_ y / x ]_ C = [_ A / x ]_ C ) ;
	step 47 : wff = thm breq12d (step 45, step 46) |- ( A e. D -> ( [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C <-> [_ A / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / x ]_ C ) ) ;
	step 48 : wff = thm csbcog () |- ( A e. D -> [_ A / y ]_ [_ y / x ]_ R = [_ A / x ]_ R ) ;
	step 49 : wff = thm breq () |- ( [_ A / y ]_ [_ y / x ]_ R = [_ A / x ]_ R -> ( [_ A / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / x ]_ C <-> [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) ;
	step 50 : wff = thm syl (step 48, step 49) |- ( A e. D -> ( [_ A / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / x ]_ C <-> [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) ;
	step 51 : wff = thm bitrd (step 47, step 50) |- ( A e. D -> ( [_ A / y ]_ [_ y / x ]_ B [_ A / y ]_ [_ y / x ]_ R [_ A / y ]_ [_ y / x ]_ C <-> [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) ;
	step 52 : wff = thm 3bitr3d (step 43, step 44, step 51) |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) ;
	qed prop 1 = step 52 ;
}

theorem sbcbr12g (x : set, A : class, B : class, C : class, D : class, R : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) ;
}

proof of sbcbr12g {
	var y : set;
	step 1 : wff = thm sbcbrg () |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. R -> A. x y e. R ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ R = R ) ;
	step 4 : wff = thm breq () |- ( [_ A / x ]_ R = R -> ( [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) ;
	step 5 : wff = thm syl (step 3, step 4) |- ( A e. D -> ( [_ A / x ]_ B [_ A / x ]_ R [_ A / x ]_ C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) ;
	step 6 : wff = thm bitrd (step 1, step 5) |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) ;
	qed prop 1 = step 6 ;
}

theorem sbcbr1g (x : set, A : class, B : class, C : class, D : class, R : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B R C ) ) ;
}

proof of sbcbr1g {
	var y : set;
	step 1 : wff = thm sbcbr12g () |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. C -> A. x y e. C ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ C = C ) ;
	step 4 : wff = thm breq2d (step 3) |- ( A e. D -> ( [_ A / x ]_ B R [_ A / x ]_ C <-> [_ A / x ]_ B R C ) ) ;
	step 5 : wff = thm bitrd (step 1, step 4) |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B R C ) ) ;
	qed prop 1 = step 5 ;
}

theorem sbcbr2g (x : set, A : class, B : class, C : class, D : class, R : class)  {
	prop 1 : wff = |- ( A e. D -> ( [ A / x ] B R C <-> B R [_ A / x ]_ C ) ) ;
}

proof of sbcbr2g {
	var y : set;
	step 1 : wff = thm sbcbr12g () |- ( A e. D -> ( [ A / x ] B R C <-> [_ A / x ]_ B R [_ A / x ]_ C ) ) ;
	step 2 : wff = axm ax-17 () |- ( y e. B -> A. x y e. B ) ;
	step 3 : wff = thm csbconstgf (step 2) |- ( A e. D -> [_ A / x ]_ B = B ) ;
	step 4 : wff = thm breq1d (step 3) |- ( A e. D -> ( [_ A / x ]_ B R [_ A / x ]_ C <-> B R [_ A / x ]_ C ) ) ;
	step 5 : wff = thm bitrd (step 1, step 4) |- ( A e. D -> ( [ A / x ] B R C <-> B R [_ A / x ]_ C ) ) ;
	qed prop 1 = step 5 ;
}

rule copab (ph : wff, x : set, y : set) {
	term : class = # { <. x , y >. | ph } ;
}

definition df-opab (ph : wff, x : set, y : set, z : set)  {
	defiendum : class = # { <. x , y >. | ph } ;
	definiens : class = # { z | E. x E. y ( z = <. x , y >. /\ ph ) } ;
	-----------------------
	prop : wff = |- defiendum = definiens ;
}

theorem opabss (x : set, y : set, R : class)  {
	prop 1 : wff = |- { <. x , y >. | x R y } C_ R ;
}

proof of opabss {
	var z : set;
	step 1 : wff = def df-opab () |- { <. x , y >. | x R y } = { z | E. x E. y ( z = <. x , y >. /\ x R y ) } ;
	step 2 : wff = thm eleq1 () |- ( z = <. x , y >. -> ( z e. R <-> <. x , y >. e. R ) ) ;
	step 3 : wff = thm biimpar (step 2) |- ( ( z = <. x , y >. /\ <. x , y >. e. R ) -> z e. R ) ;
	step 4 : wff = def df-br () |- ( x R y <-> <. x , y >. e. R ) ;
	step 5 : wff = thm sylan2b (step 3, step 4) |- ( ( z = <. x , y >. /\ x R y ) -> z e. R ) ;
	step 6 : wff = thm 19_23aivv (step 5) |- ( E. x E. y ( z = <. x , y >. /\ x R y ) -> z e. R ) ;
	step 7 : wff = thm ss2abi (step 6) |- { z | E. x E. y ( z = <. x , y >. /\ x R y ) } C_ { z | z e. R } ;
	step 8 : wff = thm eqsstri (step 1, step 7) |- { <. x , y >. | x R y } C_ { z | z e. R } ;
	step 9 : wff = thm abid2 () |- { z | z e. R } = R ;
	step 10 : wff = thm sseqtri (step 8, step 9) |- { <. x , y >. | x R y } C_ R ;
	qed prop 1 = step 10 ;
}



$[ uset-100000/ZF_(ZERMELO-FRAENKEL)_SET_THEORY/ZF_Set_Theory_-_add_the_Axiom_of_Replacement/Theorems_requiring_subset_and_intersection_existence.smm $]
$( /* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Theorems requiring empty set existence

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
*/

$)
$( /* Construct, from any class ` A ` , a set equal to it when the class
       exists and equal to the empty set when the class is proper.  This
       theorem shows that the constructed set always exists.  (Contributed by
       NM, 16-Oct-2003.) */

$)
${
	$v x A $.
	$d x A $.
	f0 $f set x $.
	f1 $f class A $.
	pclass2set $p |- { x e. A | A e. _V } e. _V $=
	f1 acvv awcel f0 f1 acvv prabexg f1 acvv awcel awn f0 asup_set_class f1 awcel psimpl f1 acvv awcel awn f1 acvv awcel f0 f1 pnrexdv f1 acvv awcel f0 f1 prabn0 f1 acvv awcel f0 f1 awrex f1 acvv awcel f0 f1 acrab ac0 pnecon1bbii f1 acvv awcel awn f1 acvv awcel f0 f1 awrex awn f1 acvv awcel f0 f1 acrab ac0 awceq psylib p0ex f1 acvv awcel awn f1 acvv awcel f0 f1 acrab ac0 acvv psyl6eqel f1 acvv awcel f1 acvv awcel f0 f1 acrab acvv awcel ppm2.61i $.
$}
$( /* Equality theorem based on ~ class2set .  (Contributed by NM,
       13-Dec-2005.)  (Proof shortened by Raph Levien, 30-Jun-2006.) */

$)
${
	$v x A V $.
	$d x A $.
	f0 $f set x $.
	f1 $f class A $.
	f2 $f class V $.
	pclass2seteq $p |- ( A e. V -> { x e. A | A e. _V } = A ) $=
	f1 f2 pelex f1 acvv awcel f0 asup_set_class f1 awcel aax-1 f1 acvv awcel f1 acvv awcel f0 f1 pralrimiv f1 acvv awcel f0 f1 prabid2 f1 acvv awcel f1 acvv awcel f0 f1 awral f1 f1 acvv awcel f0 f1 acrab awceq psylibr f1 acvv awcel f1 f1 acvv awcel f0 f1 acrab peqcomd f1 f2 awcel f1 acvv awcel f1 acvv awcel f0 f1 acrab f1 awceq psyl $.
$}
$( /* Every power class contains the empty set.  (Contributed by NM,
     25-Oct-2007.) */

$)
${
	$v A $.
	f0 $f class A $.
	p0elpw $p |- (/) e. ~P A $=
	f0 p0ss p0ex ac0 f0 pelpw ac0 f0 acpw awcel ac0 f0 awss pmpbir $.
$}
$( /* The empty set and its power set are not equal.  (Contributed by NM,
     23-Dec-1993.) */

$)
${
	p0nep0 $p |- (/) =/= { (/) } $=
	p0ex ac0 psnnz ac0 acsn ac0 pnecomi $.
$}
$( /* Something cannot be equal to both the null set and the power set of the
     null set.  (Contributed by NM, 30-Sep-2003.) */

$)
${
	$v A $.
	f0 $f class A $.
	p0inp0 $p |- ( A = (/) -> -. A = { (/) } ) $=
	p0nep0 f0 ac0 ac0 acsn pneeq1 f0 ac0 awceq f0 ac0 acsn awne ac0 ac0 acsn awne pmpbiri f0 ac0 awceq f0 ac0 acsn pneneqd $.
$}
$( /* The removal of the empty set from a class does not affect its union.
     (Contributed by NM, 22-Mar-2004.) */

$)
${
	$v A $.
	f0 $f class A $.
	punidif0 $p |- U. ( A \ { (/) } ) = U. A $=
	f0 ac0 acsn acdif ac0 acsn puniun f0 ac0 acsn pundif1 f0 ac0 acsn puncom f0 ac0 acsn acdif ac0 acsn acun f0 ac0 acsn acun ac0 acsn f0 acun peqtr2i ac0 acsn f0 acun f0 ac0 acsn acdif ac0 acsn acun punieqi p0ex ac0 punisn ac0 acsn acuni ac0 f0 ac0 acsn acdif acuni puneq2i f0 ac0 acsn acdif acuni pun0 f0 ac0 acsn acdif acuni ac0 acsn acuni acun f0 ac0 acsn acdif acuni ac0 acun f0 ac0 acsn acdif acuni peqtr2i f0 ac0 acsn acdif ac0 acsn acun acuni f0 ac0 acsn acdif acuni ac0 acsn acuni acun ac0 acsn f0 acun acuni f0 ac0 acsn acdif acuni p3eqtr4ri ac0 acsn f0 puniun p0ex ac0 punisn ac0 acsn acuni ac0 f0 acuni puneq1i f0 ac0 acsn acdif acuni ac0 acsn f0 acun acuni ac0 acsn acuni f0 acuni acun ac0 f0 acuni acun p3eqtri ac0 f0 acuni puncom f0 acuni pun0 f0 ac0 acsn acdif acuni ac0 f0 acuni acun f0 acuni ac0 acun f0 acuni p3eqtri $.
$}
$( /* An indexed intersection of the empty set, with a non-empty index set, is
       empty.  (Contributed by NM, 20-Oct-2005.) */

$)
${
	$v x A $.
	$d x A $.
	f0 $f set x $.
	f1 $f class A $.
	piin0 $p |- ( A =/= (/) <-> |^|_ x e. A (/) = (/) ) $=
	f0 f1 ac0 piinconst p0ex acvv ac0 pn0i ac0 acvv awcel acvv ac0 awceq awn aax-mp f0 ac0 p0iin f0 ac0 ac0 aciin acvv ac0 peqeq1i f0 ac0 ac0 aciin ac0 awceq acvv ac0 awceq pmtbir f0 f1 ac0 ac0 piineq1 f1 ac0 awceq f0 f1 ac0 aciin f0 ac0 ac0 aciin ac0 peqeq1d f1 ac0 awceq f0 f1 ac0 aciin ac0 awceq f0 ac0 ac0 aciin ac0 awceq pmtbiri f0 f1 ac0 aciin ac0 awceq f1 ac0 pnecon2ai f1 ac0 awne f0 f1 ac0 aciin ac0 awceq pimpbii $.
$}
$( /* In the Separation Scheme ~ zfauscl , we require that ` y ` not occur in
       ` ph ` (which can be generalized to "not be free in").  Here we show
       special cases of ` A ` and ` ph ` that result in a contradiction by
       violating this requirement.  (Contributed by NM, 8-Feb-2006.) */

$)
${
	$v ph x y A $.
	$d x A $.
	e0 $e |- A = { (/) } $.
	e1 $e |- ( ph <-> -. x e. y ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set y $.
	f3 $f class A $.
	pnotzfaus $p |- -. E. y A. x ( x e. y <-> ( x e. A /\ ph ) ) $=
	e0 p0ex ac0 psnnz f3 ac0 acsn ac0 peqnetri f1 f3 pn0 f3 ac0 awne f1 asup_set_class f3 awcel f1 awex pmpbi f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel pbiimt f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel piman e1 f0 f1 asup_set_class f2 asup_set_class awcel awn f1 asup_set_class f3 awcel panbi2i f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel awi f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel awn awa f1 asup_set_class f3 awcel f0 awa pxchbinxr f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel awi f1 asup_set_class f3 awcel f0 awa awn psyl6bb f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa pxor3 f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awn awb f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb awn psylibr f1 asup_set_class f3 awcel f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb awn f1 peximi f1 asup_set_class f3 awcel f1 awex f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb awn f1 awex aax-mp f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb f1 pexnal f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb awn f1 awex f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb f1 awal awn pmpbi f1 asup_set_class f2 asup_set_class awcel f1 asup_set_class f3 awcel f0 awa awb f1 awal f2 pnex $.
$}
$( /* The intersection of the universal class is empty.  (Contributed by NM,
     11-Sep-2008.) */

$)
${
	pintv $p |- |^| _V = (/) $=
	p0ex acvv pint0el ac0 acvv awcel acvv acint ac0 awceq aax-mp $.
$}
$( /* Two equivalent ways to express the Power Set Axiom.  Note that ~ ax-pow
       is not used by the proof.  (Contributed by NM, 22-Jun-2009.) */

$)
${
	$v x y z A $.
	$d x y z A $.
	e0 $e |- A e. _V $.
	f0 $f set x $.
	f1 $f set y $.
	f2 $f set z $.
	f3 $f class A $.
	paxpweq $p |- ( ~P A e. _V <-> E. x A. y ( A. z ( z e. y -> z e. A ) -> y e. x ) ) $=
	f3 acpw acvv ppwidg f0 asup_set_class f3 acpw ppweq f0 asup_set_class f3 acpw awceq f0 asup_set_class acpw f3 acpw acpw f3 acpw peleq2d f3 acpw f0 asup_set_class acpw awcel f3 acpw f3 acpw acpw awcel f0 f3 acpw acvv pspcegv f3 acpw acvv awcel f3 acpw f3 acpw acpw awcel f3 acpw f0 asup_set_class acpw awcel f0 awex pmpd f3 acpw f0 asup_set_class acpw pelex f3 acpw f0 asup_set_class acpw awcel f3 acpw acvv awcel f0 pexlimiv f3 acpw acvv awcel f3 acpw f0 asup_set_class acpw awcel f0 awex pimpbii f0 pvex f3 acpw f0 asup_set_class pelpw2 f1 f3 f0 asup_set_class ppwss f2 f1 asup_set_class f3 pdfss2 f1 asup_set_class f3 awss f2 asup_set_class f1 asup_set_class awcel f2 asup_set_class f3 awcel awi f2 awal f1 asup_set_class f0 asup_set_class awcel pimbi1i f1 asup_set_class f3 awss f1 asup_set_class f0 asup_set_class awcel awi f2 asup_set_class f1 asup_set_class awcel f2 asup_set_class f3 awcel awi f2 awal f1 asup_set_class f0 asup_set_class awcel awi f1 palbii f3 acpw f0 asup_set_class awss f1 asup_set_class f3 awss f1 asup_set_class f0 asup_set_class awcel awi f1 awal f2 asup_set_class f1 asup_set_class awcel f2 asup_set_class f3 awcel awi f2 awal f1 asup_set_class f0 asup_set_class awcel awi f1 awal pbitri f3 acpw f0 asup_set_class acpw awcel f3 acpw f0 asup_set_class awss f2 asup_set_class f1 asup_set_class awcel f2 asup_set_class f3 awcel awi f2 awal f1 asup_set_class f0 asup_set_class awcel awi f1 awal pbitri f3 acpw f0 asup_set_class acpw awcel f2 asup_set_class f1 asup_set_class awcel f2 asup_set_class f3 awcel awi f2 awal f1 asup_set_class f0 asup_set_class awcel awi f1 awal f0 pexbii f3 acpw acvv awcel f3 acpw f0 asup_set_class acpw awcel f0 awex f2 asup_set_class f1 asup_set_class awcel f2 asup_set_class f3 awcel awi f2 awal f1 asup_set_class f0 asup_set_class awcel awi f1 awal f0 awex pbitri $.
$}


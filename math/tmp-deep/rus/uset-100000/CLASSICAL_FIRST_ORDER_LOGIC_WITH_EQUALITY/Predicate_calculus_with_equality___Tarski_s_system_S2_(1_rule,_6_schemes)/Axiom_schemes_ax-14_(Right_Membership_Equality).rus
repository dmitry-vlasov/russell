import uset-100000/CLASSICAL_FIRST_ORDER_LOGIC_WITH_EQUALITY/Predicate_calculus_with_equality___Tarski_s_system_S2_(1_rule,_6_schemes)/Axiom_schemes_ax-13_(Left_Membership_Equality).rus;;

/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Axiom schemes ax-14 (Right Membership Equality)

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
*/

/*Axiom of Right Membership Equality.  One of the equality and substitution
     axioms for a non-logical predicate in our predicate calculus with
     equality.  It substitutes equal variables into the right-hand side of the
     ` e. ` binary predicate.  This axiom scheme is a sub-scheme of Axiom
     Scheme B8 of system S2 of [Tarski], p. 75, whose general form cannot be
     represented with our notation.  Also appears as Axiom scheme C13' in
     [Megill] p. 448 (p. 16 of the preprint).  (Contributed by NM,
     5-Aug-1993.) */

axiom ax-14 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y → ( z ∈ x → z ∈ y ) ) ;;
}

/*An identity law for the non-logical predicate.  (Contributed by NM,
     5-Aug-1993.) */

theorem elequ2 (x : set, y : set, z : set)  {
	prop 1 : wff = |- ( x = y → ( z ∈ x ↔ z ∈ y ) ) ;;
}

proof of elequ2 {
	step 1 : wff = ax-14 () |- ( x = y → ( z ∈ x → z ∈ y ) ) ;;
	step 2 : wff = ax-14 () |- ( y = x → ( z ∈ y → z ∈ x ) ) ;;
	step 3 : wff = equcoms (step 2) |- ( x = y → ( z ∈ y → z ∈ x ) ) ;;
	step 4 : wff = impbid (step 1, step 3) |- ( x = y → ( z ∈ x ↔ z ∈ y ) ) ;;
	qed prop 1 = step 4 ;;
}



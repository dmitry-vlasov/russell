import uset-100000/CLASSICAL_FIRST_ORDER_LOGIC_WITH_EQUALITY/Other_axiomatizations_of_classical_propositional_calculus/Derive_the_Lukasiewicz_axioms_from_Meredith_s_sole_axiom.rus;;

/* =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
      Derive the standard axioms from the Lukasiewicz axioms

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
*/

/* Used to rederive standard propositional axioms from Lukasiewicz'.
       (Contributed by NM, 23-Dec-2002.)  (Proof modification is discouraged.)
       (New usage is discouraged.) */

theorem luklem1 (ph : wff, ps : wff, ch : wff)  {
	hyp 1 : wff = |- ( ph → ps ) ;;
	hyp 2 : wff = |- ( ps → ch ) ;;
	-----------------------
	prop 1 : wff = |- ( ph → ch ) ;;
}

proof of luklem1 {
	step 1 : wff = luk-1 () |- ( ( ph → ps ) → ( ( ps → ch ) → ( ph → ch ) ) ) ;;
	step 2 : wff = ax-mp (hyp 1, step 1) |- ( ( ps → ch ) → ( ph → ch ) ) ;;
	step 3 : wff = ax-mp (hyp 2, step 2) |- ( ph → ch ) ;;
	qed prop 1 = step 3 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem2 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ( ph → ¬ ps ) → ( ( ( ph → ch ) → th ) → ( ps → th ) ) ) ;;
}

proof of luklem2 {
	step 1 : wff = luk-1 () |- ( ( ph → ¬ ps ) → ( ( ¬ ps → ch ) → ( ph → ch ) ) ) ;;
	step 2 : wff = luk-3 () |- ( ps → ( ¬ ps → ch ) ) ;;
	step 3 : wff = luk-1 () |- ( ( ps → ( ¬ ps → ch ) ) → ( ( ( ¬ ps → ch ) → ( ph → ch ) ) → ( ps → ( ph → ch ) ) ) ) ;;
	step 4 : wff = ax-mp (step 2, step 3) |- ( ( ( ¬ ps → ch ) → ( ph → ch ) ) → ( ps → ( ph → ch ) ) ) ;;
	step 5 : wff = luklem1 (step 1, step 4) |- ( ( ph → ¬ ps ) → ( ps → ( ph → ch ) ) ) ;;
	step 6 : wff = luk-1 () |- ( ( ps → ( ph → ch ) ) → ( ( ( ph → ch ) → th ) → ( ps → th ) ) ) ;;
	step 7 : wff = luklem1 (step 5, step 6) |- ( ( ph → ¬ ps ) → ( ( ( ph → ch ) → th ) → ( ps → th ) ) ) ;;
	qed prop 1 = step 7 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem3 (ph : wff, ps : wff, ch : wff, th : wff)  {
	prop 1 : wff = |- ( ph → ( ( ( ¬ ph → ps ) → ch ) → ( th → ch ) ) ) ;;
}

proof of luklem3 {
	step 1 : wff = luk-3 () |- ( ph → ( ¬ ph → ¬ th ) ) ;;
	step 2 : wff = luklem2 () |- ( ( ¬ ph → ¬ th ) → ( ( ( ¬ ph → ps ) → ch ) → ( th → ch ) ) ) ;;
	step 3 : wff = luklem1 (step 1, step 2) |- ( ph → ( ( ( ¬ ph → ps ) → ch ) → ( th → ch ) ) ) ;;
	qed prop 1 = step 3 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem4 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ( ( ¬ ph → ph ) → ph ) → ps ) → ps ) ;;
}

proof of luklem4 {
	step 1 : wff = luk-2 () |- ( ( ¬ ( ( ¬ ph → ph ) → ph ) → ( ( ¬ ph → ph ) → ph ) ) → ( ( ¬ ph → ph ) → ph ) ) ;;
	step 2 : wff = luk-2 () |- ( ( ¬ ph → ph ) → ph ) ;;
	step 3 : wff = luklem3 () |- ( ( ( ¬ ph → ph ) → ph ) → ( ( ( ¬ ( ( ¬ ph → ph ) → ph ) → ( ( ¬ ph → ph ) → ph ) ) → ( ( ¬ ph → ph ) → ph ) ) → ( ¬ ps → ( ( ¬ ph → ph ) → ph ) ) ) ) ;;
	step 4 : wff = ax-mp (step 2, step 3) |- ( ( ( ¬ ( ( ¬ ph → ph ) → ph ) → ( ( ¬ ph → ph ) → ph ) ) → ( ( ¬ ph → ph ) → ph ) ) → ( ¬ ps → ( ( ¬ ph → ph ) → ph ) ) ) ;;
	step 5 : wff = ax-mp (step 1, step 4) |- ( ¬ ps → ( ( ¬ ph → ph ) → ph ) ) ;;
	step 6 : wff = luk-1 () |- ( ( ¬ ps → ( ( ¬ ph → ph ) → ph ) ) → ( ( ( ( ¬ ph → ph ) → ph ) → ps ) → ( ¬ ps → ps ) ) ) ;;
	step 7 : wff = ax-mp (step 5, step 6) |- ( ( ( ( ¬ ph → ph ) → ph ) → ps ) → ( ¬ ps → ps ) ) ;;
	step 8 : wff = luk-2 () |- ( ( ¬ ps → ps ) → ps ) ;;
	step 9 : wff = luklem1 (step 7, step 8) |- ( ( ( ( ¬ ph → ph ) → ph ) → ps ) → ps ) ;;
	qed prop 1 = step 9 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem5 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph → ( ps → ph ) ) ;;
}

proof of luklem5 {
	step 1 : wff = luklem3 () |- ( ph → ( ( ( ¬ ph → ph ) → ph ) → ( ps → ph ) ) ) ;;
	step 2 : wff = luklem4 () |- ( ( ( ( ¬ ph → ph ) → ph ) → ( ps → ph ) ) → ( ps → ph ) ) ;;
	step 3 : wff = luklem1 (step 1, step 2) |- ( ph → ( ps → ph ) ) ;;
	qed prop 1 = step 3 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem6 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ph → ( ph → ps ) ) → ( ph → ps ) ) ;;
}

proof of luklem6 {
	step 1 : wff = luk-1 () |- ( ( ph → ( ph → ps ) ) → ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) ) ;;
	step 2 : wff = luklem5 () |- ( ¬ ( ph → ps ) → ( ¬ ps → ¬ ( ph → ps ) ) ) ;;
	step 3 : wff = luklem2 () |- ( ( ¬ ps → ¬ ( ph → ps ) ) → ( ( ( ¬ ps → ps ) → ps ) → ( ( ph → ps ) → ps ) ) ) ;;
	step 4 : wff = luklem4 () |- ( ( ( ( ¬ ps → ps ) → ps ) → ( ( ph → ps ) → ps ) ) → ( ( ph → ps ) → ps ) ) ;;
	step 5 : wff = luklem1 (step 3, step 4) |- ( ( ¬ ps → ¬ ( ph → ps ) ) → ( ( ph → ps ) → ps ) ) ;;
	step 6 : wff = luklem1 (step 2, step 5) |- ( ¬ ( ph → ps ) → ( ( ph → ps ) → ps ) ) ;;
	step 7 : wff = luk-1 () |- ( ( ¬ ( ph → ps ) → ( ( ph → ps ) → ps ) ) → ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ¬ ( ph → ps ) → ( ph → ps ) ) ) ) ;;
	step 8 : wff = ax-mp (step 6, step 7) |- ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ¬ ( ph → ps ) → ( ph → ps ) ) ) ;;
	step 9 : wff = luk-1 () |- ( ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ¬ ( ph → ps ) → ( ph → ps ) ) ) → ( ( ( ¬ ( ph → ps ) → ( ph → ps ) ) → ( ph → ps ) ) → ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ph → ps ) ) ) ) ;;
	step 10 : wff = ax-mp (step 8, step 9) |- ( ( ( ¬ ( ph → ps ) → ( ph → ps ) ) → ( ph → ps ) ) → ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ph → ps ) ) ) ;;
	step 11 : wff = luklem4 () |- ( ( ( ( ¬ ( ph → ps ) → ( ph → ps ) ) → ( ph → ps ) ) → ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ph → ps ) ) ) → ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ph → ps ) ) ) ;;
	step 12 : wff = ax-mp (step 10, step 11) |- ( ( ( ( ph → ps ) → ps ) → ( ph → ps ) ) → ( ph → ps ) ) ;;
	step 13 : wff = luklem1 (step 1, step 12) |- ( ( ph → ( ph → ps ) ) → ( ph → ps ) ) ;;
	qed prop 1 = step 13 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem7 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph → ( ps → ch ) ) → ( ps → ( ph → ch ) ) ) ;;
}

proof of luklem7 {
	step 1 : wff = luk-1 () |- ( ( ph → ( ps → ch ) ) → ( ( ( ps → ch ) → ch ) → ( ph → ch ) ) ) ;;
	step 2 : wff = luklem5 () |- ( ps → ( ( ps → ch ) → ps ) ) ;;
	step 3 : wff = luk-1 () |- ( ( ( ps → ch ) → ps ) → ( ( ps → ch ) → ( ( ps → ch ) → ch ) ) ) ;;
	step 4 : wff = luklem1 (step 2, step 3) |- ( ps → ( ( ps → ch ) → ( ( ps → ch ) → ch ) ) ) ;;
	step 5 : wff = luklem6 () |- ( ( ( ps → ch ) → ( ( ps → ch ) → ch ) ) → ( ( ps → ch ) → ch ) ) ;;
	step 6 : wff = luklem1 (step 4, step 5) |- ( ps → ( ( ps → ch ) → ch ) ) ;;
	step 7 : wff = luk-1 () |- ( ( ps → ( ( ps → ch ) → ch ) ) → ( ( ( ( ps → ch ) → ch ) → ( ph → ch ) ) → ( ps → ( ph → ch ) ) ) ) ;;
	step 8 : wff = ax-mp (step 6, step 7) |- ( ( ( ( ps → ch ) → ch ) → ( ph → ch ) ) → ( ps → ( ph → ch ) ) ) ;;
	step 9 : wff = luklem1 (step 1, step 8) |- ( ( ph → ( ps → ch ) ) → ( ps → ( ph → ch ) ) ) ;;
	qed prop 1 = step 9 ;;
}

/* Used to rederive standard propositional axioms from Lukasiewicz'.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem luklem8 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph → ps ) → ( ( ch → ph ) → ( ch → ps ) ) ) ;;
}

proof of luklem8 {
	step 1 : wff = luk-1 () |- ( ( ch → ph ) → ( ( ph → ps ) → ( ch → ps ) ) ) ;;
	step 2 : wff = luklem7 () |- ( ( ( ch → ph ) → ( ( ph → ps ) → ( ch → ps ) ) ) → ( ( ph → ps ) → ( ( ch → ph ) → ( ch → ps ) ) ) ) ;;
	step 3 : wff = ax-mp (step 1, step 2) |- ( ( ph → ps ) → ( ( ch → ph ) → ( ch → ps ) ) ) ;;
	qed prop 1 = step 3 ;;
}

/* Standard propositional axiom derived from Lukasiewicz axioms.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem ax1 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ph → ( ps → ph ) ) ;;
}

proof of ax1 {
	step 1 : wff = luklem5 () |- ( ph → ( ps → ph ) ) ;;
	qed prop 1 = step 1 ;;
}

/* Standard propositional axiom derived from Lukasiewicz axioms.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem ax2 (ph : wff, ps : wff, ch : wff)  {
	prop 1 : wff = |- ( ( ph → ( ps → ch ) ) → ( ( ph → ps ) → ( ph → ch ) ) ) ;;
}

proof of ax2 {
	step 1 : wff = luklem7 () |- ( ( ph → ( ps → ch ) ) → ( ps → ( ph → ch ) ) ) ;;
	step 2 : wff = luklem8 () |- ( ( ps → ( ph → ch ) ) → ( ( ph → ps ) → ( ph → ( ph → ch ) ) ) ) ;;
	step 3 : wff = luklem6 () |- ( ( ph → ( ph → ch ) ) → ( ph → ch ) ) ;;
	step 4 : wff = luklem8 () |- ( ( ( ph → ( ph → ch ) ) → ( ph → ch ) ) → ( ( ( ph → ps ) → ( ph → ( ph → ch ) ) ) → ( ( ph → ps ) → ( ph → ch ) ) ) ) ;;
	step 5 : wff = ax-mp (step 3, step 4) |- ( ( ( ph → ps ) → ( ph → ( ph → ch ) ) ) → ( ( ph → ps ) → ( ph → ch ) ) ) ;;
	step 6 : wff = luklem1 (step 2, step 5) |- ( ( ps → ( ph → ch ) ) → ( ( ph → ps ) → ( ph → ch ) ) ) ;;
	step 7 : wff = luklem1 (step 1, step 6) |- ( ( ph → ( ps → ch ) ) → ( ( ph → ps ) → ( ph → ch ) ) ) ;;
	qed prop 1 = step 7 ;;
}

/* Standard propositional axiom derived from Lukasiewicz axioms.
     (Contributed by NM, 22-Dec-2002.)  (Proof modification is discouraged.)
     (New usage is discouraged.) */

theorem ax3 (ph : wff, ps : wff)  {
	prop 1 : wff = |- ( ( ¬ ph → ¬ ps ) → ( ps → ph ) ) ;;
}

proof of ax3 {
	step 1 : wff = luklem2 () |- ( ( ¬ ph → ¬ ps ) → ( ( ( ¬ ph → ph ) → ph ) → ( ps → ph ) ) ) ;;
	step 2 : wff = luklem4 () |- ( ( ( ( ¬ ph → ph ) → ph ) → ( ps → ph ) ) → ( ps → ph ) ) ;;
	step 3 : wff = luklem1 (step 1, step 2) |- ( ( ¬ ph → ¬ ps ) → ( ps → ph ) ) ;;
	qed prop 1 = step 3 ;;
}



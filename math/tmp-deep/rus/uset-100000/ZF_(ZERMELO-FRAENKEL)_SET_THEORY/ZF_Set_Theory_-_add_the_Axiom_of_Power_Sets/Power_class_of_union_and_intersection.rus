import uset-100000/ZF_(ZERMELO-FRAENKEL)_SET_THEORY/ZF_Set_Theory_-_add_the_Axiom_of_Power_Sets/Ordered-pair_class_abstractions_(cont_).rus;;

/*=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
                 Power class of union and intersection

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
*/

/*The power class of the intersection of two classes is the intersection
       of their power classes.  Exercise 4.12(j) of [Mendelson] p. 235.
       (Contributed by NM, 23-Nov-2003.) */

theorem pwin (A : class, B : class) disjointed(A x, B x) {
	prop 1 : wff = |- Pow ( A ∩ B ) = ( Pow A ∩ Pow B ) ;;
}

proof of pwin {
	var x : set;;
	step 1 : wff = ssin () |- ( ( x ⊆ A ∧ x ⊆ B ) ↔ x ⊆ ( A ∩ B ) ) ;;
	step 2 : wff = vex () |- x ∈ _V ;;
	step 3 : wff = elpw (step 2) |- ( x ∈ Pow A ↔ x ⊆ A ) ;;
	step 4 : wff = vex () |- x ∈ _V ;;
	step 5 : wff = elpw (step 4) |- ( x ∈ Pow B ↔ x ⊆ B ) ;;
	step 6 : wff = anbi12i (step 3, step 5) |- ( ( x ∈ Pow A ∧ x ∈ Pow B ) ↔ ( x ⊆ A ∧ x ⊆ B ) ) ;;
	step 7 : wff = vex () |- x ∈ _V ;;
	step 8 : wff = elpw (step 7) |- ( x ∈ Pow ( A ∩ B ) ↔ x ⊆ ( A ∩ B ) ) ;;
	step 9 : wff = 3bitr4i (step 1, step 6, step 8) |- ( ( x ∈ Pow A ∧ x ∈ Pow B ) ↔ x ∈ Pow ( A ∩ B ) ) ;;
	step 10 : wff = ineqri (step 9) |- ( Pow A ∩ Pow B ) = Pow ( A ∩ B ) ;;
	step 11 : wff = eqcomi (step 10) |- Pow ( A ∩ B ) = ( Pow A ∩ Pow B ) ;;
	qed prop 1 = step 11 ;;
}

/*The power class of the union of two classes includes the union of their
       power classes.  Exercise 4.12(k) of [Mendelson] p. 235.  (Contributed by
       NM, 23-Nov-2003.) */

theorem pwunss (A : class, B : class) disjointed(A x, B x) {
	prop 1 : wff = |- ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ;;
}

proof of pwunss {
	var x : set;;
	step 1 : wff = ssun () |- ( ( x ⊆ A ∨ x ⊆ B ) → x ⊆ ( A ∪ B ) ) ;;
	step 2 : wff = elun () |- ( x ∈ ( Pow A ∪ Pow B ) ↔ ( x ∈ Pow A ∨ x ∈ Pow B ) ) ;;
	step 3 : wff = vex () |- x ∈ _V ;;
	step 4 : wff = elpw (step 3) |- ( x ∈ Pow A ↔ x ⊆ A ) ;;
	step 5 : wff = vex () |- x ∈ _V ;;
	step 6 : wff = elpw (step 5) |- ( x ∈ Pow B ↔ x ⊆ B ) ;;
	step 7 : wff = orbi12i (step 4, step 6) |- ( ( x ∈ Pow A ∨ x ∈ Pow B ) ↔ ( x ⊆ A ∨ x ⊆ B ) ) ;;
	step 8 : wff = bitri (step 2, step 7) |- ( x ∈ ( Pow A ∪ Pow B ) ↔ ( x ⊆ A ∨ x ⊆ B ) ) ;;
	step 9 : wff = vex () |- x ∈ _V ;;
	step 10 : wff = elpw (step 9) |- ( x ∈ Pow ( A ∪ B ) ↔ x ⊆ ( A ∪ B ) ) ;;
	step 11 : wff = 3imtr4i (step 1, step 8, step 10) |- ( x ∈ ( Pow A ∪ Pow B ) → x ∈ Pow ( A ∪ B ) ) ;;
	step 12 : wff = ssriv (step 11) |- ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ;;
	qed prop 1 = step 12 ;;
}

/*The power class of the union of two classes is a subset of the union of
       their power classes, iff one class is a subclass of the other.  Exercise
       4.12(l) of [Mendelson] p. 235.  (Contributed by NM, 23-Nov-2003.) */

theorem pwssun (A : class, B : class) disjointed(A x y, B x y) {
	prop 1 : wff = |- ( ( A ⊆ B ∨ B ⊆ A ) ↔ Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ) ;;
}

proof of pwssun {
	var x : set, y : set;;
	step 1 : wff = ssequn2 () |- ( B ⊆ A ↔ ( A ∪ B ) = A ) ;;
	step 2 : wff = pweq () |- ( ( A ∪ B ) = A → Pow ( A ∪ B ) = Pow A ) ;;
	step 3 : wff = eqimss () |- ( Pow ( A ∪ B ) = Pow A → Pow ( A ∪ B ) ⊆ Pow A ) ;;
	step 4 : wff = syl (step 2, step 3) |- ( ( A ∪ B ) = A → Pow ( A ∪ B ) ⊆ Pow A ) ;;
	step 5 : wff = sylbi (step 1, step 4) |- ( B ⊆ A → Pow ( A ∪ B ) ⊆ Pow A ) ;;
	step 6 : wff = ssequn1 () |- ( A ⊆ B ↔ ( A ∪ B ) = B ) ;;
	step 7 : wff = pweq () |- ( ( A ∪ B ) = B → Pow ( A ∪ B ) = Pow B ) ;;
	step 8 : wff = eqimss () |- ( Pow ( A ∪ B ) = Pow B → Pow ( A ∪ B ) ⊆ Pow B ) ;;
	step 9 : wff = syl (step 7, step 8) |- ( ( A ∪ B ) = B → Pow ( A ∪ B ) ⊆ Pow B ) ;;
	step 10 : wff = sylbi (step 6, step 9) |- ( A ⊆ B → Pow ( A ∪ B ) ⊆ Pow B ) ;;
	step 11 : wff = orim12i (step 5, step 10) |- ( ( B ⊆ A ∨ A ⊆ B ) → ( Pow ( A ∪ B ) ⊆ Pow A ∨ Pow ( A ∪ B ) ⊆ Pow B ) ) ;;
	step 12 : wff = orcoms (step 11) |- ( ( A ⊆ B ∨ B ⊆ A ) → ( Pow ( A ∪ B ) ⊆ Pow A ∨ Pow ( A ∪ B ) ⊆ Pow B ) ) ;;
	step 13 : wff = ssun () |- ( ( Pow ( A ∪ B ) ⊆ Pow A ∨ Pow ( A ∪ B ) ⊆ Pow B ) → Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ) ;;
	step 14 : wff = syl (step 12, step 13) |- ( ( A ⊆ B ∨ B ⊆ A ) → Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ) ;;
	step 15 : wff = vex () |- x ∈ _V ;;
	step 16 : wff = snss (step 15) |- ( x ∈ A ↔ { x } ⊆ A ) ;;
	step 17 : wff = vex () |- y ∈ _V ;;
	step 18 : wff = snss (step 17) |- ( y ∈ B ↔ { y } ⊆ B ) ;;
	step 19 : wff = unss12 () |- ( ( { x } ⊆ A ∧ { y } ⊆ B ) → ( { x } ∪ { y } ) ⊆ ( A ∪ B ) ) ;;
	step 20 : wff = syl2anb (step 16, step 18, step 19) |- ( ( x ∈ A ∧ y ∈ B ) → ( { x } ∪ { y } ) ⊆ ( A ∪ B ) ) ;;
	step 21 : wff = zfpair2 () |- { x , y } ∈ _V ;;
	step 22 : wff = elpw (step 21) |- ( { x , y } ∈ Pow ( A ∪ B ) ↔ { x , y } ⊆ ( A ∪ B ) ) ;;
	step 23 : wff = df-pr () |- { x , y } = ( { x } ∪ { y } ) ;;
	step 24 : wff = sseq1i (step 23) |- ( { x , y } ⊆ ( A ∪ B ) ↔ ( { x } ∪ { y } ) ⊆ ( A ∪ B ) ) ;;
	step 25 : wff = bitr2i (step 22, step 24) |- ( ( { x } ∪ { y } ) ⊆ ( A ∪ B ) ↔ { x , y } ∈ Pow ( A ∪ B ) ) ;;
	step 26 : wff = sylib (step 20, step 25) |- ( ( x ∈ A ∧ y ∈ B ) → { x , y } ∈ Pow ( A ∪ B ) ) ;;
	step 27 : wff = ssel () |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( { x , y } ∈ Pow ( A ∪ B ) → { x , y } ∈ ( Pow A ∪ Pow B ) ) ) ;;
	step 28 : wff = syl5 (step 26, step 27) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( ( x ∈ A ∧ y ∈ B ) → { x , y } ∈ ( Pow A ∪ Pow B ) ) ) ;;
	step 29 : wff = exp3acom23 (step 28) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( y ∈ B → ( x ∈ A → { x , y } ∈ ( Pow A ∪ Pow B ) ) ) ) ;;
	step 30 : wff = imp31 (step 29) |- ( ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ y ∈ B ) ∧ x ∈ A ) → { x , y } ∈ ( Pow A ∪ Pow B ) ) ;;
	step 31 : wff = elun () |- ( { x , y } ∈ ( Pow A ∪ Pow B ) ↔ ( { x , y } ∈ Pow A ∨ { x , y } ∈ Pow B ) ) ;;
	step 32 : wff = sylib (step 30, step 31) |- ( ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ y ∈ B ) ∧ x ∈ A ) → ( { x , y } ∈ Pow A ∨ { x , y } ∈ Pow B ) ) ;;
	step 33 : wff = zfpair2 () |- { x , y } ∈ _V ;;
	step 34 : wff = elpw (step 33) |- ( { x , y } ∈ Pow A ↔ { x , y } ⊆ A ) ;;
	step 35 : wff = vex () |- x ∈ _V ;;
	step 36 : wff = vex () |- y ∈ _V ;;
	step 37 : wff = prss (step 35, step 36) |- ( ( x ∈ A ∧ y ∈ A ) ↔ { x , y } ⊆ A ) ;;
	step 38 : wff = bitr4i (step 34, step 37) |- ( { x , y } ∈ Pow A ↔ ( x ∈ A ∧ y ∈ A ) ) ;;
	step 39 : wff = simprbi (step 38) |- ( { x , y } ∈ Pow A → y ∈ A ) ;;
	step 40 : wff = zfpair2 () |- { x , y } ∈ _V ;;
	step 41 : wff = elpw (step 40) |- ( { x , y } ∈ Pow B ↔ { x , y } ⊆ B ) ;;
	step 42 : wff = vex () |- x ∈ _V ;;
	step 43 : wff = vex () |- y ∈ _V ;;
	step 44 : wff = prss (step 42, step 43) |- ( ( x ∈ B ∧ y ∈ B ) ↔ { x , y } ⊆ B ) ;;
	step 45 : wff = bitr4i (step 41, step 44) |- ( { x , y } ∈ Pow B ↔ ( x ∈ B ∧ y ∈ B ) ) ;;
	step 46 : wff = simplbi (step 45) |- ( { x , y } ∈ Pow B → x ∈ B ) ;;
	step 47 : wff = orim12i (step 39, step 46) |- ( ( { x , y } ∈ Pow A ∨ { x , y } ∈ Pow B ) → ( y ∈ A ∨ x ∈ B ) ) ;;
	step 48 : wff = syl (step 32, step 47) |- ( ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ y ∈ B ) ∧ x ∈ A ) → ( y ∈ A ∨ x ∈ B ) ) ;;
	step 49 : wff = ord (step 48) |- ( ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ y ∈ B ) ∧ x ∈ A ) → ( ¬ y ∈ A → x ∈ B ) ) ;;
	step 50 : wff = impancom (step 49) |- ( ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ y ∈ B ) ∧ ¬ y ∈ A ) → ( x ∈ A → x ∈ B ) ) ;;
	step 51 : wff = ssrdv (step 50) |- ( ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ y ∈ B ) ∧ ¬ y ∈ A ) → A ⊆ B ) ;;
	step 52 : wff = exp31 (step 51) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( y ∈ B → ( ¬ y ∈ A → A ⊆ B ) ) ) ;;
	step 53 : wff = con1b () |- ( ( ¬ y ∈ A → A ⊆ B ) ↔ ( ¬ A ⊆ B → y ∈ A ) ) ;;
	step 54 : wff = syl6ib (step 52, step 53) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( y ∈ B → ( ¬ A ⊆ B → y ∈ A ) ) ) ;;
	step 55 : wff = com23 (step 54) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( ¬ A ⊆ B → ( y ∈ B → y ∈ A ) ) ) ;;
	step 56 : wff = imp (step 55) |- ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ ¬ A ⊆ B ) → ( y ∈ B → y ∈ A ) ) ;;
	step 57 : wff = ssrdv (step 56) |- ( ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ ¬ A ⊆ B ) → B ⊆ A ) ;;
	step 58 : wff = ex (step 57) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( ¬ A ⊆ B → B ⊆ A ) ) ;;
	step 59 : wff = orrd (step 58) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) → ( A ⊆ B ∨ B ⊆ A ) ) ;;
	step 60 : wff = impbii (step 14, step 59) |- ( ( A ⊆ B ∨ B ⊆ A ) ↔ Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ) ;;
	qed prop 1 = step 60 ;;
}

/*Break up the power class of a union into a union of smaller classes.
       (Contributed by NM, 25-Mar-2007.)  (Proof shortened by Thierry Arnoux,
       20-Dec-2016.) */

theorem pwundif (A : class, B : class) disjointed(A, B) {
	prop 1 : wff = |- Pow ( A ∪ B ) = ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ;;
}

proof of pwundif {
	step 1 : wff = undif1 () |- ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) = ( Pow ( A ∪ B ) ∪ Pow A ) ;;
	step 2 : wff = pwunss () |- ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ;;
	step 3 : wff = unss () |- ( ( Pow A ⊆ Pow ( A ∪ B ) ∧ Pow B ⊆ Pow ( A ∪ B ) ) ↔ ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ) ;;
	step 4 : wff = mpbir (step 2, step 3) |- ( Pow A ⊆ Pow ( A ∪ B ) ∧ Pow B ⊆ Pow ( A ∪ B ) ) ;;
	step 5 : wff = simpli (step 4) |- Pow A ⊆ Pow ( A ∪ B ) ;;
	step 6 : wff = ssequn2 () |- ( Pow A ⊆ Pow ( A ∪ B ) ↔ ( Pow ( A ∪ B ) ∪ Pow A ) = Pow ( A ∪ B ) ) ;;
	step 7 : wff = mpbi (step 5, step 6) |- ( Pow ( A ∪ B ) ∪ Pow A ) = Pow ( A ∪ B ) ;;
	step 8 : wff = eqtr2i (step 1, step 7) |- Pow ( A ∪ B ) = ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ;;
	qed prop 1 = step 8 ;;
}

/*Break up the power class of a union into a union of smaller classes.
       Obsolete as of 20-Dec-2016.  (Contributed by NM, 25-Mar-2007.)
       (New usage is discouraged.) */

theorem pwundifOLD (A : class, B : class) disjointed(A x, B x) {
	prop 1 : wff = |- Pow ( A ∪ B ) = ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ;;
}

proof of pwundifOLD {
	var x : set;;
	step 1 : wff = vex () |- x ∈ _V ;;
	step 2 : wff = elpw (step 1) |- ( x ∈ Pow ( A ∪ B ) ↔ x ⊆ ( A ∪ B ) ) ;;
	step 3 : wff = pm2.1 () |- ( ¬ x ⊆ A ∨ x ⊆ A ) ;;
	step 4 : wff = ordir () |- ( ( ( x ⊆ ( A ∪ B ) ∧ ¬ x ⊆ A ) ∨ x ⊆ A ) ↔ ( ( x ⊆ ( A ∪ B ) ∨ x ⊆ A ) ∧ ( ¬ x ⊆ A ∨ x ⊆ A ) ) ) ;;
	step 5 : wff = mpbiran2 (step 3, step 4) |- ( ( ( x ⊆ ( A ∪ B ) ∧ ¬ x ⊆ A ) ∨ x ⊆ A ) ↔ ( x ⊆ ( A ∪ B ) ∨ x ⊆ A ) ) ;;
	step 6 : wff = elun () |- ( x ∈ ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ↔ ( x ∈ ( Pow ( A ∪ B ) ∖ Pow A ) ∨ x ∈ Pow A ) ) ;;
	step 7 : wff = eldif () |- ( x ∈ ( Pow ( A ∪ B ) ∖ Pow A ) ↔ ( x ∈ Pow ( A ∪ B ) ∧ ¬ x ∈ Pow A ) ) ;;
	step 8 : wff = vex () |- x ∈ _V ;;
	step 9 : wff = elpw (step 8) |- ( x ∈ Pow ( A ∪ B ) ↔ x ⊆ ( A ∪ B ) ) ;;
	step 10 : wff = vex () |- x ∈ _V ;;
	step 11 : wff = elpw (step 10) |- ( x ∈ Pow A ↔ x ⊆ A ) ;;
	step 12 : wff = notbii (step 11) |- ( ¬ x ∈ Pow A ↔ ¬ x ⊆ A ) ;;
	step 13 : wff = anbi12i (step 9, step 12) |- ( ( x ∈ Pow ( A ∪ B ) ∧ ¬ x ∈ Pow A ) ↔ ( x ⊆ ( A ∪ B ) ∧ ¬ x ⊆ A ) ) ;;
	step 14 : wff = bitri (step 7, step 13) |- ( x ∈ ( Pow ( A ∪ B ) ∖ Pow A ) ↔ ( x ⊆ ( A ∪ B ) ∧ ¬ x ⊆ A ) ) ;;
	step 15 : wff = vex () |- x ∈ _V ;;
	step 16 : wff = elpw (step 15) |- ( x ∈ Pow A ↔ x ⊆ A ) ;;
	step 17 : wff = orbi12i (step 14, step 16) |- ( ( x ∈ ( Pow ( A ∪ B ) ∖ Pow A ) ∨ x ∈ Pow A ) ↔ ( ( x ⊆ ( A ∪ B ) ∧ ¬ x ⊆ A ) ∨ x ⊆ A ) ) ;;
	step 18 : wff = bitr2i (step 6, step 17) |- ( ( ( x ⊆ ( A ∪ B ) ∧ ¬ x ⊆ A ) ∨ x ⊆ A ) ↔ x ∈ ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ) ;;
	step 19 : wff = id () |- ( x ⊆ ( A ∪ B ) → x ⊆ ( A ∪ B ) ) ;;
	step 20 : wff = ssun3 () |- ( x ⊆ A → x ⊆ ( A ∪ B ) ) ;;
	step 21 : wff = jaoi (step 19, step 20) |- ( ( x ⊆ ( A ∪ B ) ∨ x ⊆ A ) → x ⊆ ( A ∪ B ) ) ;;
	step 22 : wff = orc () |- ( x ⊆ ( A ∪ B ) → ( x ⊆ ( A ∪ B ) ∨ x ⊆ A ) ) ;;
	step 23 : wff = impbii (step 21, step 22) |- ( ( x ⊆ ( A ∪ B ) ∨ x ⊆ A ) ↔ x ⊆ ( A ∪ B ) ) ;;
	step 24 : wff = 3bitr3ri (step 5, step 18, step 23) |- ( x ⊆ ( A ∪ B ) ↔ x ∈ ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ) ;;
	step 25 : wff = bitri (step 2, step 24) |- ( x ∈ Pow ( A ∪ B ) ↔ x ∈ ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ) ;;
	step 26 : wff = eqriv (step 25) |- Pow ( A ∪ B ) = ( ( Pow ( A ∪ B ) ∖ Pow A ) ∪ Pow A ) ;;
	qed prop 1 = step 26 ;;
}

/*The power class of the union of two classes equals the union of their
     power classes, iff one class is a subclass of the other.  Part of Exercise
     7(b) of [Enderton] p. 28.  (Contributed by NM, 23-Nov-2003.) */

theorem pwun (A : class, B : class)  {
	prop 1 : wff = |- ( ( A ⊆ B ∨ B ⊆ A ) ↔ Pow ( A ∪ B ) = ( Pow A ∪ Pow B ) ) ;;
}

proof of pwun {
	step 1 : wff = pwunss () |- ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ;;
	step 2 : wff = biantru (step 1) |- ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ↔ ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ) ) ;;
	step 3 : wff = pwssun () |- ( ( A ⊆ B ∨ B ⊆ A ) ↔ Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ) ;;
	step 4 : wff = eqss () |- ( Pow ( A ∪ B ) = ( Pow A ∪ Pow B ) ↔ ( Pow ( A ∪ B ) ⊆ ( Pow A ∪ Pow B ) ∧ ( Pow A ∪ Pow B ) ⊆ Pow ( A ∪ B ) ) ) ;;
	step 5 : wff = 3bitr4i (step 2, step 3, step 4) |- ( ( A ⊆ B ∨ B ⊆ A ) ↔ Pow ( A ∪ B ) = ( Pow A ∪ Pow B ) ) ;;
	qed prop 1 = step 5 ;;
}



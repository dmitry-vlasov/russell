$[ turnstile_special_source.smm $]
$[ uset-100000/ZF_(ZERMELO-FRAENKEL)_SET_THEORY/ZF_Set_Theory_-_start_with_the_Axiom_of_Extensionality/The_empty_set.smm $]
$( =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
           "Weak deduction theorem" for set theory

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  In a Hilbert system of logic (which consists of a set of axioms, modus
  ponens, and the generalization rule), converting a deduction to a proof using
  the Deduction Theorem (taught in introductory logic books) involves an
  exponential increase of the number of steps as hypotheses are successively
  eliminated.  Here is a trick that is not as general as the Deduction Theorem
  but requires only a linear increase in the number of steps.

  The general problem:  We want to convert a deduction
    P |- Q
  into a proof of the theorem
    |- P -> Q
  i.e. we want to eliminate the hypothesis P.  Normally this is done using the
  Deduction (meta)Theorem, which looks at the microscopic steps of the
  deduction and usually doubles or triples the number of these microscopic
  steps for each hypothesis that is eliminated.  We will look at a special case
  of this problem, without appealing to the Deduction Theorem.

  We assume ZF with class notation.  A and B are arbitrary (possibly
  proper) classes.  P, Q, R, S and T are wffs.

  We define the conditional operator, if(P,A,B), as follows:
    if(P,A,B) =def= { x | (x \in A & P) v (x \in B & -. P) }
  (where x does not occur in A, B, or P).

  Lemma 1.
    A = if(P,A,B) -> (P <-> R), B = if(P,A,B) -> (S <-> R), S |- R
  Proof:  Logic and Axiom of Extensionality.

  Lemma 2.
    A = if(P,A,B) -> (Q <-> T), T |- P -> Q
  Proof:  Logic and Axiom of Extensionality.

  Here's a simple example that illustrates how it works.  Suppose we have
  a deduction
    Ord A |- Tr A
  which means, "Assume A is an ordinal class.  Then A is a transitive class."
  Note that A is a class variable that may be substituted with any class
  expression, so this is really a deduction scheme.

  We want to convert this to a proof of the theorem (scheme)
    |- Ord A -> Tr A.

  The catch is that we must be able to prove "Ord A" for at least one
  object A (and this is what makes it weaker than the ordinary Deduction
  Theorem).  However, it is easy to prove |- Ord 0 (the empty set is
  ordinal).  (For a typical textbook "theorem," i.e. deduction, there is
  usually at least one object satisfying each hypothesis, otherwise the
  theorem would not be very useful.  We can always go back to the standard
  Deduction Theorem for those hypotheses where this is not the case.)
  Continuing with the example:

  Equality axioms (and Extensionality) yield
    |- A = if(Ord A, A, 0) -> (Ord A <-> Ord if(Ord A, A, 0))  (1)
    |- 0 = if(Ord A, A, 0) -> (Ord 0 <-> Ord if(Ord A, A, 0))  (2)
  From (1), (2) and |- Ord 0, Lemma 1 yields
    |- Ord if(Ord A, A, 0)                                       (3)
  From (3) and substituting if(Ord A, A, 0) for
  A in the original deduction,
    |- Tr if(Ord A, A, 0)                                        (4)
  Equality axioms (and Extensionality) yield
    |- A = if(Ord A, A, 0) -> (Tr A <-> Tr if(Ord A, A, 0))    (5)
  From (4) and (5), Lemma 2 yields
    |- Ord A -> Tr A                                               (Q.E.D.)

$)
$( These lemmas are used to convert hypotheses into antecedents,
     when there is at least one class making the hypothesis true. $)
$( Declare new constant symbols. $)
$c if $.
$( Conditional operator (was "ded" for "deduction class"). $)
$( Extend class notation to include the conditional operator.  See ~ df-if
     for a description.  (In older databases this was denoted "ded".) $)
${
	$v ph A B $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	acif $a class if ( ph , A , B ) $.
$}
$( Define the conditional operator.  Read ` if ( ph , A , B ) ` as "if
       ` ph ` then ` A ` else ` B ` ."  See ~ iftrue and ~ iffalse for its
       values.  In mathematical literature, this operator is rarely defined
       formally but is implicit in informal definitions such as "let f(x)=0 if
       x=0 and 1/x otherwise."  (In older versions of this database, this
       operator was denoted "ded" and called the "deduction class.")

       An important use for us is in conjunction with the weak deduction
       theorem, which converts a hypothesis into an antecedent.  In that role,
       ` A ` is a class variable in the hypothesis and ` B ` is a class
       (usually a constant) that makes the hypothesis true when it is
       substituted for ` A ` .  See ~ dedth for the main part of the weak
       deduction theorem, ~ elimhyp to eliminate a hypothesis, and ~ keephyp to
       keep a hypothesis.  See the Deduction Theorem link on the Metamath Proof
       Explorer Home Page for a description of the weak deduction theorem.
       (Contributed by NM, 15-May-1999.) $)
${
	$v ph x A B $.
	$d x ph $.
	$d x A $.
	$d x B $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	adf-if $a |- if ( ph , A , B ) = { x | ( ( x e. A /\ ph ) \/ ( x e. B /\ -. ph ) ) } $.
$}
$( An alternate definition of the conditional operator ~ df-if with one
       fewer connectives (but probably less intuitive to understand).
       (Contributed by NM, 30-Jan-2006.) $)
${
	$v ph x A B $.
	$d x ph $.
	$d x A $.
	$d x B $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	pdfif2 $p |- if ( ph , A , B ) = { x | ( ( x e. B -> ph ) -> ( x e. A /\ ph ) ) } $=
	f0 f1 f2 f3 adf-if f1 asup_set_class f3 awcel f0 awn awa f1 asup_set_class f2 awcel f0 awa adf-or f1 asup_set_class f2 awcel f0 awa f1 asup_set_class f3 awcel f0 awn awa porcom f1 asup_set_class f3 awcel f0 piman f1 asup_set_class f3 awcel f0 awi f1 asup_set_class f3 awcel f0 awn awa awn f1 asup_set_class f2 awcel f0 awa pimbi1i f1 asup_set_class f3 awcel f0 awn awa f1 asup_set_class f2 awcel f0 awa awo f1 asup_set_class f3 awcel f0 awn awa awn f1 asup_set_class f2 awcel f0 awa awi f1 asup_set_class f2 awcel f0 awa f1 asup_set_class f3 awcel f0 awn awa awo f1 asup_set_class f3 awcel f0 awi f1 asup_set_class f2 awcel f0 awa awi p3bitr4i f1 asup_set_class f2 awcel f0 awa f1 asup_set_class f3 awcel f0 awn awa awo f1 asup_set_class f3 awcel f0 awi f1 asup_set_class f2 awcel f0 awa awi f1 pabbii f0 f2 f3 acif f1 asup_set_class f2 awcel f0 awa f1 asup_set_class f3 awcel f0 awn awa awo f1 acab f1 asup_set_class f3 awcel f0 awi f1 asup_set_class f2 awcel f0 awa awi f1 acab peqtri $.
$}
$( An alternate definition of the conditional operator ~ df-if as a simple
       class abstraction.  (Contributed by Mario Carneiro, 8-Sep-2013.) $)
${
	$v ph x A B $.
	$d x ph $.
	$d x A $.
	$d x B $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	pdfif6 $p |- if ( ph , A , B ) = ( { x e. A | ph } u. { x e. B | -. ph } ) $=
	f1 asup_set_class f2 awcel f0 awa f1 asup_set_class f3 awcel f0 awn awa f1 punab f0 f1 f2 adf-rab f0 awn f1 f3 adf-rab f0 f1 f2 acrab f1 asup_set_class f2 awcel f0 awa f1 acab f0 awn f1 f3 acrab f1 asup_set_class f3 awcel f0 awn awa f1 acab puneq12i f0 f1 f2 f3 adf-if f1 asup_set_class f2 awcel f0 awa f1 acab f1 asup_set_class f3 awcel f0 awn awa f1 acab acun f1 asup_set_class f2 awcel f0 awa f1 asup_set_class f3 awcel f0 awn awa awo f1 acab f0 f1 f2 acrab f0 awn f1 f3 acrab acun f0 f2 f3 acif p3eqtr4ri $.
$}
$( Equality theorem for conditional operator.  (Contributed by NM,
       1-Sep-2004.)  (Revised by Mario Carneiro, 8-Sep-2013.) $)
${
	$v ph A B C x $.
	$d x ph $.
	$d x A $.
	$d x B $.
	$d x C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	i0 $f set x $.
	pifeq1 $p |- ( A = B -> if ( ph , A , C ) = if ( ph , B , C ) ) $=
	f0 i0 f1 f2 prabeq f1 f2 awceq f0 i0 f1 acrab f0 i0 f2 acrab f0 awn i0 f3 acrab puneq1d f0 i0 f1 f3 pdfif6 f0 i0 f2 f3 pdfif6 f1 f2 awceq f0 i0 f1 acrab f0 awn i0 f3 acrab acun f0 i0 f2 acrab f0 awn i0 f3 acrab acun f0 f1 f3 acif f0 f2 f3 acif p3eqtr4g $.
$}
$( Equality theorem for conditional operator.  (Contributed by NM,
       1-Sep-2004.)  (Revised by Mario Carneiro, 8-Sep-2013.) $)
${
	$v ph A B C x $.
	$d x ph $.
	$d x A $.
	$d x B $.
	$d x C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	i0 $f set x $.
	pifeq2 $p |- ( A = B -> if ( ph , C , A ) = if ( ph , C , B ) ) $=
	f0 awn i0 f1 f2 prabeq f1 f2 awceq f0 awn i0 f1 acrab f0 awn i0 f2 acrab f0 i0 f3 acrab puneq2d f0 i0 f3 f1 pdfif6 f0 i0 f3 f2 pdfif6 f1 f2 awceq f0 i0 f3 acrab f0 awn i0 f1 acrab acun f0 i0 f3 acrab f0 awn i0 f2 acrab acun f0 f3 f1 acif f0 f3 f2 acif p3eqtr4g $.
$}
$( Value of the conditional operator when its first argument is true.
       (Contributed by NM, 15-May-1999.)  (Proof shortened by Andrew Salmon,
       26-Jun-2011.) $)
${
	$v ph A B x $.
	$d x ph $.
	$d x A $.
	$d x B $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	i0 $f set x $.
	piftrue $p |- ( ph -> if ( ph , A , B ) = A ) $=
	f0 i0 asup_set_class f1 awcel i0 asup_set_class f2 awcel pdedlem0a f0 i0 asup_set_class f2 awcel f0 awi i0 asup_set_class f1 awcel f0 awa awi i0 f1 pabbi2dv f0 i0 f1 f2 pdfif2 f0 f1 i0 asup_set_class f2 awcel f0 awi i0 asup_set_class f1 awcel f0 awa awi i0 acab f0 f1 f2 acif psyl6reqr $.
$}
$( Value of the conditional operator when its first argument is false.
       (Contributed by NM, 14-Aug-1999.) $)
${
	$v ph A B x $.
	$d x ph $.
	$d x A $.
	$d x B $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	i0 $f set x $.
	piffalse $p |- ( -. ph -> if ( ph , A , B ) = B ) $=
	f0 i0 asup_set_class f1 awcel i0 asup_set_class f2 awcel pdedlemb f0 awn i0 asup_set_class f1 awcel f0 awa i0 asup_set_class f2 awcel f0 awn awa awo i0 f2 pabbi2dv f0 i0 f1 f2 adf-if f0 awn f2 i0 asup_set_class f1 awcel f0 awa i0 asup_set_class f2 awcel f0 awn awa awo i0 acab f0 f1 f2 acif psyl6reqr $.
$}
$( When values are unequal, but an "if" condition checks if they are equal,
     then the "false" branch results.  This is a simple utility to provide a
     slight shortening and simplification of proofs vs. applying ~ iffalse
     directly in this case.  It happens, e.g., in ~ oevn0 .  (Contributed by
     David A. Wheeler, 15-May-2015.) $)
${
	$v A B C D $.
	f0 $f class A $.
	f1 $f class B $.
	f2 $f class C $.
	f3 $f class D $.
	pifnefalse $p |- ( A =/= B -> if ( A = B , C , D ) = D ) $=
	f0 f1 adf-ne f0 f1 awceq f2 f3 piffalse f0 f1 awne f0 f1 awceq awn f0 f1 awceq f2 f3 acif f3 awceq psylbi $.
$}
$( Distribute a function over an if-clause.  (Contributed by Mario
       Carneiro, 14-Aug-2013.) $)
${
	$v ph A B C D E $.
	e0 $e |- ( if ( ph , A , B ) = A -> C = D ) $.
	e1 $e |- ( if ( ph , A , B ) = B -> C = E ) $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	f4 $f class D $.
	f5 $f class E $.
	pifsb $p |- C = if ( ph , D , E ) $=
	f0 f1 f2 piftrue e0 f0 f0 f1 f2 acif f1 awceq f3 f4 awceq psyl f0 f4 f5 piftrue f0 f3 f4 f0 f4 f5 acif peqtr4d f0 f1 f2 piffalse e1 f0 awn f0 f1 f2 acif f2 awceq f3 f5 awceq psyl f0 f4 f5 piffalse f0 awn f3 f5 f0 f4 f5 acif peqtr4d f0 f3 f0 f4 f5 acif awceq ppm2.61i $.
$}
$( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false.
       (Contributed by NM, 25-Aug-2013.)  (Revised by Mario Carneiro,
       8-Sep-2013.) $)
${
	$v ph x A B C y $.
	$d y A $.
	$d y B $.
	$d x y ph $.
	e0 $e |- C = { x | ph } $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	i0 $f set y $.
	pdfif3 $p |- if ( ph , A , B ) = ( ( A i^i C ) u. ( B i^i ( _V \ C ) ) ) $=
	f0 i0 f2 f3 pdfif6 e0 f1 asup_set_class i0 asup_set_class awceq f0 pbiidd f0 f0 f1 i0 pcbvabv f4 f0 f1 acab f0 i0 acab peqtri f4 f0 i0 acab f2 pineq2i f0 i0 f2 pdfrab3 f2 f4 acin f2 f0 i0 acab acin f0 i0 f2 acrab peqtr4i f0 awn i0 f3 pdfrab3 f0 i0 pnotab e0 f1 asup_set_class i0 asup_set_class awceq f0 pbiidd f0 f0 f1 i0 pcbvabv f4 f0 f1 acab f0 i0 acab peqtri f4 f0 i0 acab acvv pdifeq2i f0 awn i0 acab acvv f0 i0 acab acdif acvv f4 acdif peqtr4i f0 awn i0 acab acvv f4 acdif f3 pineq2i f0 awn i0 f3 acrab f3 f0 awn i0 acab acin f3 acvv f4 acdif acin peqtr2i f2 f4 acin f0 i0 f2 acrab f3 acvv f4 acdif acin f0 awn i0 f3 acrab puneq12i f0 f2 f3 acif f0 i0 f2 acrab f0 awn i0 f3 acrab acun f2 f4 acin f3 acvv f4 acdif acin acun peqtr4i $.
$}
$( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false.
       (Contributed by NM, 25-Aug-2013.) $)
${
	$v ph x A B C $.
	$d x ph $.
	e0 $e |- C = { x | ph } $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pdfif4 $p |- if ( ph , A , B ) = ( ( A u. B ) i^i ( ( A u. ( _V \ C ) ) i^i ( B u. C ) ) ) $=
	e0 f0 f1 f2 f3 f4 pdfif3 f2 f4 f3 acvv f4 acdif acin pundir f2 f3 acvv f4 acdif pundi f4 f3 acvv f4 acdif pundi f4 f3 puncom f4 pundifv f4 f3 acun f3 f4 acun f4 acvv f4 acdif acun acvv pineq12i f3 f4 acun pinv1 f4 f3 acvv f4 acdif acin acun f4 f3 acun f4 acvv f4 acdif acun acin f3 f4 acun acvv acin f3 f4 acun p3eqtri f2 f3 acvv f4 acdif acin acun f2 f3 acun f2 acvv f4 acdif acun acin f4 f3 acvv f4 acdif acin acun f3 f4 acun pineq12i f2 f3 acun f2 acvv f4 acdif acun f3 f4 acun pinass f2 f3 acvv f4 acdif acin acun f4 f3 acvv f4 acdif acin acun acin f2 f3 acun f2 acvv f4 acdif acun acin f3 f4 acun acin f2 f3 acun f2 acvv f4 acdif acun f3 f4 acun acin acin peqtri f0 f2 f3 acif f2 f4 acin f3 acvv f4 acdif acin acun f2 f3 acvv f4 acdif acin acun f4 f3 acvv f4 acdif acin acun acin f2 f3 acun f2 acvv f4 acdif acun f3 f4 acun acin acin p3eqtri $.
$}
$( Alternate definition of the conditional operator ~ df-if .  Note that
       ` ph ` is independent of ` x ` i.e. a constant true or false (see also
       ~ abvor0 ).  (Contributed by G&eacute;rard Lang, 18-Aug-2013.) $)
${
	$v ph x A B C $.
	$d x ph $.
	e0 $e |- C = { x | ph } $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pdfif5 $p |- if ( ph , A , B ) = ( ( A i^i B ) u. ( ( ( A \ B ) i^i C ) u. ( ( B \ A ) i^i ( _V \ C ) ) ) ) $=
	f2 f3 acun f2 acvv f4 acdif acun f3 f4 acun pinindi e0 f0 f1 f2 f3 f4 pdfif4 f2 f3 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun pundir f2 punidm f2 f2 acun f2 f3 acvv f4 acdif acin puneq1i f2 f2 f3 acvv f4 acdif acin punass f2 f3 acvv f4 acdif pundi f2 f2 acun f3 acvv f4 acdif acin acun f2 f3 acvv f4 acdif acin acun f2 f2 f3 acvv f4 acdif acin acun acun f2 f3 acun f2 acvv f4 acdif acun acin p3eqtr3ri f2 f2 f3 acdif f4 pundi f2 f3 pundifabs f2 f2 f3 acdif acun f2 f2 f4 acun pineq1i f2 f4 pinabs f2 f2 f3 acdif acun f2 f4 acun acin f2 f2 f4 acun acin f2 peqtri f2 f2 f3 acdif f4 acin acun f2 f2 f3 acdif acun f2 f4 acun acin f2 peqtri f2 f3 pundif2 f2 f3 f2 acdif acun f2 f3 acun f2 acvv f4 acdif acun pineq1i f2 f3 f2 acdif acvv f4 acdif pundi f2 f3 acvv f4 acdif pundi f2 f3 f2 acdif acun f2 acvv f4 acdif acun acin f2 f3 acun f2 acvv f4 acdif acun acin f2 f3 f2 acdif acvv f4 acdif acin acun f2 f3 acvv f4 acdif acin acun p3eqtr4i f2 f2 f3 acdif f4 acin acun f2 f2 f3 f2 acdif acvv f4 acdif acin acun f2 f3 acvv f4 acdif acin acun puneq12i f2 f3 acun f2 acvv f4 acdif acun acin f2 f2 f3 acvv f4 acdif acin acun acun f2 f2 f3 acdif f4 acin acun f2 f3 f2 acdif acvv f4 acdif acin acun acun peqtr4i f2 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin punundi f2 f3 acun f2 acvv f4 acdif acun acin f2 f2 f3 acdif f4 acin acun f2 f3 f2 acdif acvv f4 acdif acin acun acun f2 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun peqtr4i f2 f4 acin f3 f3 punass f3 f2 f4 pundi f2 f4 acin f3 puncom f3 f2 pundif2 f3 f2 f3 acdif acun f3 f2 acun f3 f4 acun pineq1i f3 f2 f4 acin acun f3 f2 acun f3 f4 acun acin f2 f4 acin f3 acun f3 f2 f3 acdif acun f3 f4 acun acin p3eqtr4i f3 f2 f3 acdif f4 pundi f2 f4 acin f3 acun f3 f2 f3 acdif acun f3 f4 acun acin f3 f2 f3 acdif f4 acin acun peqtr4i f3 f3 f2 acdif acvv f4 acdif pundi f3 f2 pundifabs f3 f3 f2 acdif acun f3 f3 acvv f4 acdif acun pineq1i f3 acvv f4 acdif pinabs f3 f3 f2 acdif acvv f4 acdif acin acun f3 f3 f2 acdif acun f3 acvv f4 acdif acun acin f3 f3 acvv f4 acdif acun acin f3 p3eqtrri f2 f4 acin f3 acun f3 f2 f3 acdif f4 acin acun f3 f3 f3 f2 acdif acvv f4 acdif acin acun puneq12i f3 punidm f3 f3 acun f3 f2 f4 acin puneq2i f2 f4 acin f3 acun f3 acun f2 f4 acin f3 f3 acun acun f3 f2 f3 acdif f4 acin acun f3 f3 f2 acdif acvv f4 acdif acin acun acun f2 f4 acin f3 acun p3eqtr3ri f3 f4 puncom f3 f4 acun f4 f3 acun f2 f3 acun pineq2i f2 f4 f3 pundir f2 f3 acun f3 f4 acun acin f2 f3 acun f4 f3 acun acin f2 f4 acin f3 acun peqtr4i f3 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin punundi f2 f4 acin f3 acun f3 f2 f3 acdif f4 acin acun f3 f3 f2 acdif acvv f4 acdif acin acun acun f2 f3 acun f3 f4 acun acin f3 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun p3eqtr4i f2 f3 acun f2 acvv f4 acdif acun acin f2 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun f2 f3 acun f3 f4 acun acin f3 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun pineq12i f2 f3 acin f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun f2 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun f3 f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun acin f2 f3 acun f2 acvv f4 acdif acun acin f2 f3 acun f3 f4 acun acin acin peqtr4i f2 f3 acun f2 acvv f4 acdif acun f3 f4 acun acin acin f2 f3 acun f2 acvv f4 acdif acun acin f2 f3 acun f3 f4 acun acin acin f0 f2 f3 acif f2 f3 acin f2 f3 acdif f4 acin f3 f2 acdif acvv f4 acdif acin acun acun p3eqtr4i $.
$}
$( Equality theorem for conditional operators.  (Contributed by NM,
     1-Sep-2004.) $)
${
	$v ph A B C D $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	f4 $f class D $.
	pifeq12 $p |- ( ( A = B /\ C = D ) -> if ( ph , A , C ) = if ( ph , B , D ) ) $=
	f0 f1 f2 f3 pifeq1 f0 f3 f4 f2 pifeq2 f1 f2 awceq f3 f4 awceq f0 f1 f3 acif f0 f2 f3 acif f0 f2 f4 acif psylan9eq $.
$}
$( Equality deduction for conditional operator.  (Contributed by NM,
       16-Feb-2005.) $)
${
	$v ph ps A B C $.
	e0 $e |- ( ph -> A = B ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pifeq1d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
	e0 f1 f2 f3 f4 pifeq1 f0 f2 f3 awceq f1 f2 f4 acif f1 f3 f4 acif awceq psyl $.
$}
$( Equality deduction for conditional operator.  (Contributed by NM,
       16-Feb-2005.) $)
${
	$v ph ps A B C $.
	e0 $e |- ( ph -> A = B ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pifeq2d $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
	e0 f1 f2 f3 f4 pifeq2 f0 f2 f3 awceq f1 f4 f2 acif f1 f4 f3 acif awceq psyl $.
$}
$( Equality deduction for conditional operator.  (Contributed by NM,
       24-Mar-2015.) $)
${
	$v ph ps A B C D $.
	e0 $e |- ( ph -> A = B ) $.
	e1 $e |- ( ph -> C = D ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	f5 $f class D $.
	pifeq12d $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , D ) ) $=
	e0 f0 f1 f2 f3 f4 pifeq1d e1 f0 f1 f4 f5 f3 pifeq2d f0 f1 f2 f4 acif f1 f3 f4 acif f1 f3 f5 acif peqtrd $.
$}
$( Equivalence theorem for conditional operators.  (Contributed by Raph
     Levien, 15-Jan-2004.) $)
${
	$v ph ps A B $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	pifbi $p |- ( ( ph <-> ps ) -> if ( ph , A , B ) = if ( ps , A , B ) ) $=
	f0 f1 pdfbi3 f0 f2 f3 piftrue f1 f2 f3 piftrue f1 f1 f2 f3 acif f2 peqcomd f0 f1 f0 f2 f3 acif f2 f1 f2 f3 acif psylan9eq f0 f2 f3 piffalse f1 f2 f3 piffalse f1 awn f1 f2 f3 acif f3 peqcomd f0 awn f1 awn f0 f2 f3 acif f3 f1 f2 f3 acif psylan9eq f0 f1 awa f0 f2 f3 acif f1 f2 f3 acif awceq f0 awn f1 awn awa pjaoi f0 f1 awb f0 f1 awa f0 awn f1 awn awa awo f0 f2 f3 acif f1 f2 f3 acif awceq psylbi $.
$}
$( Equivalence deduction for conditional operators.  (Contributed by NM,
       18-Apr-2005.) $)
${
	$v ph ps ch A B $.
	e0 $e |- ( ph -> ( ps <-> ch ) ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f class A $.
	f4 $f class B $.
	pifbid $p |- ( ph -> if ( ps , A , B ) = if ( ch , A , B ) ) $=
	e0 f1 f2 f3 f4 pifbi f0 f1 f2 awb f1 f3 f4 acif f2 f3 f4 acif awceq psyl $.
$}
$( Equivalence/equality inference for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
${
	$v ph ps A B C $.
	e0 $e |- ( ph <-> ps ) $.
	e1 $e |- A = B $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pifbieq2i $p |- if ( ph , C , A ) = if ( ps , C , B ) $=
	e0 f0 f1 f4 f2 pifbi f0 f1 awb f0 f4 f2 acif f1 f4 f2 acif awceq aax-mp e1 f1 f2 f3 f4 pifeq2 f2 f3 awceq f1 f4 f2 acif f1 f4 f3 acif awceq aax-mp f0 f4 f2 acif f1 f4 f2 acif f1 f4 f3 acif peqtri $.
$}
$( Equivalence/equality deduction for conditional operators.  (Contributed
       by Paul Chapman, 22-Jun-2011.) $)
${
	$v ph ps ch A B C $.
	e0 $e |- ( ph -> ( ps <-> ch ) ) $.
	e1 $e |- ( ph -> A = B ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class C $.
	pifbieq2d $p |- ( ph -> if ( ps , C , A ) = if ( ch , C , B ) ) $=
	e0 f0 f1 f2 f5 f3 pifbid e1 f0 f2 f3 f4 f5 pifeq2d f0 f1 f5 f3 acif f2 f5 f3 acif f2 f5 f4 acif peqtrd $.
$}
$( Equivalence deduction for conditional operators.  (Contributed by NM,
       18-Mar-2013.) $)
${
	$v ph ps A B C D $.
	e0 $e |- ( ph <-> ps ) $.
	e1 $e |- A = C $.
	e2 $e |- B = D $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	f5 $f class D $.
	pifbieq12i $p |- if ( ph , A , B ) = if ( ps , C , D ) $=
	e1 f0 f2 f4 f3 pifeq1 f2 f4 awceq f0 f2 f3 acif f0 f4 f3 acif awceq aax-mp e0 e2 f0 f1 f3 f5 f4 pifbieq2i f0 f2 f3 acif f0 f4 f3 acif f1 f4 f5 acif peqtri $.
$}
$( Equivalence deduction for conditional operators.  (Contributed by Jeff
       Madsen, 2-Sep-2009.) $)
${
	$v ph ps ch A B C D $.
	e0 $e |- ( ph -> ( ps <-> ch ) ) $.
	e1 $e |- ( ph -> A = C ) $.
	e2 $e |- ( ph -> B = D ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class C $.
	f6 $f class D $.
	pifbieq12d $p |- ( ph -> if ( ps , A , B ) = if ( ch , C , D ) ) $=
	e0 f0 f1 f2 f3 f4 pifbid e1 e2 f0 f2 f3 f5 f4 f6 pifeq12d f0 f1 f3 f4 acif f2 f3 f4 acif f2 f5 f6 acif peqtrd $.
$}
$( Deduction version of ~ nfif .  (Contributed by NM, 15-Feb-2013.)
       (Revised by Mario Carneiro, 13-Oct-2016.) $)
${
	$v ph ps x A B y $.
	$d x y $.
	$d y A $.
	$d y B $.
	$d y ph $.
	$d y ps $.
	e0 $e |- ( ph -> F/ x ps ) $.
	e1 $e |- ( ph -> F/_ x A ) $.
	e2 $e |- ( ph -> F/_ x B ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f set x $.
	f3 $f class A $.
	f4 $f class B $.
	i0 $f set y $.
	pnfifd $p |- ( ph -> F/_ x if ( ps , A , B ) ) $=
	f1 i0 f3 f4 pdfif2 f0 i0 pnfv e2 f0 f2 i0 f4 pnfcrd e0 f0 i0 asup_set_class f4 awcel f1 f2 pnfimd e1 f0 f2 i0 f3 pnfcrd e0 f0 i0 asup_set_class f3 awcel f1 f2 pnfand f0 i0 asup_set_class f4 awcel f1 awi i0 asup_set_class f3 awcel f1 awa f2 pnfimd f0 i0 asup_set_class f4 awcel f1 awi i0 asup_set_class f3 awcel f1 awa awi f2 i0 pnfabd f0 f2 f1 f3 f4 acif i0 asup_set_class f4 awcel f1 awi i0 asup_set_class f3 awcel f1 awa awi i0 acab pnfcxfrd $.
$}
$( Bound-variable hypothesis builder for a conditional operator.
       (Contributed by NM, 16-Feb-2005.)  (Proof shortened by Andrew Salmon,
       26-Jun-2011.) $)
${
	$v ph x A B $.
	e0 $e |- F/ x ph $.
	e1 $e |- F/_ x A $.
	e2 $e |- F/_ x B $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	pnfif $p |- F/_ x if ( ph , A , B ) $=
	e0 f0 f1 awnf awtru pa1i e1 f1 f2 awnfc awtru pa1i e2 f1 f3 awnfc awtru pa1i awtru f0 f1 f2 f3 pnfifd f1 f0 f2 f3 acif awnfc ptrud $.
$}
$( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
${
	$v ph ps A B C $.
	e0 $e |- ( ( ph /\ ps ) -> A = B ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pifeq1da $p |- ( ph -> if ( ps , A , C ) = if ( ps , B , C ) ) $=
	e0 f0 f1 awa f1 f2 f3 f4 pifeq1d f1 f2 f4 piffalse f1 f3 f4 piffalse f1 awn f1 f2 f4 acif f4 f1 f3 f4 acif peqtr4d f1 awn f1 f2 f4 acif f1 f3 f4 acif awceq f0 padantl f0 f1 f1 f2 f4 acif f1 f3 f4 acif awceq ppm2.61dan $.
$}
$( Conditional equality.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
${
	$v ph ps A B C $.
	e0 $e |- ( ( ph /\ -. ps ) -> A = B ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pifeq2da $p |- ( ph -> if ( ps , C , A ) = if ( ps , C , B ) ) $=
	f1 f4 f2 piftrue f1 f4 f3 piftrue f1 f1 f4 f2 acif f4 f1 f4 f3 acif peqtr4d f1 f1 f4 f2 acif f1 f4 f3 acif awceq f0 padantl e0 f0 f1 awn awa f1 f2 f3 f4 pifeq2d f0 f1 f1 f4 f2 acif f1 f4 f3 acif awceq ppm2.61dan $.
$}
$( Conditional closure.  (Contributed by Jeff Madsen, 2-Sep-2009.) $)
${
	$v ph ps A B C $.
	e0 $e |- ( ( ph /\ ps ) -> A e. C ) $.
	e1 $e |- ( ( ph /\ -. ps ) -> B e. C ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	pifclda $p |- ( ph -> if ( ps , A , B ) e. C ) $=
	f1 f2 f3 piftrue f1 f1 f2 f3 acif f2 awceq f0 padantl e0 f0 f1 awa f1 f2 f3 acif f2 f4 peqeltrd f1 f2 f3 piffalse f1 awn f1 f2 f3 acif f3 awceq f0 padantl e1 f0 f1 awn awa f1 f2 f3 acif f3 f4 peqeltrd f0 f1 f1 f2 f3 acif f4 awcel ppm2.61dan $.
$}
$( Distribute proper substitution through the conditional operator.
       (Contributed by NM, 24-Feb-2013.)  (Revised by Mario Carneiro,
       14-Nov-2016.) $)
${
	$v ph x A B C V y $.
	$d y A $.
	$d y B $.
	$d y C $.
	$d y ph $.
	$d x y $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	f5 $f class V $.
	i0 $f set y $.
	pcsbifg $p |- ( A e. V -> [_ A / x ]_ if ( ph , B , C ) = if ( [. A / x ]. ph , [_ A / x ]_ B , [_ A / x ]_ C ) ) $=
	f1 i0 asup_set_class f2 f0 f3 f4 acif pcsbeq1 f0 f1 i0 f2 pdfsbcq2 f1 i0 asup_set_class f2 f3 pcsbeq1 f1 i0 asup_set_class f2 f4 pcsbeq1 i0 asup_set_class f2 awceq f0 f1 i0 awsb f0 f1 f2 awsbc f1 i0 asup_set_class f3 acsb f1 i0 asup_set_class f4 acsb f1 f2 f3 acsb f1 f2 f4 acsb pifbieq12d i0 asup_set_class f2 awceq f1 i0 asup_set_class f0 f3 f4 acif acsb f1 f2 f0 f3 f4 acif acsb f0 f1 i0 awsb f1 i0 asup_set_class f3 acsb f1 i0 asup_set_class f4 acsb acif f0 f1 f2 awsbc f1 f2 f3 acsb f1 f2 f4 acsb acif peqeq12d i0 pvex f0 f1 i0 pnfs1v f1 i0 asup_set_class f3 pnfcsb1v f1 i0 asup_set_class f4 pnfcsb1v f0 f1 i0 awsb f1 f1 i0 asup_set_class f3 acsb f1 i0 asup_set_class f4 acsb pnfif f0 f1 i0 psbequ12 f1 i0 asup_set_class f3 pcsbeq1a f1 i0 asup_set_class f4 pcsbeq1a f1 asup_set_class i0 asup_set_class awceq f0 f0 f1 i0 awsb f3 f4 f1 i0 asup_set_class f3 acsb f1 i0 asup_set_class f4 acsb pifbieq12d f1 i0 asup_set_class f0 f3 f4 acif f0 f1 i0 awsb f1 i0 asup_set_class f3 acsb f1 i0 asup_set_class f4 acsb acif pcsbief f1 i0 asup_set_class f0 f3 f4 acif acsb f0 f1 i0 awsb f1 i0 asup_set_class f3 acsb f1 i0 asup_set_class f4 acsb acif awceq f1 f2 f0 f3 f4 acif acsb f0 f1 f2 awsbc f1 f2 f3 acsb f1 f2 f4 acsb acif awceq i0 f2 f5 pvtoclg $.
$}
$( Elimination of a conditional operator contained in a wff ` ps ` .
       (Contributed by NM, 15-Feb-2005.) $)
${
	$v ph ps ch th A B $.
	e0 $e |- ( if ( ph , A , B ) = A -> ( ps <-> ch ) ) $.
	e1 $e |- ( if ( ph , A , B ) = B -> ( ps <-> th ) ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f class A $.
	f5 $f class B $.
	pelimif $p |- ( ps <-> ( ( ph /\ ch ) \/ ( -. ph /\ th ) ) ) $=
	f0 pexmid f0 f0 awn awo f1 pbiantrur f0 f0 awn f1 pandir f0 f4 f5 piftrue e0 f0 f0 f4 f5 acif f4 awceq f1 f2 awb psyl f0 f1 f2 ppm5.32i f0 f4 f5 piffalse e1 f0 awn f0 f4 f5 acif f5 awceq f1 f3 awb psyl f0 awn f1 f3 ppm5.32i f0 f1 awa f0 f2 awa f0 awn f1 awa f0 awn f3 awa porbi12i f1 f0 f0 awn awo f1 awa f0 f1 awa f0 awn f1 awa awo f0 f2 awa f0 awn f3 awa awo p3bitri $.
$}
$( A wff ` th ` containing a conditional operator is true when both of
         its cases are true.  (Contributed by NM, 15-Feb-2015.) $)
${
	$v ph ps ch th et A B $.
	e0 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
	e1 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
	e2 $e |- ( ( et /\ ph ) -> ps ) $.
	e3 $e |- ( ( et /\ -. ph ) -> ch ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff et $.
	f5 $f class A $.
	f6 $f class B $.
	pifbothda $p |- ( et -> th ) $=
	e2 f0 f5 f6 piftrue f0 f0 f5 f6 acif f5 peqcomd e0 f0 f5 f0 f5 f6 acif awceq f1 f3 awb psyl f0 f1 f3 awb f4 padantl f4 f0 awa f1 f3 pmpbid e3 f0 f5 f6 piffalse f0 awn f0 f5 f6 acif f6 peqcomd e1 f0 awn f6 f0 f5 f6 acif awceq f2 f3 awb psyl f0 awn f2 f3 awb f4 padantl f4 f0 awn awa f2 f3 pmpbid f4 f0 f3 ppm2.61dan $.
$}
$( A wff ` th ` containing a conditional operator is true when both of its
       cases are true.  (Contributed by NM, 3-Sep-2006.)  (Revised by Mario
       Carneiro, 15-Feb-2015.) $)
${
	$v ph ps ch th A B $.
	e0 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
	e1 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f class A $.
	f5 $f class B $.
	pifboth $p |- ( ( ps /\ ch ) -> th ) $=
	e0 e1 f1 f2 f0 psimpll f1 f2 f0 awn psimplr f0 f1 f2 f3 f1 f2 awa f4 f5 pifbothda $.
$}
$( Identical true and false arguments in the conditional operator.
     (Contributed by NM, 18-Apr-2005.) $)
${
	$v ph A $.
	f0 $f wff ph $.
	f1 $f class A $.
	pifid $p |- if ( ph , A , A ) = A $=
	f0 f1 f1 piftrue f0 f1 f1 piffalse f0 f0 f1 f1 acif f1 awceq ppm2.61i $.
$}
$( Expansion of an equality with a conditional operator.  (Contributed by NM,
     14-Feb-2005.) $)
${
	$v ph A B C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	peqif $p |- ( A = if ( ph , B , C ) <-> ( ( ph /\ A = B ) \/ ( -. ph /\ A = C ) ) ) $=
	f0 f2 f3 acif f2 f1 peqeq2 f0 f2 f3 acif f3 f1 peqeq2 f0 f1 f0 f2 f3 acif awceq f1 f2 awceq f1 f3 awceq f2 f3 pelimif $.
$}
$( Membership in a conditional operator.  (Contributed by NM,
     14-Feb-2005.) $)
${
	$v ph A B C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	pelif $p |- ( A e. if ( ph , B , C ) <-> ( ( ph /\ A e. B ) \/ ( -. ph /\ A e. C ) ) ) $=
	f0 f2 f3 acif f2 f1 peleq2 f0 f2 f3 acif f3 f1 peleq2 f0 f1 f0 f2 f3 acif awcel f1 f2 awcel f1 f3 awcel f2 f3 pelimif $.
$}
$( Membership of a conditional operator.  (Contributed by NM,
     10-Sep-2005.) $)
${
	$v ph A B C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	pifel $p |- ( if ( ph , A , B ) e. C <-> ( ( ph /\ A e. C ) \/ ( -. ph /\ B e. C ) ) ) $=
	f0 f1 f2 acif f1 f3 peleq1 f0 f1 f2 acif f2 f3 peleq1 f0 f0 f1 f2 acif f3 awcel f1 f3 awcel f2 f3 awcel f1 f2 pelimif $.
$}
$( Membership (closure) of a conditional operator.  (Contributed by NM,
     4-Apr-2005.) $)
${
	$v ph A B C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	pifcl $p |- ( ( A e. C /\ B e. C ) -> if ( ph , A , B ) e. C ) $=
	f1 f0 f1 f2 acif f3 peleq1 f2 f0 f1 f2 acif f3 peleq1 f0 f1 f3 awcel f2 f3 awcel f0 f1 f2 acif f3 awcel f1 f2 pifboth $.
$}
$( The possible values of a conditional operator.  (Contributed by NM,
     17-Jun-2007.)  (Proof shortened by Andrew Salmon, 26-Jun-2011.) $)
${
	$v ph A B $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	pifeqor $p |- ( if ( ph , A , B ) = A \/ if ( ph , A , B ) = B ) $=
	f0 f1 f2 piftrue f0 f0 f1 f2 acif f1 awceq pcon3i f0 f1 f2 piffalse f0 f1 f2 acif f1 awceq awn f0 awn f0 f1 f2 acif f2 awceq psyl f0 f1 f2 acif f1 awceq f0 f1 f2 acif f2 awceq porri $.
$}
$( Negating the first argument swaps the last two arguments of a conditional
     operator.  (Contributed by NM, 21-Jun-2007.) $)
${
	$v ph A B $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	pifnot $p |- if ( -. ph , A , B ) = if ( ph , B , A ) $=
	f0 pnotnot1 f0 awn f1 f2 piffalse f0 f0 awn awn f0 awn f1 f2 acif f2 awceq psyl f0 f2 f1 piftrue f0 f0 awn f1 f2 acif f2 f0 f2 f1 acif peqtr4d f0 awn f1 f2 piftrue f0 f2 f1 piffalse f0 awn f0 awn f1 f2 acif f1 f0 f2 f1 acif peqtr4d f0 f0 awn f1 f2 acif f0 f2 f1 acif awceq ppm2.61i $.
$}
$( Rewrite a conjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
${
	$v ph ps A B $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	pifan $p |- if ( ( ph /\ ps ) , A , B ) = if ( ph , if ( ps , A , B ) , B ) $=
	f0 f1 f2 f3 acif f3 piftrue f0 f1 pibar f0 f1 f0 f1 awa f2 f3 pifbid f0 f0 f1 f2 f3 acif f3 acif f1 f2 f3 acif f0 f1 awa f2 f3 acif peqtr2d f0 f1 psimpl f0 f1 awa f0 pcon3i f0 f1 awa f2 f3 piffalse f0 awn f0 f1 awa awn f0 f1 awa f2 f3 acif f3 awceq psyl f0 f1 f2 f3 acif f3 piffalse f0 awn f0 f1 awa f2 f3 acif f3 f0 f1 f2 f3 acif f3 acif peqtr4d f0 f0 f1 awa f2 f3 acif f0 f1 f2 f3 acif f3 acif awceq ppm2.61i $.
$}
$( Rewrite a disjunction in an if statement as two nested conditionals.
     (Contributed by Mario Carneiro, 28-Jul-2014.) $)
${
	$v ph ps A B $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f class A $.
	f3 $f class B $.
	pifor $p |- if ( ( ph \/ ps ) , A , B ) = if ( ph , A , if ( ps , A , B ) ) $=
	f0 f1 awo f2 f3 piftrue f0 f1 f0 f1 awo f2 f3 acif f2 awceq porcs f0 f2 f1 f2 f3 acif piftrue f0 f0 f1 awo f2 f3 acif f2 f0 f2 f1 f2 f3 acif acif peqtr4d f0 f2 f1 f2 f3 acif piffalse f0 f1 pbiorf f0 awn f1 f0 f1 awo f2 f3 pifbid f0 awn f0 f2 f1 f2 f3 acif acif f1 f2 f3 acif f0 f1 awo f2 f3 acif peqtr2d f0 f0 f1 awo f2 f3 acif f0 f2 f1 f2 f3 acif acif awceq ppm2.61i $.
$}
$( Weak deduction theorem that eliminates a hypothesis ` ph ` , making it
       become an antecedent.  We assume that a proof exists for ` ph ` when the
       class variable ` A ` is replaced with a specific class ` B ` .  The
       hypothesis ` ch ` should be assigned to the inference, and the
       inference's hypothesis eliminated with ~ elimhyp .  If the inference has
       other hypotheses with class variable ` A ` , these can be kept by
       assigning ~ keephyp to them.  For more information, see the Deduction
       Theorem ~ http://us.metamath.org/mpeuni/mmdeduction.html .  (Contributed
       by NM, 15-May-1999.) $)
${
	$v ph ps ch A B $.
	e0 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
	e1 $e |- ch $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f class A $.
	f4 $f class B $.
	pdedth $p |- ( ph -> ps ) $=
	e1 f0 f3 f4 piftrue f0 f0 f3 f4 acif f3 peqcomd e0 f0 f3 f0 f3 f4 acif awceq f1 f2 awb psyl f0 f1 f2 pmpbiri $.
$}
$( Weak deduction theorem eliminating two hypotheses.  This theorem is
       simpler to use than ~ dedth2v but requires that each hypothesis has
       exactly one class variable.  See also comments in ~ dedth .
       (Contributed by NM, 15-May-1999.) $)
${
	$v ph ps ch th ta A B C D $.
	e0 $e |- ( A = if ( ph , A , C ) -> ( ch <-> th ) ) $.
	e1 $e |- ( B = if ( ps , B , D ) -> ( th <-> ta ) ) $.
	e2 $e |- ta $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f class A $.
	f6 $f class B $.
	f7 $f class C $.
	f8 $f class D $.
	pdedth2h $p |- ( ( ph /\ ps ) -> ch ) $=
	e0 f5 f0 f5 f7 acif awceq f2 f3 f1 pimbi2d e1 e2 f1 f3 f4 f6 f8 pdedth f0 f1 f2 awi f1 f3 awi f5 f7 pdedth f0 f1 f2 pimp $.
$}
$( Weak deduction theorem eliminating three hypotheses.  See comments in
       ~ dedth2h .  (Contributed by NM, 15-May-1999.) $)
${
	$v ph ps ch th ta et ze A B C D R S $.
	e0 $e |- ( A = if ( ph , A , D ) -> ( th <-> ta ) ) $.
	e1 $e |- ( B = if ( ps , B , R ) -> ( ta <-> et ) ) $.
	e2 $e |- ( C = if ( ch , C , S ) -> ( et <-> ze ) ) $.
	e3 $e |- ze $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f wff et $.
	f6 $f wff ze $.
	f7 $f class A $.
	f8 $f class B $.
	f9 $f class C $.
	f10 $f class D $.
	f11 $f class R $.
	f12 $f class S $.
	pdedth3h $p |- ( ( ph /\ ps /\ ch ) -> th ) $=
	e0 f7 f0 f7 f10 acif awceq f3 f4 f1 f2 awa pimbi2d e1 e2 e3 f1 f2 f4 f5 f6 f8 f9 f11 f12 pdedth2h f0 f1 f2 awa f3 awi f1 f2 awa f4 awi f7 f10 pdedth f0 f1 f2 f3 p3impib $.
$}
$( Weak deduction theorem eliminating four hypotheses.  See comments in
       ~ dedth2h .  (Contributed by NM, 16-May-1999.) $)
${
	$v ph ps ch th ta et ze si rh A B C D R S F G $.
	e0 $e |- ( A = if ( ph , A , R ) -> ( ta <-> et ) ) $.
	e1 $e |- ( B = if ( ps , B , S ) -> ( et <-> ze ) ) $.
	e2 $e |- ( C = if ( ch , C , F ) -> ( ze <-> si ) ) $.
	e3 $e |- ( D = if ( th , D , G ) -> ( si <-> rh ) ) $.
	e4 $e |- rh $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f wff et $.
	f6 $f wff ze $.
	f7 $f wff si $.
	f8 $f wff rh $.
	f9 $f class A $.
	f10 $f class B $.
	f11 $f class C $.
	f12 $f class D $.
	f13 $f class R $.
	f14 $f class S $.
	f15 $f class F $.
	f16 $f class G $.
	pdedth4h $p |- ( ( ( ph /\ ps ) /\ ( ch /\ th ) ) -> ta ) $=
	e0 f9 f0 f9 f13 acif awceq f4 f5 f2 f3 awa pimbi2d e1 f10 f1 f10 f14 acif awceq f5 f6 f2 f3 awa pimbi2d e2 e3 e4 f2 f3 f6 f7 f8 f11 f12 f15 f16 pdedth2h f0 f1 f2 f3 awa f4 awi f2 f3 awa f5 awi f2 f3 awa f6 awi f9 f10 f13 f14 pdedth2h f0 f1 awa f2 f3 awa f4 pimp $.
$}
$( Weak deduction theorem for eliminating a hypothesis with 2 class
       variables.  Note: if the hypothesis can be separated into two
       hypotheses, each with one class variable, then ~ dedth2h is simpler to
       use.  See also comments in ~ dedth .  (Contributed by NM, 13-Aug-1999.)
       (Proof shortened by Eric Schmidt, 28-Jul-2009.) $)
${
	$v ph ps ch th A B C D $.
	e0 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
	e2 $e |- th $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f class A $.
	f5 $f class B $.
	f6 $f class C $.
	f7 $f class D $.
	pdedth2v $p |- ( ph -> ps ) $=
	e0 e1 e2 f0 f0 f1 f2 f3 f4 f5 f6 f7 pdedth2h f0 f1 panidms $.
$}
$( Weak deduction theorem for eliminating a hypothesis with 3 class
       variables.  See comments in ~ dedth2v .  (Contributed by NM,
       13-Aug-1999.)  (Proof shortened by Eric Schmidt, 28-Jul-2009.) $)
${
	$v ph ps ch th ta A B C D R S $.
	e0 $e |- ( A = if ( ph , A , D ) -> ( ps <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
	e3 $e |- ta $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f class A $.
	f6 $f class B $.
	f7 $f class C $.
	f8 $f class D $.
	f9 $f class R $.
	f10 $f class S $.
	pdedth3v $p |- ( ph -> ps ) $=
	e0 e1 e2 e3 f0 f0 f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 pdedth3h f0 f0 f1 p3anidm12 f0 f1 panidms $.
$}
$( Weak deduction theorem for eliminating a hypothesis with 4 class
       variables.  See comments in ~ dedth2v .  (Contributed by NM,
       21-Apr-2007.)  (Proof shortened by Eric Schmidt, 28-Jul-2009.) $)
${
	$v ph ps ch th ta et A B C D R S T U $.
	e0 $e |- ( A = if ( ph , A , R ) -> ( ps <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , S ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , C , T ) -> ( th <-> ta ) ) $.
	e3 $e |- ( D = if ( ph , D , U ) -> ( ta <-> et ) ) $.
	e4 $e |- et $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f wff et $.
	f6 $f class A $.
	f7 $f class B $.
	f8 $f class C $.
	f9 $f class D $.
	f10 $f class R $.
	f11 $f class S $.
	f12 $f class T $.
	f13 $f class U $.
	pdedth4v $p |- ( ph -> ps ) $=
	e0 e1 e2 e3 e4 f0 f0 f0 f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 pdedth4h f0 f0 awa f1 panidms f0 f1 panidms $.
$}
$( Eliminate a hypothesis containing class variable ` A ` when it is known
       for a specific class ` B ` .  For more information, see comments in
       ~ dedth .  (Contributed by NM, 15-May-1999.) $)
${
	$v ph ps ch A B $.
	e0 $e |- ( A = if ( ph , A , B ) -> ( ph <-> ps ) ) $.
	e1 $e |- ( B = if ( ph , A , B ) -> ( ch <-> ps ) ) $.
	e2 $e |- ch $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f class A $.
	f4 $f class B $.
	pelimhyp $p |- ps $=
	f0 f3 f4 piftrue f0 f0 f3 f4 acif f3 peqcomd e0 f0 f3 f0 f3 f4 acif awceq f0 f1 awb psyl f0 f1 pibi e2 f0 f3 f4 piffalse f0 awn f0 f3 f4 acif f4 peqcomd e1 f0 awn f4 f0 f3 f4 acif awceq f2 f1 awb psyl f0 awn f2 f1 pmpbii f0 f1 ppm2.61i $.
$}
$( Eliminate a hypothesis containing 2 class variables.  (Contributed by
       NM, 14-Aug-1999.) $)
${
	$v ph ch th ta et A B C D $.
	e0 $e |- ( A = if ( ph , A , C ) -> ( ph <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
	e3 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
	e4 $e |- ta $.
	f0 $f wff ph $.
	f1 $f wff ch $.
	f2 $f wff th $.
	f3 $f wff ta $.
	f4 $f wff et $.
	f5 $f class A $.
	f6 $f class B $.
	f7 $f class C $.
	f8 $f class D $.
	pelimhyp2v $p |- th $=
	f0 f5 f7 piftrue f0 f0 f5 f7 acif f5 peqcomd e0 f0 f5 f0 f5 f7 acif awceq f0 f1 awb psyl f0 f6 f8 piftrue f0 f0 f6 f8 acif f6 peqcomd e1 f0 f6 f0 f6 f8 acif awceq f1 f2 awb psyl f0 f0 f1 f2 pbitrd f0 f2 pibi e4 f0 f5 f7 piffalse f0 awn f0 f5 f7 acif f7 peqcomd e2 f0 awn f7 f0 f5 f7 acif awceq f3 f4 awb psyl f0 f6 f8 piffalse f0 awn f0 f6 f8 acif f8 peqcomd e3 f0 awn f8 f0 f6 f8 acif awceq f4 f2 awb psyl f0 awn f3 f4 f2 pbitrd f0 awn f3 f2 pmpbii f0 f2 ppm2.61i $.
$}
$( Eliminate a hypothesis containing 3 class variables.  (Contributed by
       NM, 14-Aug-1999.) $)
${
	$v ph ch th ta et ze si A B C D R S $.
	e0 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
	e3 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
	e4 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
	e5 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
	e6 $e |- et $.
	f0 $f wff ph $.
	f1 $f wff ch $.
	f2 $f wff th $.
	f3 $f wff ta $.
	f4 $f wff et $.
	f5 $f wff ze $.
	f6 $f wff si $.
	f7 $f class A $.
	f8 $f class B $.
	f9 $f class C $.
	f10 $f class D $.
	f11 $f class R $.
	f12 $f class S $.
	pelimhyp3v $p |- ta $=
	f0 f7 f10 piftrue f0 f0 f7 f10 acif f7 peqcomd e0 f0 f7 f0 f7 f10 acif awceq f0 f1 awb psyl f0 f8 f11 piftrue f0 f0 f8 f11 acif f8 peqcomd e1 f0 f8 f0 f8 f11 acif awceq f1 f2 awb psyl f0 f9 f12 piftrue f0 f0 f9 f12 acif f9 peqcomd e2 f0 f9 f0 f9 f12 acif awceq f2 f3 awb psyl f0 f0 f1 f2 f3 p3bitrd f0 f3 pibi e6 f0 f7 f10 piffalse f0 awn f0 f7 f10 acif f10 peqcomd e3 f0 awn f10 f0 f7 f10 acif awceq f4 f5 awb psyl f0 f8 f11 piffalse f0 awn f0 f8 f11 acif f11 peqcomd e4 f0 awn f11 f0 f8 f11 acif awceq f5 f6 awb psyl f0 f9 f12 piffalse f0 awn f0 f9 f12 acif f12 peqcomd e5 f0 awn f12 f0 f9 f12 acif awceq f6 f3 awb psyl f0 awn f4 f5 f6 f3 p3bitrd f0 awn f4 f3 pmpbii f0 f3 ppm2.61i $.
$}
$( Eliminate a hypothesis containing 4 class variables (for use with the
       weak deduction theorem ~ dedth ).  (Contributed by NM, 16-Apr-2005.) $)
${
	$v ph ps ch th ta et ze si rh A B C D R S F G $.
	e0 $e |- ( A = if ( ph , A , D ) -> ( ph <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
	e3 $e |- ( F = if ( ph , F , G ) -> ( ta <-> ps ) ) $.
	e4 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
	e5 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
	e6 $e |- ( S = if ( ph , C , S ) -> ( si <-> rh ) ) $.
	e7 $e |- ( G = if ( ph , F , G ) -> ( rh <-> ps ) ) $.
	e8 $e |- et $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f wff et $.
	f6 $f wff ze $.
	f7 $f wff si $.
	f8 $f wff rh $.
	f9 $f class A $.
	f10 $f class B $.
	f11 $f class C $.
	f12 $f class D $.
	f13 $f class R $.
	f14 $f class S $.
	f15 $f class F $.
	f16 $f class G $.
	pelimhyp4v $p |- ps $=
	f0 f9 f12 piftrue f0 f0 f9 f12 acif f9 peqcomd e0 f0 f9 f0 f9 f12 acif awceq f0 f2 awb psyl f0 f10 f13 piftrue f0 f0 f10 f13 acif f10 peqcomd e1 f0 f10 f0 f10 f13 acif awceq f2 f3 awb psyl f0 f0 f2 f3 pbitrd f0 f11 f14 piftrue f0 f0 f11 f14 acif f11 peqcomd e2 f0 f11 f0 f11 f14 acif awceq f3 f4 awb psyl f0 f15 f16 piftrue f0 f0 f15 f16 acif f15 peqcomd e3 f0 f15 f0 f15 f16 acif awceq f4 f1 awb psyl f0 f0 f3 f4 f1 p3bitrd f0 f1 pibi e8 f0 f9 f12 piffalse f0 awn f0 f9 f12 acif f12 peqcomd e4 f0 awn f12 f0 f9 f12 acif awceq f5 f6 awb psyl f0 f10 f13 piffalse f0 awn f0 f10 f13 acif f13 peqcomd e5 f0 awn f13 f0 f10 f13 acif awceq f6 f7 awb psyl f0 awn f5 f6 f7 pbitrd f0 f11 f14 piffalse f0 awn f0 f11 f14 acif f14 peqcomd e6 f0 awn f14 f0 f11 f14 acif awceq f7 f8 awb psyl f0 f15 f16 piffalse f0 awn f0 f15 f16 acif f16 peqcomd e7 f0 awn f16 f0 f15 f16 acif awceq f8 f1 awb psyl f0 awn f5 f7 f8 f1 p3bitrd f0 awn f5 f1 pmpbii f0 f1 ppm2.61i $.
$}
$( Eliminate a membership hypothesis for weak deduction theorem, when
       special case ` B e. C ` is provable.  (Contributed by NM,
       15-May-1999.) $)
${
	$v A B C $.
	e0 $e |- B e. C $.
	f0 $f class A $.
	f1 $f class B $.
	f2 $f class C $.
	pelimel $p |- if ( A e. C , A , B ) e. C $=
	f0 f0 f2 awcel f0 f1 acif f2 peleq1 f1 f0 f2 awcel f0 f1 acif f2 peleq1 e0 f0 f2 awcel f0 f2 awcel f0 f1 acif f2 awcel f1 f2 awcel f0 f1 pelimhyp $.
$}
$( Version of ~ elimhyp where the hypothesis is deduced from the final
       antecedent.  See ~ ghomgrplem for an example of its use.  (Contributed
       by Paul Chapman, 25-Mar-2008.) $)
${
	$v ph ps ch th A B $.
	e0 $e |- ( ph -> ps ) $.
	e1 $e |- ( A = if ( ph , A , B ) -> ( ps <-> ch ) ) $.
	e2 $e |- ( B = if ( ph , A , B ) -> ( th <-> ch ) ) $.
	e3 $e |- th $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f class A $.
	f5 $f class B $.
	pelimdhyp $p |- ch $=
	e0 f0 f4 f5 piftrue f0 f0 f4 f5 acif f4 peqcomd e1 f0 f4 f0 f4 f5 acif awceq f1 f2 awb psyl f0 f1 f2 pmpbid e3 f0 f4 f5 piffalse f0 awn f0 f4 f5 acif f5 peqcomd e2 f0 awn f5 f0 f4 f5 acif awceq f3 f2 awb psyl f0 awn f3 f2 pmpbii f0 f2 ppm2.61i $.
$}
$( Transform a hypothesis ` ps ` that we want to keep (but contains the
       same class variable ` A ` used in the eliminated hypothesis) for use
       with the weak deduction theorem.  (Contributed by NM, 15-May-1999.) $)
${
	$v ph ps ch th A B $.
	e0 $e |- ( A = if ( ph , A , B ) -> ( ps <-> th ) ) $.
	e1 $e |- ( B = if ( ph , A , B ) -> ( ch <-> th ) ) $.
	e2 $e |- ps $.
	e3 $e |- ch $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f class A $.
	f5 $f class B $.
	pkeephyp $p |- th $=
	e2 e3 e0 e1 f0 f1 f2 f3 f4 f5 pifboth f1 f2 f3 pmp2an $.
$}
$( Keep a hypothesis containing 2 class variables (for use with the weak
       deduction theorem ~ dedth ).  (Contributed by NM, 16-Apr-2005.) $)
${
	$v ph ps ch th ta et A B C D $.
	e0 $e |- ( A = if ( ph , A , C ) -> ( ps <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , D ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , A , C ) -> ( ta <-> et ) ) $.
	e3 $e |- ( D = if ( ph , B , D ) -> ( et <-> th ) ) $.
	e4 $e |- ps $.
	e5 $e |- ta $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	f3 $f wff th $.
	f4 $f wff ta $.
	f5 $f wff et $.
	f6 $f class A $.
	f7 $f class B $.
	f8 $f class C $.
	f9 $f class D $.
	pkeephyp2v $p |- th $=
	e4 f0 f6 f8 piftrue f0 f0 f6 f8 acif f6 peqcomd e0 f0 f6 f0 f6 f8 acif awceq f1 f2 awb psyl f0 f7 f9 piftrue f0 f0 f7 f9 acif f7 peqcomd e1 f0 f7 f0 f7 f9 acif awceq f2 f3 awb psyl f0 f1 f2 f3 pbitrd f0 f1 f3 pmpbii e5 f0 f6 f8 piffalse f0 awn f0 f6 f8 acif f8 peqcomd e2 f0 awn f8 f0 f6 f8 acif awceq f4 f5 awb psyl f0 f7 f9 piffalse f0 awn f0 f7 f9 acif f9 peqcomd e3 f0 awn f9 f0 f7 f9 acif awceq f5 f3 awb psyl f0 awn f4 f5 f3 pbitrd f0 awn f4 f3 pmpbii f0 f3 ppm2.61i $.
$}
$( Keep a hypothesis containing 3 class variables.  (Contributed by NM,
       27-Sep-1999.) $)
${
	$v ph ch th ta et ze si rh A B C D R S $.
	e0 $e |- ( A = if ( ph , A , D ) -> ( rh <-> ch ) ) $.
	e1 $e |- ( B = if ( ph , B , R ) -> ( ch <-> th ) ) $.
	e2 $e |- ( C = if ( ph , C , S ) -> ( th <-> ta ) ) $.
	e3 $e |- ( D = if ( ph , A , D ) -> ( et <-> ze ) ) $.
	e4 $e |- ( R = if ( ph , B , R ) -> ( ze <-> si ) ) $.
	e5 $e |- ( S = if ( ph , C , S ) -> ( si <-> ta ) ) $.
	e6 $e |- rh $.
	e7 $e |- et $.
	f0 $f wff ph $.
	f1 $f wff ch $.
	f2 $f wff th $.
	f3 $f wff ta $.
	f4 $f wff et $.
	f5 $f wff ze $.
	f6 $f wff si $.
	f7 $f wff rh $.
	f8 $f class A $.
	f9 $f class B $.
	f10 $f class C $.
	f11 $f class D $.
	f12 $f class R $.
	f13 $f class S $.
	pkeephyp3v $p |- ta $=
	e6 f0 f8 f11 piftrue f0 f0 f8 f11 acif f8 peqcomd e0 f0 f8 f0 f8 f11 acif awceq f7 f1 awb psyl f0 f9 f12 piftrue f0 f0 f9 f12 acif f9 peqcomd e1 f0 f9 f0 f9 f12 acif awceq f1 f2 awb psyl f0 f10 f13 piftrue f0 f0 f10 f13 acif f10 peqcomd e2 f0 f10 f0 f10 f13 acif awceq f2 f3 awb psyl f0 f7 f1 f2 f3 p3bitrd f0 f7 f3 pmpbii e7 f0 f8 f11 piffalse f0 awn f0 f8 f11 acif f11 peqcomd e3 f0 awn f11 f0 f8 f11 acif awceq f4 f5 awb psyl f0 f9 f12 piffalse f0 awn f0 f9 f12 acif f12 peqcomd e4 f0 awn f12 f0 f9 f12 acif awceq f5 f6 awb psyl f0 f10 f13 piffalse f0 awn f0 f10 f13 acif f13 peqcomd e5 f0 awn f13 f0 f10 f13 acif awceq f6 f3 awb psyl f0 awn f4 f5 f6 f3 p3bitrd f0 awn f4 f3 pmpbii f0 f3 ppm2.61i $.
$}
$( Keep a membership hypothesis for weak deduction theorem, when special
       case ` B e. C ` is provable.  (Contributed by NM, 14-Aug-1999.) $)
${
	$v ph A B C $.
	e0 $e |- A e. C $.
	e1 $e |- B e. C $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class C $.
	pkeepel $p |- if ( ph , A , B ) e. C $=
	f1 f0 f1 f2 acif f3 peleq1 f2 f0 f1 f2 acif f3 peleq1 e0 e1 f0 f1 f3 awcel f2 f3 awcel f0 f1 f2 acif f3 awcel f1 f2 pkeephyp $.
$}
$( Conditional operator existence.  (Contributed by NM, 2-Sep-2004.) $)
${
	$v ph A B $.
	e0 $e |- A e. _V $.
	e1 $e |- B e. _V $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	pifex $p |- if ( ph , A , B ) e. _V $=
	e0 e1 f0 f1 f2 acvv pkeepel $.
$}
$( Conditional operator existence.  (Contributed by NM, 21-Mar-2011.) $)
${
	$v ph A B V W x y $.
	$d A x y $.
	$d B y $.
	$d ph x y $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class V $.
	f4 $f class W $.
	i0 $f set x $.
	i1 $f set y $.
	pifexg $p |- ( ( A e. V /\ B e. W ) -> if ( ph , A , B ) e. _V ) $=
	f0 i0 asup_set_class f1 i1 asup_set_class pifeq1 i0 asup_set_class f1 awceq f0 i0 asup_set_class i1 asup_set_class acif f0 f1 i1 asup_set_class acif acvv peleq1d f0 i1 asup_set_class f2 f1 pifeq2 i1 asup_set_class f2 awceq f0 f1 i1 asup_set_class acif f0 f1 f2 acif acvv peleq1d i0 pvex i1 pvex f0 i0 asup_set_class i1 asup_set_class pifex f0 i0 asup_set_class i1 asup_set_class acif acvv awcel f0 f1 i1 asup_set_class acif acvv awcel f0 f1 f2 acif acvv awcel i0 i1 f1 f2 f3 f4 pvtocl2g $.
$}


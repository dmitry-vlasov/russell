$[ turnstile_special_source.smm $]
$[ uset-100000/ZF_(ZERMELO-FRAENKEL)_SET_THEORY/ZF_Set_Theory_-_add_the_Axiom_of_Union/Operations.smm $]
$( =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        "Maps to" notation

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)
$( If a two-parameter class is not empty, constrain the implicit pair.
       (Contributed by Stefan O'Rear, 7-Mar-2015.) $)
${
	$v x y A B C S T F X z $.
	$d A x y z $.
	$d B x y z $.
	$d C z $.
	e0 $e |- F = ( x e. A , y e. B |-> C ) $.
	f0 $f set x $.
	f1 $f set y $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	f5 $f class S $.
	f6 $f class T $.
	f7 $f class F $.
	f8 $f class X $.
	i0 $f set z $.
	pelmpt2cl $p |- ( X e. ( S F T ) -> ( S e. A /\ T e. B ) ) $=
	e0 f0 f1 i0 f2 f3 f4 adf-mpt2 f7 f0 f1 f2 f3 f4 acmpt2 f0 asup_set_class f2 awcel f1 asup_set_class f3 awcel awa i0 asup_set_class f4 awceq awa f0 f1 i0 acoprab peqtri f7 f0 asup_set_class f2 awcel f1 asup_set_class f3 awcel awa i0 asup_set_class f4 awceq awa f0 f1 i0 acoprab pdmeqi i0 asup_set_class f4 awceq f0 f1 i0 f2 f3 pdmoprabss f7 acdm f0 asup_set_class f2 awcel f1 asup_set_class f3 awcel awa i0 asup_set_class f4 awceq awa f0 f1 i0 acoprab acdm f2 f3 acxp peqsstri f8 f5 f6 acop f7 pelfvdm f5 f6 f7 adf-ov f5 f6 acop f7 acdm awcel f8 f5 f6 acop f7 acfv f5 f6 f7 aco peleq2s f8 f5 f6 f7 aco awcel f7 acdm f2 f3 acxp f5 f6 acop psseldi f5 f6 f2 f3 popelxp f8 f5 f6 f7 aco awcel f5 f6 acop f2 f3 acxp awcel f5 f2 awcel f6 f3 awcel awa psylib $.
$}
$( If a two-parameter class is not empty, the first argument is in its
       nominal domain.  (Contributed by FL, 15-Oct-2012.)  (Revised by Stefan
       O'Rear, 7-Mar-2015.) $)
${
	$v x y A B C S T F X $.
	$d A x y $.
	$d B x y $.
	e0 $e |- F = ( x e. A , y e. B |-> C ) $.
	f0 $f set x $.
	f1 $f set y $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	f5 $f class S $.
	f6 $f class T $.
	f7 $f class F $.
	f8 $f class X $.
	pelmpt2cl1 $p |- ( X e. ( S F T ) -> S e. A ) $=
	e0 f0 f1 f2 f3 f4 f5 f6 f7 f8 pelmpt2cl f8 f5 f6 f7 aco awcel f5 f2 awcel f6 f3 awcel psimpld $.
$}
$( If a two-parameter class is not empty, the second argument is in its
       nominal domain.  (Contributed by FL, 15-Oct-2012.)  (Revised by Stefan
       O'Rear, 7-Mar-2015.) $)
${
	$v x y A B C S T F X $.
	$d A x y $.
	$d B x y $.
	e0 $e |- F = ( x e. A , y e. B |-> C ) $.
	f0 $f set x $.
	f1 $f set y $.
	f2 $f class A $.
	f3 $f class B $.
	f4 $f class C $.
	f5 $f class S $.
	f6 $f class T $.
	f7 $f class F $.
	f8 $f class X $.
	pelmpt2cl2 $p |- ( X e. ( S F T ) -> T e. B ) $=
	e0 f0 f1 f2 f3 f4 f5 f6 f7 f8 pelmpt2cl f8 f5 f6 f7 aco awcel f5 f2 awcel f6 f3 awcel psimprd $.
$}
$( Utility lemma for two-parameter classes.

       _EDITORIAL_: can simplify ~ isghm , ~ islmhm .  (Contributed by Stefan
       O'Rear, 21-Jan-2015.) $)
${
	$v A B C D E F X Y a b $.
	$d A a b $.
	$d B a b $.
	$d E a b $.
	$d F a b $.
	$d X a b $.
	$d Y a b $.
	$d a b $.
	e0 $e |- D = ( a e. A , b e. B |-> C ) $.
	e1 $e |- C e. _V $.
	e2 $e |- ( ( a = X /\ b = Y ) -> C = E ) $.
	f0 $f class A $.
	f1 $f class B $.
	f2 $f class C $.
	f3 $f class D $.
	f4 $f class E $.
	f5 $f class F $.
	f6 $f class X $.
	f7 $f class Y $.
	f8 $f set a $.
	f9 $f set b $.
	pelovmpt2 $p |- ( F e. ( X D Y ) <-> ( X e. A /\ Y e. B /\ F e. E ) ) $=
	e0 f8 f9 f0 f1 f2 f6 f7 f3 f5 pelmpt2cl e1 f2 acvv awcel f8 f9 pgen2 e2 f8 asup_set_class f6 awceq f9 asup_set_class f7 awceq awa f2 f4 acvv peleq1d f2 acvv awcel f4 acvv awcel f8 f9 f6 f7 f0 f1 pspc2gv f6 f0 awcel f7 f1 awcel awa f2 acvv awcel f9 awal f8 awal f4 acvv awcel pmpi e2 e0 f8 f9 f6 f7 f0 f1 f2 f4 f3 acvv povmpt2ga f6 f0 awcel f7 f1 awcel f4 acvv awcel f6 f7 f3 aco f4 awceq pmpd3an3 f6 f0 awcel f7 f1 awcel awa f6 f7 f3 aco f4 f5 peleq2d f5 f6 f7 f3 aco awcel f6 f0 awcel f7 f1 awcel awa f5 f4 awcel pbiadan2 f6 f0 awcel f7 f1 awcel f5 f4 awcel adf-3an f5 f6 f7 f3 aco awcel f6 f0 awcel f7 f1 awcel awa f5 f4 awcel awa f6 f0 awcel f7 f1 awcel f5 f4 awcel aw3a pbitr4i $.
$}
$( Any function to sets of ordered pairs produces a relation on function
       value unconditionally.  (Contributed by Mario Carneiro, 7-Aug-2014.)
       (Proof shortened by Mario Carneiro, 24-Dec-2016.) $)
${
	$v ph x y z A B F $.
	$d x A $.
	e0 $e |- F = ( x e. A |-> { <. y , z >. | ph } ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set y $.
	f3 $f set z $.
	f4 $f class A $.
	f5 $f class B $.
	f6 $f class F $.
	prelmptopab $p |- Rel ( F ` B ) $=
	e0 f1 f4 f0 f2 f3 acopab acvv acvv acxp f5 f6 pfvmptss f0 f2 f3 prelopab f0 f2 f3 acopab adf-rel f0 f2 f3 acopab awrel f0 f2 f3 acopab acvv acvv acxp awss pmpbi f0 f2 f3 acopab acvv acvv acxp awss f1 asup_set_class f4 awcel pa1i f0 f2 f3 acopab acvv acvv acxp awss f5 f6 acfv acvv acvv acxp awss f1 f4 pmprg f5 f6 acfv adf-rel f5 f6 acfv awrel f5 f6 acfv acvv acvv acxp awss pmpbir $.
$}
$( Describe an implicit one-to-one onto function.  (Contributed by Mario
         Carneiro, 30-Apr-2015.) $)
${
	$v ph x y A B C D F W X $.
	$d x y A $.
	$d x y B $.
	$d y C $.
	$d x D $.
	$d x y ph $.
	e0 $e |- F = ( x e. A |-> C ) $.
	e1 $e |- ( ( ph /\ x e. A ) -> C e. W ) $.
	e2 $e |- ( ( ph /\ y e. B ) -> D e. X ) $.
	e3 $e |- ( ph -> ( ( x e. A /\ y = C ) <-> ( y e. B /\ x = D ) ) ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set y $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class C $.
	f6 $f class D $.
	f7 $f class F $.
	f8 $f class W $.
	f9 $f class X $.
	pf1ocnvd $p |- ( ph -> ( F : A -1-1-onto-> B /\ `' F = ( y e. B |-> D ) ) ) $=
	e1 f0 f5 f8 awcel f1 f3 pralrimiva e0 f1 f3 f5 f7 f8 pfnmpt f0 f5 f8 awcel f1 f3 awral f7 f3 awfn psyl e2 f0 f6 f9 awcel f2 f4 pralrimiva f2 f4 f6 acmpt peqid f2 f4 f6 f2 f4 f6 acmpt f9 pfnmpt f0 f6 f9 awcel f2 f4 awral f2 f4 f6 acmpt f4 awfn psyl e3 f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awa f2 f1 popabbidv e0 f1 f2 f3 f5 adf-mpt f7 f1 f3 f5 acmpt f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 acopab peqtri f7 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 acopab pcnveqi f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 pcnvopab f7 accnv f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 acopab accnv f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 f1 acopab peqtri f2 f1 f4 f6 adf-mpt f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 f1 acopab f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awa f2 f1 acopab f7 accnv f2 f4 f6 acmpt p3eqtr4g f0 f4 f7 accnv f2 f4 f6 acmpt pfneq1d f0 f7 accnv f4 awfn f2 f4 f6 acmpt f4 awfn pmpbird f3 f4 f7 pdff1o4 f0 f7 f3 awfn f7 accnv f4 awfn f3 f4 f7 awf1o psylanbrc e3 f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awa f2 f1 popabbidv e0 f1 f2 f3 f5 adf-mpt f7 f1 f3 f5 acmpt f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 acopab peqtri f7 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 acopab pcnveqi f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 pcnvopab f7 accnv f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f1 f2 acopab accnv f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 f1 acopab peqtri f2 f1 f4 f6 adf-mpt f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 f1 acopab f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awa f2 f1 acopab f7 accnv f2 f4 f6 acmpt p3eqtr4g f0 f3 f4 f7 awf1o f7 accnv f2 f4 f6 acmpt awceq pjca $.
$}
$( Describe an implicit one-to-one onto function.  (Contributed by Mario
         Carneiro, 12-May-2014.) $)
${
	$v ph x y A B C D F W X $.
	$d x y A $.
	$d x y B $.
	$d y C $.
	$d x D $.
	$d x y ph $.
	e0 $e |- F = ( x e. A |-> C ) $.
	e1 $e |- ( ( ph /\ x e. A ) -> C e. W ) $.
	e2 $e |- ( ( ph /\ y e. B ) -> D e. X ) $.
	e3 $e |- ( ph -> ( ( x e. A /\ y = C ) <-> ( y e. B /\ x = D ) ) ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set y $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class C $.
	f6 $f class D $.
	f7 $f class F $.
	f8 $f class W $.
	f9 $f class X $.
	pf1od $p |- ( ph -> F : A -1-1-onto-> B ) $=
	e0 e1 e2 e3 f0 f1 f2 f3 f4 f5 f6 f7 f8 f9 pf1ocnvd f0 f3 f4 f7 awf1o f7 accnv f2 f4 f6 acmpt awceq psimpld $.
$}
$( Describe an implicit one-to-one onto function.  (Contributed by Mario
       Carneiro, 30-Apr-2015.) $)
${
	$v ph x y A B C D F $.
	$d x y A $.
	$d x y B $.
	$d y C $.
	$d x D $.
	$d x y ph $.
	e0 $e |- F = ( x e. A |-> C ) $.
	e1 $e |- ( ( ph /\ x e. A ) -> C e. B ) $.
	e2 $e |- ( ( ph /\ y e. B ) -> D e. A ) $.
	e3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( x = D <-> y = C ) ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set y $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class C $.
	f6 $f class D $.
	f7 $f class F $.
	pf1ocnv2d $p |- ( ph -> ( F : A -1-1-onto-> B /\ `' F = ( y e. B |-> D ) ) ) $=
	e0 e1 e2 e1 f5 f4 f2 asup_set_class peleq1a f0 f1 asup_set_class f3 awcel awa f5 f4 awcel f2 asup_set_class f5 awceq f2 asup_set_class f4 awcel awi psyl f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq f2 asup_set_class f4 awcel pimpr e3 f0 f1 asup_set_class f3 awcel f2 asup_set_class f4 awcel awa awa f1 asup_set_class f6 awceq f2 asup_set_class f5 awceq pbiimpar f0 f1 asup_set_class f3 awcel f2 asup_set_class f4 awcel f2 asup_set_class f5 awceq f1 asup_set_class f6 awceq pexp42 f0 f1 asup_set_class f3 awcel f2 asup_set_class f4 awcel f2 asup_set_class f5 awceq f1 asup_set_class f6 awceq pcom34 f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awi pimp32 f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa awa f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq pjcai e2 f6 f3 f1 asup_set_class peleq1a f0 f2 asup_set_class f4 awcel awa f6 f3 awcel f1 asup_set_class f6 awceq f1 asup_set_class f3 awcel awi psyl f0 f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq f1 asup_set_class f3 awcel pimpr e3 f0 f1 asup_set_class f3 awcel f2 asup_set_class f4 awcel awa awa f1 asup_set_class f6 awceq f2 asup_set_class f5 awceq pbiimpa f0 f1 asup_set_class f3 awcel f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq f2 asup_set_class f5 awceq pexp42 f0 f1 asup_set_class f3 awcel f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq f2 asup_set_class f5 awceq awi pcom23 f0 f2 asup_set_class f4 awcel f1 asup_set_class f3 awcel f1 asup_set_class f6 awceq f2 asup_set_class f5 awceq pcom34 f0 f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awi pimp32 f0 f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awa awa f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq pjcai f0 f1 asup_set_class f3 awcel f2 asup_set_class f5 awceq awa f2 asup_set_class f4 awcel f1 asup_set_class f6 awceq awa pimpbida f0 f1 f2 f3 f4 f5 f6 f7 f4 f3 pf1ocnvd $.
$}
$( Describe an implicit one-to-one onto function.  (Contributed by Mario
       Carneiro, 12-May-2014.) $)
${
	$v ph x y A B C D F $.
	$d x y A $.
	$d x y B $.
	$d y C $.
	$d x D $.
	$d x y ph $.
	e0 $e |- F = ( x e. A |-> C ) $.
	e1 $e |- ( ( ph /\ x e. A ) -> C e. B ) $.
	e2 $e |- ( ( ph /\ y e. B ) -> D e. A ) $.
	e3 $e |- ( ( ph /\ ( x e. A /\ y e. B ) ) -> ( x = D <-> y = C ) ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set y $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class C $.
	f6 $f class D $.
	f7 $f class F $.
	pf1o2d $p |- ( ph -> F : A -1-1-onto-> B ) $=
	e0 e1 e2 e3 f0 f1 f2 f3 f4 f5 f6 f7 pf1ocnv2d f0 f3 f4 f7 awf1o f7 accnv f2 f4 f6 acmpt awceq psimpld $.
$}
$( The cross product of two sets is a set.  Proposition 6.2 of
       [TakeutiZaring] p. 23.  This version is proven using Replacement; see
       ~ xpexg for a version that uses the Power Set axiom instead.
       (Contributed by Mario Carneiro, 20-May-2013.)
       (Proof modification is discouraged.)  (New usage is discouraged.) $)
${
	$v A B V W x y $.
	$d A x y $.
	$d B x y $.
	$d V y $.
	f0 $f class A $.
	f1 $f class B $.
	f2 $f class V $.
	f3 $f class W $.
	i0 $f set x $.
	i1 $f set y $.
	pxpexgALT $p |- ( ( A e. V /\ B e. W ) -> ( A X. B ) e. _V ) $=
	i1 f1 piunid i1 f1 i1 asup_set_class acsn aciun f1 f0 pxpeq2i i1 f1 i1 asup_set_class acsn f0 pxpiundi f0 i1 f1 i1 asup_set_class acsn aciun acxp f0 f1 acxp i1 f1 f0 i1 asup_set_class acsn acxp aciun peqtr3i f1 f3 awcel pid i0 f0 i1 asup_set_class pfconstmpt i0 f0 i1 asup_set_class f2 pmptexg f0 f2 awcel f0 i1 asup_set_class acsn acxp i0 f0 i1 asup_set_class acmpt acvv psyl5eqel f0 f2 awcel f0 i1 asup_set_class acsn acxp acvv awcel i1 f1 pralrimivw i1 f1 f0 i1 asup_set_class acsn acxp f3 acvv piunexg f1 f3 awcel f1 f3 awcel f0 i1 asup_set_class acsn acxp acvv awcel i1 f1 awral i1 f1 f0 i1 asup_set_class acsn acxp aciun acvv awcel f0 f2 awcel psyl2anr f0 f2 awcel f1 f3 awcel awa f0 f1 acxp i1 f1 f0 i1 asup_set_class acsn acxp aciun acvv psyl5eqel $.
$}
$( A one-to-one mapping induces a one-to-one mapping on power sets.  This
       version of ~ f1opw avoids the Axiom of Replacement.  (Contributed by
       Mario Carneiro, 26-Jun-2015.) $)
${
	$v ph A B F a b $.
	$d a b A $.
	$d a b B $.
	$d a b F $.
	$d a b ph $.
	e0 $e |- ( ph -> F : A -1-1-onto-> B ) $.
	e1 $e |- ( ph -> ( `' F " a ) e. _V ) $.
	e2 $e |- ( ph -> ( F " b ) e. _V ) $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f class F $.
	f4 $f set a $.
	f5 $f set b $.
	pf1opw2 $p |- ( ph -> ( b e. ~P A |-> ( F " b ) ) : ~P A -1-1-onto-> ~P B ) $=
	f5 f1 acpw f3 f5 asup_set_class acima acmpt peqid f3 f5 asup_set_class pimassrn e0 f1 f2 f3 pf1ofo f0 f1 f2 f3 awf1o f1 f2 f3 awfo psyl f1 f2 f3 pforn f0 f1 f2 f3 awfo f3 acrn f2 awceq psyl f0 f3 acrn f3 f5 asup_set_class acima f2 psyl5sseq e2 f3 f5 asup_set_class acima f2 acvv pelpwg f0 f3 f5 asup_set_class acima acvv awcel f3 f5 asup_set_class acima f2 acpw awcel f3 f5 asup_set_class acima f2 awss awb psyl f0 f3 f5 asup_set_class acima f2 acpw awcel f3 f5 asup_set_class acima f2 awss pmpbird f0 f3 f5 asup_set_class acima f2 acpw awcel f5 asup_set_class f1 acpw awcel padantr f3 accnv f4 asup_set_class pimassrn f3 pdfdm4 e0 f1 f2 f3 pf1odm f0 f1 f2 f3 awf1o f3 acdm f1 awceq psyl f0 f3 accnv acrn f3 acdm f1 psyl5eqr f0 f3 accnv acrn f3 accnv f4 asup_set_class acima f1 psyl5sseq e1 f3 accnv f4 asup_set_class acima f1 acvv pelpwg f0 f3 accnv f4 asup_set_class acima acvv awcel f3 accnv f4 asup_set_class acima f1 acpw awcel f3 accnv f4 asup_set_class acima f1 awss awb psyl f0 f3 accnv f4 asup_set_class acima f1 acpw awcel f3 accnv f4 asup_set_class acima f1 awss pmpbird f0 f3 accnv f4 asup_set_class acima f1 acpw awcel f4 asup_set_class f2 acpw awcel padantr e0 f1 f2 f3 pf1ofo f0 f1 f2 f3 awf1o f1 f2 f3 awfo psyl f4 asup_set_class f2 pelpwi f4 asup_set_class f2 acpw awcel f4 asup_set_class f2 awss f5 asup_set_class f1 acpw awcel padantl f1 f2 f4 asup_set_class f3 pfoimacnv f0 f1 f2 f3 awfo f4 asup_set_class f2 awss f3 f3 accnv f4 asup_set_class acima acima f4 asup_set_class awceq f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa psyl2an f0 f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa awa f3 f3 accnv f4 asup_set_class acima acima f4 asup_set_class peqcomd f5 asup_set_class f3 accnv f4 asup_set_class acima f3 pimaeq2 f5 asup_set_class f3 accnv f4 asup_set_class acima awceq f3 f5 asup_set_class acima f3 f3 accnv f4 asup_set_class acima acima f4 asup_set_class peqeq2d f0 f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa awa f4 asup_set_class f3 f5 asup_set_class acima awceq f5 asup_set_class f3 accnv f4 asup_set_class acima awceq f4 asup_set_class f3 f3 accnv f4 asup_set_class acima acima awceq psyl5ibrcom e0 f1 f2 f3 pf1of1 f0 f1 f2 f3 awf1o f1 f2 f3 awf1 psyl f5 asup_set_class f1 pelpwi f5 asup_set_class f1 acpw awcel f5 asup_set_class f1 awss f4 asup_set_class f2 acpw awcel padantr f1 f2 f5 asup_set_class f3 pf1imacnv f0 f1 f2 f3 awf1 f5 asup_set_class f1 awss f3 accnv f3 f5 asup_set_class acima acima f5 asup_set_class awceq f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa psyl2an f0 f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa awa f3 accnv f3 f5 asup_set_class acima acima f5 asup_set_class peqcomd f4 asup_set_class f3 f5 asup_set_class acima f3 accnv pimaeq2 f4 asup_set_class f3 f5 asup_set_class acima awceq f3 accnv f4 asup_set_class acima f3 accnv f3 f5 asup_set_class acima acima f5 asup_set_class peqeq2d f0 f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa awa f5 asup_set_class f3 accnv f4 asup_set_class acima awceq f4 asup_set_class f3 f5 asup_set_class acima awceq f5 asup_set_class f3 accnv f3 f5 asup_set_class acima acima awceq psyl5ibrcom f0 f5 asup_set_class f1 acpw awcel f4 asup_set_class f2 acpw awcel awa awa f5 asup_set_class f3 accnv f4 asup_set_class acima awceq f4 asup_set_class f3 f5 asup_set_class acima awceq pimpbid f0 f5 f4 f1 acpw f2 acpw f3 f5 asup_set_class acima f3 accnv f4 asup_set_class acima f5 f1 acpw f3 f5 asup_set_class acima acmpt pf1o2d $.
$}
$( A one-to-one mapping induces a one-to-one mapping on power sets.
       (Contributed by Stefan O'Rear, 18-Nov-2014.)  (Revised by Mario
       Carneiro, 26-Jun-2015.) $)
${
	$v A B F b a $.
	$d a b A $.
	$d a b B $.
	$d a b F $.
	f0 $f class A $.
	f1 $f class B $.
	f2 $f class F $.
	f3 $f set b $.
	i0 $f set a $.
	pf1opw $p |- ( F : A -1-1-onto-> B -> ( b e. ~P A |-> ( F " b ) ) : ~P A -1-1-onto-> ~P B ) $=
	f0 f1 f2 awf1o pid f0 f1 f2 pdff1o3 f0 f1 f2 awf1o f0 f1 f2 awfo f2 accnv awfun psimprbi i0 pvex f2 accnv i0 asup_set_class pfunimaex f0 f1 f2 awf1o f2 accnv awfun f2 accnv i0 asup_set_class acima acvv awcel psyl f0 f1 f2 pf1ofun f3 pvex f2 f3 asup_set_class pfunimaex f0 f1 f2 awf1o f2 awfun f2 f3 asup_set_class acima acvv awcel psyl f0 f1 f2 awf1o f0 f1 f2 i0 f3 pf1opw2 $.
$}
$( Show that the support of a function is contained in a set.  (Contributed
       by Mario Carneiro, 19-Dec-2014.)  (Revised by Mario Carneiro,
       22-Mar-2015.) $)
${
	$v ph A B k W Z $.
	$d k A $.
	$d k ph $.
	$d k W $.
	$d k Z $.
	e0 $e |- ( ( ph /\ k e. ( A \ W ) ) -> B = Z ) $.
	f0 $f wff ph $.
	f1 $f class A $.
	f2 $f class B $.
	f3 $f set k $.
	f4 $f class W $.
	f5 $f class Z $.
	psuppss2 $p |- ( ph -> ( `' ( k e. A |-> B ) " ( _V \ { Z } ) ) C_ W ) $=
	f3 f1 f2 acmpt peqid f3 f1 f2 acvv f5 acsn acdif f3 f1 f2 acmpt pmptpreima f2 acvv f5 peldifsni f3 asup_set_class f1 f4 peldif e0 f3 asup_set_class f1 awcel f3 asup_set_class f4 awcel awn awa f0 f3 asup_set_class f1 f4 acdif awcel f2 f5 awceq psylan2br f0 f3 asup_set_class f1 awcel f3 asup_set_class f4 awcel awn f2 f5 awceq pexpr f0 f3 asup_set_class f1 awcel awa f3 asup_set_class f4 awcel f2 f5 pnecon1ad f2 acvv f5 acsn acdif awcel f2 f5 awne f0 f3 asup_set_class f1 awcel awa f3 asup_set_class f4 awcel psyl5 f0 f3 asup_set_class f1 awcel f2 acvv f5 acsn acdif awcel f3 asup_set_class f4 awcel p3impia f0 f2 acvv f5 acsn acdif awcel f3 f1 f4 prabssdv f0 f3 f1 f2 acmpt accnv acvv f5 acsn acdif acima f2 acvv f5 acsn acdif awcel f3 f1 acrab f4 psyl5eqss $.
$}
$( Formula building theorem for support restriction, on a function which
       preserves zero.  (Contributed by Stefan O'Rear, 9-Mar-2015.) $)
${
	$v ph x A D F L V Y Z $.
	$d ph x $.
	$d Y x $.
	$d Z x $.
	e0 $e |- ( ph -> ( `' ( x e. D |-> A ) " ( _V \ { Y } ) ) C_ L ) $.
	e1 $e |- ( ph -> ( F ` Y ) = Z ) $.
	e2 $e |- ( ( ph /\ x e. D ) -> A e. V ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f class A $.
	f3 $f class D $.
	f4 $f class F $.
	f5 $f class L $.
	f6 $f class V $.
	f7 $f class Y $.
	f8 $f class Z $.
	psuppssfv $p |- ( ph -> ( `' ( x e. D |-> ( F ` A ) ) " ( _V \ { Z } ) ) C_ L ) $=
	f2 f4 acfv acvv f8 peldifsni e2 f2 f6 pelex f0 f1 asup_set_class f3 awcel awa f2 f6 awcel f2 acvv awcel psyl f0 f1 asup_set_class f3 awcel awa f2 acvv awcel f2 f4 acfv f8 awne padantr e1 f2 f7 f4 pfveq2 f2 f7 awceq f2 f4 acfv f7 f4 acfv f8 peqeq1d f0 f2 f4 acfv f8 awceq f2 f7 awceq f7 f4 acfv f8 awceq psyl5ibrcom f0 f2 f7 f2 f4 acfv f8 pnecon3d f0 f2 f4 acfv f8 awne f2 f7 awne awi f1 asup_set_class f3 awcel padantr f0 f1 asup_set_class f3 awcel awa f2 f4 acfv f8 awne f2 f7 awne pimp f2 acvv f7 peldifsn f0 f1 asup_set_class f3 awcel awa f2 f4 acfv f8 awne awa f2 acvv awcel f2 f7 awne f2 acvv f7 acsn acdif awcel psylanbrc f0 f1 asup_set_class f3 awcel awa f2 f4 acfv f8 awne f2 acvv f7 acsn acdif awcel pex f2 f4 acfv acvv f8 acsn acdif awcel f2 f4 acfv f8 awne f0 f1 asup_set_class f3 awcel awa f2 acvv f7 acsn acdif awcel psyl5 f0 f2 f4 acfv acvv f8 acsn acdif awcel f2 acvv f7 acsn acdif awcel f1 f3 pss2rabdv f1 f3 f2 f4 acfv acmpt peqid f1 f3 f2 f4 acfv acvv f8 acsn acdif f1 f3 f2 f4 acfv acmpt pmptpreima f1 f3 f2 acmpt peqid f1 f3 f2 acvv f7 acsn acdif f1 f3 f2 acmpt pmptpreima f0 f2 f4 acfv acvv f8 acsn acdif awcel f1 f3 acrab f2 acvv f7 acsn acdif awcel f1 f3 acrab f1 f3 f2 f4 acfv acmpt accnv acvv f8 acsn acdif acima f1 f3 f2 acmpt accnv acvv f7 acsn acdif acima p3sstr4g e0 f0 f1 f3 f2 f4 acfv acmpt accnv acvv f8 acsn acdif acima f1 f3 f2 acmpt accnv acvv f7 acsn acdif acima f5 psstrd $.
$}
$( Formula building theorem for support restrictions: operator with left
       annihilator.  (Contributed by Stefan O'Rear, 9-Mar-2015.) $)
${
	$v ph x v A B D R L O V Y Z $.
	$d ph v $.
	$d ph x $.
	$d B v $.
	$d O v $.
	$d R v $.
	$d Y v $.
	$d Y x $.
	$d Z v $.
	$d Z x $.
	e0 $e |- ( ph -> ( `' ( x e. D |-> A ) " ( _V \ { Y } ) ) C_ L ) $.
	e1 $e |- ( ( ph /\ v e. R ) -> ( Y O v ) = Z ) $.
	e2 $e |- ( ( ph /\ x e. D ) -> A e. V ) $.
	e3 $e |- ( ( ph /\ x e. D ) -> B e. R ) $.
	f0 $f wff ph $.
	f1 $f set x $.
	f2 $f set v $.
	f3 $f class A $.
	f4 $f class B $.
	f5 $f class D $.
	f6 $f class R $.
	f7 $f class L $.
	f8 $f class O $.
	f9 $f class V $.
	f10 $f class Y $.
	f11 $f class Z $.
	psuppssov1 $p |- ( ph -> ( `' ( x e. D |-> ( A O B ) ) " ( _V \ { Z } ) ) C_ L ) $=
	e2 f3 f9 pelex f0 f1 asup_set_class f5 awcel awa f3 f9 awcel f3 acvv awcel psyl f0 f1 asup_set_class f5 awcel awa f3 acvv awcel f3 f4 f8 aco acvv f11 acsn acdif awcel padantr f3 f4 f8 aco acvv f11 peldifsni e3 e1 f0 f10 f2 asup_set_class f8 aco f11 awceq f2 f6 pralrimiva f0 f10 f2 asup_set_class f8 aco f11 awceq f2 f6 awral f1 asup_set_class f5 awcel padantr f2 asup_set_class f4 f10 f8 poveq2 f2 asup_set_class f4 awceq f10 f2 asup_set_class f8 aco f10 f4 f8 aco f11 peqeq1d f10 f2 asup_set_class f8 aco f11 awceq f10 f4 f8 aco f11 awceq f2 f4 f6 prspcva f0 f1 asup_set_class f5 awcel awa f4 f6 awcel f10 f2 asup_set_class f8 aco f11 awceq f2 f6 awral f10 f4 f8 aco f11 awceq psyl2anc f3 f10 f4 f8 poveq1 f3 f10 awceq f3 f4 f8 aco f10 f4 f8 aco f11 peqeq1d f0 f1 asup_set_class f5 awcel awa f3 f4 f8 aco f11 awceq f3 f10 awceq f10 f4 f8 aco f11 awceq psyl5ibrcom f0 f1 asup_set_class f5 awcel awa f3 f10 f3 f4 f8 aco f11 pnecon3d f3 f4 f8 aco acvv f11 acsn acdif awcel f3 f4 f8 aco f11 awne f0 f1 asup_set_class f5 awcel awa f3 f10 awne psyl5 f0 f1 asup_set_class f5 awcel awa f3 f4 f8 aco acvv f11 acsn acdif awcel f3 f10 awne pimp f3 acvv f10 peldifsn f0 f1 asup_set_class f5 awcel awa f3 f4 f8 aco acvv f11 acsn acdif awcel awa f3 acvv awcel f3 f10 awne f3 acvv f10 acsn acdif awcel psylanbrc f0 f1 asup_set_class f5 awcel awa f3 f4 f8 aco acvv f11 acsn acdif awcel f3 acvv f10 acsn acdif awcel pex f0 f3 f4 f8 aco acvv f11 acsn acdif awcel f3 acvv f10 acsn acdif awcel f1 f5 pss2rabdv f1 f5 f3 f4 f8 aco acmpt peqid f1 f5 f3 f4 f8 aco acvv f11 acsn acdif f1 f5 f3 f4 f8 aco acmpt pmptpreima f1 f5 f3 acmpt peqid f1 f5 f3 acvv f10 acsn acdif f1 f5 f3 acmpt pmptpreima f0 f3 f4 f8 aco acvv f11 acsn acdif awcel f1 f5 acrab f3 acvv f10 acsn acdif awcel f1 f5 acrab f1 f5 f3 f4 f8 aco acmpt accnv acvv f11 acsn acdif acima f1 f5 f3 acmpt accnv acvv f10 acsn acdif acima p3sstr4g e0 f0 f1 f5 f3 f4 f8 aco acmpt accnv acvv f11 acsn acdif acima f1 f5 f3 acmpt accnv acvv f10 acsn acdif acima f7 psstrd $.
$}


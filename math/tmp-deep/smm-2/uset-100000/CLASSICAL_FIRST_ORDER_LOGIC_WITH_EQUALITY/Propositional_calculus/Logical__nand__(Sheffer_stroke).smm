$[ turnstile_special_source.smm $]
$[ uset-100000/CLASSICAL_FIRST_ORDER_LOGIC_WITH_EQUALITY/Propositional_calculus/Abbreviated_conjunction_and_disjunction_of_three_wff_s.smm $]
$( =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        Logical 'nand' (Sheffer stroke)

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
$)
$( Declare connective for alternative denial ('nand'). $)
$c -/\ $.
$( Overlined 'wedge' (read:  'nand') $)
$( Extend wff definition to include alternative denial ('nand'). $)
${
	$v ph ps $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	awnan $a wff ( ph -/\ ps ) $.
$}
$( Define incompatibility, or alternative denial ('not-and' or 'nand').  This
     is also called the Sheffer stroke, represented by a vertical bar, but we
     use a different symbol to avoid ambiguity with other uses of the vertical
     bar.  In the second edition of Principia Mathematica (1927), Russell and
     Whitehead used the Sheffer stroke and suggested it as a replacement for
     the "or" and "not" operations of the first edition.  However, in practice,
     "or" and "not" are more widely used.  After we define the constant true
     ` T. ` ( ~ df-tru ) and the constant false ` F. ` ( ~ df-fal ), we will be
     able to prove these truth table values: ` ( ( T. -/\ T. ) <-> F. ) `
     ( ~ trunantru ), ` ( ( T. -/\ F. ) <-> T. ) ` ( ~ trunanfal ),
     ` ( ( F. -/\ T. ) <-> T. ) ` ( ~ falnantru ), and
     ` ( ( F. -/\ F. ) <-> T. ) ` ( ~ falnanfal ).  Contrast with ` /\ `
     ( ~ df-an ), ` \/ ` ( ~ df-or ), ` -> ` ( ~ wi ), and ` \/_ `
     ( ~ df-xor ) .  (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
${
	$v ph ps $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	adf-nan $a |- ( ( ph -/\ ps ) <-> -. ( ph /\ ps ) ) $.
$}
$( Write 'and' in terms of 'nand'.  (Contributed by Mario Carneiro,
     9-May-2015.) $)
${
	$v ph ps $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	pnanan $p |- ( ( ph /\ ps ) <-> -. ( ph -/\ ps ) ) $=
	f0 f1 adf-nan f0 f1 awnan f0 f1 awa pcon2bii $.
$}
$( The 'nand' operator commutes.  (Contributed by Mario Carneiro,
     9-May-2015.) $)
${
	$v ph ps $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	pnancom $p |- ( ( ph -/\ ps ) <-> ( ps -/\ ph ) ) $=
	f0 f1 pancom f0 f1 awa f1 f0 awa pnotbii f0 f1 adf-nan f1 f0 adf-nan f0 f1 awa awn f1 f0 awa awn f0 f1 awnan f1 f0 awnan p3bitr4i $.
$}
$( Lemma for handling nested 'nand's.  (Contributed by Jeff Hoffman,
     19-Nov-2007.) $)
${
	$v ph ps ch $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	f2 $f wff ch $.
	pnannan $p |- ( ( ph -/\ ( ch -/\ ps ) ) <-> ( ph -> ( ch /\ ps ) ) ) $=
	f0 f2 f1 awnan adf-nan f2 f1 adf-nan f2 f1 awnan f2 f1 awa awn f0 panbi2i f0 f2 f1 awnan awnan f0 f2 f1 awnan awa f0 f2 f1 awa awn awa pxchbinx f0 f2 f1 awa piman f0 f2 f1 awnan awnan f0 f2 f1 awa awn awa awn f0 f2 f1 awa awi pbitr4i $.
$}
$( Show equivalence between implication and the Nicod version.  To derive
     ~ nic-dfim , apply ~ nanbi .  (Contributed by Jeff Hoffman,
     19-Nov-2007.) $)
${
	$v ph ps $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	pnanim $p |- ( ( ph -> ps ) <-> ( ph -/\ ( ps -/\ ps ) ) ) $=
	f0 f1 f1 pnannan f0 f1 panidmdbi f0 f1 f1 awnan awnan f0 f1 f1 awa awi f0 f1 awi pbitr2i $.
$}
$( Show equivalence between negation and the Nicod version.  To derive
     ~ nic-dfneg , apply ~ nanbi .  (Contributed by Jeff Hoffman,
     19-Nov-2007.) $)
${
	$v ps $.
	f0 $f wff ps $.
	pnannot $p |- ( -. ps <-> ( ps -/\ ps ) ) $=
	f0 f0 adf-nan f0 panidm f0 f0 awnan f0 f0 awa f0 pxchbinx f0 f0 awnan f0 awn pbicomi $.
$}
$( Show equivalence between the bidirectional and the Nicod version.
     (Contributed by Jeff Hoffman, 19-Nov-2007.) $)
${
	$v ph ps $.
	f0 $f wff ph $.
	f1 $f wff ps $.
	pnanbi $p |- ( ( ph <-> ps ) <-> ( ( ph -/\ ps ) -/\ ( ( ph -/\ ph ) -/\ ( ps -/\ ps ) ) ) ) $=
	f0 f1 awa f0 awn f1 awn awa ppm4.57 f0 f1 awnan f0 f0 awnan f1 f1 awnan awnan adf-nan f0 f1 adf-nan f0 f0 awnan f1 f1 awnan adf-nan f0 pnannot f1 pnannot f0 awn f0 f0 awnan f1 awn f1 f1 awnan panbi12i f0 f0 awnan f1 f1 awnan awnan f0 f0 awnan f1 f1 awnan awa f0 awn f1 awn awa pxchbinxr f0 f1 awnan f0 f1 awa awn f0 f0 awnan f1 f1 awnan awnan f0 awn f1 awn awa awn panbi12i f0 f1 awnan f0 f0 awnan f1 f1 awnan awnan awnan f0 f1 awnan f0 f0 awnan f1 f1 awnan awnan awa f0 f1 awa awn f0 awn f1 awn awa awn awa pxchbinx f0 f1 pdfbi3 f0 f1 awa awn f0 awn f1 awn awa awn awa awn f0 f1 awa f0 awn f1 awn awa awo f0 f1 awnan f0 f0 awnan f1 f1 awnan awnan awnan f0 f1 awb p3bitr4ri $.
$}

